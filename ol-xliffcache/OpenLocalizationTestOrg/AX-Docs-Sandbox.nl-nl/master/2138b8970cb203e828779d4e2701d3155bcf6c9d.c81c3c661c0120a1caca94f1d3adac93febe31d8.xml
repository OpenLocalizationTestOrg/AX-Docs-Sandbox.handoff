{"nodes":[{"pos":[32,58],"content":"V Classes | Microsoft Docs","needQuote":true,"needEscape":true,"nodes":[{"content":"V Classes | Microsoft Docs","pos":[0,26]}]},{"pos":[72,120],"content":"System API classes that start with the letter V.","needQuote":true,"needEscape":true,"nodes":[{"content":"System API classes that start with the letter V.","pos":[0,48]}]},{"pos":[545,554],"content":"V Classes","linkify":"V Classes","nodes":[{"content":"V Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter V.","pos":[556,604]},{"pos":[606,629],"content":"Class ValidateEventArgs","linkify":"Class ValidateEventArgs","nodes":[{"content":"Class ValidateEventArgs","pos":[0,23]}]},{"pos":[710,717],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[723,731],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[737,744],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[748,754]},{"content":"Description","pos":[804,815]},{"content":"public boolean parmValidateResult(<ph id=\"ph1\">\\[</ph>boolean result<ph id=\"ph2\">\\]</ph>)","pos":[892,945],"source":"public boolean parmValidateResult(\\[boolean result\\])"},{"content":"public void new(boolean result)","pos":[964,995]},{"pos":[1039,1064],"content":"Method parmValidateResult","linkify":"Method parmValidateResult","nodes":[{"content":"Method parmValidateResult","pos":[0,25]}]},{"pos":[1128,1138],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"result","pos":[1140,1146]},{"pos":[1155,1167],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1173,1183],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[1227,1237],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"result","pos":[1239,1245]},{"pos":[1252,1280],"content":"Class ValidateFieldEventArgs","linkify":"Class ValidateFieldEventArgs","nodes":[{"content":"Class ValidateFieldEventArgs","pos":[0,28]}]},{"pos":[1345,1352],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1358,1366],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[1372,1379],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[1383,1389]},{"content":"Description","pos":[1430,1441]},{"content":"public int parmFieldId()","pos":[1509,1533]},{"content":"public void new(int fieldId, boolean result)","pos":[1572,1616]},{"pos":[1638,1656],"content":"Method parmFieldId","linkify":"Method parmFieldId","nodes":[{"content":"Method parmFieldId","pos":[0,18]}]},{"pos":[1693,1705],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1711,1721],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[1778,1788],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[1790,1797]},{"content":"result","pos":[1811,1817]},{"pos":[1824,1857],"content":"Class ValidateFieldValueEventArgs","linkify":"Class ValidateFieldValueEventArgs","nodes":[{"content":"Class ValidateFieldValueEventArgs","pos":[0,33]}]},{"pos":[1927,1934],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1940,1948],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[1954,1961],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[1965,1971]},{"content":"Description","pos":[2030,2041]},{"content":"public str parmFieldName()","pos":[2127,2153]},{"content":"public int parmArrayIndex()","pos":[2208,2235]},{"content":"public void new(str fieldName, int arrayIndex, boolean result)","pos":[2289,2351]},{"pos":[2373,2393],"content":"Method parmFieldName","linkify":"Method parmFieldName","nodes":[{"content":"Method parmFieldName","pos":[0,20]}]},{"pos":[2432,2444],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2450,2471],"content":"Method parmArrayIndex","linkify":"Method parmArrayIndex","nodes":[{"content":"Method parmArrayIndex","pos":[0,21]}]},{"pos":[2511,2523],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2529,2539],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[2614,2624],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldName","pos":[2626,2635]},{"content":"arrayIndex","pos":[2649,2659]},{"content":"result","pos":[2673,2679]},{"pos":[2686,2713],"content":"Class VirtualChannelManager","linkify":"Class VirtualChannelManager","nodes":[{"content":"Class VirtualChannelManager","pos":[0,27]}]},{"pos":[2766,2773],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2779,2787],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[2793,2800],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[2804,2810]},{"content":"Description","pos":[2853,2864]},{"content":"public void finalize()","pos":[3036,3058]},{"content":"public void new()","pos":[3152,3169]},{"content":"Initializes a new instance of the VirtualChannelManager class.","pos":[3201,3263]},{"content":"public void sendData(int listenerId, str data)","pos":[3268,3314]},{"pos":[3387,3402],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[3436,3446],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the VirtualChannelManager class.","pos":[3448,3510]},{"pos":[3539,3554],"content":"Method sendData","linkify":"Method sendData","nodes":[{"content":"Method sendData","pos":[0,15]}]},{"pos":[3613,3623],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"listenerId","pos":[3625,3635]},{"content":"data","pos":[3649,3653]},{"pos":[3660,3676],"content":"Class VSItemNode","linkify":"Class VSItemNode","nodes":[{"content":"Class VSItemNode","pos":[0,16]}]},{"content":"The VSItemNode class is a base class for Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[3716,3854]},{"pos":[3860,3867],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3873,3881],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[3887,3894],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[3898,3904]},{"content":"Description","pos":[3967,3978]},{"content":"public str AOTgetSource()","pos":[4150,4175]},{"content":"Returns the source code of this node.","pos":[4219,4256]},{"content":"public BinData getFileData()","pos":[4276,4304]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[4402,4468]},{"content":"Notifies listeners that a file has been deleted.","pos":[4471,4519]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[4528,4581]},{"content":"Notifies listeners that a file has been updated.","pos":[4597,4645]},{"content":"public void setFileData(BinData data)","pos":[4654,4691]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[4780,4838],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[4849,4883]},{"content":"public void getFile(str fileName)","pos":[4906,4939]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[5032,5085]},{"content":"Notifies listeners that a new file has been created.","pos":[5101,5153]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[5158,5224]},{"content":"Notifies listeners that a file has been renamed.","pos":[5227,5275]},{"content":"public void setFile(str fileName)","pos":[5284,5317]},{"pos":[5413,5432],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[5434,5471]},{"pos":[5509,5521],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains the source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[5523,5658]},{"pos":[5665,5672],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[5674,5733]},{"pos":[5739,5757],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[5798,5810],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5816,5840],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"content":"Notifies listeners that a file has been deleted.","pos":[5842,5890]},{"pos":[5967,5977],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[5979,5983]},{"content":"The AOT path of the file.","pos":[5986,6011]},{"content":"aotPath","pos":[6023,6030]},{"content":"The AOT path of the file.","pos":[6033,6058]},{"pos":[6064,6088],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"content":"Notifies listeners that a file has been updated.","pos":[6090,6138]},{"pos":[6202,6212],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[6214,6218]},{"content":"The node that has been updated.","pos":[6221,6252]},{"pos":[6258,6276],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[6326,6336],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[6338,6342]},{"pos":[6350,6369],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[6371,6405]},{"pos":[6474,6484],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[6486,6492]},{"content":"The value that specifies whether the method is static; optional.","pos":[6495,6559]},{"content":"isStatic","pos":[6571,6579]},{"content":"The value that specifies whether the method is static; optional.","pos":[6582,6646]},{"pos":[6653,6660],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[6662,6719]},{"pos":[6725,6739],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[6785,6795],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[6797,6805]},{"pos":[6813,6837],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"content":"Notifies listeners that a new file has been created.","pos":[6839,6891]},{"pos":[6955,6965],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[6967,6971]},{"content":"The node that has been created.","pos":[6974,7005]},{"pos":[7011,7035],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"content":"Notifies listeners that a file has been renamed.","pos":[7037,7085]},{"pos":[7162,7172],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[7174,7178]},{"content":"The old name of the file.","pos":[7181,7206]},{"content":"oldName","pos":[7218,7225]},{"content":"The old name of the file.","pos":[7228,7253]},{"pos":[7259,7273],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[7319,7329],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[7331,7339]},{"pos":[7346,7369],"content":"Class VSProjectFileNode","linkify":"Class VSProjectFileNode","nodes":[{"content":"Class VSProjectFileNode","pos":[0,23]}]},{"content":"The VSProjectFileNode class represents files in the Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[7418,7567]},{"pos":[7573,7580],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7586,7594],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[7600,7607],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[7611,7617]},{"content":"Description","pos":[7680,7691]},{"content":"public str AOTgetSource()","pos":[7833,7858]},{"content":"Returns the source code of this node.","pos":[7902,7939]},{"content":"public BinData getFileData()","pos":[7944,7972]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[8055,8108]},{"content":"public void setFileData(BinData data)","pos":[8166,8203]},{"content":"public void getFile(str fileName)","pos":[8277,8310]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[8388,8454]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[8499,8552]},{"content":"public void setFile(str fileName)","pos":[8610,8643]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[8721,8787]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[8832,8890],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[8901,8935]},{"pos":[8946,8965],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[8967,9004]},{"pos":[9042,9054],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[9056,9187]},{"pos":[9194,9201],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[9203,9262]},{"pos":[9268,9286],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[9327,9339],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9345,9369],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[9433,9443],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9445,9449]},{"pos":[9457,9475],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[9525,9535],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[9537,9541]},{"pos":[9549,9563],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[9609,9619],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[9621,9629]},{"pos":[9637,9661],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[9738,9748],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9750,9754]},{"content":"aotPath","pos":[9768,9775]},{"pos":[9783,9807],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[9871,9881],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9883,9887]},{"pos":[9895,9909],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[9955,9965],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[9967,9975]},{"pos":[9983,10007],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[10084,10094],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[10096,10100]},{"content":"oldName","pos":[10114,10121]},{"pos":[10129,10148],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[10150,10184]},{"pos":[10253,10263],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[10265,10271]},{"content":"The value that specifies whether the method is static; optional.","pos":[10274,10338]},{"content":"isStatic","pos":[10350,10358]},{"content":"The value that specifies whether the method is static; optional.","pos":[10361,10425]},{"pos":[10432,10439],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[10441,10498]},{"pos":[10503,10528],"content":"Class VSProjectFolderNode","linkify":"Class VSProjectFolderNode","nodes":[{"content":"Class VSProjectFolderNode","pos":[0,25]}]},{"content":"The VSProjectFolderNode class represents folders in the Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[10577,10730]},{"pos":[10736,10743],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10749,10757],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[10763,10770],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[10774,10780]},{"content":"Description","pos":[10869,10880]},{"content":"public str AOTgetSource()","pos":[11182,11207]},{"content":"Returns the source code of this node.","pos":[11277,11314]},{"content":"public VSProjectFileNode createFileNode(str name)","pos":[11386,11435]},{"content":"Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.","pos":[11481,11583]},{"content":"public VSProjectFolderNode createFolderNode(str name)","pos":[11590,11643]},{"content":"Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.","pos":[11685,11789]},{"content":"public VSProjectLinkNode createLinkNode(str name, str aotPath, <ph id=\"ph1\">\\[</ph>boolean createLinkedNode<ph id=\"ph2\">\\]</ph>)","pos":[11794,11886],"source":"public VSProjectLinkNode createLinkNode(str name, str aotPath, \\[boolean createLinkedNode\\])"},{"content":"Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.","pos":[11889,11991]},{"content":"public BinData getFileData()","pos":[11998,12026]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[12202,12255]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[12406,12472]},{"content":"public void setFileData(BinData data)","pos":[12610,12647]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[12814,12872],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[12909,12943]},{"content":"public void getFile(str fileName)","pos":[13018,13051]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[13222,13275]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[13426,13492]},{"content":"public void setFile(str fileName)","pos":[13630,13663]},{"pos":[13837,13856],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[13858,13895]},{"pos":[13933,13945],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[13947,14078]},{"pos":[14085,14092],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[14094,14153]},{"pos":[14159,14180],"content":"Method createFileNode","linkify":"Method createFileNode","nodes":[{"content":"Method createFileNode","pos":[0,21]}]},{"content":"Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.","pos":[14182,14284]},{"pos":[14346,14356],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[14358,14362]},{"content":"The name of the file node.","pos":[14365,14391]},{"pos":[14398,14410],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectFileNode class.","pos":[14412,14460]},{"pos":[14466,14489],"content":"Method createFolderNode","linkify":"Method createFolderNode","nodes":[{"content":"Method createFolderNode","pos":[0,23]}]},{"content":"Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.","pos":[14491,14595]},{"pos":[14661,14671],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[14673,14677]},{"content":"The name of the folder node.","pos":[14680,14708]},{"pos":[14715,14727],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectFolderNode class.","pos":[14729,14779]},{"pos":[14785,14806],"content":"Method createLinkNode","linkify":"Method createLinkNode","nodes":[{"content":"Method createLinkNode","pos":[0,21]}]},{"content":"Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.","pos":[14808,14910]},{"pos":[15013,15023],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[15025,15029]},{"content":"aotPath","pos":[15043,15050]},{"content":"createLinkedNode","pos":[15064,15080]},{"pos":[15089,15101],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectLinkNode class.","pos":[15103,15151]},{"pos":[15157,15175],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[15216,15228],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15234,15258],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[15322,15332],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[15334,15338]},{"pos":[15346,15370],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[15447,15457],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[15459,15463]},{"content":"aotPath","pos":[15477,15484]},{"pos":[15492,15510],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[15560,15570],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[15572,15576]},{"pos":[15584,15603],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[15605,15639]},{"pos":[15708,15718],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[15720,15726]},{"content":"The value that specifies whether the method is static; optional.","pos":[15729,15793]},{"content":"isStatic","pos":[15805,15813]},{"content":"The value that specifies whether the method is static; optional.","pos":[15816,15880]},{"pos":[15887,15894],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[15896,15953]},{"pos":[15959,15973],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[16019,16029],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[16031,16039]},{"pos":[16047,16071],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[16135,16145],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[16147,16151]},{"pos":[16159,16183],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[16260,16270],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[16272,16276]},{"content":"oldName","pos":[16290,16297]},{"pos":[16305,16319],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[16365,16375],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[16377,16385]},{"pos":[16392,16415],"content":"Class VSProjectLinkNode","linkify":"Class VSProjectLinkNode","nodes":[{"content":"Class VSProjectLinkNode","pos":[0,23]}]},{"content":"The VSProjectLinkNode class represents links to other Microsoft Dynamics AX Application Object Tree (AOT) nodes in the Microsoft Visual Studio project nodes in the AOT.","pos":[16464,16632]},{"pos":[16638,16645],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16651,16659],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[16665,16672],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[16676,16682]},{"content":"Description","pos":[16745,16756]},{"content":"public str AOTgetSource()","pos":[16898,16923]},{"content":"Returns the source code of this node.","pos":[16967,17004]},{"content":"public str getAOTPath()","pos":[17009,17032]},{"content":"public BinData getFileData()","pos":[17120,17148]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[17231,17284]},{"content":"public void setFile(str fileName)","pos":[17342,17375]},{"content":"public void setFileData(BinData data)","pos":[17453,17490]},{"content":"public void getFile(str fileName)","pos":[17564,17597]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[17675,17728]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[17786,17844],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[17855,17889]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[17897,17963]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[18008,18074]},{"pos":[18122,18141],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[18143,18180]},{"pos":[18218,18230],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[18232,18363]},{"pos":[18370,18377],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[18379,18438]},{"pos":[18444,18461],"content":"Method getAOTPath","linkify":"Method getAOTPath","nodes":[{"content":"Method getAOTPath","pos":[0,17]}]},{"pos":[18497,18509],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18515,18533],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[18574,18586],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18592,18616],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[18680,18690],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[18692,18696]},{"pos":[18704,18718],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[18764,18774],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[18776,18784]},{"pos":[18792,18810],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[18860,18870],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[18872,18876]},{"pos":[18884,18898],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[18944,18954],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[18956,18964]},{"pos":[18972,18996],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[19060,19070],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19072,19076]},{"pos":[19084,19103],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[19105,19139]},{"pos":[19208,19218],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[19220,19226]},{"content":"The value that specifies whether the method is static; optional.","pos":[19229,19293]},{"content":"isStatic","pos":[19305,19313]},{"content":"The value that specifies whether the method is static; optional.","pos":[19316,19380]},{"pos":[19387,19394],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[19396,19453]},{"pos":[19459,19483],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[19560,19570],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19572,19576]},{"content":"oldName","pos":[19590,19597]},{"pos":[19605,19629],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[19706,19716],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19718,19722]},{"content":"aotPath","pos":[19736,19743]},{"pos":[19750,19769],"content":"Class VSProjectNode","linkify":"Class VSProjectNode","nodes":[{"content":"Class VSProjectNode","pos":[0,19]}]},{"content":"The VSProjectNode class represents projects in the Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[19817,19965]},{"pos":[19971,19978],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19984,19992],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[19998,20005],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[20009,20015]},{"content":"Description","pos":[20081,20092]},{"content":"public container extract(<ph id=\"ph1\">\\[</ph>str path<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean extractReferenced<ph id=\"ph4\">\\]</ph>)","pos":[20357,20426],"source":"public container extract(\\[str path\\], \\[boolean extractReferenced\\])"},{"content":"Extracts the whole project to disk.","pos":[20429,20464]},{"content":"public VSProjectFolderNode getContentNode()","pos":[20531,20574]},{"content":"Gets the content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[20603,20693]},{"content":"public DeployTo getDeployTo()","pos":[20705,20734]},{"content":"Gets value of the deployTo property.","pos":[20777,20813]},{"content":"public VSProjectFolderNode getOutputNode()","pos":[20879,20921]},{"content":"Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[20951,21047]},{"content":"public VSProjectFileNode getPrimaryOutputNode()","pos":[21053,21100]},{"content":"Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[21125,21222]},{"content":"public str getPrimaryTargetFileName()","pos":[21227,21264]},{"content":"Gets the primary target file name of the Visual Studio project.","pos":[21299,21362]},{"content":"public Map getProxies()","pos":[21401,21424]},{"content":"Gets the proxies in this project.","pos":[21473,21506]},{"content":"public container getProxiesContainer()","pos":[21575,21613]},{"content":"Gets the proxies in this project.","pos":[21647,21680]},{"content":"public str getReferencedProjectsInAOT()","pos":[21749,21788]},{"content":"Gets the AOT paths of the projects that are referenced by this Visual Studio project.","pos":[21821,21906]},{"content":"public str referencedProjects(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[21923,21967],"source":"public str referencedProjects(\\[str value\\])"},{"content":"public void setPrimaryTargetFileName(str targetFileName)","pos":[22097,22153]},{"content":"Sets the primary target file name of the Visual Studio project.","pos":[22169,22232]},{"content":"public void extractToSpecificDir(str directory)","pos":[22271,22318]},{"content":"public void setDeployTo(DeployTo deployTo)","pos":[22445,22487]},{"content":"Sets the value of the deployTo property.","pos":[22517,22557]},{"pos":[22622,22636],"content":"Method extract","linkify":"Method extract","nodes":[{"content":"Method extract","pos":[0,14]}]},{"content":"Extracts the whole project to disk.","pos":[22638,22673]},{"pos":[22751,22761],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"path","pos":[22763,22767]},{"content":"A Boolean value that determines whether to extract the referenced projects.","pos":[22770,22845]},{"content":"extractReferenced","pos":[22857,22874]},{"content":"A Boolean value that determines whether to extract the referenced projects.","pos":[22877,22952]},{"pos":[22959,22971],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of paths where the project was extracted.","pos":[22973,23021]},{"pos":[23027,23048],"content":"Method getContentNode","linkify":"Method getContentNode","nodes":[{"content":"Method getContentNode","pos":[0,21]}]},{"content":"Gets the content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[23050,23140]},{"pos":[23196,23208],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[23210,23295]},{"pos":[23301,23319],"content":"Method getDeployTo","linkify":"Method getDeployTo","nodes":[{"content":"Method getDeployTo","pos":[0,18]}]},{"content":"Gets value of the deployTo property.","pos":[23321,23357]},{"pos":[23399,23411],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The deployTo property value.","pos":[23413,23441]},{"pos":[23447,23467],"content":"Method getOutputNode","linkify":"Method getOutputNode","nodes":[{"content":"Method getOutputNode","pos":[0,20]}]},{"content":"Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[23469,23565]},{"pos":[23620,23632],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[23634,23725]},{"pos":[23731,23758],"content":"Method getPrimaryOutputNode","linkify":"Method getPrimaryOutputNode","nodes":[{"content":"Method getPrimaryOutputNode","pos":[0,27]}]},{"content":"Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[23760,23857]},{"pos":[23917,23929],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[23931,24021]},{"pos":[24027,24058],"content":"Method getPrimaryTargetFileName","linkify":"Method getPrimaryTargetFileName","nodes":[{"content":"Method getPrimaryTargetFileName","pos":[0,31]}]},{"content":"Gets the primary target file name of the Visual Studio project.","pos":[24060,24123]},{"pos":[24173,24185],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The primary target file name of the Visual Studio project.","pos":[24187,24245]},{"pos":[24251,24268],"content":"Method getProxies","linkify":"Method getProxies","nodes":[{"content":"Method getProxies","pos":[0,17]}]},{"content":"Gets the proxies in this project.","pos":[24270,24303]},{"pos":[24339,24351],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A map that contains the Class, Enum, and Table keys.","pos":[24353,24405]},{"content":"Each key contains a list of proxies.","pos":[24406,24442]},{"pos":[24448,24474],"content":"Method getProxiesContainer","linkify":"Method getProxiesContainer","nodes":[{"content":"Method getProxiesContainer","pos":[0,26]}]},{"content":"Gets the proxies in this project.","pos":[24476,24509]},{"pos":[24560,24572],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that holds the packed representation of a map that contains the Class, Enum, and Table keys.","pos":[24574,24678]},{"content":"Each key contains a list of proxies.","pos":[24679,24715]},{"pos":[24721,24754],"content":"Method getReferencedProjectsInAOT","linkify":"Method getReferencedProjectsInAOT","nodes":[{"content":"Method getReferencedProjectsInAOT","pos":[0,33]}]},{"content":"Gets the AOT paths of the projects that are referenced by this Visual Studio project.","pos":[24756,24841]},{"pos":[24893,24905],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of AOT paths of the projects that are referenced by this Visual Studio project.","pos":[24907,24993]},{"pos":[24999,25024],"content":"Method referencedProjects","linkify":"Method referencedProjects","nodes":[{"content":"Method referencedProjects","pos":[0,25]}]},{"pos":[25079,25089],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[25091,25096]},{"pos":[25105,25117],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25123,25154],"content":"Method setPrimaryTargetFileName","linkify":"Method setPrimaryTargetFileName","nodes":[{"content":"Method setPrimaryTargetFileName","pos":[0,31]}]},{"content":"Sets the primary target file name of the Visual Studio project.","pos":[25156,25219]},{"pos":[25288,25298],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"targetFileName","pos":[25300,25314]},{"content":"The primary target file name of the Visual Studio project.","pos":[25317,25375]},{"pos":[25381,25408],"content":"Method extractToSpecificDir","linkify":"Method extractToSpecificDir","nodes":[{"content":"Method extractToSpecificDir","pos":[0,27]}]},{"pos":[25468,25478],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"directory","pos":[25480,25489]},{"pos":[25497,25515],"content":"Method setDeployTo","linkify":"Method setDeployTo","nodes":[{"content":"Method setDeployTo","pos":[0,18]}]},{"content":"Sets the value of the deployTo property.","pos":[25517,25557]},{"pos":[25612,25622],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"deployTo","pos":[25624,25632]},{"content":"The deployTo property value.","pos":[25635,25663]},{"pos":[25668,25688],"content":"Class VSProjectsNode","linkify":"Class VSProjectsNode","nodes":[{"content":"Class VSProjectsNode","pos":[0,20]}]},{"content":"The VSProjectNode class is the root of the Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[25737,25877]},{"pos":[25883,25890],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[25896,25904],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[25910,25917],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[25921,25927]},{"content":"Description","pos":[26021,26032]},{"content":"public TreeNode AOTfindChild(str name, <ph id=\"ph1\">\\[</ph>int nodeType<ph id=\"ph2\">\\]</ph>)","pos":[26311,26367],"source":"public TreeNode AOTfindChild(str name, \\[int nodeType\\])"},{"content":"Finds the specified child node of this node.","pos":[26411,26455]},{"content":"public VSProjectNode createProjectNode(str name, str projectTypesString, <ph id=\"ph1\">\\[</ph>boolean virtualNode<ph id=\"ph2\">\\]</ph>)","pos":[26506,26603],"source":"public VSProjectNode createProjectNode(str name, str projectTypesString, \\[boolean virtualNode\\])"},{"content":"Creates a new instance of the VSProjectNode class.","pos":[26606,26656]},{"content":"public container getProjectsDeployingTo(DeployTo deployTo)","pos":[26701,26759]},{"content":"Gets a list of VSProjectNode objects that have the specified deployTo property.","pos":[26801,26880]},{"content":"public container getProjectsModifiedAfter(DateTime timestamp)","pos":[26896,26957]},{"content":"Gets a list of VSProjectNode objects that were modified after the specified date and time.","pos":[26996,27086]},{"content":"public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)","pos":[27091,27159]},{"content":"public Object getVSProjectNodeObservable()","pos":[27286,27328]},{"content":"Gets the VSProjectNodeObservable object.","pos":[27386,27426]},{"content":"public void AOTrefresh()","pos":[27481,27505]},{"content":"Updates the node with the latest changes to the .aod file.","pos":[27581,27639]},{"pos":[27679,27698],"content":"Method AOTfindChild","linkify":"Method AOTfindChild","nodes":[{"content":"Method AOTfindChild","pos":[0,19]}]},{"content":"Finds the specified child node of this node.","pos":[27700,27744]},{"pos":[27811,27821],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[27823,27827]},{"content":"nodeType","pos":[27841,27849]},{"pos":[27858,27870],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The specified tree node.","pos":[27872,27896]},{"pos":[27902,27926],"content":"Method createProjectNode","linkify":"Method createProjectNode","nodes":[{"content":"Method createProjectNode","pos":[0,24]}]},{"content":"Creates a new instance of the VSProjectNode class.","pos":[27928,27978]},{"pos":[28086,28096],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[28098,28102]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28105,28179]},{"content":"In this case, the node will not be persisted in the Microsoft Dynamics AX Store.","pos":[28180,28260]},{"content":"projectTypesString","pos":[28272,28290]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28293,28367]},{"content":"In this case, the node will not be persisted in the Microsoft Dynamics AX Store.","pos":[28368,28448]},{"content":"virtualNode","pos":[28460,28471]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28474,28548]},{"content":"In this case, the node will not be persisted in the Microsoft Dynamics AX Store.","pos":[28549,28629]},{"pos":[28636,28648],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The VSProjectNode object that is created.","pos":[28650,28691]},{"pos":[28697,28726],"content":"Method getProjectsDeployingTo","linkify":"Method getProjectsDeployingTo","nodes":[{"content":"Method getProjectsDeployingTo","pos":[0,29]}]},{"content":"Gets a list of VSProjectNode objects that have the specified deployTo property.","pos":[28728,28807]},{"pos":[28878,28888],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"deployTo","pos":[28890,28898]},{"content":"The value of the deployTo property.","pos":[28901,28936]},{"pos":[28943,28955],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of VSProjectNode objects.","pos":[28957,28989]},{"pos":[28995,29026],"content":"Method getProjectsModifiedAfter","linkify":"Method getProjectsModifiedAfter","nodes":[{"content":"Method getProjectsModifiedAfter","pos":[0,31]}]},{"content":"Gets a list of VSProjectNode objects that were modified after the specified date and time.","pos":[29028,29118]},{"pos":[29192,29202],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"timestamp","pos":[29204,29213]},{"content":"The date and time as a DB<ph id=\"ph1\">\\_</ph>DATETIME<ph id=\"ph2\">\\_</ph>TYPE value.","pos":[29216,29264],"source":"The date and time as a DB\\_DATETIME\\_TYPE value."},{"pos":[29271,29283],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of VSProjectNode objects.","pos":[29285,29317]},{"pos":[29323,29349],"content":"Method getTypeNodeFromGuid","linkify":"Method getTypeNodeFromGuid","nodes":[{"content":"Method getTypeNodeFromGuid","pos":[0,26]}]},{"pos":[29430,29440],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"projectTypesString","pos":[29442,29460]},{"pos":[29469,29481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29487,29520],"content":"Method getVSProjectNodeObservable","linkify":"Method getVSProjectNodeObservable","nodes":[{"content":"Method getVSProjectNodeObservable","pos":[0,33]}]},{"content":"Gets the VSProjectNodeObservable object.","pos":[29522,29562]},{"pos":[29617,29629],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The VSProjectNodeObservable object.","pos":[29631,29666]},{"pos":[29673,29680],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Observers can register with this and get notified of CRUD operations on Visual Studio projects.","pos":[29682,29777]},{"pos":[29783,29800],"content":"Method AOTrefresh","linkify":"Method AOTrefresh","nodes":[{"content":"Method AOTrefresh","pos":[0,17]}]},{"content":"Updates the node with the latest changes to the .aod file.","pos":[29802,29860]},{"pos":[29895,29918],"content":"Class VSProjectTypeNode","linkify":"Class VSProjectTypeNode","nodes":[{"content":"Class VSProjectTypeNode","pos":[0,23]}]},{"content":"The VSProjectTypeNode class represents project types in the Visual Studio Project nodes in the AOT.","pos":[29965,30064]},{"pos":[30070,30077],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30083,30091],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[30097,30104],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[30108,30114]},{"content":"Description","pos":[30117,30128]},{"pos":[30160,30169],"content":"Class VSS","linkify":"Class VSS","nodes":[{"content":"Class VSS","pos":[0,9]}]},{"pos":[30204,30211],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30217,30225],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[30231,30238],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[30242,30248]},{"content":"Description","pos":[30354,30365]},{"content":"public boolean connect()","pos":[30558,30582]},{"content":"public boolean connected()","pos":[30716,30742]},{"content":"public boolean disconnect()","pos":[30874,30901]},{"content":"public container getCheckedoutFiles()","pos":[31032,31069]},{"content":"public container getConnectionInfo()","pos":[31190,31226]},{"content":"public VSSItem getVSSItem(str vssItemPath, str localFilePath, <ph id=\"ph1\">\\[</ph>boolean completePath<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int version<ph id=\"ph4\">\\]</ph>)","pos":[31348,31452],"source":"public VSSItem getVSSItem(str vssItemPath, str localFilePath, \\[boolean completePath\\], \\[int version\\])"},{"content":"public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)","pos":[31506,31600]},{"content":"public VSSItem newSubProject(str name, str localPath)","pos":[31664,31717]},{"content":"public Map synchronizeProjects(<ph id=\"ph1\">\\[</ph>Set projects<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean force<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>boolean delLocalFiles<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str label<ph id=\"ph8\">\\]</ph>)","pos":[31822,31931],"source":"public Map synchronizeProjects(\\[Set projects\\], \\[boolean force\\], \\[boolean delLocalFiles\\], \\[str label\\])"},{"content":"public void new()","pos":[31980,31997]},{"content":"Initializes an instance of the VSS class.","pos":[32092,32133]},{"pos":[32141,32155],"content":"Method connect","linkify":"Method connect","nodes":[{"content":"Method connect","pos":[0,14]}]},{"pos":[32192,32204],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32210,32226],"content":"Method connected","linkify":"Method connected","nodes":[{"content":"Method connected","pos":[0,16]}]},{"pos":[32265,32277],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32283,32300],"content":"Method disconnect","linkify":"Method disconnect","nodes":[{"content":"Method disconnect","pos":[0,17]}]},{"pos":[32340,32352],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32358,32383],"content":"Method getCheckedoutFiles","linkify":"Method getCheckedoutFiles","nodes":[{"content":"Method getCheckedoutFiles","pos":[0,25]}]},{"pos":[32433,32445],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32451,32475],"content":"Method getConnectionInfo","linkify":"Method getConnectionInfo","nodes":[{"content":"Method getConnectionInfo","pos":[0,24]}]},{"pos":[32524,32536],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32542,32559],"content":"Method getVSSItem","linkify":"Method getVSSItem","nodes":[{"content":"Method getVSSItem","pos":[0,17]}]},{"pos":[32672,32682],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"vssItemPath","pos":[32684,32695]},{"content":"localFilePath","pos":[32709,32722]},{"content":"completePath","pos":[32736,32748]},{"content":"version","pos":[32762,32769]},{"pos":[32778,32790],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32796,32807],"content":"Method init","linkify":"Method init","nodes":[{"content":"Method init","pos":[0,11]}]},{"pos":[32914,32924],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"vssIni","pos":[32926,32932]},{"content":"vssPrjRoot","pos":[32946,32956]},{"content":"vssWorkingFolder","pos":[32970,32986]},{"content":"vssUser","pos":[33000,33007]},{"content":"vssPwd","pos":[33021,33027]},{"pos":[33036,33048],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33054,33074],"content":"Method newSubProject","linkify":"Method newSubProject","nodes":[{"content":"Method newSubProject","pos":[0,20]}]},{"pos":[33140,33150],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[33152,33156]},{"content":"localPath","pos":[33170,33179]},{"pos":[33188,33200],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33206,33232],"content":"Method synchronizeProjects","linkify":"Method synchronizeProjects","nodes":[{"content":"Method synchronizeProjects","pos":[0,26]}]},{"pos":[33346,33356],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"projects","pos":[33358,33366]},{"content":"force","pos":[33380,33385]},{"content":"delLocalFiles","pos":[33399,33412]},{"content":"label","pos":[33426,33431]},{"pos":[33440,33452],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33458,33468],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes an instance of the VSS class.","pos":[33470,33511]},{"pos":[33539,33552],"content":"Class VSSItem","linkify":"Class VSSItem","nodes":[{"content":"Class VSSItem","pos":[0,13]}]},{"pos":[33591,33598],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33604,33612],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[33618,33625],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[33629,33635]},{"content":"Description","pos":[33716,33727]},{"content":"public boolean add(<ph id=\"ph1\">\\[</ph>boolean keepCheckedout<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>str comment<ph id=\"ph4\">\\]</ph>)","pos":[33909,33972],"source":"public boolean add(\\[boolean keepCheckedout\\], \\[str comment\\])"},{"content":"public boolean checkin(<ph id=\"ph1\">\\[</ph>str comment<ph id=\"ph2\">\\]</ph>)","pos":[34049,34088],"source":"public boolean checkin(\\[str comment\\])"},{"content":"public boolean checkout(<ph id=\"ph1\">\\[</ph>boolean allowMultipleCheckout<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean replaceLocal<ph id=\"ph4\">\\]</ph>)","pos":[34189,34273],"source":"public boolean checkout(\\[boolean allowMultipleCheckout\\], \\[boolean replaceLocal\\])"},{"content":"public boolean delete()","pos":[34329,34352]},{"content":"public boolean destroy()","pos":[34469,34493]},{"content":"public Map get(<ph id=\"ph1\">\\[</ph>boolean force<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int version<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>str label<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str localFile<ph id=\"ph8\">\\]</ph>)","pos":[34609,34693],"source":"public Map get(\\[boolean force\\], \\[int version\\], \\[str label\\], \\[str localFile\\])"},{"content":"public str getActionText()","pos":[34749,34775]},{"content":"public container getCheckedOutTo()","pos":[34889,34923]},{"content":"public int getCheckoutVersion()","pos":[35029,35060]},{"content":"public container getHistory()","pos":[35169,35198]},{"content":"public ComInterface getIUnknown()","pos":[35309,35342]},{"content":"public int getVersionNo()","pos":[35449,35474]},{"content":"public str getVSSPath()","pos":[35589,35612]},{"content":"public boolean isCheckedOut()","pos":[35729,35758]},{"content":"public boolean isRenamed()","pos":[35869,35895]},{"content":"public str name(str newName)","pos":[36009,36037]},{"content":"public boolean rename(str newName)","pos":[36149,36183]},{"content":"public boolean undoCheckout()","pos":[36289,36318]},{"content":"private void new()","pos":[36429,36447]},{"content":"Initializes a new instance of the VSSItem class.","pos":[36516,36564]},{"pos":[36572,36582],"content":"Method add","linkify":"Method add","nodes":[{"content":"Method add","pos":[0,10]}]},{"pos":[36654,36664],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"keepCheckedout","pos":[36666,36680]},{"content":"comment","pos":[36694,36701]},{"pos":[36710,36722],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36728,36742],"content":"Method checkin","linkify":"Method checkin","nodes":[{"content":"Method checkin","pos":[0,14]}]},{"pos":[36792,36802],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"comment","pos":[36804,36811]},{"pos":[36820,36832],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36838,36853],"content":"Method checkout","linkify":"Method checkout","nodes":[{"content":"Method checkout","pos":[0,15]}]},{"pos":[36946,36956],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"allowMultipleCheckout","pos":[36958,36979]},{"content":"replaceLocal","pos":[36993,37005]},{"pos":[37014,37026],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37032,37045],"content":"Method delete","linkify":"Method delete","nodes":[{"content":"Method delete","pos":[0,13]}]},{"pos":[37081,37093],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37099,37113],"content":"Method destroy","linkify":"Method destroy","nodes":[{"content":"Method destroy","pos":[0,14]}]},{"pos":[37150,37162],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37168,37178],"content":"Method get","linkify":"Method get","nodes":[{"content":"Method get","pos":[0,10]}]},{"pos":[37267,37277],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"force","pos":[37279,37284]},{"content":"version","pos":[37298,37305]},{"content":"label","pos":[37319,37324]},{"content":"localFile","pos":[37338,37347]},{"pos":[37356,37368],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37374,37394],"content":"Method getActionText","linkify":"Method getActionText","nodes":[{"content":"Method getActionText","pos":[0,20]}]},{"pos":[37433,37445],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37451,37473],"content":"Method getCheckedOutTo","linkify":"Method getCheckedOutTo","nodes":[{"content":"Method getCheckedOutTo","pos":[0,22]}]},{"pos":[37520,37532],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37538,37563],"content":"Method getCheckoutVersion","linkify":"Method getCheckoutVersion","nodes":[{"content":"Method getCheckoutVersion","pos":[0,25]}]},{"pos":[37607,37619],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37625,37642],"content":"Method getHistory","linkify":"Method getHistory","nodes":[{"content":"Method getHistory","pos":[0,17]}]},{"pos":[37684,37696],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37702,37720],"content":"Method getIUnknown","linkify":"Method getIUnknown","nodes":[{"content":"Method getIUnknown","pos":[0,18]}]},{"pos":[37766,37778],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37784,37803],"content":"Method getVersionNo","linkify":"Method getVersionNo","nodes":[{"content":"Method getVersionNo","pos":[0,19]}]},{"pos":[37841,37853],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37859,37876],"content":"Method getVSSPath","linkify":"Method getVSSPath","nodes":[{"content":"Method getVSSPath","pos":[0,17]}]},{"pos":[37912,37924],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37930,37949],"content":"Method isCheckedOut","linkify":"Method isCheckedOut","nodes":[{"content":"Method isCheckedOut","pos":[0,19]}]},{"pos":[37991,38003],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38009,38025],"content":"Method isRenamed","linkify":"Method isRenamed","nodes":[{"content":"Method isRenamed","pos":[0,16]}]},{"pos":[38064,38076],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38082,38093],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"pos":[38134,38144],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newName","pos":[38146,38153]},{"pos":[38162,38174],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38180,38193],"content":"Method rename","linkify":"Method rename","nodes":[{"content":"Method rename","pos":[0,13]}]},{"pos":[38240,38250],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newName","pos":[38252,38259]},{"pos":[38268,38280],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38286,38305],"content":"Method undoCheckout","linkify":"Method undoCheckout","nodes":[{"content":"Method undoCheckout","pos":[0,19]}]},{"pos":[38347,38359],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38365,38375],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the VSSItem class.","pos":[38377,38425]}],"content":"---\n# required metadata\n\ntitle: V Classes | Microsoft Docs\ndescription: System API classes that start with the letter V.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-26 02:11:31\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# keywords: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.suite: Released- Dynamics AX 7.0.0\n# ms.tgt_pltfrm: \nms.custom: 55841\nms.assetid: fcf95bc3-6eb0-486a-b6bc-22b750952d22\nms.region: Global\n# ms.industry: \nms.author: robinr\n\n---\n\n# V Classes\n\nSystem API classes that start with the letter V.\n\nClass ValidateEventArgs\n-----------------------\n\n    class ValidateEventArgs extends DataEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                | Description |\n|-------------------------------------------------------|-------------|\n| public boolean parmValidateResult(\\[boolean result\\]) |             |\n| public void new(boolean result)                       |             |\n\n### Method parmValidateResult\n\n    public boolean parmValidateResult([boolean result])\n\n#### Parameters\n\nresult  \n\n#### Return Value\n\n### Method new\n\n    public void new(boolean result)\n\n#### Parameters\n\nresult  \n\n## Class ValidateFieldEventArgs\n    class ValidateFieldEventArgs extends ValidateEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                       | Description |\n|----------------------------------------------|-------------|\n| public int parmFieldId()                     |             |\n| public void new(int fieldId, boolean result) |             |\n\n### Method parmFieldId\n\n    public int parmFieldId()\n\n#### Return Value\n\n### Method new\n\n    public void new(int fieldId, boolean result)\n\n#### Parameters\n\nfieldId  \n\n<!-- -->\n\nresult  \n\n## Class ValidateFieldValueEventArgs\n    class ValidateFieldValueEventArgs extends ValidateEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                         | Description |\n|----------------------------------------------------------------|-------------|\n| public str parmFieldName()                                     |             |\n| public int parmArrayIndex()                                    |             |\n| public void new(str fieldName, int arrayIndex, boolean result) |             |\n\n### Method parmFieldName\n\n    public str parmFieldName()\n\n#### Return Value\n\n### Method parmArrayIndex\n\n    public int parmArrayIndex()\n\n#### Return Value\n\n### Method new\n\n    public void new(str fieldName, int arrayIndex, boolean result)\n\n#### Parameters\n\nfieldName  \n\n<!-- -->\n\narrayIndex  \n\n<!-- -->\n\nresult  \n\n## Class VirtualChannelManager\n    class VirtualChannelManager extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                         | Description                                                    |\n|------------------------------------------------|----------------------------------------------------------------|\n| public void finalize()                         |                                                                |\n| public void new()                              | Initializes a new instance of the VirtualChannelManager class. |\n| public void sendData(int listenerId, str data) |                                                                |\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the VirtualChannelManager class.\n\n    public void new()\n\n### Method sendData\n\n    public void sendData(int listenerId, str data)\n\n#### Parameters\n\nlistenerId  \n\n<!-- -->\n\ndata  \n\n## Class VSItemNode\n    class VSItemNode extends TreeNode\n\nThe VSItemNode class is a base class for Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                                          |\n|--------------------------------------------------------------------|------------------------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node.                |\n| public BinData getFileData()                                       |                                                      |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) | Notifies listeners that a file has been deleted.     |\n| ::public static void notifyFileUpdated(TreeNode node)              | Notifies listeners that a file has been updated.     |\n| public void setFileData(BinData data)                              |                                                      |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.                   |\n| public void getFile(str fileName)                                  |                                                      |\n| ::public static void notifyFileCreated(TreeNode node)              | Notifies listeners that a new file has been created. |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) | Notifies listeners that a file has been renamed.     |\n| public void setFile(str fileName)                                  |                                                      |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains the source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileDeleted\n\nNotifies listeners that a file has been deleted.\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \nThe AOT path of the file.\n\n<!-- -->\n\naotPath  \nThe AOT path of the file.\n\n### Method notifyFileUpdated\n\nNotifies listeners that a file has been updated.\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \nThe node that has been updated.\n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileCreated\n\nNotifies listeners that a new file has been created.\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \nThe node that has been created.\n\n### Method notifyFileRenamed\n\nNotifies listeners that a file has been renamed.\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \nThe old name of the file.\n\n<!-- -->\n\noldName  \nThe old name of the file.\n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n## Class VSProjectFileNode\n    class VSProjectFileNode extends VSItemNode\n\nThe VSProjectFileNode class represents files in the Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                           |\n|--------------------------------------------------------------------|---------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node. |\n| public BinData getFileData()                                       |                                       |\n| ::public static void notifyFileCreated(TreeNode node)              |                                       |\n| public void setFileData(BinData data)                              |                                       |\n| public void getFile(str fileName)                                  |                                       |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) |                                       |\n| ::public static void notifyFileUpdated(TreeNode node)              |                                       |\n| public void setFile(str fileName)                                  |                                       |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) |                                       |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.    |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n## Class VSProjectFolderNode\n    class VSProjectFolderNode extends TreeNode\n\nThe VSProjectFolderNode class represents folders in the Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                       | Description                                                                                              |\n|----------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|\n| public str AOTgetSource()                                                                    | Returns the source code of this node.                                                                    |\n| public VSProjectFileNode createFileNode(str name)                                            | Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.   |\n| public VSProjectFolderNode createFolderNode(str name)                                        | Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance. |\n| public VSProjectLinkNode createLinkNode(str name, str aotPath, \\[boolean createLinkedNode\\]) | Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.   |\n| public BinData getFileData()                                                                 |                                                                                                          |\n| ::public static void notifyFileUpdated(TreeNode node)                                        |                                                                                                          |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath)                           |                                                                                                          |\n| public void setFileData(BinData data)                                                        |                                                                                                          |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])                                   | Sets the source code of this node.                                                                       |\n| public void getFile(str fileName)                                                            |                                                                                                          |\n| ::public static void notifyFileCreated(TreeNode node)                                        |                                                                                                          |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName)                           |                                                                                                          |\n| public void setFile(str fileName)                                                            |                                                                                                          |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method createFileNode\n\nCreates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectFileNode createFileNode(str name)\n\n#### Parameters\n\nname  \nThe name of the file node.\n\n#### Return Value\n\nThe new instance of the VSProjectFileNode class.\n\n### Method createFolderNode\n\nCreates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectFolderNode createFolderNode(str name)\n\n#### Parameters\n\nname  \nThe name of the folder node.\n\n#### Return Value\n\nThe new instance of the VSProjectFolderNode class.\n\n### Method createLinkNode\n\nCreates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectLinkNode createLinkNode(str name, str aotPath, [boolean createLinkedNode])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\naotPath  \n\n<!-- -->\n\ncreateLinkedNode  \n\n#### Return Value\n\nThe new instance of the VSProjectLinkNode class.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n## Class VSProjectLinkNode\n    class VSProjectLinkNode extends VSItemNode\n\nThe VSProjectLinkNode class represents links to other Microsoft Dynamics AX Application Object Tree (AOT) nodes in the Microsoft Visual Studio project nodes in the AOT.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                           |\n|--------------------------------------------------------------------|---------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node. |\n| public str getAOTPath()                                            |                                       |\n| public BinData getFileData()                                       |                                       |\n| ::public static void notifyFileCreated(TreeNode node)              |                                       |\n| public void setFile(str fileName)                                  |                                       |\n| public void setFileData(BinData data)                              |                                       |\n| public void getFile(str fileName)                                  |                                       |\n| ::public static void notifyFileUpdated(TreeNode node)              |                                       |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.    |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) |                                       |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) |                                       |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getAOTPath\n\n    public str getAOTPath()\n\n#### Return Value\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n## Class VSProjectNode\n    class VSProjectNode extends xResourceNode\n\nThe VSProjectNode class represents projects in the Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                | Description                                                                                       |\n|-----------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|\n| public container extract(\\[str path\\], \\[boolean extractReferenced\\]) | Extracts the whole project to disk.                                                               |\n| public VSProjectFolderNode getContentNode()                           | Gets the content VSProjectFolderNode object that contains the Visual Studio project files.        |\n| public DeployTo getDeployTo()                                         | Gets value of the deployTo property.                                                              |\n| public VSProjectFolderNode getOutputNode()                            | Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.  |\n| public VSProjectFileNode getPrimaryOutputNode()                       | Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project. |\n| public str getPrimaryTargetFileName()                                 | Gets the primary target file name of the Visual Studio project.                                   |\n| public Map getProxies()                                               | Gets the proxies in this project.                                                                 |\n| public container getProxiesContainer()                                | Gets the proxies in this project.                                                                 |\n| public str getReferencedProjectsInAOT()                               | Gets the AOT paths of the projects that are referenced by this Visual Studio project.             |\n| public str referencedProjects(\\[str value\\])                          |                                                                                                   |\n| public void setPrimaryTargetFileName(str targetFileName)              | Sets the primary target file name of the Visual Studio project.                                   |\n| public void extractToSpecificDir(str directory)                       |                                                                                                   |\n| public void setDeployTo(DeployTo deployTo)                            | Sets the value of the deployTo property.                                                          |\n\n### Method extract\n\nExtracts the whole project to disk.\n\n    public container extract([str path], [boolean extractReferenced])\n\n#### Parameters\n\npath  \nA Boolean value that determines whether to extract the referenced projects.\n\n<!-- -->\n\nextractReferenced  \nA Boolean value that determines whether to extract the referenced projects.\n\n#### Return Value\n\nA list of paths where the project was extracted.\n\n### Method getContentNode\n\nGets the content VSProjectFolderNode object that contains the Visual Studio project files.\n\n    public VSProjectFolderNode getContentNode()\n\n#### Return Value\n\nThe content VSProjectFolderNode object that contains the Visual Studio project files.\n\n### Method getDeployTo\n\nGets value of the deployTo property.\n\n    public DeployTo getDeployTo()\n\n#### Return Value\n\nThe deployTo property value.\n\n### Method getOutputNode\n\nGets the output VSProjectFolderNode object that contains the Visual Studio project output files.\n\n    public VSProjectFolderNode getOutputNode()\n\n#### Return Value\n\nThe output VSProjectFolderNode object that contains the Visual Studio project output files.\n\n### Method getPrimaryOutputNode\n\nGets the VSProjectFileNode object that represent the primary output of the Visual Studio project.\n\n    public VSProjectFileNode getPrimaryOutputNode()\n\n#### Return Value\n\nA VSProjectFileNode object that represent the primary output of the Visual Studio project.\n\n### Method getPrimaryTargetFileName\n\nGets the primary target file name of the Visual Studio project.\n\n    public str getPrimaryTargetFileName()\n\n#### Return Value\n\nThe primary target file name of the Visual Studio project.\n\n### Method getProxies\n\nGets the proxies in this project.\n\n    public Map getProxies()\n\n#### Return Value\n\nA map that contains the Class, Enum, and Table keys. Each key contains a list of proxies.\n\n### Method getProxiesContainer\n\nGets the proxies in this project.\n\n    public container getProxiesContainer()\n\n#### Return Value\n\nA container that holds the packed representation of a map that contains the Class, Enum, and Table keys. Each key contains a list of proxies.\n\n### Method getReferencedProjectsInAOT\n\nGets the AOT paths of the projects that are referenced by this Visual Studio project.\n\n    public str getReferencedProjectsInAOT()\n\n#### Return Value\n\nA list of AOT paths of the projects that are referenced by this Visual Studio project.\n\n### Method referencedProjects\n\n    public str referencedProjects([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method setPrimaryTargetFileName\n\nSets the primary target file name of the Visual Studio project.\n\n    public void setPrimaryTargetFileName(str targetFileName)\n\n#### Parameters\n\ntargetFileName  \nThe primary target file name of the Visual Studio project.\n\n### Method extractToSpecificDir\n\n    public void extractToSpecificDir(str directory)\n\n#### Parameters\n\ndirectory  \n\n### Method setDeployTo\n\nSets the value of the deployTo property.\n\n    public void setDeployTo(DeployTo deployTo)\n\n#### Parameters\n\ndeployTo  \nThe deployTo property value.\n\n## Class VSProjectsNode\n    class VSProjectsNode extends xResourceNode\n\nThe VSProjectNode class is the root of the Microsoft Visual Studio project nodes in the Microsoft Dynamics AX Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                            | Description                                                                                |\n|---------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|\n| public TreeNode AOTfindChild(str name, \\[int nodeType\\])                                          | Finds the specified child node of this node.                                               |\n| public VSProjectNode createProjectNode(str name, str projectTypesString, \\[boolean virtualNode\\]) | Creates a new instance of the VSProjectNode class.                                         |\n| public container getProjectsDeployingTo(DeployTo deployTo)                                        | Gets a list of VSProjectNode objects that have the specified deployTo property.            |\n| public container getProjectsModifiedAfter(DateTime timestamp)                                     | Gets a list of VSProjectNode objects that were modified after the specified date and time. |\n| public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)                              |                                                                                            |\n| public Object getVSProjectNodeObservable()                                                        | Gets the VSProjectNodeObservable object.                                                   |\n| public void AOTrefresh()                                                                          | Updates the node with the latest changes to the .aod file.                                 |\n\n### Method AOTfindChild\n\nFinds the specified child node of this node.\n\n    public TreeNode AOTfindChild(str name, [int nodeType])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nnodeType  \n\n#### Return Value\n\nThe specified tree node.\n\n### Method createProjectNode\n\nCreates a new instance of the VSProjectNode class.\n\n    public VSProjectNode createProjectNode(str name, str projectTypesString, [boolean virtualNode])\n\n#### Parameters\n\nname  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Microsoft Dynamics AX Store.\n\n<!-- -->\n\nprojectTypesString  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Microsoft Dynamics AX Store.\n\n<!-- -->\n\nvirtualNode  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Microsoft Dynamics AX Store.\n\n#### Return Value\n\nThe VSProjectNode object that is created.\n\n### Method getProjectsDeployingTo\n\nGets a list of VSProjectNode objects that have the specified deployTo property.\n\n    public container getProjectsDeployingTo(DeployTo deployTo)\n\n#### Parameters\n\ndeployTo  \nThe value of the deployTo property.\n\n#### Return Value\n\nA list of VSProjectNode objects.\n\n### Method getProjectsModifiedAfter\n\nGets a list of VSProjectNode objects that were modified after the specified date and time.\n\n    public container getProjectsModifiedAfter(DateTime timestamp)\n\n#### Parameters\n\ntimestamp  \nThe date and time as a DB\\_DATETIME\\_TYPE value.\n\n#### Return Value\n\nA list of VSProjectNode objects.\n\n### Method getTypeNodeFromGuid\n\n    public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)\n\n#### Parameters\n\nprojectTypesString  \n\n#### Return Value\n\n### Method getVSProjectNodeObservable\n\nGets the VSProjectNodeObservable object.\n\n    public Object getVSProjectNodeObservable()\n\n#### Return Value\n\nThe VSProjectNodeObservable object.\n\n#### Remarks\n\nObservers can register with this and get notified of CRUD operations on Visual Studio projects.\n\n### Method AOTrefresh\n\nUpdates the node with the latest changes to the .aod file.\n\n    public void AOTrefresh()\n\n## Class VSProjectTypeNode\n    class VSProjectTypeNode extends TreeNode\n\nThe VSProjectTypeNode class represents project types in the Visual Studio Project nodes in the AOT.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method | Description |\n|--------|-------------|\n\n## Class VSS\n    class VSS extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                        | Description                               |\n|---------------------------------------------------------------------------------------------------------------|-------------------------------------------|\n| public boolean connect()                                                                                      |                                           |\n| public boolean connected()                                                                                    |                                           |\n| public boolean disconnect()                                                                                   |                                           |\n| public container getCheckedoutFiles()                                                                         |                                           |\n| public container getConnectionInfo()                                                                          |                                           |\n| public VSSItem getVSSItem(str vssItemPath, str localFilePath, \\[boolean completePath\\], \\[int version\\])      |                                           |\n| public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)                |                                           |\n| public VSSItem newSubProject(str name, str localPath)                                                         |                                           |\n| public Map synchronizeProjects(\\[Set projects\\], \\[boolean force\\], \\[boolean delLocalFiles\\], \\[str label\\]) |                                           |\n| public void new()                                                                                             | Initializes an instance of the VSS class. |\n\n### Method connect\n\n    public boolean connect()\n\n#### Return Value\n\n### Method connected\n\n    public boolean connected()\n\n#### Return Value\n\n### Method disconnect\n\n    public boolean disconnect()\n\n#### Return Value\n\n### Method getCheckedoutFiles\n\n    public container getCheckedoutFiles()\n\n#### Return Value\n\n### Method getConnectionInfo\n\n    public container getConnectionInfo()\n\n#### Return Value\n\n### Method getVSSItem\n\n    public VSSItem getVSSItem(str vssItemPath, str localFilePath, [boolean completePath], [int version])\n\n#### Parameters\n\nvssItemPath  \n\n<!-- -->\n\nlocalFilePath  \n\n<!-- -->\n\ncompletePath  \n\n<!-- -->\n\nversion  \n\n#### Return Value\n\n### Method init\n\n    public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)\n\n#### Parameters\n\nvssIni  \n\n<!-- -->\n\nvssPrjRoot  \n\n<!-- -->\n\nvssWorkingFolder  \n\n<!-- -->\n\nvssUser  \n\n<!-- -->\n\nvssPwd  \n\n#### Return Value\n\n### Method newSubProject\n\n    public VSSItem newSubProject(str name, str localPath)\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nlocalPath  \n\n#### Return Value\n\n### Method synchronizeProjects\n\n    public Map synchronizeProjects([Set projects], [boolean force], [boolean delLocalFiles], [str label])\n\n#### Parameters\n\nprojects  \n\n<!-- -->\n\nforce  \n\n<!-- -->\n\ndelLocalFiles  \n\n<!-- -->\n\nlabel  \n\n#### Return Value\n\n### Method new\n\nInitializes an instance of the VSS class.\n\n    public void new()\n\n## Class VSSItem\n    class VSSItem extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                               | Description                                      |\n|--------------------------------------------------------------------------------------|--------------------------------------------------|\n| public boolean add(\\[boolean keepCheckedout\\], \\[str comment\\])                      |                                                  |\n| public boolean checkin(\\[str comment\\])                                              |                                                  |\n| public boolean checkout(\\[boolean allowMultipleCheckout\\], \\[boolean replaceLocal\\]) |                                                  |\n| public boolean delete()                                                              |                                                  |\n| public boolean destroy()                                                             |                                                  |\n| public Map get(\\[boolean force\\], \\[int version\\], \\[str label\\], \\[str localFile\\]) |                                                  |\n| public str getActionText()                                                           |                                                  |\n| public container getCheckedOutTo()                                                   |                                                  |\n| public int getCheckoutVersion()                                                      |                                                  |\n| public container getHistory()                                                        |                                                  |\n| public ComInterface getIUnknown()                                                    |                                                  |\n| public int getVersionNo()                                                            |                                                  |\n| public str getVSSPath()                                                              |                                                  |\n| public boolean isCheckedOut()                                                        |                                                  |\n| public boolean isRenamed()                                                           |                                                  |\n| public str name(str newName)                                                         |                                                  |\n| public boolean rename(str newName)                                                   |                                                  |\n| public boolean undoCheckout()                                                        |                                                  |\n| private void new()                                                                   | Initializes a new instance of the VSSItem class. |\n\n### Method add\n\n    public boolean add([boolean keepCheckedout], [str comment])\n\n#### Parameters\n\nkeepCheckedout  \n\n<!-- -->\n\ncomment  \n\n#### Return Value\n\n### Method checkin\n\n    public boolean checkin([str comment])\n\n#### Parameters\n\ncomment  \n\n#### Return Value\n\n### Method checkout\n\n    public boolean checkout([boolean allowMultipleCheckout], [boolean replaceLocal])\n\n#### Parameters\n\nallowMultipleCheckout  \n\n<!-- -->\n\nreplaceLocal  \n\n#### Return Value\n\n### Method delete\n\n    public boolean delete()\n\n#### Return Value\n\n### Method destroy\n\n    public boolean destroy()\n\n#### Return Value\n\n### Method get\n\n    public Map get([boolean force], [int version], [str label], [str localFile])\n\n#### Parameters\n\nforce  \n\n<!-- -->\n\nversion  \n\n<!-- -->\n\nlabel  \n\n<!-- -->\n\nlocalFile  \n\n#### Return Value\n\n### Method getActionText\n\n    public str getActionText()\n\n#### Return Value\n\n### Method getCheckedOutTo\n\n    public container getCheckedOutTo()\n\n#### Return Value\n\n### Method getCheckoutVersion\n\n    public int getCheckoutVersion()\n\n#### Return Value\n\n### Method getHistory\n\n    public container getHistory()\n\n#### Return Value\n\n### Method getIUnknown\n\n    public ComInterface getIUnknown()\n\n#### Return Value\n\n### Method getVersionNo\n\n    public int getVersionNo()\n\n#### Return Value\n\n### Method getVSSPath\n\n    public str getVSSPath()\n\n#### Return Value\n\n### Method isCheckedOut\n\n    public boolean isCheckedOut()\n\n#### Return Value\n\n### Method isRenamed\n\n    public boolean isRenamed()\n\n#### Return Value\n\n### Method name\n\n    public str name(str newName)\n\n#### Parameters\n\nnewName  \n\n#### Return Value\n\n### Method rename\n\n    public boolean rename(str newName)\n\n#### Parameters\n\nnewName  \n\n#### Return Value\n\n### Method undoCheckout\n\n    public boolean undoCheckout()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the VSSItem class.\n\n    private void new()\n\n"}