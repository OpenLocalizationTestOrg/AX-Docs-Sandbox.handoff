{"nodes":[{"pos":[32,41],"content":"I Classes","needQuote":true,"needEscape":true,"nodes":[{"content":"I Classes","pos":[0,9]}]},{"pos":[55,103],"content":"System API classes that start with the letter I.","needQuote":true,"needEscape":true,"nodes":[{"content":"System API classes that start with the letter I.","pos":[0,48]}]},{"pos":[616,625],"content":"I Classes","linkify":"I Classes","nodes":[{"content":"I Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter I.","pos":[627,675]},{"pos":[677,699],"content":"Class IDispatcherProxy","linkify":"Class IDispatcherProxy","nodes":[{"content":"Class IDispatcherProxy","pos":[0,22]}]},{"pos":[756,763],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[769,777],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[783,790],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[794,800]},{"content":"Description","pos":[843,854]},{"content":"public AnyType invoke(str methodName, VarArg )","pos":[924,970]},{"content":"public void refresh()","pos":[989,1010]},{"pos":[1057,1070],"content":"Method invoke","linkify":"Method invoke","nodes":[{"content":"Method invoke","pos":[0,13]}]},{"pos":[1129,1139],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodName","pos":[1141,1151]},{"pos":[1174,1186],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1192,1206],"content":"Method refresh","linkify":"Method refresh","nodes":[{"content":"Method refresh","pos":[0,14]}]},{"pos":[1238,1264],"content":"Class IISApplicationObject","linkify":"Class IISApplicationObject","nodes":[{"content":"Class IISApplicationObject","pos":[0,26]}]},{"content":"The IISApplicationObject class wraps the Application object that is offered by Internet Information Services (IIS).","pos":[1312,1427]},{"pos":[1433,1440],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one connection between the methods of the IISApplicationObject class and the methods of the Application object that is offered by IIS.","pos":[1442,1594]},{"content":"Therefore, for more information about the methods of the IISApplicationObject class, see the Microsoft documentation for IIS.","pos":[1595,1720]},{"content":"Use of the IISApplicationObject class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[1721,1864]},{"pos":[1870,1878],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[1884,1891],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[1895,1901]},{"content":"Description","pos":[1952,1963]},{"content":"public IISVariantDictionary contents()","pos":[2141,2179]},{"content":"public ComInterface interface()","pos":[2264,2295]},{"content":"public IISVariantDictionary staticObjects()","pos":[2387,2430]},{"content":"public COMVariant value(str value, <ph id=\"ph1\">\\[</ph>COMVariant var<ph id=\"ph2\">\\]</ph>)","pos":[2510,2564],"source":"public COMVariant value(str value, \\[COMVariant var\\])"},{"content":"public str valueTxt(str value, <ph id=\"ph1\">\\[</ph>str var<ph id=\"ph2\">\\]</ph>)","pos":[2633,2676],"source":"public str valueTxt(str value, \\[str var\\])"},{"content":"public void new()","pos":[2756,2773]},{"content":"Initializes a new instance of the IISApplicationObject class.","pos":[2813,2874]},{"content":"public void finalize()","pos":[2879,2901]},{"content":"public void lock()","pos":[3002,3020]},{"content":"public void unLock()","pos":[3125,3145]},{"pos":[3251,3266],"content":"Method contents","linkify":"Method contents","nodes":[{"content":"Method contents","pos":[0,15]}]},{"pos":[3317,3329],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3335,3351],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[3395,3407],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3413,3433],"content":"Method staticObjects","linkify":"Method staticObjects","nodes":[{"content":"Method staticObjects","pos":[0,20]}]},{"pos":[3489,3501],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3507,3519],"content":"Method value","linkify":"Method value","nodes":[{"content":"Method value","pos":[0,12]}]},{"pos":[3584,3594],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[3596,3601]},{"content":"var","pos":[3615,3618]},{"pos":[3627,3639],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3645,3660],"content":"Method valueTxt","linkify":"Method valueTxt","nodes":[{"content":"Method valueTxt","pos":[0,15]}]},{"pos":[3714,3724],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[3726,3731]},{"content":"var","pos":[3745,3748]},{"pos":[3757,3769],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3775,3785],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the IISApplicationObject class.","pos":[3787,3848]},{"pos":[3877,3892],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[3926,3937],"content":"Method lock","linkify":"Method lock","nodes":[{"content":"Method lock","pos":[0,11]}]},{"pos":[3967,3980],"content":"Method unLock","linkify":"Method unLock","nodes":[{"content":"Method unLock","pos":[0,13]}]},{"pos":[4011,4033],"content":"Class IISContextObject","linkify":"Class IISContextObject","nodes":[{"content":"Class IISContextObject","pos":[0,22]}]},{"pos":[4081,4088],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4094,4102],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[4108,4115],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[4119,4125]},{"content":"Description","pos":[4176,4187]},{"content":"public ComInterface interface()","pos":[4357,4388]},{"content":"public boolean isTraceEnabled()","pos":[4476,4507]},{"content":"public IISVariantDictionary items()","pos":[4595,4630]},{"content":"public int traceMode(int mode)","pos":[4714,4744]},{"content":"public COMVariant value(str value, <ph id=\"ph1\">\\[</ph>COMVariant var<ph id=\"ph2\">\\]</ph>)","pos":[4833,4887],"source":"public COMVariant value(str value, \\[COMVariant var\\])"},{"content":"public str valueTxt(str value, <ph id=\"ph1\">\\[</ph>str var<ph id=\"ph2\">\\]</ph>)","pos":[4952,4995],"source":"public str valueTxt(str value, \\[str var\\])"},{"content":"public void traceWrite(str category, str message)","pos":[5071,5120]},{"content":"public void finalize()","pos":[5190,5212]},{"content":"public void traceWarn(str category, str message)","pos":[5309,5357]},{"content":"public void new()","pos":[5428,5445]},{"content":"Initializes a new instance of the IISContextObject class.","pos":[5485,5542]},{"pos":[5550,5566],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[5610,5622],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5628,5649],"content":"Method isTraceEnabled","linkify":"Method isTraceEnabled","nodes":[{"content":"Method isTraceEnabled","pos":[0,21]}]},{"pos":[5693,5705],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5711,5723],"content":"Method items","linkify":"Method items","nodes":[{"content":"Method items","pos":[0,12]}]},{"pos":[5771,5783],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5789,5805],"content":"Method traceMode","linkify":"Method traceMode","nodes":[{"content":"Method traceMode","pos":[0,16]}]},{"pos":[5848,5858],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[5860,5864]},{"pos":[5873,5885],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5891,5903],"content":"Method value","linkify":"Method value","nodes":[{"content":"Method value","pos":[0,12]}]},{"pos":[5968,5978],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[5980,5985]},{"content":"var","pos":[5999,6002]},{"pos":[6011,6023],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6029,6044],"content":"Method valueTxt","linkify":"Method valueTxt","nodes":[{"content":"Method valueTxt","pos":[0,15]}]},{"pos":[6098,6108],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[6110,6115]},{"content":"var","pos":[6129,6132]},{"pos":[6141,6153],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6159,6176],"content":"Method traceWrite","linkify":"Method traceWrite","nodes":[{"content":"Method traceWrite","pos":[0,17]}]},{"pos":[6238,6248],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"category","pos":[6250,6258]},{"content":"message","pos":[6272,6279]},{"pos":[6287,6302],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[6336,6352],"content":"Method traceWarn","linkify":"Method traceWarn","nodes":[{"content":"Method traceWarn","pos":[0,16]}]},{"pos":[6413,6423],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"category","pos":[6425,6433]},{"content":"message","pos":[6447,6454]},{"pos":[6462,6472],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the IISContextObject class.","pos":[6474,6531]},{"pos":[6559,6578],"content":"Class IISPostedFile","linkify":"Class IISPostedFile","nodes":[{"content":"Class IISPostedFile","pos":[0,19]}]},{"pos":[6623,6630],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6636,6644],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[6650,6657],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[6661,6667]},{"content":"Description","pos":[6702,6713]},{"content":"public int contentLength()","pos":[6861,6887]},{"content":"public str contentType()","pos":[6961,6985]},{"content":"public str fileName()","pos":[7061,7082]},{"content":"public container read(int countToRead)","pos":[7161,7199]},{"content":"public void finalize()","pos":[7261,7283]},{"content":"public void new()","pos":[7361,7378]},{"content":"Initializes a new instance of the IISPostedFile class.","pos":[7402,7456]},{"pos":[7464,7484],"content":"Method contentLength","linkify":"Method contentLength","nodes":[{"content":"Method contentLength","pos":[0,20]}]},{"pos":[7523,7535],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7541,7559],"content":"Method contentType","linkify":"Method contentType","nodes":[{"content":"Method contentType","pos":[0,18]}]},{"pos":[7596,7608],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7614,7629],"content":"Method fileName","linkify":"Method fileName","nodes":[{"content":"Method fileName","pos":[0,15]}]},{"pos":[7663,7675],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7681,7692],"content":"Method read","linkify":"Method read","nodes":[{"content":"Method read","pos":[0,11]}]},{"pos":[7743,7753],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"countToRead","pos":[7755,7766]},{"pos":[7775,7787],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7793,7808],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[7842,7852],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the IISPostedFile class.","pos":[7854,7908]},{"pos":[7936,7955],"content":"Class IISReadCookie","linkify":"Class IISReadCookie","nodes":[{"content":"Class IISReadCookie","pos":[0,19]}]},{"content":"The IISReadCookie class wraps the ReadCookie object that is offered by Internet Information Services (IIS).","pos":[7996,8103]},{"pos":[8109,8116],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one connection between the methods of the IISReadCookie class and the methods of the ReadCookie object that is offered by IIS.","pos":[8118,8262]},{"content":"Therefore, for more information about the methods of the IISReadCookie class, see the Microsoft documentation for IIS.","pos":[8263,8381]},{"content":"Use of the IISReadCookie class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[8382,8518]},{"pos":[8524,8532],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[8538,8545],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[8549,8555]},{"content":"Description","pos":[8584,8595]},{"content":"public int count()","pos":[8723,8741]},{"content":"public COMEnum2Variant getEnum()","pos":[8810,8842]},{"content":"public boolean hasKeys()","pos":[8897,8921]},{"content":"public ComInterface interface()","pos":[8984,9015]},{"content":"public str item(<ph id=\"ph1\">\\[</ph>str item<ph id=\"ph2\">\\]</ph>)","pos":[9071,9100],"source":"public str item(\\[str item\\])"},{"content":"public str key(str key)","pos":[9158,9181]},{"content":"public void finalize()","pos":[9245,9267]},{"content":"public void new(COM readCookie)","pos":[9332,9363]},{"content":"Initializes a new instance of the Object class.","pos":[9367,9414]},{"pos":[9422,9434],"content":"Method count","linkify":"Method count","nodes":[{"content":"Method count","pos":[0,12]}]},{"pos":[9465,9477],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9483,9497],"content":"Method getEnum","linkify":"Method getEnum","nodes":[{"content":"Method getEnum","pos":[0,14]}]},{"pos":[9542,9554],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9560,9574],"content":"Method hasKeys","linkify":"Method hasKeys","nodes":[{"content":"Method hasKeys","pos":[0,14]}]},{"pos":[9611,9623],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9629,9645],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[9689,9701],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9707,9718],"content":"Method item","linkify":"Method item","nodes":[{"content":"Method item","pos":[0,11]}]},{"pos":[9758,9768],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[9770,9774]},{"pos":[9783,9795],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9801,9811],"content":"Method key","linkify":"Method key","nodes":[{"content":"Method key","pos":[0,10]}]},{"pos":[9847,9857],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"key","pos":[9859,9862]},{"pos":[9871,9883],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9889,9904],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[9938,9948],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[9950,9997]},{"pos":[10041,10051],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"readCookie","pos":[10053,10063]},{"pos":[10070,10086],"content":"Class IISRequest","linkify":"Class IISRequest","nodes":[{"content":"Class IISRequest","pos":[0,16]}]},{"content":"The IISRequest class wraps the Request object that is offered by Internet Information Services (IIS).","pos":[10124,10225]},{"pos":[10231,10238],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one connection between the methods of the IISRequest class and the methods of the Request object that is offered by IIS.","pos":[10240,10378]},{"content":"Therefore, for more information about the methods of the IISRequest class, see the Microsoft documentation for IIS.","pos":[10379,10494]},{"content":"Use of the IISRequest class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[10495,10628]},{"pos":[10634,10642],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[10648,10655],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[10659,10665]},{"content":"Description","pos":[10714,10725]},{"content":"public COMVariant binaryRead(COMVariant countToRead)","pos":[10881,10933]},{"content":"public IISRequestDictionary clientCertificate()","pos":[10992,11039]},{"content":"public IISRequestDictionary cookies()","pos":[11103,11140]},{"content":"public IISPostedFile file(COMVariant index)","pos":[11214,11257]},{"content":"public int fileCount()","pos":[11325,11347]},{"content":"public IISRequestDictionary form()","pos":[11436,11470]},{"content":"public ComInterface interface()","pos":[11547,11578]},{"content":"public str item(str item)","pos":[11658,11683]},{"content":"public IISRequestDictionary queryString()","pos":[11769,11810]},{"content":"public IISRequestDictionary serverVariables()","pos":[11880,11925]},{"content":"public int totalBytes()","pos":[11991,12014]},{"content":"public void finalize()","pos":[12102,12124]},{"content":"public void new()","pos":[12213,12230]},{"content":"Initializes a new instance of the IISRequest class.","pos":[12268,12319]},{"pos":[12327,12344],"content":"Method binaryRead","linkify":"Method binaryRead","nodes":[{"content":"Method binaryRead","pos":[0,17]}]},{"pos":[12409,12419],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"countToRead","pos":[12421,12432]},{"pos":[12441,12453],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12459,12483],"content":"Method clientCertificate","linkify":"Method clientCertificate","nodes":[{"content":"Method clientCertificate","pos":[0,24]}]},{"pos":[12543,12555],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12561,12575],"content":"Method cookies","linkify":"Method cookies","nodes":[{"content":"Method cookies","pos":[0,14]}]},{"pos":[12625,12637],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12643,12654],"content":"Method file","linkify":"Method file","nodes":[{"content":"Method file","pos":[0,11]}]},{"pos":[12710,12720],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[12722,12727]},{"pos":[12736,12748],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12754,12770],"content":"Method fileCount","linkify":"Method fileCount","nodes":[{"content":"Method fileCount","pos":[0,16]}]},{"pos":[12805,12817],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12823,12834],"content":"Method form","linkify":"Method form","nodes":[{"content":"Method form","pos":[0,11]}]},{"pos":[12881,12893],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12899,12915],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[12959,12971],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12977,12988],"content":"Method item","linkify":"Method item","nodes":[{"content":"Method item","pos":[0,11]}]},{"pos":[13026,13036],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[13038,13042]},{"pos":[13051,13063],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13069,13087],"content":"Method queryString","linkify":"Method queryString","nodes":[{"content":"Method queryString","pos":[0,18]}]},{"pos":[13141,13153],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13159,13181],"content":"Method serverVariables","linkify":"Method serverVariables","nodes":[{"content":"Method serverVariables","pos":[0,22]}]},{"pos":[13239,13251],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13257,13274],"content":"Method totalBytes","linkify":"Method totalBytes","nodes":[{"content":"Method totalBytes","pos":[0,17]}]},{"pos":[13310,13322],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13328,13343],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[13377,13387],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the IISRequest class.","pos":[13389,13440]},{"pos":[13468,13494],"content":"Class IISRequestDictionary","linkify":"Class IISRequestDictionary","nodes":[{"content":"Class IISRequestDictionary","pos":[0,26]}]},{"content":"The IISRequestDictionary class wraps the RequestDictionary object that is offered by Internet Information Services (IIS).","pos":[13542,13663]},{"pos":[13669,13676],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one relationship between the methods of the IISRequestDictionary class and the methods of the RequestDictionary object that is offered by IIS.","pos":[13678,13838]},{"content":"Therefore, for more information about the methods of the IISRequestDictionary class, see the Microsoft documentation for IIS.","pos":[13839,13964]},{"content":"Use of the IISRequestDictionary class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[13965,14108]},{"pos":[14114,14122],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[14128,14135],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[14139,14145]},{"content":"Description","pos":[14193,14204]},{"content":"public int count()","pos":[14351,14369]},{"content":"public COMEnum2Variant getEnum()","pos":[14457,14489]},{"content":"public ComInterface interface()","pos":[14563,14594]},{"content":"public COMVariant item(COMVariant item)","pos":[14669,14708]},{"content":"public IISReadCookie itemReadCookie(<ph id=\"ph1\">\\[</ph>str item<ph id=\"ph2\">\\]</ph>)","pos":[14775,14824],"source":"public IISReadCookie itemReadCookie(\\[str item\\])"},{"content":"public IISStringList itemStringList(<ph id=\"ph1\">\\[</ph>str item<ph id=\"ph2\">\\]</ph>)","pos":[14881,14930],"source":"public IISStringList itemStringList(\\[str item\\])"},{"content":"public str itemTxt(str item)","pos":[14987,15015]},{"content":"public IISWriteCookie itemWriteCookie(<ph id=\"ph1\">\\[</ph>str item<ph id=\"ph2\">\\]</ph>)","pos":[15093,15144],"source":"public IISWriteCookie itemWriteCookie(\\[str item\\])"},{"content":"public str key(str key)","pos":[15199,15222]},{"content":"public void finalize()","pos":[15305,15327]},{"content":"public void new(COM requestDictionary)","pos":[15411,15449]},{"content":"Initializes a new instance of the Object class.","pos":[15465,15512]},{"pos":[15520,15532],"content":"Method count","linkify":"Method count","nodes":[{"content":"Method count","pos":[0,12]}]},{"pos":[15563,15575],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15581,15595],"content":"Method getEnum","linkify":"Method getEnum","nodes":[{"content":"Method getEnum","pos":[0,14]}]},{"pos":[15640,15652],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15658,15674],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[15718,15730],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15736,15747],"content":"Method item","linkify":"Method item","nodes":[{"content":"Method item","pos":[0,11]}]},{"pos":[15799,15809],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[15811,15815]},{"pos":[15824,15836],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15842,15863],"content":"Method itemReadCookie","linkify":"Method itemReadCookie","nodes":[{"content":"Method itemReadCookie","pos":[0,21]}]},{"pos":[15923,15933],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[15935,15939]},{"pos":[15948,15960],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15966,15987],"content":"Method itemStringList","linkify":"Method itemStringList","nodes":[{"content":"Method itemStringList","pos":[0,21]}]},{"pos":[16047,16057],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[16059,16063]},{"pos":[16072,16084],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16090,16104],"content":"Method itemTxt","linkify":"Method itemTxt","nodes":[{"content":"Method itemTxt","pos":[0,14]}]},{"pos":[16145,16155],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[16157,16161]},{"pos":[16170,16182],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16188,16210],"content":"Method itemWriteCookie","linkify":"Method itemWriteCookie","nodes":[{"content":"Method itemWriteCookie","pos":[0,22]}]},{"pos":[16272,16282],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[16284,16288]},{"pos":[16297,16309],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16315,16325],"content":"Method key","linkify":"Method key","nodes":[{"content":"Method key","pos":[0,10]}]},{"pos":[16361,16371],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"key","pos":[16373,16376]},{"pos":[16385,16397],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16403,16418],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[16452,16462],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[16464,16511]},{"pos":[16562,16572],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"requestDictionary","pos":[16574,16591]},{"pos":[16598,16615],"content":"Class IISResponse","linkify":"Class IISResponse","nodes":[{"content":"Class IISResponse","pos":[0,17]}]},{"content":"The IISResponse class wraps the Response object that is offered by Internet Information Services (IIS).","pos":[16654,16757]},{"pos":[16763,16770],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one relationship between the methods of the IISResponse class and the methods of the Response object that is offered by IIS.","pos":[16772,16914]},{"content":"Therefore, for more information about the methods of the IISResponse class, see the Microsoft documentation for IIS.","pos":[16915,17031]},{"content":"Use of the IISResponse class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[17032,17166]},{"pos":[17172,17180],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[17186,17193],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[17197,17203]},{"content":"Description","pos":[17257,17268]},{"content":"public boolean buffer(<ph id=\"ph1\">\\[</ph>boolean isBuffering<ph id=\"ph2\">\\]</ph>)","pos":[17431,17477],"source":"public boolean buffer(\\[boolean isBuffering\\])"},{"content":"public str cacheControl(<ph id=\"ph1\">\\[</ph>str cacheControl<ph id=\"ph2\">\\]</ph>)","pos":[17548,17593],"source":"public str cacheControl(\\[str cacheControl\\])"},{"content":"public boolean cacheWrite(<ph id=\"ph1\">\\[</ph>boolean cache<ph id=\"ph2\">\\]</ph>)","pos":[17665,17709],"source":"public boolean cacheWrite(\\[boolean cache\\])"},{"content":"public str charSet(<ph id=\"ph1\">\\[</ph>str charSet<ph id=\"ph2\">\\]</ph>)","pos":[17782,17817],"source":"public str charSet(\\[str charSet\\])"},{"content":"public str contentType(<ph id=\"ph1\">\\[</ph>str contentType<ph id=\"ph2\">\\]</ph>)","pos":[17899,17942],"source":"public str contentType(\\[str contentType\\])"},{"content":"public IISRequestDictionary cookies()","pos":[18016,18053]},{"content":"public int expires(<ph id=\"ph1\">\\[</ph>int expiresMinutes<ph id=\"ph2\">\\]</ph>)","pos":[18133,18175],"source":"public int expires(\\[int expiresMinutes\\])"},{"content":"public COMVariant expiresAbsolute(<ph id=\"ph1\">\\[</ph>COMVariant expires<ph id=\"ph2\">\\]</ph>)","pos":[18250,18307],"source":"public COMVariant expiresAbsolute(\\[COMVariant expires\\])"},{"content":"public ComInterface interface()","pos":[18367,18398]},{"content":"public boolean isClientConnected()","pos":[18484,18518]},{"content":"public str status(<ph id=\"ph1\">\\[</ph>str status<ph id=\"ph2\">\\]</ph>)","pos":[18601,18634],"source":"public str status(\\[str status\\])"},{"content":"Gets or sets the status of an object.","pos":[18661,18698]},{"content":"public void addHeader(str headerName, str headerValue)","pos":[18718,18772]},{"content":"public void writeTxt(str text)","pos":[18835,18865]},{"content":"public void write(COMVariant text)","pos":[18952,18986]},{"content":"public void clear()","pos":[19069,19088]},{"content":"public void finalize()","pos":[19186,19208]},{"content":"public void binaryWrite(COMVariant input)","pos":[19303,19344]},{"content":"public void appendToLog(str logEntry)","pos":[19420,19457]},{"content":"public void new()","pos":[19537,19554]},{"content":"Initializes a new instance of the IISResponse class.","pos":[19597,19649]},{"content":"public void redirect(str url)","pos":[19654,19683]},{"content":"public void flush()","pos":[19771,19790]},{"content":"public void pics(str headerValue)","pos":[19888,19921]},{"content":"public void end()","pos":[20005,20022]},{"pos":[20125,20138],"content":"Method buffer","linkify":"Method buffer","nodes":[{"content":"Method buffer","pos":[0,13]}]},{"pos":[20195,20205],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"isBuffering","pos":[20207,20218]},{"pos":[20227,20239],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20245,20264],"content":"Method cacheControl","linkify":"Method cacheControl","nodes":[{"content":"Method cacheControl","pos":[0,19]}]},{"pos":[20320,20330],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cacheControl","pos":[20332,20344]},{"pos":[20353,20365],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20371,20388],"content":"Method cacheWrite","linkify":"Method cacheWrite","nodes":[{"content":"Method cacheWrite","pos":[0,17]}]},{"pos":[20443,20453],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cache","pos":[20455,20460]},{"pos":[20469,20481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20487,20501],"content":"Method charSet","linkify":"Method charSet","nodes":[{"content":"Method charSet","pos":[0,14]}]},{"pos":[20547,20557],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"charSet","pos":[20559,20566]},{"pos":[20575,20587],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20593,20611],"content":"Method contentType","linkify":"Method contentType","nodes":[{"content":"Method contentType","pos":[0,18]}]},{"pos":[20665,20675],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"contentType","pos":[20677,20688]},{"pos":[20697,20709],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20715,20729],"content":"Method cookies","linkify":"Method cookies","nodes":[{"content":"Method cookies","pos":[0,14]}]},{"pos":[20779,20791],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20797,20811],"content":"Method expires","linkify":"Method expires","nodes":[{"content":"Method expires","pos":[0,14]}]},{"pos":[20864,20874],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"expiresMinutes","pos":[20876,20890]},{"pos":[20899,20911],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20917,20939],"content":"Method expiresAbsolute","linkify":"Method expiresAbsolute","nodes":[{"content":"Method expiresAbsolute","pos":[0,22]}]},{"pos":[21007,21017],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"expires","pos":[21019,21026]},{"pos":[21035,21047],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21053,21069],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[21113,21125],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21131,21155],"content":"Method isClientConnected","linkify":"Method isClientConnected","nodes":[{"content":"Method isClientConnected","pos":[0,24]}]},{"pos":[21202,21214],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21220,21233],"content":"Method status","linkify":"Method status","nodes":[{"content":"Method status","pos":[0,13]}]},{"content":"Gets or sets the status of an object.","pos":[21235,21272]},{"pos":[21316,21326],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"status","pos":[21328,21334]},{"pos":[21343,21355],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the status of the object.","pos":[21357,21403]},{"pos":[21409,21425],"content":"Method addHeader","linkify":"Method addHeader","nodes":[{"content":"Method addHeader","pos":[0,16]}]},{"pos":[21492,21502],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"headerName","pos":[21504,21514]},{"content":"headerValue","pos":[21528,21539]},{"pos":[21547,21562],"content":"Method writeTxt","linkify":"Method writeTxt","nodes":[{"content":"Method writeTxt","pos":[0,15]}]},{"pos":[21605,21615],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"text","pos":[21617,21621]},{"pos":[21629,21641],"content":"Method write","linkify":"Method write","nodes":[{"content":"Method write","pos":[0,12]}]},{"pos":[21688,21698],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"text","pos":[21700,21704]},{"pos":[21712,21724],"content":"Method clear","linkify":"Method clear","nodes":[{"content":"Method clear","pos":[0,12]}]},{"pos":[21755,21770],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[21804,21822],"content":"Method binaryWrite","linkify":"Method binaryWrite","nodes":[{"content":"Method binaryWrite","pos":[0,18]}]},{"pos":[21876,21886],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"input","pos":[21888,21893]},{"pos":[21901,21919],"content":"Method appendToLog","linkify":"Method appendToLog","nodes":[{"content":"Method appendToLog","pos":[0,18]}]},{"pos":[21969,21979],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"logEntry","pos":[21981,21989]},{"pos":[21997,22007],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the IISResponse class.","pos":[22009,22061]},{"pos":[22090,22105],"content":"Method redirect","linkify":"Method redirect","nodes":[{"content":"Method redirect","pos":[0,15]}]},{"pos":[22147,22157],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"url","pos":[22159,22162]},{"pos":[22170,22182],"content":"Method flush","linkify":"Method flush","nodes":[{"content":"Method flush","pos":[0,12]}]},{"pos":[22213,22224],"content":"Method pics","linkify":"Method pics","nodes":[{"content":"Method pics","pos":[0,11]}]},{"pos":[22270,22280],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"headerValue","pos":[22282,22293]},{"pos":[22301,22311],"content":"Method end","linkify":"Method end","nodes":[{"content":"Method end","pos":[0,10]}]},{"pos":[22339,22354],"content":"Class IISServer","linkify":"Class IISServer","nodes":[{"content":"Class IISServer","pos":[0,15]}]},{"content":"The IISServer class wraps the Server object that is offered by Internet Information Services (IIS).","pos":[22391,22490]},{"pos":[22496,22503],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one connection between the methods of the IISServer class and the methods of the Server object that is offered by IIS.","pos":[22505,22641]},{"content":"Therefore, for more information about the methods of the IISServer class, see the Microsoft documentation for IIS.","pos":[22642,22756]},{"content":"Use of the IISServer class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[22757,22889]},{"pos":[22895,22903],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[22909,22916],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[22920,22926]},{"content":"Description","pos":[22971,22982]},{"content":"public COM createObject(str progID)","pos":[23132,23167]},{"content":"public str htmlEncode(str txt)","pos":[23238,23268]},{"content":"public ComInterface interface()","pos":[23344,23375]},{"content":"public str mapPath(str logicalPath)","pos":[23450,23485]},{"content":"public int scriptTimeout(<ph id=\"ph1\">\\[</ph>int timeoutSeconds<ph id=\"ph2\">\\]</ph>)","pos":[23556,23604],"source":"public int scriptTimeout(\\[int timeoutSeconds\\])"},{"content":"public str urlEncode(str txt)","pos":[23662,23691]},{"content":"public str urlPathEncode(str txt)","pos":[23768,23801]},{"content":"public void execute(str logicalPath)","pos":[23874,23910]},{"content":"public void transfer(str logicalPath)","pos":[23980,24017]},{"content":"public void new()","pos":[24086,24103]},{"content":"Initializes a new instance of the IISServer class.","pos":[24137,24187]},{"content":"public void finalize()","pos":[24192,24214]},{"pos":[24301,24320],"content":"Method createObject","linkify":"Method createObject","nodes":[{"content":"Method createObject","pos":[0,19]}]},{"pos":[24368,24378],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"progID","pos":[24380,24386]},{"pos":[24395,24407],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24413,24430],"content":"Method htmlEncode","linkify":"Method htmlEncode","nodes":[{"content":"Method htmlEncode","pos":[0,17]}]},{"pos":[24473,24483],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"txt","pos":[24485,24488]},{"pos":[24497,24509],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24515,24531],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[24575,24587],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24593,24607],"content":"Method mapPath","linkify":"Method mapPath","nodes":[{"content":"Method mapPath","pos":[0,14]}]},{"pos":[24655,24665],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"logicalPath","pos":[24667,24678]},{"pos":[24687,24699],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24705,24725],"content":"Method scriptTimeout","linkify":"Method scriptTimeout","nodes":[{"content":"Method scriptTimeout","pos":[0,20]}]},{"pos":[24784,24794],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"timeoutSeconds","pos":[24796,24810]},{"pos":[24819,24831],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24837,24853],"content":"Method urlEncode","linkify":"Method urlEncode","nodes":[{"content":"Method urlEncode","pos":[0,16]}]},{"pos":[24895,24905],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"txt","pos":[24907,24910]},{"pos":[24919,24931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24937,24957],"content":"Method urlPathEncode","linkify":"Method urlPathEncode","nodes":[{"content":"Method urlPathEncode","pos":[0,20]}]},{"pos":[25003,25013],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"txt","pos":[25015,25018]},{"pos":[25027,25039],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25045,25059],"content":"Method execute","linkify":"Method execute","nodes":[{"content":"Method execute","pos":[0,14]}]},{"pos":[25108,25118],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"logicalPath","pos":[25120,25131]},{"pos":[25139,25154],"content":"Method transfer","linkify":"Method transfer","nodes":[{"content":"Method transfer","pos":[0,15]}]},{"pos":[25204,25214],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"logicalPath","pos":[25216,25227]},{"pos":[25235,25245],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the IISServer class.","pos":[25247,25297]},{"pos":[25326,25341],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[25374,25396],"content":"Class IISSessionObject","linkify":"Class IISSessionObject","nodes":[{"content":"Class IISSessionObject","pos":[0,22]}]},{"content":"The IISSessionObject class wraps the Session object that is offered by Internet Information Services (IIS).","pos":[25440,25547]},{"pos":[25553,25560],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one connection between the methods of the IISSessionObject class and the methods of the Session object that is offered by IIS.","pos":[25562,25706]},{"content":"Therefore, for more information about the methods of the IISSessionObject class, see the Microsoft documentation for IIS.","pos":[25707,25828]},{"content":"Use of the IISSessionObject class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[25829,25968]},{"pos":[25974,25982],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[25988,25995],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[25999,26005]},{"content":"Description","pos":[26056,26067]},{"content":"public int codePage(<ph id=\"ph1\">\\[</ph>int codePage<ph id=\"ph2\">\\]</ph>)","pos":[26237,26274],"source":"public int codePage(\\[int codePage\\])"},{"content":"public IISVariantDictionary contents()","pos":[26356,26394]},{"content":"public str getSessionID()","pos":[26475,26500]},{"content":"public ComInterface interface()","pos":[26594,26625]},{"content":"public int lcid(<ph id=\"ph1\">\\[</ph>int lcid<ph id=\"ph2\">\\]</ph>)","pos":[26713,26742],"source":"public int lcid(\\[int lcid\\])"},{"content":"public IISVariantDictionary staticObjects()","pos":[26832,26875]},{"content":"public int timeout(<ph id=\"ph1\">\\[</ph>int timeout<ph id=\"ph2\">\\]</ph>)","pos":[26951,26986],"source":"public int timeout(\\[int timeout\\])"},{"content":"public COMVariant value(str value, <ph id=\"ph1\">\\[</ph>COMVariant var<ph id=\"ph2\">\\]</ph>)","pos":[27070,27124],"source":"public COMVariant value(str value, \\[COMVariant var\\])"},{"content":"public str valueTxt(str value, <ph id=\"ph1\">\\[</ph>str var<ph id=\"ph2\">\\]</ph>)","pos":[27189,27232],"source":"public str valueTxt(str value, \\[str var\\])"},{"content":"public void new()","pos":[27308,27325]},{"content":"Initializes a new instance of the IISSessionObject class.","pos":[27365,27422]},{"content":"public void abandon()","pos":[27427,27448]},{"content":"public void finalize()","pos":[27546,27568]},{"pos":[27668,27683],"content":"Method codePage","linkify":"Method codePage","nodes":[{"content":"Method codePage","pos":[0,15]}]},{"pos":[27731,27741],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"codePage","pos":[27743,27751]},{"pos":[27760,27772],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[27778,27793],"content":"Method contents","linkify":"Method contents","nodes":[{"content":"Method contents","pos":[0,15]}]},{"pos":[27844,27856],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[27862,27881],"content":"Method getSessionID","linkify":"Method getSessionID","nodes":[{"content":"Method getSessionID","pos":[0,19]}]},{"pos":[27919,27931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[27937,27953],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[27997,28009],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28015,28026],"content":"Method lcid","linkify":"Method lcid","nodes":[{"content":"Method lcid","pos":[0,11]}]},{"pos":[28066,28076],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"lcid","pos":[28078,28082]},{"pos":[28091,28103],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28109,28129],"content":"Method staticObjects","linkify":"Method staticObjects","nodes":[{"content":"Method staticObjects","pos":[0,20]}]},{"pos":[28185,28197],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28203,28217],"content":"Method timeout","linkify":"Method timeout","nodes":[{"content":"Method timeout","pos":[0,14]}]},{"pos":[28263,28273],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"timeout","pos":[28275,28282]},{"pos":[28291,28303],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28309,28321],"content":"Method value","linkify":"Method value","nodes":[{"content":"Method value","pos":[0,12]}]},{"pos":[28386,28396],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[28398,28403]},{"content":"var","pos":[28417,28420]},{"pos":[28429,28441],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28447,28462],"content":"Method valueTxt","linkify":"Method valueTxt","nodes":[{"content":"Method valueTxt","pos":[0,15]}]},{"pos":[28516,28526],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[28528,28533]},{"content":"var","pos":[28547,28550]},{"pos":[28559,28571],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28577,28587],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the IISSessionObject class.","pos":[28589,28646]},{"pos":[28675,28689],"content":"Method abandon","linkify":"Method abandon","nodes":[{"content":"Method abandon","pos":[0,14]}]},{"pos":[28722,28737],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[28770,28789],"content":"Class IISStringList","linkify":"Class IISStringList","nodes":[{"content":"Class IISStringList","pos":[0,19]}]},{"content":"The IISStringList class wraps the StringList object that is offered by Internet Information Services (IIS).","pos":[28830,28937]},{"pos":[28943,28950],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one connection between the methods of the IISStringList class and the methods of the StringList object that is offered by IIS.","pos":[28952,29096]},{"content":"Therefore, for more information about the methods of the IISStringList class, see the Microsoft documentation for IIS.","pos":[29097,29215]},{"content":"Use of the IISStringList class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[29216,29352]},{"pos":[29358,29366],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[29372,29379],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[29383,29389]},{"content":"Description","pos":[29418,29429]},{"content":"public int count()","pos":[29557,29575]},{"content":"public COMEnum2Variant getEnum()","pos":[29644,29676]},{"content":"public ComInterface interface()","pos":[29731,29762]},{"content":"public str item(<ph id=\"ph1\">\\[</ph>str item<ph id=\"ph2\">\\]</ph>)","pos":[29818,29847],"source":"public str item(\\[str item\\])"},{"content":"public void finalize()","pos":[29905,29927]},{"content":"public void new(COM stringList)","pos":[29992,30023]},{"content":"Initializes a new instance of the Object class.","pos":[30027,30074]},{"pos":[30082,30094],"content":"Method count","linkify":"Method count","nodes":[{"content":"Method count","pos":[0,12]}]},{"pos":[30125,30137],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30143,30157],"content":"Method getEnum","linkify":"Method getEnum","nodes":[{"content":"Method getEnum","pos":[0,14]}]},{"pos":[30202,30214],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30220,30236],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[30280,30292],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30298,30309],"content":"Method item","linkify":"Method item","nodes":[{"content":"Method item","pos":[0,11]}]},{"pos":[30349,30359],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[30361,30365]},{"pos":[30374,30386],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30392,30407],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[30441,30451],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[30453,30500]},{"pos":[30544,30554],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"stringList","pos":[30556,30566]},{"pos":[30573,30599],"content":"Class IISVariantDictionary","linkify":"Class IISVariantDictionary","nodes":[{"content":"Class IISVariantDictionary","pos":[0,26]}]},{"content":"The IISVariantDictionary class wraps the VariantDictionary object that is offered by Internet Information Services (IIS).","pos":[30647,30768]},{"pos":[30774,30781],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one connection between the methods of the IISVariantDictionary class and the methods of the VariantDictionary object that is offered by IIS.","pos":[30783,30941]},{"content":"Therefore, for more information about the methods of the IISVariantDictionary class, see the Microsoft documentation for IIS.","pos":[30942,31067]},{"content":"Use of the IISVariantDictionary class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[31068,31211]},{"pos":[31217,31225],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[31231,31238],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[31242,31248]},{"content":"Description","pos":[31304,31315]},{"content":"public int count()","pos":[31470,31488]},{"content":"public COMEnum2Variant getEnum()","pos":[31584,31616]},{"content":"public ComInterface interface()","pos":[31698,31729]},{"content":"public COMVariant item(COMVariant item, <ph id=\"ph1\">\\[</ph>COMVariant var<ph id=\"ph2\">\\]</ph>)","pos":[31812,31871],"source":"public COMVariant item(COMVariant item, \\[COMVariant var\\])"},{"content":"public COM itemObj(str item, <ph id=\"ph1\">\\[</ph>COM var<ph id=\"ph2\">\\]</ph>)","pos":[31926,31967],"source":"public COM itemObj(str item, \\[COM var\\])"},{"content":"public str itemTxt(str item, <ph id=\"ph1\">\\[</ph>str var<ph id=\"ph2\">\\]</ph>)","pos":[32040,32081],"source":"public str itemTxt(str item, \\[str var\\])"},{"content":"public str key(str key)","pos":[32154,32177]},{"content":"public void finalize()","pos":[32268,32290]},{"content":"public void remove(str key)","pos":[32382,32409]},{"content":"public void removeAll()","pos":[32496,32519]},{"content":"public void new(COM variantDictionary)","pos":[32610,32648]},{"content":"Initializes a new instance of the Object class.","pos":[32672,32719]},{"pos":[32727,32739],"content":"Method count","linkify":"Method count","nodes":[{"content":"Method count","pos":[0,12]}]},{"pos":[32770,32782],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32788,32802],"content":"Method getEnum","linkify":"Method getEnum","nodes":[{"content":"Method getEnum","pos":[0,14]}]},{"pos":[32847,32859],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32865,32881],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[32925,32937],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32943,32954],"content":"Method item","linkify":"Method item","nodes":[{"content":"Method item","pos":[0,11]}]},{"pos":[33024,33034],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[33036,33040]},{"content":"var","pos":[33054,33057]},{"pos":[33066,33078],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33084,33098],"content":"Method itemObj","linkify":"Method itemObj","nodes":[{"content":"Method itemObj","pos":[0,14]}]},{"pos":[33150,33160],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[33162,33166]},{"content":"var","pos":[33180,33183]},{"pos":[33192,33204],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33210,33224],"content":"Method itemTxt","linkify":"Method itemTxt","nodes":[{"content":"Method itemTxt","pos":[0,14]}]},{"pos":[33276,33286],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[33288,33292]},{"content":"var","pos":[33306,33309]},{"pos":[33318,33330],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33336,33346],"content":"Method key","linkify":"Method key","nodes":[{"content":"Method key","pos":[0,10]}]},{"pos":[33382,33392],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"key","pos":[33394,33397]},{"pos":[33406,33418],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33424,33439],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[33473,33486],"content":"Method remove","linkify":"Method remove","nodes":[{"content":"Method remove","pos":[0,13]}]},{"pos":[33526,33536],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"key","pos":[33538,33541]},{"pos":[33549,33565],"content":"Method removeAll","linkify":"Method removeAll","nodes":[{"content":"Method removeAll","pos":[0,16]}]},{"pos":[33600,33610],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[33612,33659]},{"pos":[33710,33720],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"variantDictionary","pos":[33722,33739]},{"pos":[33746,33764],"content":"Class IISViewState","linkify":"Class IISViewState","nodes":[{"content":"Class IISViewState","pos":[0,18]}]},{"pos":[33808,33815],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33821,33829],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[33835,33842],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[33846,33852]},{"content":"Description","pos":[33895,33906]},{"content":"public boolean viewStateContains(str key)","pos":[34060,34101]},{"content":"public str viewStateItem(str key, <ph id=\"ph1\">\\[</ph>str val<ph id=\"ph2\">\\]</ph>)","pos":[34167,34213],"source":"public str viewStateItem(str key, \\[str val\\])"},{"content":"public void finalize()","pos":[34274,34296]},{"content":"public void viewStateDelete(str key)","pos":[34381,34417]},{"content":"public void new()","pos":[34488,34505]},{"content":"Initializes a new instance of the IISViewState class.","pos":[34537,34590]},{"pos":[34598,34622],"content":"Method viewStateContains","linkify":"Method viewStateContains","nodes":[{"content":"Method viewStateContains","pos":[0,24]}]},{"pos":[34676,34686],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"key","pos":[34688,34691]},{"pos":[34700,34712],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[34718,34738],"content":"Method viewStateItem","linkify":"Method viewStateItem","nodes":[{"content":"Method viewStateItem","pos":[0,20]}]},{"pos":[34795,34805],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"key","pos":[34807,34810]},{"content":"val","pos":[34824,34827]},{"pos":[34836,34848],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[34854,34869],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[34903,34925],"content":"Method viewStateDelete","linkify":"Method viewStateDelete","nodes":[{"content":"Method viewStateDelete","pos":[0,22]}]},{"pos":[34974,34984],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"key","pos":[34986,34989]},{"pos":[34997,35007],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the IISViewState class.","pos":[35009,35062]},{"pos":[35090,35110],"content":"Class IISWriteCookie","linkify":"Class IISWriteCookie","nodes":[{"content":"Class IISWriteCookie","pos":[0,20]}]},{"content":"The IISWriteCookie class wraps the WriteCookie object that is offered by Internet Information Services (IIS).","pos":[35152,35261]},{"pos":[35267,35274],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There is a one-to-one connection between the methods of the IISWriteCookie class and the methods of the WriteCookie object that is offered by IIS.","pos":[35276,35422]},{"content":"Therefore, for more information about the methods of the IISWriteCookie class, see the Microsoft documentation for IIS.","pos":[35423,35542]},{"content":"Use of the IISWriteCookie class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.","pos":[35543,35680]},{"pos":[35686,35694],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[35700,35707],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[35711,35717]},{"content":"Description","pos":[35753,35764]},{"content":"public COMEnum2Variant getEnum()","pos":[35899,35931]},{"content":"public boolean hasKeys()","pos":[35993,36017]},{"content":"public ComInterface interface()","pos":[36087,36118]},{"content":"public void new(COM writeCookie)","pos":[36181,36213]},{"content":"Initializes a new instance of the Object class.","pos":[36223,36270]},{"content":"public void secure(boolean secure)","pos":[36275,36309]},{"content":"public void path(str path)","pos":[36369,36395]},{"content":"public void finalize()","pos":[36463,36485]},{"content":"public void domain(str domain)","pos":[36557,36587]},{"content":"public void expires(COMVariant expires)","pos":[36651,36690]},{"content":"public void item(str item, str value)","pos":[36745,36782]},{"pos":[36842,36856],"content":"Method getEnum","linkify":"Method getEnum","nodes":[{"content":"Method getEnum","pos":[0,14]}]},{"pos":[36901,36913],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36919,36933],"content":"Method hasKeys","linkify":"Method hasKeys","nodes":[{"content":"Method hasKeys","pos":[0,14]}]},{"pos":[36970,36982],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36988,37004],"content":"Method interface","linkify":"Method interface","nodes":[{"content":"Method interface","pos":[0,16]}]},{"pos":[37048,37060],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37066,37076],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[37078,37125]},{"pos":[37170,37180],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"writeCookie","pos":[37182,37193]},{"pos":[37201,37214],"content":"Method secure","linkify":"Method secure","nodes":[{"content":"Method secure","pos":[0,13]}]},{"pos":[37261,37271],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"secure","pos":[37273,37279]},{"pos":[37287,37298],"content":"Method path","linkify":"Method path","nodes":[{"content":"Method path","pos":[0,11]}]},{"pos":[37337,37347],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"path","pos":[37349,37353]},{"pos":[37361,37376],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[37410,37423],"content":"Method domain","linkify":"Method domain","nodes":[{"content":"Method domain","pos":[0,13]}]},{"pos":[37466,37476],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"domain","pos":[37478,37484]},{"pos":[37492,37506],"content":"Method expires","linkify":"Method expires","nodes":[{"content":"Method expires","pos":[0,14]}]},{"pos":[37558,37568],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"expires","pos":[37570,37577]},{"pos":[37585,37596],"content":"Method item","linkify":"Method item","nodes":[{"content":"Method item","pos":[0,11]}]},{"pos":[37646,37656],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"item","pos":[37658,37662]},{"content":"value","pos":[37676,37681]},{"pos":[37688,37699],"content":"Class Image","linkify":"Class Image","nodes":[{"content":"Class Image","pos":[0,11]}]},{"content":"Provides methods for loading, saving, and manipulating images.","pos":[37733,37795]},{"content":"If you want to manipulate several images at the same time, use the Imagelist Class.","pos":[37796,37879]},{"pos":[37885,37892],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can construct Image objects from the following file types:","pos":[37894,37956]},{"content":"Raster (bitmap) formats - .bmp, .gif, .jpg, .png, .tiff, and .exif","pos":[37962,38028]},{"content":"Vector formats - .emf and .wmf","pos":[38033,38063]},{"content":"If you want to work with several images at the same time, use the Imagelist class.","pos":[38065,38147]},{"content":"You can construct the Image objects from the following file types:","pos":[38148,38214]},{"content":"Raster, which is a bitmap, formats - .bmp, .gif, .jpg, .png, .tiff, and .exif","pos":[38220,38297]},{"content":"Vector formats - .emf and .wmf","pos":[38302,38332]},{"content":"In Microsoft Dynamics 365 for Operations, the Image class is bound to the client.","pos":[38334,38415]},{"content":"The class can no longer be run from the server because of the security risks that are associated with file handling.","pos":[38416,38532]},{"pos":[38538,38546],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example prints the height of Picture.jpg in pixels.","pos":[38548,38613]},{"pos":[38736,38743],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[38747,38753]},{"content":"Description","pos":[38857,38868]},{"content":"public int captureScreen(int left, int top, int right, int bottom)","pos":[39259,39325]},{"content":"Captures an image from the screen by using the coordinates that are supplied in the parameter list.","pos":[39369,39468]},{"content":"public int captureWindow(int hWnd)","pos":[39515,39549]},{"content":"Captures a window as an image, using the handle that is supplied as a parameter.","pos":[39625,39705]},{"content":"public int clipboardCopy()","pos":[39771,39797]},{"content":"Copies an image to the clipboard.","pos":[39881,39914]},{"content":"public int clipboardPaste()","pos":[40027,40054]},{"content":"Overwrites an existing image with the content of the system clipboard.","pos":[40137,40207]},{"content":"public int copyImage(Image image)","pos":[40283,40316]},{"content":"Copies the current image object.","pos":[40393,40425]},{"content":"public int createImage(int Width, int Height, int BitsPerPixel)","pos":[40539,40602]},{"content":"Creates an empty bitmap image with the width, height, and color depth as specified by the parameters.","pos":[40649,40750]},{"content":"public int crop(int x, int y, int w, int h)","pos":[40795,40838]},{"content":"Crops the image.","pos":[40905,40921]},{"content":"public int displayImage(Int64 HDC, <ph id=\"ph1\">\\[</ph>int Mode<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int Xpos<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>int Ypos<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>int Width<ph id=\"ph8\">\\]</ph>, <ph id=\"ph9\">\\[</ph>int Height<ph id=\"ph10\">\\]</ph>)","pos":[41051,41158],"source":"public int displayImage(Int64 HDC, \\[int Mode\\], \\[int Xpos\\], \\[int Ypos\\], \\[int Width\\], \\[int Height\\])"},{"content":"Draws an image with the device context specified by the HDC parameter.","pos":[41161,41231]},{"content":"public Int64 exportBitmap()","pos":[41307,41334]},{"content":"Gets a handle for the image.","pos":[41417,41445]},{"content":"public int flip(FlipType FlipType)","pos":[41563,41597]},{"content":"Rotates the image 180 degrees in a vertical or horizontal direction.","pos":[41673,41741]},{"content":"public container getImageDimensionUnits()","pos":[41819,41860]},{"content":"public int getPixel(int x, int y)","pos":[42075,42108]},{"content":"Retrieves the ARGB color value of the pixel at the point that is specified by the parameters.","pos":[42185,42278]},{"content":"public int height()","pos":[42331,42350]},{"content":"Retrieves the height of the image in pixels.","pos":[42441,42485]},{"content":"public container imageInfo()","pos":[42587,42615]},{"content":"Retrieves the width, height, and color depth of the image.","pos":[42697,42755]},{"content":"public int imageSpotlight(int x, int y, int radius, int smoothing, int intensity)","pos":[42843,42924]},{"content":"Produces a spotlight effect within the circle that is defined by radius with center coordinates x and y.","pos":[42953,43057]},{"content":"public int importBitmap(Int64 hBitmap)","pos":[43099,43137]},{"content":"Clones a bitmap from the image that is specified by the hBitmap parameter.","pos":[43209,43283]},{"content":"public int importFileIcon(str fileName)","pos":[43355,43394]},{"content":"Creates an icon from the file specified by the fileName parameter by copying the icon that is used for the file.","pos":[43465,43577]},{"content":"public int importIcon(str fileName, int iconIdx)","pos":[43611,43659]},{"content":"Retrieves a handle to an icon from an executable file in Microsoft Dynamics 365 for Operations.","pos":[43721,43816]},{"content":"The icon is specified by the fileName and iconIdx parameters.","pos":[43817,43878]},{"content":"public int loadImage(str fileName)","pos":[43883,43917]},{"content":"Loads an image from the file specified by the fileName parameter.","pos":[43993,44058]},{"content":"public int loadResource(int id)","pos":[44139,44170]},{"content":"Loads a resource from Ax32.exe.","pos":[44249,44280]},{"content":"public int promoteColor(int noOfColorBits)","pos":[44395,44437]},{"content":"Increases the color depth of the image.","pos":[44505,44544]},{"content":"public int reduceColorOctree(int maxColors)","pos":[44651,44694]},{"content":"Reduces the color depth of an image.","pos":[44761,44797]},{"content":"public int removeImage()","pos":[44907,44931]},{"content":"Removes the data about an image; the object still exists, but has no data.","pos":[45017,45091]},{"content":"public int resize(int newWidth, int newHeight, InterpolationMode InterpolationMode)","pos":[45163,45246]},{"content":"Resizes the image to the size that is specified by the newWidth and newHeight parameters.","pos":[45273,45362]},{"content":"public int rotate(RotateType RotateType)","pos":[45419,45459]},{"content":"Rotates the image.","pos":[45529,45547]},{"content":"public int saveImage(str fileName, <ph id=\"ph1\">\\[</ph>ImageSaveType Type<ph id=\"ph2\">\\]</ph>)","pos":[45675,45733],"source":"public int saveImage(str fileName, \\[ImageSaveType Type\\])"},{"content":"Saves the image to the specified file name.","pos":[45785,45828]},{"content":"public ImageSaveType saveType(<ph id=\"ph1\">\\[</ph>ImageSaveType Type<ph id=\"ph2\">\\]</ph>)","pos":[45931,45984],"source":"public ImageSaveType saveType(\\[ImageSaveType Type\\])"},{"content":"Gets or sets the image decoder.","pos":[46041,46072]},{"content":"public int setPixel(int x, int y, int pixel)","pos":[46187,46231]},{"content":"Sets the color for the pixel that is specified by the x and y parameters.","pos":[46297,46370]},{"content":"public int transparent(<ph id=\"ph1\">\\[</ph>boolean Set<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int RValue<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>int GValue<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>int BValue<ph id=\"ph8\">\\]</ph>)","pos":[46443,46530],"source":"public int transparent(\\[boolean Set\\], \\[int RValue\\], \\[int GValue\\], \\[int BValue\\])"},{"content":"Sets the transparent color for the image.","pos":[46553,46594]},{"content":"public int width()","pos":[46699,46717]},{"content":"Retrieves the width of the image in pixels.","pos":[46809,46852]},{"content":"::public static int canLoad(str filename)","pos":[46955,46996]},{"content":"Determines whether an image file exists and can be opened.","pos":[47065,47123]},{"content":"::public static container loadExt(int idx)","pos":[47211,47253]},{"content":"Retrieves a list of the extensions of the file formats that are supported by the Image class.","pos":[47321,47414]},{"content":"::public static int resourceType(int resourceIdx)","pos":[47467,47516]},{"content":"Determines whether a particular resource is a bitmap or an icon.","pos":[47577,47641]},{"content":"::public static int rgb(int R, int G, int B)","pos":[47723,47767]},{"content":"Converts an RGB value to an ARGB value.","pos":[47833,47872]},{"content":"::public static int validResource(int id)","pos":[47979,48020]},{"content":"Determines whether the resource specified by the id parameter is valid.","pos":[48089,48160]},{"content":"public void new(<ph id=\"ph1\">\\[</ph>AnyType image<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int width<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>int height<ph id=\"ph6\">\\]</ph>)","pos":[48235,48300],"source":"public void new(\\[AnyType image\\], \\[int width\\], \\[int height\\])"},{"content":"Creates a new image.","pos":[48345,48365]},{"content":"public void displayOrign(int Xpos, int Ypos)","pos":[48491,48535]},{"content":"Enables you to specify an offset (X, Y) from the original origin (0, 0).","pos":[48601,48673]},{"content":"public void finalize()","pos":[48747,48769]},{"pos":[49006,49026],"content":"Method captureScreen","linkify":"Method captureScreen","nodes":[{"content":"Method captureScreen","pos":[0,20]}]},{"content":"Captures an image from the screen by using the coordinates that are supplied in the parameter list.","pos":[49028,49127]},{"pos":[49206,49216],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"left","pos":[49218,49222]},{"content":"Y coordinate of the lower-right corner of the part of the screen that you want to capture.","pos":[49225,49315]},{"content":"top","pos":[49327,49330]},{"content":"Y coordinate of the lower-right corner of the part of the screen that you want to capture.","pos":[49333,49423]},{"content":"right","pos":[49435,49440]},{"content":"Y coordinate of the lower-right corner of the part of the screen that you want to capture.","pos":[49443,49533]},{"content":"bottom","pos":[49545,49551]},{"content":"Y coordinate of the lower-right corner of the part of the screen that you want to capture.","pos":[49554,49644]},{"pos":[49651,49663],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success.","pos":[49665,49685]},{"content":"Other values indicate failure.","pos":[49686,49716]},{"pos":[49723,49731],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example captures a part of the screen and saves it to a file that is named test.bmp.","pos":[49733,49831]},{"pos":[49942,49962],"content":"Method captureWindow","linkify":"Method captureWindow","nodes":[{"content":"Method captureWindow","pos":[0,20]}]},{"content":"Captures a window as an image, using the handle that is supplied as a parameter.","pos":[49964,50044]},{"pos":[50091,50101],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"hWnd","pos":[50103,50107]},{"content":"The handle to the window that you want to capture which must be supplied as an integer.","pos":[50110,50197]},{"pos":[50204,50216],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[50218,50258]},{"pos":[50264,50284],"content":"Method clipboardCopy","linkify":"Method clipboardCopy","nodes":[{"content":"Method clipboardCopy","pos":[0,20]}]},{"content":"Copies an image to the clipboard.","pos":[50286,50319]},{"pos":[50358,50370],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[50372,50412]},{"pos":[50419,50427],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example copies the content from a file that is named Test.bmp.","pos":[50429,50505]},{"pos":[50655,50676],"content":"Method clipboardPaste","linkify":"Method clipboardPaste","nodes":[{"content":"Method clipboardPaste","pos":[0,21]}]},{"content":"Overwrites an existing image with the content of the system clipboard.","pos":[50678,50748]},{"pos":[50788,50800],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[50802,50842]},{"pos":[50849,50856],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For the method to be used successfully, the clipboard must have content.","pos":[50858,50930]},{"pos":[50937,50945],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a new image file by using contents previously copied to the clipboard.","pos":[50947,51047]},{"pos":[51200,51216],"content":"Method copyImage","linkify":"Method copyImage","nodes":[{"content":"Method copyImage","pos":[0,16]}]},{"content":"Copies the current image object.","pos":[51218,51250]},{"pos":[51296,51306],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"image","pos":[51308,51313]},{"content":"The image to be copied.","pos":[51316,51339]},{"pos":[51346,51358],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[51360,51400]},{"pos":[51407,51415],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates two new images and then overwrites the contents of one image with the contents of the other.","pos":[51417,51539]},{"pos":[51732,51750],"content":"Method createImage","linkify":"Method createImage","nodes":[{"content":"Method createImage","pos":[0,18]}]},{"content":"Creates an empty bitmap image with the width, height, and color depth as specified by the parameters.","pos":[51752,51853]},{"pos":[51929,51939],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Width","pos":[51941,51946]},{"content":"The color depth of the image.","pos":[51949,51978]},{"content":"Possible values are 1, 4, 8, 16, 24, and 32.","pos":[51979,52023]},{"content":"Height","pos":[52035,52041]},{"content":"The color depth of the image.","pos":[52044,52073]},{"content":"Possible values are 1, 4, 8, 16, 24, and 32.","pos":[52074,52118]},{"content":"BitsPerPixel","pos":[52130,52142]},{"content":"The color depth of the image.","pos":[52145,52174]},{"content":"Possible values are 1, 4, 8, 16, 24, and 32.","pos":[52175,52219]},{"pos":[52226,52238],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[52240,52280]},{"pos":[52287,52295],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image with a height and width of 16 pixels, and a color depth of 32 bits per pixel.","pos":[52297,52413]},{"pos":[52975,52986],"content":"Method crop","linkify":"Method crop","nodes":[{"content":"Method crop","pos":[0,11]}]},{"content":"Crops the image.","pos":[52988,53004]},{"pos":[53060,53070],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[53072,53073]},{"content":"The height of the region that you want to crop from the point (x, y).","pos":[53076,53145]},{"content":"y","pos":[53157,53158]},{"content":"The height of the region that you want to crop from the point (x, y).","pos":[53161,53230]},{"content":"w","pos":[53242,53243]},{"content":"The height of the region that you want to crop from the point (x, y).","pos":[53246,53315]},{"content":"h","pos":[53327,53328]},{"content":"The height of the region that you want to crop from the point (x, y).","pos":[53331,53400]},{"pos":[53407,53419],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[53421,53461]},{"pos":[53467,53486],"content":"Method displayImage","linkify":"Method displayImage","nodes":[{"content":"Method displayImage","pos":[0,19]}]},{"content":"Draws an image with the device context specified by the HDC parameter.","pos":[53488,53558]},{"pos":[53668,53678],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"HDC","pos":[53680,53683]},{"content":"Optional parameter.","pos":[53686,53705]},{"content":"Mode","pos":[53717,53721]},{"content":"Optional parameter.","pos":[53724,53743]},{"content":"Xpos","pos":[53755,53759]},{"content":"Optional parameter.","pos":[53762,53781]},{"content":"Ypos","pos":[53793,53797]},{"content":"Optional parameter.","pos":[53800,53819]},{"content":"Width","pos":[53831,53836]},{"content":"Optional parameter.","pos":[53839,53858]},{"content":"Height","pos":[53870,53876]},{"content":"Optional parameter.","pos":[53879,53898]},{"pos":[53905,53917],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[53919,53959]},{"pos":[53965,53984],"content":"Method exportBitmap","linkify":"Method exportBitmap","nodes":[{"content":"Method exportBitmap","pos":[0,19]}]},{"content":"Gets a handle for the image.","pos":[53986,54014]},{"pos":[54054,54066],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the handle for the image.","pos":[54068,54120]},{"pos":[54127,54135],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example retrieves the handle for an image and then uses the handle to clone the image.","pos":[54137,54237]},{"pos":[54629,54640],"content":"Method flip","linkify":"Method flip","nodes":[{"content":"Method flip","pos":[0,11]}]},{"content":"Rotates the image 180 degrees in a vertical or horizontal direction.","pos":[54642,54710]},{"pos":[54757,54767],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"FlipType","pos":[54769,54777]},{"content":"A FlipType enumeration that determines the way in which the image is flipped.","pos":[54780,54857]},{"pos":[54864,54876],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[54878,54918]},{"pos":[54925,54932],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The possible values for the FlipType parameter are those available in the FlipType system enum:","pos":[54934,55029]},{"content":"0","pos":[55209,55210]},{"content":"RotateNoneFlipNone","pos":[55215,55233]},{"content":"No flip","pos":[55236,55243]},{"content":"1","pos":[55297,55298]},{"content":"RotateNoneFlipX","pos":[55303,55318]},{"content":"Rotates the image 180 degrees in a horizontal direction.","pos":[55324,55380]},{"content":"2","pos":[55385,55386]},{"content":"RotateNoneFlipY","pos":[55391,55406]},{"content":"Rotates the image 180 degrees in a vertical direction.","pos":[55412,55466]},{"pos":[55476,55505],"content":"Method getImageDimensionUnits","linkify":"Method getImageDimensionUnits","nodes":[{"content":"Method getImageDimensionUnits","pos":[0,29]}]},{"pos":[55559,55571],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[55577,55592],"content":"Method getPixel","linkify":"Method getPixel","nodes":[{"content":"Method getPixel","pos":[0,15]}]},{"content":"Retrieves the ARGB color value of the pixel at the point that is specified by the parameters.","pos":[55594,55687]},{"pos":[55733,55743],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[55745,55746]},{"content":"The vertical coordinate of the pixel.","pos":[55749,55786]},{"content":"y","pos":[55798,55799]},{"content":"The vertical coordinate of the pixel.","pos":[55802,55839]},{"pos":[55846,55858],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that is the ARGB value of the pixel (a 32-bit representation of an RGB color).","pos":[55860,55949]},{"pos":[55955,55968],"content":"Method height","linkify":"Method height","nodes":[{"content":"Method height","pos":[0,13]}]},{"content":"Retrieves the height of the image in pixels.","pos":[55970,56014]},{"pos":[56046,56058],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the height of the image in pixels.","pos":[56060,56121]},{"pos":[56128,56136],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example prints out the height of the image that is contained in test.bmp.","pos":[56138,56225]},{"pos":[56333,56349],"content":"Method imageInfo","linkify":"Method imageInfo","nodes":[{"content":"Method imageInfo","pos":[0,16]}]},{"content":"Retrieves the width, height, and color depth of the image.","pos":[56351,56409]},{"pos":[56450,56462],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that holds values that specify the width of the image, the height of the image, and the number of bits per pixel.","pos":[56464,56589]},{"pos":[56596,56604],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example prints out the width and height of the image test.bmp, and specifies the color depth in bits per pixel.","pos":[56606,56731]},{"pos":[56881,56902],"content":"Method imageSpotlight","linkify":"Method imageSpotlight","nodes":[{"content":"Method imageSpotlight","pos":[0,21]}]},{"content":"Produces a spotlight effect within the circle that is defined by radius with center coordinates x and y.","pos":[56904,57008]},{"pos":[57102,57112],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[57114,57115]},{"content":"The intensity of the surrounding pixels.","pos":[57118,57158]},{"content":"The possible values are between 0 and 100 (%).","pos":[57159,57205]},{"content":"y","pos":[57217,57218]},{"content":"The intensity of the surrounding pixels.","pos":[57221,57261]},{"content":"The possible values are between 0 and 100 (%).","pos":[57262,57308]},{"content":"radius","pos":[57320,57326]},{"content":"The intensity of the surrounding pixels.","pos":[57329,57369]},{"content":"The possible values are between 0 and 100 (%).","pos":[57370,57416]},{"content":"smoothing","pos":[57428,57437]},{"content":"The intensity of the surrounding pixels.","pos":[57440,57480]},{"content":"The possible values are between 0 and 100 (%).","pos":[57481,57527]},{"content":"intensity","pos":[57539,57548]},{"content":"The intensity of the surrounding pixels.","pos":[57551,57591]},{"content":"The possible values are between 0 and 100 (%).","pos":[57592,57638]},{"pos":[57645,57657],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[57659,57699]},{"pos":[57706,57713],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The pixels within the circle are unchanged, but the other pixels in the image are darkened by reducing their intensity.","pos":[57715,57834]},{"pos":[57840,57859],"content":"Method importBitmap","linkify":"Method importBitmap","nodes":[{"content":"Method importBitmap","pos":[0,19]}]},{"content":"Clones a bitmap from the image that is specified by the hBitmap parameter.","pos":[57861,57935]},{"pos":[57986,57996],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"hBitmap","pos":[57998,58005]},{"content":"The handle to the image that you clone.","pos":[58008,58047]},{"pos":[58054,58066],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[58068,58108]},{"pos":[58115,58123],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example retrieves the handle for an image and then uses the importBitmap method to clone the image.","pos":[58125,58238]},{"pos":[58630,58651],"content":"Method importFileIcon","linkify":"Method importFileIcon","nodes":[{"content":"Method importFileIcon","pos":[0,21]}]},{"content":"Creates an icon from the file specified by the fileName parameter by copying the icon that is used for the file.","pos":[58653,58765]},{"pos":[58817,58827],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[58829,58837]},{"content":"The name and the path of the file from which you create an icon.","pos":[58840,58904]},{"pos":[58911,58923],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[58925,58965]},{"pos":[58972,58980],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example copies the icon that is used for the file test.bmp.","pos":[58982,59055]},{"pos":[59228,59245],"content":"Method importIcon","linkify":"Method importIcon","nodes":[{"content":"Method importIcon","pos":[0,17]}]},{"content":"Retrieves a handle to an icon from an executable file in Microsoft Dynamics 365 for Operations.","pos":[59247,59342]},{"content":"The icon is specified by the fileName and iconIdx parameters.","pos":[59343,59404]},{"pos":[59465,59475],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[59477,59485]},{"content":"The resource within the specified file.","pos":[59488,59527]},{"content":"iconIdx","pos":[59539,59546]},{"content":"The resource within the specified file.","pos":[59549,59588]},{"pos":[59595,59607],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[59609,59649]},{"pos":[59655,59671],"content":"Method loadImage","linkify":"Method loadImage","nodes":[{"content":"Method loadImage","pos":[0,16]}]},{"content":"Loads an image from the file specified by the fileName parameter.","pos":[59673,59738]},{"pos":[59785,59795],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[59797,59805]},{"content":"The resource from which you want to load the image.","pos":[59808,59859]},{"pos":[59866,59878],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[59880,59920]},{"pos":[59926,59945],"content":"Method loadResource","linkify":"Method loadResource","nodes":[{"content":"Method loadResource","pos":[0,19]}]},{"content":"Loads a resource from Ax32.exe.","pos":[59947,59978]},{"pos":[60022,60032],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"id","pos":[60034,60036]},{"content":"The ID of the resource that you want to load.","pos":[60039,60084]},{"content":"Values of resources can be found in the Resources macro.","pos":[60085,60141]},{"pos":[60148,60160],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[60162,60202]},{"pos":[60209,60217],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example adds two resources to an image list.","pos":[60219,60277]},{"pos":[60628,60647],"content":"Method promoteColor","linkify":"Method promoteColor","nodes":[{"content":"Method promoteColor","pos":[0,19]}]},{"content":"Increases the color depth of the image.","pos":[60649,60688]},{"pos":[60743,60753],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"noOfColorBits","pos":[60755,60768]},{"content":"The number of bits that you want to promote the image to.","pos":[60771,60828]},{"pos":[60835,60847],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[60849,60889]},{"pos":[60896,60903],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The method promotes:","pos":[60905,60925]},{"content":"8-bit images to 24 or 32 bits.","pos":[60931,60961]},{"content":"4-bit images to 8, 24, or 32 bits.","pos":[60966,61000]},{"content":"1-bit images to 4, 8, 24, or 32 bits.","pos":[61005,61042]},{"pos":[61049,61057],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example increases the color depth of an image to 8 bits per pixel, unless it is already 8 or more.","pos":[61059,61171]},{"pos":[61326,61350],"content":"Method reduceColorOctree","linkify":"Method reduceColorOctree","nodes":[{"content":"Method reduceColorOctree","pos":[0,24]}]},{"content":"Reduces the color depth of an image.","pos":[61352,61388]},{"pos":[61444,61454],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"maxColors","pos":[61456,61465]},{"content":"The maximum number of colors.","pos":[61468,61497]},{"pos":[61504,61516],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[61518,61558]},{"pos":[61565,61572],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The method reduces a 24-bit image to 8 bits, or an 8-bit image to 4 bits, unless other instructions are specified in the maxColors parameter.","pos":[61574,61715]},{"content":"If the maxColors parameter is less than or equal to 16, a 4-bit image is produced.","pos":[61716,61798]},{"content":"If maxColors is more than 16, an 8-bit image is produced.","pos":[61799,61856]},{"pos":[61862,61880],"content":"Method removeImage","linkify":"Method removeImage","nodes":[{"content":"Method removeImage","pos":[0,18]}]},{"content":"Removes the data about an image; the object still exists, but has no data.","pos":[61882,61956]},{"pos":[61993,62005],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[62007,62047]},{"pos":[62053,62066],"content":"Method resize","linkify":"Method resize","nodes":[{"content":"Method resize","pos":[0,13]}]},{"content":"Resizes the image to the size that is specified by the newWidth and newHeight parameters.","pos":[62068,62157]},{"pos":[62253,62263],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newWidth","pos":[62265,62273]},{"content":"The resizing method.","pos":[62276,62296]},{"content":"newHeight","pos":[62308,62317]},{"content":"The resizing method.","pos":[62320,62340]},{"content":"InterpolationMode","pos":[62352,62369]},{"content":"The resizing method.","pos":[62372,62392]},{"pos":[62399,62411],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[62413,62453]},{"pos":[62460,62467],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The possible values for the InterpolationMode parameter are those available in the InterpolationMode system enum:","pos":[62469,62582]},{"content":"0","pos":[63018,63019]},{"content":"InterpolationModeDefault","pos":[63024,63048]},{"content":"Specifies the default interpolation mode.","pos":[63063,63104]},{"content":"1","pos":[63234,63235]},{"content":"InterpolationModeLowQuality","pos":[63240,63267]},{"content":"Specifies a low-quality mode.","pos":[63279,63308]},{"content":"2","pos":[63450,63451]},{"content":"InterpolationModeHighQuality","pos":[63456,63484]},{"content":"Specifies a high-quality mode.","pos":[63495,63525]},{"content":"3","pos":[63666,63667]},{"content":"InterpolationModeBilinear","pos":[63672,63697]},{"content":"Specifies bilinear interpolation.","pos":[63711,63744]},{"content":"No pre-filtering is done.","pos":[63745,63770]},{"content":"This method is not suitable for shrinking an image below 50% of its original size.","pos":[63771,63853]},{"content":"4","pos":[63882,63883]},{"content":"InterpolationModeBicubic","pos":[63888,63912]},{"content":"Specifies bicubic interpolation.","pos":[63927,63959]},{"content":"No pre-filtering is done.","pos":[63960,63985]},{"content":"This method is not suitable for shrinking an image below 25% of its original size.","pos":[63986,64068]},{"content":"5","pos":[64098,64099]},{"content":"InterpolationModeNearestNeighbor","pos":[64104,64136]},{"content":"Specifies nearest-neighbor interpolation.","pos":[64143,64184]},{"content":"6","pos":[64314,64315]},{"content":"InterpolationModeHighQualityBilinear","pos":[64320,64356]},{"content":"Specifies high-quality, bilinear interpolation.","pos":[64359,64406]},{"content":"Pre-filtering is performed to ensure high-quality shrinking.","pos":[64407,64467]},{"content":"7","pos":[64530,64531]},{"content":"InterpolationModeHighQualityBicubic","pos":[64536,64571]},{"content":"Specifies high-quality, bicubic interpolation.","pos":[64575,64621]},{"content":"Pre-filtering is performed to ensure high-quality shrinking.","pos":[64622,64682]},{"content":"This mode produces the highest quality transformed images.","pos":[64683,64741]},{"pos":[64749,64762],"content":"Method rotate","linkify":"Method rotate","nodes":[{"content":"Method rotate","pos":[0,13]}]},{"content":"Rotates the image.","pos":[64764,64782]},{"pos":[64835,64845],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"RotateType","pos":[64847,64857]},{"content":"The amount to rotate the image by.","pos":[64860,64894]},{"pos":[64901,64913],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[64915,64955]},{"pos":[64962,64969],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The possible values for the RotateType parameter are those available in the RotateType system enum:","pos":[64971,65070]},{"content":"0","pos":[65186,65187]},{"content":"RotateNoneFlipNone","pos":[65192,65210]},{"content":"No rotation.","pos":[65213,65225]},{"content":"1","pos":[65242,65243]},{"content":"Rotate90FlipNone","pos":[65248,65264]},{"content":"Rotation by 90 degrees.","pos":[65269,65292]},{"content":"2","pos":[65298,65299]},{"content":"Rotate180FlipNone","pos":[65304,65321]},{"content":"Rotation by 180 degrees.","pos":[65325,65349]},{"content":"3","pos":[65354,65355]},{"content":"Rotate270FlipNone","pos":[65360,65377]},{"content":"Rotation by 270 degrees.","pos":[65381,65405]},{"pos":[65413,65429],"content":"Method saveImage","linkify":"Method saveImage","nodes":[{"content":"Method saveImage","pos":[0,16]}]},{"content":"Saves the image to the specified file name.","pos":[65431,65474]},{"pos":[65543,65553],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[65555,65563]},{"content":"An ImageSaveType that enables you to specify that the file should be saved as a different format from that specified by the file extension; optional.","pos":[65566,65715]},{"content":"Type","pos":[65727,65731]},{"content":"An ImageSaveType that enables you to specify that the file should be saved as a different format from that specified by the file extension; optional.","pos":[65734,65883]},{"pos":[65890,65902],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 if the method was successful.","pos":[65904,65935]},{"pos":[65942,65949],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The possible values for the Type parameter are those available in the ImageSaveType system enum.","pos":[65951,66047]},{"content":"For example, you could save test.bmp as a .jpg file.","pos":[66048,66100]},{"content":"0","pos":[66154,66155]},{"content":"Use<ph id=\"ph1\">\\_</ph>Extension","pos":[66160,66174],"source":"Use\\_Extension"},{"content":"1","pos":[66179,66180]},{"content":"BMP","pos":[66185,66188]},{"content":"2","pos":[66204,66205]},{"content":"GIF","pos":[66210,66213]},{"content":"3","pos":[66229,66230]},{"content":"JPG","pos":[66235,66238]},{"content":"4","pos":[66254,66255]},{"content":"PNG","pos":[66260,66263]},{"content":"5","pos":[66279,66280]},{"content":"TIFF","pos":[66285,66289]},{"content":"6","pos":[66304,66305]},{"content":"BMP<ph id=\"ph1\">\\_</ph>UNCOMP","pos":[66310,66321],"source":"BMP\\_UNCOMP"},{"content":"7","pos":[66329,66330]},{"content":"TIF<ph id=\"ph1\">\\_</ph>UNCOMP","pos":[66335,66346],"source":"TIF\\_UNCOMP"},{"pos":[66358,66366],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example captures part of the screen to a file, and then loads that image.","pos":[66368,66455]},{"pos":[66602,66617],"content":"Method saveType","linkify":"Method saveType","nodes":[{"content":"Method saveType","pos":[0,15]}]},{"content":"Gets or sets the image decoder.","pos":[66619,66650]},{"pos":[66714,66724],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Type","pos":[66726,66730]},{"content":"The type of decoder that you want to set; optional.","pos":[66733,66784]},{"pos":[66791,66803],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[66810,66817],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The possible values for the Type parameter are those available in the ImageSaveType system enum:","pos":[66819,66915]},{"content":"0","pos":[66969,66970]},{"content":"Use<ph id=\"ph1\">\\_</ph>Extension","pos":[66975,66989],"source":"Use\\_Extension"},{"content":"1","pos":[66994,66995]},{"content":"BMP","pos":[67000,67003]},{"content":"2","pos":[67019,67020]},{"content":"GIF","pos":[67025,67028]},{"content":"3","pos":[67044,67045]},{"content":"JPG","pos":[67050,67053]},{"content":"4","pos":[67069,67070]},{"content":"PNG","pos":[67075,67078]},{"content":"5","pos":[67094,67095]},{"content":"TIFF","pos":[67100,67104]},{"content":"6","pos":[67119,67120]},{"content":"BMP<ph id=\"ph1\">\\_</ph>UNCOMP","pos":[67125,67136],"source":"BMP\\_UNCOMP"},{"content":"7","pos":[67144,67145]},{"content":"TIF<ph id=\"ph1\">\\_</ph>UNCOMP","pos":[67150,67161],"source":"TIF\\_UNCOMP"},{"pos":[67172,67187],"content":"Method setPixel","linkify":"Method setPixel","nodes":[{"content":"Method setPixel","pos":[0,15]}]},{"content":"Sets the color for the pixel that is specified by the x and y parameters.","pos":[67189,67262]},{"pos":[67319,67329],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[67331,67332]},{"content":"The ARGB value of the color that you want to use.","pos":[67335,67384]},{"content":"y","pos":[67396,67397]},{"content":"The ARGB value of the color that you want to use.","pos":[67400,67449]},{"content":"pixel","pos":[67461,67466]},{"content":"The ARGB value of the color that you want to use.","pos":[67469,67518]},{"pos":[67525,67537],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 indicates success; otherwise, failure.","pos":[67539,67579]},{"pos":[67586,67593],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To convert an RGB color value to an ARGB value, use the Image::rgb Method.","pos":[67595,67669]},{"pos":[67675,67693],"content":"Method transparent","linkify":"Method transparent","nodes":[{"content":"Method transparent","pos":[0,18]}]},{"content":"Sets the transparent color for the image.","pos":[67695,67736]},{"pos":[67828,67838],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Set","pos":[67840,67843]},{"content":"Blue value of the color that you want to set; optional.","pos":[67846,67901]},{"content":"RValue","pos":[67913,67919]},{"content":"Blue value of the color that you want to set; optional.","pos":[67922,67977]},{"content":"GValue","pos":[67989,67995]},{"content":"Blue value of the color that you want to set; optional.","pos":[67998,68053]},{"content":"BValue","pos":[68065,68071]},{"content":"Blue value of the color that you want to set; optional.","pos":[68074,68129]},{"pos":[68136,68148],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 to indicate success; otherwise, failure.","pos":[68150,68192]},{"pos":[68199,68206],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If any of the input parameters are missing, the color at the point (0,0) in the image is used.","pos":[68208,68302]},{"content":"If you want to specify a color, this is expressed as an RGB color by using parameters 2 to 4.","pos":[68303,68396]},{"pos":[68402,68414],"content":"Method width","linkify":"Method width","nodes":[{"content":"Method width","pos":[0,12]}]},{"content":"Retrieves the width of the image in pixels.","pos":[68416,68459]},{"pos":[68490,68502],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the width of the image in pixels.","pos":[68504,68564]},{"pos":[68571,68579],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example prints out the width of the image in the test.bmp file.","pos":[68581,68658]},{"pos":[68765,68779],"content":"Method canLoad","linkify":"Method canLoad","nodes":[{"content":"Method canLoad","pos":[0,14]}]},{"content":"Determines whether an image file exists and can be opened.","pos":[68781,68839]},{"pos":[68891,68901],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filename","pos":[68903,68911]},{"content":"The name and path of the file to check.","pos":[68914,68953]},{"pos":[68960,68972],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the image is found and can be opened; otherwise, 0.","pos":[68974,69030]},{"pos":[69036,69050],"content":"Method loadExt","linkify":"Method loadExt","nodes":[{"content":"Method loadExt","pos":[0,14]}]},{"content":"Retrieves a list of the extensions of the file formats that are supported by the Image class.","pos":[69052,69145]},{"pos":[69198,69208],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"idx","pos":[69210,69213]},{"pos":[69222,69234],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that holds a list of the supported file formats.","pos":[69236,69296]},{"pos":[69302,69321],"content":"Method resourceType","linkify":"Method resourceType","nodes":[{"content":"Method resourceType","pos":[0,19]}]},{"content":"Determines whether a particular resource is a bitmap or an icon.","pos":[69323,69387]},{"pos":[69447,69457],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"resourceIdx","pos":[69459,69470]},{"content":"The ID of the resource that you want to load.","pos":[69473,69518]},{"pos":[69525,69537],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 if the image is a bitmap; 1 if it is an icon.","pos":[69539,69586]},{"pos":[69593,69600],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The values of resources can be found in the Resources macro.","pos":[69602,69662]},{"pos":[69669,69677],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example tests whether resource 3020 is an icon or a bitmap.","pos":[69679,69752]},{"pos":[69823,69833],"content":"Method rgb","linkify":"Method rgb","nodes":[{"content":"Method rgb","pos":[0,10]}]},{"content":"Converts an RGB value to an ARGB value.","pos":[69835,69874]},{"pos":[69929,69939],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"R","pos":[69941,69942]},{"content":"The blue value of the color.","pos":[69945,69973]},{"content":"G","pos":[69985,69986]},{"content":"The blue value of the color.","pos":[69989,70017]},{"content":"B","pos":[70029,70030]},{"content":"The blue value of the color.","pos":[70033,70061]},{"pos":[70068,70080],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the ARGB value of the color that is specified by the parameters.","pos":[70082,70173]},{"pos":[70179,70199],"content":"Method validResource","linkify":"Method validResource","nodes":[{"content":"Method validResource","pos":[0,20]}]},{"content":"Determines whether the resource specified by the id parameter is valid.","pos":[70201,70272]},{"pos":[70324,70334],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"id","pos":[70336,70338]},{"content":"The ID of the resource that you want to check.","pos":[70341,70387]},{"pos":[70394,70406],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 if the ID is valid.","pos":[70408,70429]},{"pos":[70435,70445],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates a new image.","pos":[70447,70467]},{"pos":[70539,70549],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"image","pos":[70551,70556]},{"content":"The height of the image in pixels; optional.","pos":[70559,70603]},{"content":"width","pos":[70615,70620]},{"content":"The height of the image in pixels; optional.","pos":[70623,70667]},{"content":"height","pos":[70679,70685]},{"content":"The height of the image in pixels; optional.","pos":[70688,70732]},{"pos":[70739,70746],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You do not need to specify any parameters, but it is possible to specify the image contents and size.","pos":[70748,70849]},{"content":"For the image parameter, you can specify a file name and location, a resource, a particular image in an array, or another Image object.","pos":[70850,70985]},{"pos":[70992,71000],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following examples illustrate how you can optionally specify the existing content for the new image object.","pos":[71002,71113]},{"pos":[71300,71319],"content":"Method displayOrign","linkify":"Method displayOrign","nodes":[{"content":"Method displayOrign","pos":[0,19]}]},{"content":"Enables you to specify an offset (X, Y) from the original origin (0, 0).","pos":[71321,71393]},{"pos":[71450,71460],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Xpos","pos":[71462,71466]},{"content":"New Y (vertical) coordinate for the origin.","pos":[71469,71512]},{"content":"Ypos","pos":[71524,71528]},{"content":"New Y (vertical) coordinate for the origin.","pos":[71531,71574]},{"pos":[71580,71595],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[71628,71643],"content":"Class Imagelist","linkify":"Class Imagelist","nodes":[{"content":"Class Imagelist","pos":[0,15]}]},{"content":"The Imagelist class lets you work with a list of images.","pos":[71681,71737]},{"pos":[71743,71750],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To work with a single image, use the Image class.","pos":[71752,71801]},{"pos":[71807,71815],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image list and adds the icons in the Shell32.dll file.","pos":[71817,71904]},{"content":"It then deletes the fourth member of the list.","pos":[71905,71951]},{"pos":[72182,72189],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[72193,72199]},{"content":"Description","pos":[72274,72285]},{"content":"public int add(Image image)","pos":[72625,72652]},{"content":"Adds a new image to the image list.","pos":[72706,72741]},{"content":"public boolean autoResize(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[72841,72885],"source":"public boolean autoResize(\\[boolean value\\])"},{"content":"Sets the Boolean autoResize flag, which determines whether new images are automatically resized.","pos":[72922,73018]},{"content":"public int clear()","pos":[73057,73075]},{"content":"Removes all images from the image list.","pos":[73138,73177]},{"content":"public int count()","pos":[73273,73291]},{"content":"Retrieves the number of images in an image list.","pos":[73354,73402]},{"content":"public boolean dragBegin(int imageIdx, int hotSpotX, int hotSpotY)","pos":[73489,73555]},{"content":"Begins dragging an image.","pos":[73570,73595]},{"content":"public boolean dragEnd()","pos":[73705,73729]},{"content":"Ends a drag operation.","pos":[73786,73808]},{"content":"public boolean dragEnter(int hWnd, int x, int y)","pos":[73921,73969]},{"content":"Locks updates to the specified window during a drag operation and displays the drag image at the specified position in the window.","pos":[74002,74132]},{"content":"public boolean dragLeave(int hWnd)","pos":[74137,74171]},{"content":"Unlocks the specified window and hides the drag image, so that the window to be updated.","pos":[74218,74306]},{"content":"public boolean dragMove(int x, int y)","pos":[74353,74390]},{"content":"Moves the image that is being dragged during a drag-and-drop operation.","pos":[74434,74505]},{"content":"public boolean dragShowImage(boolean show)","pos":[74569,74611]},{"content":"Shows or hides the image that is being dragged.","pos":[74650,74697]},{"content":"public int height()","pos":[74785,74804]},{"content":"Retrieves the height, in pixels, of the images in the image list.","pos":[74866,74931]},{"content":"public int loadIcons(str moduleName)","pos":[75001,75037]},{"content":"Loads icons from the specified resource into the image list.","pos":[75082,75142]},{"content":"public int remove(int imageIdx)","pos":[75217,75248]},{"content":"Removes an image from an image list.","pos":[75298,75334]},{"content":"public int replace(int imageIdx, Image image)","pos":[75433,75478]},{"content":"Replaces an existing image in the list.","pos":[75514,75553]},{"content":"public boolean setOverlayImage(int imageIdx, int overlayIdx)","pos":[75649,75709]},{"content":"Adds an image to the list of images to use as overlay masks.","pos":[75730,75790]},{"content":"public int width()","pos":[75865,75883]},{"content":"Retrieves the width, in pixels, of the images in the image list.","pos":[75946,76010]},{"content":"::public static int iconHeight()","pos":[76081,76113]},{"content":"Retrieves the system metrics for the height of a standard icon.","pos":[76162,76225]},{"content":"::public static int iconWidth()","pos":[76297,76328]},{"content":"Retrieves the system metrics for the width of a standard icon.","pos":[76378,76440]},{"content":"::public static int smallIconHeight()","pos":[76513,76550]},{"content":"Retrieves the system metrics for the height of a small icon.","pos":[76594,76654]},{"content":"::public static int smallIconWidth()","pos":[76729,76765]},{"content":"Retrieves the system metrics for the width of a small icon.","pos":[76810,76869]},{"content":"public void maskColor(int Color)","pos":[76945,76977]},{"content":"Sets the masking color.","pos":[77026,77049]},{"content":"public void draw(int HDC, int imageIdx, int x, int y, <ph id=\"ph1\">\\[</ph>boolean transparent<ph id=\"ph2\">\\]</ph>)","pos":[77161,77239],"source":"public void draw(int HDC, int imageIdx, int x, int y, \\[boolean transparent\\])"},{"content":"Draws an image list item in the specified device context.","pos":[77242,77299]},{"content":"public void finalize()","pos":[77377,77399]},{"content":"public void new(int cx, int cy, <ph id=\"ph1\">\\[</ph>boolean transparent<ph id=\"ph2\">\\]</ph>)","pos":[77593,77649],"source":"public void new(int cx, int cy, \\[boolean transparent\\])"},{"content":"Creates a new empty list to hold images.","pos":[77674,77714]},{"pos":[77812,77822],"content":"Method add","linkify":"Method add","nodes":[{"content":"Method add","pos":[0,10]}]},{"content":"Adds a new image to the image list.","pos":[77824,77859]},{"pos":[77899,77909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"image","pos":[77911,77916]},{"content":"The new image to add to the list.","pos":[77919,77952]},{"pos":[77959,77971],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 if the method is successful.","pos":[77973,78003]},{"pos":[78010,78017],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use the autoResize method to automatically resize images when you add them to the list.","pos":[78019,78114]},{"pos":[78121,78129],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a new image list and adds three images to it.","pos":[78131,78206]},{"pos":[78477,78494],"content":"Method autoResize","linkify":"Method autoResize","nodes":[{"content":"Method autoResize","pos":[0,17]}]},{"content":"Sets the Boolean autoResize flag, which determines whether new images are automatically resized.","pos":[78496,78592]},{"pos":[78647,78657],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[78659,78664]},{"content":"A Boolean value that determines whether the autoResize flag is set; optional.","pos":[78667,78744]},{"pos":[78751,78763],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[78770,78777],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the autoResize flag is set to true, any image that you add to the list is automatically resized to the dimensions that were specified when you created the image list.","pos":[78779,78948]},{"pos":[78954,78966],"content":"Method clear","linkify":"Method clear","nodes":[{"content":"Method clear","pos":[0,12]}]},{"content":"Removes all images from the image list.","pos":[78968,79007]},{"pos":[79038,79050],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 if the method is successful.","pos":[79052,79082]},{"pos":[79088,79100],"content":"Method count","linkify":"Method count","nodes":[{"content":"Method count","pos":[0,12]}]},{"content":"Retrieves the number of images in an image list.","pos":[79102,79150]},{"pos":[79181,79193],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the number of images in the list.","pos":[79195,79255]},{"pos":[79262,79270],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image list, loads icons from the shell.dll file, and then prints the number of images in the list.","pos":[79272,79403]},{"pos":[79621,79637],"content":"Method dragBegin","linkify":"Method dragBegin","nodes":[{"content":"Method dragBegin","pos":[0,16]}]},{"content":"Begins dragging an image.","pos":[79639,79664]},{"pos":[79743,79753],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"imageIdx","pos":[79755,79763]},{"content":"The Y-coordinate of the drag position, relative to the upper-left corner of the image.","pos":[79766,79852]},{"content":"hotSpotX","pos":[79864,79872]},{"content":"The Y-coordinate of the drag position, relative to the upper-left corner of the image.","pos":[79875,79961]},{"content":"hotSpotY","pos":[79973,79981]},{"content":"The Y-coordinate of the drag position, relative to the upper-left corner of the image.","pos":[79984,80070]},{"pos":[80077,80089],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the method is successful.","pos":[80091,80121]},{"pos":[80128,80135],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The rest of the drag operation is specified by the dragEnter, dragMove, dragLeave, and dragEnd methods.","pos":[80137,80240]},{"pos":[80246,80260],"content":"Method dragEnd","linkify":"Method dragEnd","nodes":[{"content":"Method dragEnd","pos":[0,14]}]},{"content":"Ends a drag operation.","pos":[80262,80284]},{"pos":[80321,80333],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the method is successful; otherwise, 0.","pos":[80335,80379]},{"pos":[80386,80393],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The rest of the drag operation is specified by the dragBegin, dragEnter, dragMove, and dragLeave methods.","pos":[80395,80500]},{"pos":[80506,80522],"content":"Method dragEnter","linkify":"Method dragEnter","nodes":[{"content":"Method dragEnter","pos":[0,16]}]},{"content":"Locks updates to the specified window during a drag operation and displays the drag image at the specified position in the window.","pos":[80524,80654]},{"pos":[80715,80725],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"hWnd","pos":[80727,80731]},{"content":"The Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.","pos":[80734,80834]},{"content":"x","pos":[80846,80847]},{"content":"The Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.","pos":[80850,80950]},{"content":"y","pos":[80962,80963]},{"content":"The Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.","pos":[80966,81066]},{"pos":[81073,81085],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the method is successful; otherwise, 0.","pos":[81087,81131]},{"pos":[81138,81145],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To start the drag operation, call the dragBegin method.","pos":[81147,81202]},{"content":"The rest of the drag operation is specified by the dragMove, dragLeave, and dragEnd methods.","pos":[81203,81295]},{"pos":[81301,81317],"content":"Method dragLeave","linkify":"Method dragLeave","nodes":[{"content":"Method dragLeave","pos":[0,16]}]},{"content":"Unlocks the specified window and hides the drag image, so that the window to be updated.","pos":[81319,81407]},{"pos":[81454,81464],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"hWnd","pos":[81466,81470]},{"content":"The handle to the window that owns the drag image.","pos":[81473,81523]},{"pos":[81530,81542],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the method is successful; otherwise, 0.","pos":[81544,81588]},{"pos":[81595,81602],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The rest of the drag operation is specified by the dragBegin, dragEnter, dragMove, and dragEnd methods.","pos":[81604,81707]},{"pos":[81713,81728],"content":"Method dragMove","linkify":"Method dragMove","nodes":[{"content":"Method dragMove","pos":[0,15]}]},{"content":"Moves the image that is being dragged during a drag-and-drop operation.","pos":[81730,81801]},{"pos":[81851,81861],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[81863,81864]},{"content":"The Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.","pos":[81867,81967]},{"content":"y","pos":[81979,81980]},{"content":"The Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.","pos":[81983,82083]},{"pos":[82090,82102],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the method is successful; otherwise, 0.","pos":[82104,82148]},{"pos":[82155,82162],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To start the drag operation, call the dragBegin method and then the dragEnter method.","pos":[82164,82249]},{"content":"The rest of the drag operation is specified by the dragLeave and dragEnd methods.","pos":[82250,82331]},{"pos":[82337,82357],"content":"Method dragShowImage","linkify":"Method dragShowImage","nodes":[{"content":"Method dragShowImage","pos":[0,20]}]},{"content":"Shows or hides the image that is being dragged.","pos":[82359,82406]},{"pos":[82461,82471],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"show","pos":[82473,82477]},{"content":"A value that specifies whether to show the image.","pos":[82480,82529]},{"pos":[82536,82548],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[82554,82567],"content":"Method height","linkify":"Method height","nodes":[{"content":"Method height","pos":[0,13]}]},{"content":"Retrieves the height, in pixels, of the images in the image list.","pos":[82569,82634]},{"pos":[82666,82678],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the height of the images in pixels.","pos":[82680,82742]},{"pos":[82749,82756],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The height of the images in the list is set when you instantiate the list.","pos":[82758,82832]},{"pos":[82839,82847],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image list, and sets the height and width of the images to the dimensions that are specified by the iconWidth and iconHeight methods.","pos":[82849,83015]},{"content":"It then prints the height of images in the list.","pos":[83016,83064]},{"pos":[83226,83242],"content":"Method loadIcons","linkify":"Method loadIcons","nodes":[{"content":"Method loadIcons","pos":[0,16]}]},{"content":"Loads icons from the specified resource into the image list.","pos":[83244,83304]},{"pos":[83353,83363],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"moduleName","pos":[83365,83375]},{"content":"The name of the file from which to load images.","pos":[83378,83425]},{"pos":[83432,83444],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 if the method is successful.","pos":[83446,83476]},{"pos":[83483,83491],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of images and then loads the images that are contained in the shell32.dll file.","pos":[83493,83609]},{"pos":[83747,83760],"content":"Method remove","linkify":"Method remove","nodes":[{"content":"Method remove","pos":[0,13]}]},{"content":"Removes an image from an image list.","pos":[83762,83798]},{"pos":[83842,83852],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"imageIdx","pos":[83854,83862]},{"content":"The position of the image to remove from the list.","pos":[83865,83915]},{"pos":[83922,83934],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 if the method is successful.","pos":[83936,83966]},{"pos":[83973,83981],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image list, adds the icons in shell32.dll file, and then deletes the fourth member of the list.","pos":[83983,84111]},{"pos":[84342,84356],"content":"Method replace","linkify":"Method replace","nodes":[{"content":"Method replace","pos":[0,14]}]},{"content":"Replaces an existing image in the list.","pos":[84358,84397]},{"pos":[84455,84465],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"imageIdx","pos":[84467,84475]},{"content":"The image to use to replace the existing image.","pos":[84478,84525]},{"content":"image","pos":[84537,84542]},{"content":"The image to use to replace the existing image.","pos":[84545,84592]},{"pos":[84599,84611],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 if the method is successful.","pos":[84613,84643]},{"pos":[84649,84671],"content":"Method setOverlayImage","linkify":"Method setOverlayImage","nodes":[{"content":"Method setOverlayImage","pos":[0,22]}]},{"content":"Adds an image to the list of images to use as overlay masks.","pos":[84673,84733]},{"pos":[84806,84816],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"imageIdx","pos":[84818,84826]},{"content":"The one-based index of the overlay mask.","pos":[84829,84869]},{"content":"overlayIdx","pos":[84881,84891]},{"content":"The one-based index of the overlay mask.","pos":[84894,84934]},{"pos":[84941,84953],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the method is successful.","pos":[84955,84985]},{"pos":[84992,85000],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image list that has three images and then sets the last image as an overlay mask.","pos":[85002,85116]},{"pos":[85386,85398],"content":"Method width","linkify":"Method width","nodes":[{"content":"Method width","pos":[0,12]}]},{"content":"Retrieves the width, in pixels, of the images in the image list.","pos":[85400,85464]},{"pos":[85495,85507],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the width of the images in pixels.","pos":[85509,85570]},{"pos":[85577,85584],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The width of the images in the list is set when you instantiate the list.","pos":[85586,85659]},{"pos":[85666,85674],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image list that has the standard height and width for icons, and then prints the width of images in the list.","pos":[85676,85818]},{"pos":[85979,85996],"content":"Method iconHeight","linkify":"Method iconHeight","nodes":[{"content":"Method iconHeight","pos":[0,17]}]},{"content":"Retrieves the system metrics for the height of a standard icon.","pos":[85998,86061]},{"pos":[86104,86116],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the height of a standard icon.","pos":[86118,86175]},{"pos":[86182,86190],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of images, and then sets them to the standard icon width and height.","pos":[86192,86297]},{"pos":[86408,86424],"content":"Method iconWidth","linkify":"Method iconWidth","nodes":[{"content":"Method iconWidth","pos":[0,16]}]},{"content":"Retrieves the system metrics for the width of a standard icon.","pos":[86426,86488]},{"pos":[86530,86542],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the width of a standard icon.","pos":[86544,86600]},{"pos":[86607,86615],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of images, and then sets them to the standard icon width and height.","pos":[86617,86722]},{"pos":[86833,86855],"content":"Method smallIconHeight","linkify":"Method smallIconHeight","nodes":[{"content":"Method smallIconHeight","pos":[0,22]}]},{"content":"Retrieves the system metrics for the height of a small icon.","pos":[86857,86917]},{"pos":[86965,86977],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the height of a small icon.","pos":[86979,87033]},{"pos":[87040,87048],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image list that has the standard height and width for small icons, and then prints the height of images in the list.","pos":[87050,87199]},{"pos":[87360,87381],"content":"Method smallIconWidth","linkify":"Method smallIconWidth","nodes":[{"content":"Method smallIconWidth","pos":[0,21]}]},{"content":"Retrieves the system metrics for the width of a small icon.","pos":[87383,87442]},{"pos":[87489,87501],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the width of a small icon.","pos":[87503,87556]},{"pos":[87563,87571],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image list that has the standard height and width for small icons, and then prints the width of images in the list.","pos":[87573,87721]},{"pos":[87879,87895],"content":"Method maskColor","linkify":"Method maskColor","nodes":[{"content":"Method maskColor","pos":[0,16]}]},{"content":"Sets the masking color.","pos":[87897,87920]},{"pos":[87965,87975],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Color","pos":[87977,87982]},{"content":"The color as an ARGB value.","pos":[87985,88012]},{"pos":[88018,88029],"content":"Method draw","linkify":"Method draw","nodes":[{"content":"Method draw","pos":[0,11]}]},{"content":"Draws an image list item in the specified device context.","pos":[88031,88088]},{"pos":[88177,88187],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"HDC","pos":[88189,88192]},{"content":"A Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.","pos":[88195,88327]},{"content":"imageIdx","pos":[88339,88347]},{"content":"A Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.","pos":[88350,88482]},{"content":"x","pos":[88494,88495]},{"content":"A Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.","pos":[88498,88630]},{"content":"y","pos":[88642,88643]},{"content":"A Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.","pos":[88646,88778]},{"content":"transparent","pos":[88790,88801]},{"content":"A Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.","pos":[88804,88936]},{"pos":[88942,88957],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[88991,89001],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates a new empty list to hold images.","pos":[89003,89043]},{"pos":[89110,89120],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cx","pos":[89122,89124]},{"content":"cy","pos":[89138,89140]},{"content":"transparent","pos":[89154,89165]},{"pos":[89174,89181],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use the autoResize method to automatically resize images when you add them to the list.","pos":[89183,89278]},{"pos":[89285,89293],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an image list to hold items of the standard icon width and height.","pos":[89295,89391]},{"pos":[89510,89535],"content":"Class ImportTableDataInfo","linkify":"Class ImportTableDataInfo","nodes":[{"content":"Class ImportTableDataInfo","pos":[0,25]}]},{"pos":[89586,89593],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[89599,89607],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[89613,89620],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[89624,89630]},{"content":"Description","pos":[89682,89693]},{"content":"public int addColumnData(str szColName, AnyType colVal)","pos":[89844,89899]},{"content":"public int copyDataRow()","pos":[89954,89978]},{"content":"public void new(int usTableId)","pos":[90064,90094]},{"content":"Initializes a new instance of the Object class.","pos":[90122,90169]},{"pos":[90177,90197],"content":"Method addColumnData","linkify":"Method addColumnData","nodes":[{"content":"Method addColumnData","pos":[0,20]}]},{"pos":[90265,90275],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"szColName","pos":[90277,90286]},{"content":"colVal","pos":[90300,90306]},{"pos":[90315,90327],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[90333,90351],"content":"Method copyDataRow","linkify":"Method copyDataRow","nodes":[{"content":"Method copyDataRow","pos":[0,18]}]},{"pos":[90388,90400],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[90406,90416],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[90418,90465]},{"pos":[90508,90518],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"usTableId","pos":[90520,90529]},{"pos":[90536,90563],"content":"Class ImportTableSchemaInfo","linkify":"Class ImportTableSchemaInfo","nodes":[{"content":"Class ImportTableSchemaInfo","pos":[0,27]}]},{"pos":[90616,90623],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[90629,90637],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[90643,90650],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[90654,90660]},{"content":"Description","pos":[90739,90750]},{"content":"public int addColumnInfo(str szColName, Types eColType, int eColRole, int lColOrd)","pos":[90928,91010]},{"content":"public int addColumnMapping(str szRefRecIdColName, str szRefTableIdColName)","pos":[91065,91140]},{"content":"public int hasEqualityCriteria(boolean fHasEqualityCriteria)","pos":[91202,91262]},{"content":"public int shreddedMetadataTable(boolean fIsShreddedMetadataTable)","pos":[91339,91405]},{"content":"public void new(int usTableId)","pos":[91476,91506]},{"content":"Initializes a new instance of the Object class.","pos":[91561,91608]},{"pos":[91616,91636],"content":"Method addColumnInfo","linkify":"Method addColumnInfo","nodes":[{"content":"Method addColumnInfo","pos":[0,20]}]},{"pos":[91731,91741],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"szColName","pos":[91743,91752]},{"content":"eColType","pos":[91766,91774]},{"content":"eColRole","pos":[91788,91796]},{"content":"lColOrd","pos":[91810,91817]},{"pos":[91826,91838],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[91844,91867],"content":"Method addColumnMapping","linkify":"Method addColumnMapping","nodes":[{"content":"Method addColumnMapping","pos":[0,23]}]},{"pos":[91955,91965],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"szRefRecIdColName","pos":[91967,91984]},{"content":"szRefTableIdColName","pos":[91998,92017]},{"pos":[92026,92038],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92044,92070],"content":"Method hasEqualityCriteria","linkify":"Method hasEqualityCriteria","nodes":[{"content":"Method hasEqualityCriteria","pos":[0,26]}]},{"pos":[92143,92153],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fHasEqualityCriteria","pos":[92155,92175]},{"pos":[92184,92196],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92202,92230],"content":"Method shreddedMetadataTable","linkify":"Method shreddedMetadataTable","nodes":[{"content":"Method shreddedMetadataTable","pos":[0,28]}]},{"pos":[92309,92319],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fIsShreddedMetadataTable","pos":[92321,92345]},{"pos":[92354,92366],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92372,92382],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[92384,92431]},{"pos":[92474,92484],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"usTableId","pos":[92486,92495]},{"pos":[92502,92516],"content":"Class InfoPart","linkify":"Class InfoPart","nodes":[{"content":"Class InfoPart","pos":[0,14]}]},{"pos":[92558,92565],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[92571,92579],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[92585,92592],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[92596,92602]},{"content":"Description","pos":[92639,92650]},{"content":"public str caption(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[92966,92999],"source":"public str caption(\\[str value\\])"},{"content":"Gets or set the caption of the control.","pos":[93009,93048]},{"content":"public str changedBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[93151,93186],"source":"public str changedBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who last changed the application object.","pos":[93194,93268]},{"content":"public Date changedDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[93336,93375],"source":"public Date changedDate(\\[Date value\\])"},{"content":"Gets or sets the date an application object was last changed.","pos":[93379,93440]},{"content":"public str changedTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[93521,93558],"source":"public str changedTime(\\[str value\\])"},{"content":"Gets or sets the time an application object was last changed.","pos":[93564,93625]},{"content":"public str createdBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[93706,93741],"source":"public str createdBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who created the application object.","pos":[93749,93818]},{"content":"public Date creationDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[93891,93931],"source":"public Date creationDate(\\[Date value\\])"},{"content":"Gets or sets the date an application object was created.","pos":[93934,93990]},{"content":"public str creationTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[94076,94114],"source":"public str creationTime(\\[str value\\])"},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[94261,94291],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object.","pos":[94304,94457]},{"content":"public Guid origin(<ph id=\"ph1\">\\[</ph>Guid value<ph id=\"ph2\">\\]</ph>)","pos":[94462,94496],"source":"public Guid origin(\\[Guid value\\])"},{"content":"public str query(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[94647,94678],"source":"public str query(\\[str value\\])"},{"content":"public void new()","pos":[94832,94849]},{"content":"Initializes a new instance of the InfoPart class.","pos":[94875,94924]},{"pos":[95020,95034],"content":"Method caption","linkify":"Method caption","nodes":[{"content":"Method caption","pos":[0,14]}]},{"content":"Gets or set the caption of the control.","pos":[95036,95075]},{"pos":[95119,95129],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[95131,95136]},{"pos":[95145,95157],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that is used as the caption of the control.","pos":[95159,95213]},{"pos":[95219,95235],"content":"Method changedBy","linkify":"Method changedBy","nodes":[{"content":"Method changedBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who last changed the application object.","pos":[95237,95311]},{"pos":[95357,95367],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[95369,95374]},{"pos":[95383,95395],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user.","pos":[95397,95418]},{"pos":[95424,95442],"content":"Method changedDate","linkify":"Method changedDate","nodes":[{"content":"Method changedDate","pos":[0,18]}]},{"content":"Gets or sets the date an application object was last changed.","pos":[95444,95505]},{"pos":[95555,95565],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[95567,95572]},{"pos":[95581,95593],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date an application object was last changed.","pos":[95595,95643]},{"pos":[95649,95667],"content":"Method changedTime","linkify":"Method changedTime","nodes":[{"content":"Method changedTime","pos":[0,18]}]},{"content":"Gets or sets the time an application object was last changed.","pos":[95669,95730]},{"pos":[95778,95788],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[95790,95795]},{"pos":[95804,95816],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The time an application object was last changed.","pos":[95818,95866]},{"pos":[95872,95888],"content":"Method createdBy","linkify":"Method createdBy","nodes":[{"content":"Method createdBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who created the application object.","pos":[95890,95959]},{"pos":[96005,96015],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[96017,96022]},{"pos":[96031,96043],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user.","pos":[96045,96066]},{"pos":[96072,96091],"content":"Method creationDate","linkify":"Method creationDate","nodes":[{"content":"Method creationDate","pos":[0,19]}]},{"content":"Gets or sets the date an application object was created.","pos":[96093,96149]},{"pos":[96200,96210],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[96212,96217]},{"pos":[96226,96238],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date an application object was created.","pos":[96240,96283]},{"pos":[96289,96308],"content":"Method creationTime","linkify":"Method creationTime","nodes":[{"content":"Method creationTime","pos":[0,19]}]},{"pos":[96357,96367],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[96369,96374]},{"pos":[96383,96395],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[96401,96412],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object.","pos":[96414,96567]},{"pos":[96608,96618],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[96620,96625]},{"pos":[96634,96646],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[96648,96712]},{"pos":[96719,96726],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[96728,96822]},{"content":"Begins with a letter.","pos":[96828,96849]},{"content":"Doesn't exceed 250 characters.","pos":[96854,96884]},{"content":"Can include numbers and underscore characters.","pos":[96889,96935]},{"content":"Cannot include punctuation or spaces.","pos":[96940,96977]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, classes, and so on.","pos":[96982,97100]},{"pos":[97106,97119],"content":"Method origin","linkify":"Method origin","nodes":[{"content":"Method origin","pos":[0,13]}]},{"pos":[97164,97174],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[97176,97181]},{"pos":[97190,97202],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[97208,97220],"content":"Method query","linkify":"Method query","nodes":[{"content":"Method query","pos":[0,12]}]},{"pos":[97262,97272],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[97274,97279]},{"pos":[97288,97300],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[97306,97316],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the InfoPart class.","pos":[97318,97367]},{"pos":[97395,97414],"content":"Class InfoPartField","linkify":"Class InfoPartField","nodes":[{"content":"Class InfoPartField","pos":[0,19]}]},{"pos":[97461,97468],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[97474,97482],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[97488,97495],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[97499,97505]},{"content":"Description","pos":[97551,97562]},{"content":"public str dataField(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[97887,97922],"source":"public str dataField(\\[str value\\])"},{"content":"public str dataMethod(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[98081,98117],"source":"public str dataMethod(\\[str value\\])"},{"content":"public str dataSource(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[98275,98311],"source":"public str dataSource(\\[str value\\])"},{"content":"Gets or sets a data source that will be used by the control or the form.","pos":[98327,98399]},{"content":"public str label(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[98469,98500],"source":"public str label(\\[str value\\])"},{"content":"Gets or sets the label for a control.","pos":[98521,98558]},{"content":"public boolean manualRetrieval(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[98663,98712],"source":"public boolean manualRetrieval(\\[boolean value\\])"},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[98857,98887],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object.","pos":[98909,99062]},{"content":"public int style(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[99067,99098],"source":"public int style(\\[int value\\])"},{"content":"public void new()","pos":[99261,99278]},{"content":"Initializes a new instance of the InfoPartField class.","pos":[99313,99367]},{"pos":[99458,99474],"content":"Method dataField","linkify":"Method dataField","nodes":[{"content":"Method dataField","pos":[0,16]}]},{"pos":[99520,99530],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[99532,99537]},{"pos":[99546,99558],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[99564,99581],"content":"Method dataMethod","linkify":"Method dataMethod","nodes":[{"content":"Method dataMethod","pos":[0,17]}]},{"pos":[99628,99638],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[99640,99645]},{"pos":[99654,99666],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[99672,99689],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"content":"Gets or sets a data source that will be used by the control or the form.","pos":[99691,99763]},{"pos":[99810,99820],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[99822,99827]},{"pos":[99836,99848],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the data source that will be used.","pos":[99850,99902]},{"pos":[99908,99920],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Gets or sets the label for a control.","pos":[99922,99959]},{"pos":[100001,100011],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[100013,100018]},{"pos":[100027,100039],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the label string.","pos":[100041,100079]},{"pos":[100086,100093],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The label determines which text is displayed in the control or adjacent to it.","pos":[100095,100173]},{"content":"The label property value cannot exceed 250 characters.","pos":[100174,100228]},{"pos":[100234,100256],"content":"Method manualRetrieval","linkify":"Method manualRetrieval","nodes":[{"content":"Method manualRetrieval","pos":[0,22]}]},{"pos":[100316,100326],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[100328,100333]},{"pos":[100342,100354],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100360,100371],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object.","pos":[100373,100526]},{"pos":[100567,100577],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[100579,100584]},{"pos":[100593,100605],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[100607,100671]},{"pos":[100678,100685],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[100687,100781]},{"content":"Begins with a letter.","pos":[100787,100808]},{"content":"Doesn't exceed 250 characters.","pos":[100813,100843]},{"content":"Can include numbers and underscore characters.","pos":[100848,100894]},{"content":"Cannot include punctuation or spaces.","pos":[100899,100936]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, classes, and so on.","pos":[100941,101059]},{"pos":[101065,101077],"content":"Method style","linkify":"Method style","nodes":[{"content":"Method style","pos":[0,12]}]},{"pos":[101119,101129],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[101131,101136]},{"pos":[101145,101157],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101163,101173],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the InfoPartField class.","pos":[101175,101229]},{"pos":[101257,101276],"content":"Class InfoPartGroup","linkify":"Class InfoPartGroup","nodes":[{"content":"Class InfoPartGroup","pos":[0,19]}]},{"pos":[101323,101330],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[101336,101344],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[101350,101357],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[101361,101367]},{"content":"Description","pos":[101426,101437]},{"content":"public str caption(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[101783,101816],"source":"public str caption(\\[str value\\])"},{"content":"Gets or sets the caption of the control.","pos":[101848,101888]},{"content":"public str dataGroup(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[101994,102029],"source":"public str dataGroup(\\[str value\\])"},{"content":"public str dataSource(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[102205,102241],"source":"public str dataSource(\\[str value\\])"},{"content":"Gets or sets a data source that will be used by the control or the form.","pos":[102270,102342]},{"content":"public int labelPosition(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[102416,102455],"source":"public int labelPosition(\\[int value\\])"},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[102627,102657],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in the code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object.","pos":[102692,102849]},{"content":"public boolean repeating(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[102854,102897],"source":"public boolean repeating(\\[boolean value\\])"},{"content":"public int rowCountWhenSmall(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[103065,103127],"source":"public int rowCountWhenSmall(\\[int value\\], \\[AutoMode mode\\])"},{"content":"public AutoMode rowCountWhenSmallMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[103276,103332],"source":"public AutoMode rowCountWhenSmallMode(\\[AutoMode mode\\])"},{"content":"public int rowCountWhenSmallValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[103487,103535],"source":"public int rowCountWhenSmallValue(\\[int value\\])"},{"content":"public boolean showCaption(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[103698,103743],"source":"public boolean showCaption(\\[boolean value\\])"},{"content":"public boolean showLabels(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[103909,103953],"source":"public boolean showLabels(\\[boolean value\\])"},{"content":"public int showWhenPartSize(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[104120,104162],"source":"public int showWhenPartSize(\\[int value\\])"},{"content":"public boolean verticalSpacing(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[104331,104380],"source":"public boolean verticalSpacing(\\[boolean value\\])"},{"content":"public void new()","pos":[104542,104559]},{"content":"Initializes a new instance of the InfoPartGroup class.","pos":[104607,104661]},{"pos":[104756,104770],"content":"Method caption","linkify":"Method caption","nodes":[{"content":"Method caption","pos":[0,14]}]},{"content":"Gets or sets the caption of the control.","pos":[104772,104812]},{"pos":[104856,104866],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[104868,104873]},{"pos":[104882,104894],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that is used as the caption of the control.","pos":[104896,104950]},{"pos":[104956,104972],"content":"Method dataGroup","linkify":"Method dataGroup","nodes":[{"content":"Method dataGroup","pos":[0,16]}]},{"pos":[105018,105028],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[105030,105035]},{"pos":[105044,105056],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[105062,105079],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"content":"Gets or sets a data source that will be used by the control or the form.","pos":[105081,105153]},{"pos":[105200,105210],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[105212,105217]},{"pos":[105226,105238],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the data source that will be used.","pos":[105240,105292]},{"pos":[105298,105318],"content":"Method labelPosition","linkify":"Method labelPosition","nodes":[{"content":"Method labelPosition","pos":[0,20]}]},{"pos":[105368,105378],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[105380,105385]},{"pos":[105394,105406],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[105412,105423],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in the code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object.","pos":[105425,105582]},{"pos":[105623,105633],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[105635,105640]},{"pos":[105649,105661],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in the code to identify an application object.","pos":[105663,105731]},{"pos":[105738,105745],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[105747,105841]},{"content":"Begins with a letter.","pos":[105847,105868]},{"content":"Doesn't exceed 250 characters.","pos":[105873,105903]},{"content":"Can include numbers and underscore characters.","pos":[105908,105954]},{"content":"Cannot include punctuation or spaces.","pos":[105959,105996]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, classes, and so on.","pos":[106001,106119]},{"pos":[106125,106141],"content":"Method repeating","linkify":"Method repeating","nodes":[{"content":"Method repeating","pos":[0,16]}]},{"pos":[106195,106205],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[106207,106212]},{"pos":[106221,106233],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106239,106263],"content":"Method rowCountWhenSmall","linkify":"Method rowCountWhenSmall","nodes":[{"content":"Method rowCountWhenSmall","pos":[0,24]}]},{"pos":[106334,106344],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[106346,106351]},{"content":"mode","pos":[106365,106369]},{"pos":[106378,106390],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106396,106424],"content":"Method rowCountWhenSmallMode","linkify":"Method rowCountWhenSmallMode","nodes":[{"content":"Method rowCountWhenSmallMode","pos":[0,28]}]},{"pos":[106491,106501],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[106503,106507]},{"pos":[106516,106528],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106534,106563],"content":"Method rowCountWhenSmallValue","linkify":"Method rowCountWhenSmallValue","nodes":[{"content":"Method rowCountWhenSmallValue","pos":[0,29]}]},{"pos":[106622,106632],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[106634,106639]},{"pos":[106648,106660],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106666,106684],"content":"Method showCaption","linkify":"Method showCaption","nodes":[{"content":"Method showCaption","pos":[0,18]}]},{"pos":[106740,106750],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[106752,106757]},{"pos":[106766,106778],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106784,106801],"content":"Method showLabels","linkify":"Method showLabels","nodes":[{"content":"Method showLabels","pos":[0,17]}]},{"pos":[106856,106866],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[106868,106873]},{"pos":[106882,106894],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106900,106923],"content":"Method showWhenPartSize","linkify":"Method showWhenPartSize","nodes":[{"content":"Method showWhenPartSize","pos":[0,23]}]},{"pos":[106976,106986],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[106988,106993]},{"pos":[107002,107014],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[107020,107042],"content":"Method verticalSpacing","linkify":"Method verticalSpacing","nodes":[{"content":"Method verticalSpacing","pos":[0,22]}]},{"pos":[107102,107112],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[107114,107119]},{"pos":[107128,107140],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[107146,107156],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the InfoPartGroup class.","pos":[107158,107212]},{"pos":[107240,107260],"content":"Class InfoPartLayout","linkify":"Class InfoPartLayout","nodes":[{"content":"Class InfoPartLayout","pos":[0,20]}]},{"pos":[107308,107315],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[107321,107329],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[107335,107342],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[107346,107352]},{"content":"Description","pos":[107393,107404]},{"content":"public boolean showMore(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[107560,107602],"source":"public boolean showMore(\\[boolean value\\])"},{"content":"public str showMoreDataSource(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[107667,107711],"source":"public str showMoreDataSource(\\[str value\\])"},{"content":"public void new()","pos":[107774,107791]},{"content":"Initializes a new instance of the InfoPartLayout class.","pos":[107821,107876]},{"pos":[107884,107899],"content":"Method showMore","linkify":"Method showMore","nodes":[{"content":"Method showMore","pos":[0,15]}]},{"pos":[107952,107962],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[107964,107969]},{"pos":[107978,107990],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[107996,108021],"content":"Method showMoreDataSource","linkify":"Method showMoreDataSource","nodes":[{"content":"Method showMoreDataSource","pos":[0,25]}]},{"pos":[108076,108086],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[108088,108093]},{"pos":[108102,108114],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108120,108130],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the InfoPartLayout class.","pos":[108132,108187]},{"pos":[108215,108242],"content":"Class InitialQueryParameter","linkify":"Class InitialQueryParameter","nodes":[{"content":"Class InitialQueryParameter","pos":[0,27]}]},{"pos":[108295,108302],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[108308,108316],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[108322,108329],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[108333,108339]},{"content":"Description","pos":[108444,108455]},{"content":"public boolean applyQuery(FormDataSource datasource)","pos":[108689,108741]},{"content":"public str dataSourceName(<ph id=\"ph1\">\\[</ph>str dataSourceName<ph id=\"ph2\">\\]</ph>)","pos":[108867,108916],"source":"public str dataSourceName(\\[str dataSourceName\\])"},{"content":"public str modeledQueryName(<ph id=\"ph1\">\\[</ph>str modeledQueryName<ph id=\"ph2\">\\]</ph>)","pos":[109045,109098],"source":"public str modeledQueryName(\\[str modeledQueryName\\])"},{"content":"public Query query(<ph id=\"ph1\">\\[</ph>Query query<ph id=\"ph2\">\\]</ph>)","pos":[109223,109258],"source":"public Query query(\\[Query query\\])"},{"content":"::public static InitialQueryParameter createByModeledQueryName(str modeledQueryName, <ph id=\"ph1\">\\[</ph>str dataSourceName<ph id=\"ph2\">\\]</ph>)","pos":[109401,109509],"source":"::public static InitialQueryParameter createByModeledQueryName(str modeledQueryName, \\[str dataSourceName\\])"},{"content":"::public static InitialQueryParameter createByQuery(Query query, <ph id=\"ph1\">\\[</ph>str dataSourceName<ph id=\"ph2\">\\]</ph>)","pos":[109579,109667],"source":"::public static InitialQueryParameter createByQuery(Query query, \\[str dataSourceName\\])"},{"content":"public void finalize()","pos":[109757,109779]},{"content":"public void new()","pos":[109935,109952]},{"content":"Initializes a new instance of the InitialQueryParameter class.","pos":[110046,110108]},{"pos":[110116,110133],"content":"Method applyQuery","linkify":"Method applyQuery","nodes":[{"content":"Method applyQuery","pos":[0,17]}]},{"pos":[110198,110208],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"datasource","pos":[110210,110220]},{"pos":[110229,110241],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[110247,110268],"content":"Method dataSourceName","linkify":"Method dataSourceName","nodes":[{"content":"Method dataSourceName","pos":[0,21]}]},{"pos":[110328,110338],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[110340,110354]},{"pos":[110363,110375],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[110381,110404],"content":"Method modeledQueryName","linkify":"Method modeledQueryName","nodes":[{"content":"Method modeledQueryName","pos":[0,23]}]},{"pos":[110468,110478],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"modeledQueryName","pos":[110480,110496]},{"pos":[110505,110517],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[110523,110535],"content":"Method query","linkify":"Method query","nodes":[{"content":"Method query","pos":[0,12]}]},{"pos":[110581,110591],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"query","pos":[110593,110598]},{"pos":[110607,110619],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[110625,110656],"content":"Method createByModeledQueryName","linkify":"Method createByModeledQueryName","nodes":[{"content":"Method createByModeledQueryName","pos":[0,31]}]},{"pos":[110773,110783],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"modeledQueryName","pos":[110785,110801]},{"content":"dataSourceName","pos":[110815,110829]},{"pos":[110838,110850],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[110856,110876],"content":"Method createByQuery","linkify":"Method createByQuery","nodes":[{"content":"Method createByQuery","pos":[0,20]}]},{"pos":[110973,110983],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"query","pos":[110985,110990]},{"content":"dataSourceName","pos":[111004,111018]},{"pos":[111027,111039],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111045,111060],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[111094,111104],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the InitialQueryParameter class.","pos":[111106,111168]},{"pos":[111196,111219],"content":"Class InteropPermission","linkify":"Class InteropPermission","nodes":[{"content":"Class InteropPermission","pos":[0,23]}]},{"content":"The InteropPermission class controls the ability to call unmanaged and managed code.","pos":[111278,111362]},{"pos":[111368,111375],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The InteropPermission class is designed to check permissions for specific APIs.","pos":[111377,111456]},{"content":"For a list of all APIs that are protected by permissions, see Secured APIs.","pos":[111457,111532]},{"content":"Before the protected API is run, you must call the assert method on the same tier (usually the server tier) that the corresponding CodeAccessPermission::demand method is called on.","pos":[111533,111713]},{"content":"Call a method on the server tier from one of the following methods:","pos":[111714,111781]},{"content":"A server static method","pos":[111787,111809]},{"content":"A class instance method that is set to run on the server by using the RunOn class property.","pos":[111814,111905]},{"pos":[111911,111919],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following code example shows a new instance of the InteropPermission class.","pos":[111921,112000]},{"content":"The assert method is called to declare that the code can then instantiate the DLL class that provides the ability to communicate with a MicrosoftWindows dynamic-link library (DLL).","pos":[112001,112181]},{"pos":[112583,112590],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[112594,112600]},{"content":"Description","pos":[112651,112662]},{"content":"public CodeAccessPermission copy()","pos":[112882,112916]},{"content":"Creates and returns a copy of the current permission class object.","pos":[112939,113005]},{"content":"public boolean isSubsetOf(CodeAccessPermission target)","pos":[113026,113080]},{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[113083,113165]},{"content":"public void new(InteropKind kind)","pos":[113170,113203]},{"content":"Creates an new instance of the InteropPermission class.","pos":[113227,113282]},{"pos":[113317,113328],"content":"Method copy","linkify":"Method copy","nodes":[{"content":"Method copy","pos":[0,11]}]},{"content":"Creates and returns a copy of the current permission class object.","pos":[113330,113396]},{"pos":[113443,113455],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A copy of the current permission object.","pos":[113457,113497]},{"pos":[113504,113511],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You override this method when you derive a class from the CodeAccessPermission class.","pos":[113513,113598]},{"content":"For more information, see the copy method.","pos":[113599,113641]},{"pos":[113647,113664],"content":"Method isSubsetOf","linkify":"Method isSubsetOf","nodes":[{"content":"Method isSubsetOf","pos":[0,17]}]},{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[113666,113748]},{"pos":[113815,113825],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"target","pos":[113827,113833]},{"content":"A CodeAccessPermission class object.","pos":[113836,113872]},{"pos":[113879,113891],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the current permission is a subset of the specified permission; otherwise, false.","pos":[113893,113982]},{"pos":[113989,113996],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You override this method when you derive a class from the CodeAccessPermission class.","pos":[113998,114083]},{"content":"For more information, see the isSubsetOf method.","pos":[114084,114132]},{"pos":[114138,114148],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates an new instance of the InteropPermission class.","pos":[114150,114205]},{"pos":[114251,114261],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"kind","pos":[114263,114267]},{"content":"An InteropKind system enumeration value that specifies access to managed or unmanaged code.","pos":[114270,114361]},{"pos":[114368,114376],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following code example shows a new instance of the InteropPermission class that specifies access to Win32 DLLs.","pos":[114378,114493]},{"pos":[114651,114659],"content":"Class Io","linkify":"Class Io","nodes":[{"content":"Class Io","pos":[0,8]}]},{"content":"The Io class serves as the base class for the format-specific Io classes, which are used to access external files.","pos":[114689,114803]},{"pos":[114809,114816],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The basic Io class features no actual data I/O but works as base class for the format-specific Io classes.","pos":[114818,114924]},{"content":"The methods that are common to all Io classes are described here.","pos":[114925,114990]},{"content":"For format-specific features and behavior of the member functions, refer to the documentation for each of the I/O classes.","pos":[114991,115113]},{"content":"To support reading and writing of different formats of external files, MorphX features a range of different Io classesfor comma-separated files, for comma-separated 7 bit files, for binary files, and for plain-text files.","pos":[115114,115335]},{"pos":[115341,115349],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[115355,115362],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[115366,115372]},{"content":"Description","pos":[115413,115424]},{"content":"public str inFieldDelimiter(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[115718,115760],"source":"public str inFieldDelimiter(\\[str value\\])"},{"content":"Determines the delimiter used to separate fields in records accessed by the <ph id=\"ph1\">\\*</ph>Io classes.","pos":[115765,115854],"source":"Determines the delimiter used to separate fields in records accessed by the \\*Io classes."},{"content":"public str inRecordDelimiter(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[115894,115937],"source":"public str inRecordDelimiter(\\[str value\\])"},{"content":"Determines to the <ph id=\"ph1\">\\*</ph>Io classes what character or characters to search for to determine whether a full record has been read.","pos":[115941,116064],"source":"Determines to the \\*Io classes what character or characters to search for to determine whether a full record has been read."},{"content":"public int inRecordLength(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[116070,116110],"source":"public int inRecordLength(\\[int value\\])"},{"content":"Gets or sets the number of characters to read for each record in a file.","pos":[116117,116189]},{"content":"public str outFieldDelimiter(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[116246,116289],"source":"public str outFieldDelimiter(\\[str value\\])"},{"content":"Gets or sets the sequence of characters that are written to a file that is used to separate the fields of a record.","pos":[116293,116408]},{"content":"public str outRecordDelimiter(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[116422,116466],"source":"public str outRecordDelimiter(\\[str value\\])"},{"content":"Gets or sets the sequence of characters that is written to the output files, which separate the records in the output files.","pos":[116469,116593]},{"content":"public container read()","pos":[116598,116621]},{"content":"Reads the next full record from the Io object.","pos":[116645,116691]},{"content":"public IO<ph id=\"ph1\">\\_</ph>Status status()","pos":[116774,116800],"source":"public IO\\_Status status()"},{"content":"Retrieves the status of the last operation performed on the Io object.","pos":[116821,116891]},{"content":"public boolean write(VarArg values)","pos":[116950,116985]},{"content":"Writes values of a simple type.","pos":[116997,117028]},{"content":"public boolean writeExp(container data)","pos":[117126,117165]},{"content":"Writes the content of a container to the file.","pos":[117173,117219]},{"content":"public void finalize()","pos":[117302,117324]},{"content":"Closes the file and, if data was written, flushes the file buffers to disk.","pos":[117349,117424]},{"content":"public void new(str filename, str mode)","pos":[117478,117517]},{"content":"Creates a new instance of the Io class.","pos":[117525,117564]},{"pos":[117657,117680],"content":"Method inFieldDelimiter","linkify":"Method inFieldDelimiter","nodes":[{"content":"Method inFieldDelimiter","pos":[0,23]}]},{"content":"Determines the delimiter used to separate fields in records accessed by the <ph id=\"ph1\">\\*</ph>Io classes.","pos":[117682,117771],"source":"Determines the delimiter used to separate fields in records accessed by the \\*Io classes."},{"pos":[117824,117834],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[117836,117841]},{"pos":[117850,117862],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The delimiter used to separate fields in records accessed by the <ph id=\"ph1\">\\*</ph>Io classes.","pos":[117864,117942],"source":"The delimiter used to separate fields in records accessed by the \\*Io classes."},{"pos":[117948,117972],"content":"Method inRecordDelimiter","linkify":"Method inRecordDelimiter","nodes":[{"content":"Method inRecordDelimiter","pos":[0,24]}]},{"content":"Determines to the <ph id=\"ph1\">\\*</ph>Io classes what character or characters to search for to determine whether a full record has been read.","pos":[117974,118097],"source":"Determines to the \\*Io classes what character or characters to search for to determine whether a full record has been read."},{"pos":[118151,118161],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[118163,118168]},{"pos":[118177,118189],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The character or characters that indicate whether a full record has been read.","pos":[118191,118269]},{"pos":[118276,118283],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For standard text, the delimiter is a newline character.","pos":[118285,118341]},{"pos":[118347,118368],"content":"Method inRecordLength","linkify":"Method inRecordLength","nodes":[{"content":"Method inRecordLength","pos":[0,21]}]},{"content":"Gets or sets the number of characters to read for each record in a file.","pos":[118370,118442]},{"pos":[118493,118503],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[118505,118510]},{"pos":[118519,118531],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of characters to read for each record in the file.","pos":[118533,118594]},{"pos":[118601,118608],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For files that have a fixed-length format, use the inRecordLength property to guarantee that no more than the specified number of characters are read for each record.","pos":[118610,118776]},{"content":"If the record format is overruled by a specified inRecordDelimiter property value , that is the inRecordDelimiter value is met before the fixed length is read, the record is accepted, and no additional data is read.","pos":[118777,118992]},{"content":"To guarantee that a fixed number of characters are read, set the inRecordDelimiter property value to an empty string.","pos":[118993,119110]},{"content":"When no inRecordDelimiter property value is found, the inRecordDelimiter property value is the maximum limit of characters to read.","pos":[119111,119242]},{"content":"Set the inRecordDelimiter property value to zero to disable the record length check.","pos":[119243,119327]},{"pos":[119333,119357],"content":"Method outFieldDelimiter","linkify":"Method outFieldDelimiter","nodes":[{"content":"Method outFieldDelimiter","pos":[0,24]}]},{"content":"Gets or sets the sequence of characters that are written to a file that is used to separate the fields of a record.","pos":[119359,119474]},{"pos":[119528,119538],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[119540,119545]},{"pos":[119554,119566],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The sequence of characters that are written to a file that is used to separate the fields of a record.","pos":[119568,119670]},{"pos":[119676,119701],"content":"Method outRecordDelimiter","linkify":"Method outRecordDelimiter","nodes":[{"content":"Method outRecordDelimiter","pos":[0,25]}]},{"content":"Gets or sets the sequence of characters that is written to the output files, which separate the records in the output files.","pos":[119703,119827]},{"pos":[119882,119892],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[119894,119899]},{"pos":[119908,119920],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The sequence of characters that is written to the output files.","pos":[119922,119985]},{"pos":[119992,119999],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For standard text files, the delimiter is a newline character.","pos":[120001,120063]},{"pos":[120069,120080],"content":"Method read","linkify":"Method read","nodes":[{"content":"Method read","pos":[0,11]}]},{"content":"Reads the next full record from the Io object.","pos":[120082,120128]},{"pos":[120164,120176],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that holds the next full record from the Io object.","pos":[120178,120241]},{"pos":[120248,120255],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The definition of the next full record is controlled by the inFieldDelimiter, inRecordDelimiter, and inRecordLength method properties.","pos":[120257,120391]},{"content":"The record is returned as a container.","pos":[120392,120430]},{"content":"Each entry in the container equals one field in the record.","pos":[120431,120490]},{"content":"Each of the specialized Io classes has default settings for inFieldDelimiter, inRecordDelimiter, and inRecordLength enabling input and output of the most common formats.","pos":[120491,120660]},{"content":"You might have to adjust these to support the wanted format.","pos":[120661,120721]},{"pos":[120728,120736],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"This method demonstrates the use of the run method.","pos":[120738,120789]},{"content":"However, the following example will not compile in a job as it must be run in the context of a class, form, or other object.","pos":[120790,120914]},{"pos":[121314,121327],"content":"Method status","linkify":"Method status","nodes":[{"content":"Method status","pos":[0,13]}]},{"content":"Retrieves the status of the last operation performed on the Io object.","pos":[121329,121399]},{"pos":[121437,121449],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The status of the last operation, as an IO<ph id=\"ph1\">\\_</ph>Status system enumeration value.","pos":[121451,121527],"source":"The status of the last operation, as an IO\\_Status system enumeration value."},{"pos":[121534,121541],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The range of possible IO<ph id=\"ph1\">\\_</ph>Status values returned varies among Io Classes.","pos":[121543,121616],"source":"The range of possible IO\\_Status values returned varies among Io Classes."},{"pos":[121623,121631],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[121892,121904],"content":"Method write","linkify":"Method write","nodes":[{"content":"Method write","pos":[0,12]}]},{"content":"Writes values of a simple type.","pos":[121906,121937]},{"pos":[121985,121995],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"values","pos":[121997,122003]},{"content":"The simple types are string, integer, real, enum, and date.","pos":[122006,122065]},{"pos":[122072,122084],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the write operation succeeds; otherwise false.","pos":[122086,122140]},{"content":"If the write failed, the status method could be checked for the cause.","pos":[122141,122211]},{"pos":[122218,122225],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The method accepts a variable number of arguments.","pos":[122227,122277]},{"content":"Each value specified is put into the output record as a field.","pos":[122278,122340]},{"content":"The first argument as the first field, the second argument as the second field, and so on.","pos":[122341,122431]},{"content":"The fields are separated with the field delimiter that is specified in the outFieldDelimiter method.","pos":[122432,122532]},{"content":"Each record is separated by the outRecordDelimiter method.","pos":[122533,122591]},{"content":"To write complete containers, use the writeExp method.","pos":[122592,122646]},{"pos":[122652,122667],"content":"Method writeExp","linkify":"Method writeExp","nodes":[{"content":"Method writeExp","pos":[0,15]}]},{"content":"Writes the content of a container to the file.","pos":[122669,122715]},{"pos":[122767,122777],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[122779,122783]},{"content":"The container with data for the record.","pos":[122786,122825]},{"pos":[122832,122844],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the operation succeeded; otherwise false.","pos":[122846,122895]},{"pos":[122902,122909],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If this method returns false, check the status method for the cause.","pos":[122911,122979]},{"content":"The entries in the container are treated as fields, and the container is treated as a full record.","pos":[122980,123078]},{"content":"The field separator is defined in the outFieldDelimiter method.","pos":[123079,123142]},{"content":"The record separator is defined in the outRecordDelimiter method.","pos":[123143,123208]},{"pos":[123215,123223],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[123727,123742],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"content":"Closes the file and, if data was written, flushes the file buffers to disk.","pos":[123744,123819]},{"pos":[123854,123861],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The object is typically finalized by leaving the scope, so finalize is typically not called directly.","pos":[123863,123964]},{"content":"Written output will not be valid before the object is finalized.","pos":[123965,124029]},{"pos":[124035,124045],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates a new instance of the Io class.","pos":[124047,124086]},{"pos":[124138,124148],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filename","pos":[124150,124158]},{"content":"The mode in which the file should be opened.","pos":[124161,124205]},{"content":"mode","pos":[124217,124221]},{"content":"The mode in which the file should be opened.","pos":[124224,124268]},{"pos":[124275,124282],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The mode parameter can be one of the following modes:","pos":[124284,124337]},{"content":"R – read","pos":[124343,124351]},{"content":"W – write","pos":[124356,124365]},{"content":"A – append (implies W)","pos":[124370,124392]},{"content":"T – translate (text)","pos":[124397,124417]},{"content":"B – binary","pos":[124422,124432]},{"content":"A run-time error occurs if the file is accessed with a method that does not correspond to the current opened mode (for example, if an attempt is made to write to a read-mode file).","pos":[124434,124614]},{"content":"If an attacker can control input to the new method, a security risk exists.","pos":[124615,124690]},{"content":"Therefore, this method runs under Code Access Security.","pos":[124691,124746]},{"content":"Calls to this method on the server require permission.","pos":[124747,124801]},{"content":".","pos":[124802,124803]},{"content":"Ensure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.","pos":[124804,124936]},{"pos":[124943,124951],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"This example uses the Io class to write to ExampleFile.","pos":[124953,125008]}],"content":"---\n# required metadata\n\ntitle: I Classes\ndescription: System API classes that start with the letter I.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-24 14 - 21 - 48\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 52171\nms.assetid: bd6df991-7b90-40f0-b342-025ab000c24c\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# I Classes\n\nSystem API classes that start with the letter I.\n\nClass IDispatcherProxy\n----------------------\n\n    class IDispatcherProxy\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                         | Description |\n|------------------------------------------------|-------------|\n| public AnyType invoke(str methodName, VarArg ) |             |\n| public void refresh()                          |             |\n\n### Method invoke\n\n    public AnyType invoke(str methodName, VarArg )\n\n#### Parameters\n\nmethodName  \n\n<!-- -->\n\n  \n\n#### Return Value\n\n### Method refresh\n\n    public void refresh()\n\n## Class IISApplicationObject\n    class IISApplicationObject extends Object\n\nThe IISApplicationObject class wraps the Application object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one connection between the methods of the IISApplicationObject class and the methods of the Application object that is offered by IIS. Therefore, for more information about the methods of the IISApplicationObject class, see the Microsoft documentation for IIS. Use of the IISApplicationObject class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                                                 | Description                                                   |\n|--------------------------------------------------------|---------------------------------------------------------------|\n| public IISVariantDictionary contents()                 |                                                               |\n| public ComInterface interface()                        |                                                               |\n| public IISVariantDictionary staticObjects()            |                                                               |\n| public COMVariant value(str value, \\[COMVariant var\\]) |                                                               |\n| public str valueTxt(str value, \\[str var\\])            |                                                               |\n| public void new()                                      | Initializes a new instance of the IISApplicationObject class. |\n| public void finalize()                                 |                                                               |\n| public void lock()                                     |                                                               |\n| public void unLock()                                   |                                                               |\n\n### Method contents\n\n    public IISVariantDictionary contents()\n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method staticObjects\n\n    public IISVariantDictionary staticObjects()\n\n#### Return Value\n\n### Method value\n\n    public COMVariant value(str value, [COMVariant var])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nvar  \n\n#### Return Value\n\n### Method valueTxt\n\n    public str valueTxt(str value, [str var])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nvar  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the IISApplicationObject class.\n\n    public void new()\n\n### Method finalize\n\n    public void finalize()\n\n### Method lock\n\n    public void lock()\n\n### Method unLock\n\n    public void unLock()\n\n## Class IISContextObject\n    class IISContextObject extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                 | Description                                               |\n|--------------------------------------------------------|-----------------------------------------------------------|\n| public ComInterface interface()                        |                                                           |\n| public boolean isTraceEnabled()                        |                                                           |\n| public IISVariantDictionary items()                    |                                                           |\n| public int traceMode(int mode)                         |                                                           |\n| public COMVariant value(str value, \\[COMVariant var\\]) |                                                           |\n| public str valueTxt(str value, \\[str var\\])            |                                                           |\n| public void traceWrite(str category, str message)      |                                                           |\n| public void finalize()                                 |                                                           |\n| public void traceWarn(str category, str message)       |                                                           |\n| public void new()                                      | Initializes a new instance of the IISContextObject class. |\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method isTraceEnabled\n\n    public boolean isTraceEnabled()\n\n#### Return Value\n\n### Method items\n\n    public IISVariantDictionary items()\n\n#### Return Value\n\n### Method traceMode\n\n    public int traceMode(int mode)\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method value\n\n    public COMVariant value(str value, [COMVariant var])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nvar  \n\n#### Return Value\n\n### Method valueTxt\n\n    public str valueTxt(str value, [str var])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nvar  \n\n#### Return Value\n\n### Method traceWrite\n\n    public void traceWrite(str category, str message)\n\n#### Parameters\n\ncategory  \n\n<!-- -->\n\nmessage  \n\n### Method finalize\n\n    public void finalize()\n\n### Method traceWarn\n\n    public void traceWarn(str category, str message)\n\n#### Parameters\n\ncategory  \n\n<!-- -->\n\nmessage  \n\n### Method new\n\nInitializes a new instance of the IISContextObject class.\n\n    public void new()\n\n## Class IISPostedFile\n    class IISPostedFile extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                 | Description                                            |\n|----------------------------------------|--------------------------------------------------------|\n| public int contentLength()             |                                                        |\n| public str contentType()               |                                                        |\n| public str fileName()                  |                                                        |\n| public container read(int countToRead) |                                                        |\n| public void finalize()                 |                                                        |\n| public void new()                      | Initializes a new instance of the IISPostedFile class. |\n\n### Method contentLength\n\n    public int contentLength()\n\n#### Return Value\n\n### Method contentType\n\n    public str contentType()\n\n#### Return Value\n\n### Method fileName\n\n    public str fileName()\n\n#### Return Value\n\n### Method read\n\n    public container read(int countToRead)\n\n#### Parameters\n\ncountToRead  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the IISPostedFile class.\n\n    public void new()\n\n## Class IISReadCookie\n    class IISReadCookie extends Object\n\nThe IISReadCookie class wraps the ReadCookie object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one connection between the methods of the IISReadCookie class and the methods of the ReadCookie object that is offered by IIS. Therefore, for more information about the methods of the IISReadCookie class, see the Microsoft documentation for IIS. Use of the IISReadCookie class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                           | Description                                     |\n|----------------------------------|-------------------------------------------------|\n| public int count()               |                                                 |\n| public COMEnum2Variant getEnum() |                                                 |\n| public boolean hasKeys()         |                                                 |\n| public ComInterface interface()  |                                                 |\n| public str item(\\[str item\\])    |                                                 |\n| public str key(str key)          |                                                 |\n| public void finalize()           |                                                 |\n| public void new(COM readCookie)  | Initializes a new instance of the Object class. |\n\n### Method count\n\n    public int count()\n\n#### Return Value\n\n### Method getEnum\n\n    public COMEnum2Variant getEnum()\n\n#### Return Value\n\n### Method hasKeys\n\n    public boolean hasKeys()\n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method item\n\n    public str item([str item])\n\n#### Parameters\n\nitem  \n\n#### Return Value\n\n### Method key\n\n    public str key(str key)\n\n#### Parameters\n\nkey  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(COM readCookie)\n\n#### Parameters\n\nreadCookie  \n\n## Class IISRequest\n    class IISRequest extends Object\n\nThe IISRequest class wraps the Request object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one connection between the methods of the IISRequest class and the methods of the Request object that is offered by IIS. Therefore, for more information about the methods of the IISRequest class, see the Microsoft documentation for IIS. Use of the IISRequest class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                                               | Description                                         |\n|------------------------------------------------------|-----------------------------------------------------|\n| public COMVariant binaryRead(COMVariant countToRead) |                                                     |\n| public IISRequestDictionary clientCertificate()      |                                                     |\n| public IISRequestDictionary cookies()                |                                                     |\n| public IISPostedFile file(COMVariant index)          |                                                     |\n| public int fileCount()                               |                                                     |\n| public IISRequestDictionary form()                   |                                                     |\n| public ComInterface interface()                      |                                                     |\n| public str item(str item)                            |                                                     |\n| public IISRequestDictionary queryString()            |                                                     |\n| public IISRequestDictionary serverVariables()        |                                                     |\n| public int totalBytes()                              |                                                     |\n| public void finalize()                               |                                                     |\n| public void new()                                    | Initializes a new instance of the IISRequest class. |\n\n### Method binaryRead\n\n    public COMVariant binaryRead(COMVariant countToRead)\n\n#### Parameters\n\ncountToRead  \n\n#### Return Value\n\n### Method clientCertificate\n\n    public IISRequestDictionary clientCertificate()\n\n#### Return Value\n\n### Method cookies\n\n    public IISRequestDictionary cookies()\n\n#### Return Value\n\n### Method file\n\n    public IISPostedFile file(COMVariant index)\n\n#### Parameters\n\nindex  \n\n#### Return Value\n\n### Method fileCount\n\n    public int fileCount()\n\n#### Return Value\n\n### Method form\n\n    public IISRequestDictionary form()\n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method item\n\n    public str item(str item)\n\n#### Parameters\n\nitem  \n\n#### Return Value\n\n### Method queryString\n\n    public IISRequestDictionary queryString()\n\n#### Return Value\n\n### Method serverVariables\n\n    public IISRequestDictionary serverVariables()\n\n#### Return Value\n\n### Method totalBytes\n\n    public int totalBytes()\n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the IISRequest class.\n\n    public void new()\n\n## Class IISRequestDictionary\n    class IISRequestDictionary extends Object\n\nThe IISRequestDictionary class wraps the RequestDictionary object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one relationship between the methods of the IISRequestDictionary class and the methods of the RequestDictionary object that is offered by IIS. Therefore, for more information about the methods of the IISRequestDictionary class, see the Microsoft documentation for IIS. Use of the IISRequestDictionary class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                                              | Description                                     |\n|-----------------------------------------------------|-------------------------------------------------|\n| public int count()                                  |                                                 |\n| public COMEnum2Variant getEnum()                    |                                                 |\n| public ComInterface interface()                     |                                                 |\n| public COMVariant item(COMVariant item)             |                                                 |\n| public IISReadCookie itemReadCookie(\\[str item\\])   |                                                 |\n| public IISStringList itemStringList(\\[str item\\])   |                                                 |\n| public str itemTxt(str item)                        |                                                 |\n| public IISWriteCookie itemWriteCookie(\\[str item\\]) |                                                 |\n| public str key(str key)                             |                                                 |\n| public void finalize()                              |                                                 |\n| public void new(COM requestDictionary)              | Initializes a new instance of the Object class. |\n\n### Method count\n\n    public int count()\n\n#### Return Value\n\n### Method getEnum\n\n    public COMEnum2Variant getEnum()\n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method item\n\n    public COMVariant item(COMVariant item)\n\n#### Parameters\n\nitem  \n\n#### Return Value\n\n### Method itemReadCookie\n\n    public IISReadCookie itemReadCookie([str item])\n\n#### Parameters\n\nitem  \n\n#### Return Value\n\n### Method itemStringList\n\n    public IISStringList itemStringList([str item])\n\n#### Parameters\n\nitem  \n\n#### Return Value\n\n### Method itemTxt\n\n    public str itemTxt(str item)\n\n#### Parameters\n\nitem  \n\n#### Return Value\n\n### Method itemWriteCookie\n\n    public IISWriteCookie itemWriteCookie([str item])\n\n#### Parameters\n\nitem  \n\n#### Return Value\n\n### Method key\n\n    public str key(str key)\n\n#### Parameters\n\nkey  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(COM requestDictionary)\n\n#### Parameters\n\nrequestDictionary  \n\n## Class IISResponse\n    class IISResponse extends Object\n\nThe IISResponse class wraps the Response object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one relationship between the methods of the IISResponse class and the methods of the Response object that is offered by IIS. Therefore, for more information about the methods of the IISResponse class, see the Microsoft documentation for IIS. Use of the IISResponse class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                                                    | Description                                          |\n|-----------------------------------------------------------|------------------------------------------------------|\n| public boolean buffer(\\[boolean isBuffering\\])            |                                                      |\n| public str cacheControl(\\[str cacheControl\\])             |                                                      |\n| public boolean cacheWrite(\\[boolean cache\\])              |                                                      |\n| public str charSet(\\[str charSet\\])                       |                                                      |\n| public str contentType(\\[str contentType\\])               |                                                      |\n| public IISRequestDictionary cookies()                     |                                                      |\n| public int expires(\\[int expiresMinutes\\])                |                                                      |\n| public COMVariant expiresAbsolute(\\[COMVariant expires\\]) |                                                      |\n| public ComInterface interface()                           |                                                      |\n| public boolean isClientConnected()                        |                                                      |\n| public str status(\\[str status\\])                         | Gets or sets the status of an object.                |\n| public void addHeader(str headerName, str headerValue)    |                                                      |\n| public void writeTxt(str text)                            |                                                      |\n| public void write(COMVariant text)                        |                                                      |\n| public void clear()                                       |                                                      |\n| public void finalize()                                    |                                                      |\n| public void binaryWrite(COMVariant input)                 |                                                      |\n| public void appendToLog(str logEntry)                     |                                                      |\n| public void new()                                         | Initializes a new instance of the IISResponse class. |\n| public void redirect(str url)                             |                                                      |\n| public void flush()                                       |                                                      |\n| public void pics(str headerValue)                         |                                                      |\n| public void end()                                         |                                                      |\n\n### Method buffer\n\n    public boolean buffer([boolean isBuffering])\n\n#### Parameters\n\nisBuffering  \n\n#### Return Value\n\n### Method cacheControl\n\n    public str cacheControl([str cacheControl])\n\n#### Parameters\n\ncacheControl  \n\n#### Return Value\n\n### Method cacheWrite\n\n    public boolean cacheWrite([boolean cache])\n\n#### Parameters\n\ncache  \n\n#### Return Value\n\n### Method charSet\n\n    public str charSet([str charSet])\n\n#### Parameters\n\ncharSet  \n\n#### Return Value\n\n### Method contentType\n\n    public str contentType([str contentType])\n\n#### Parameters\n\ncontentType  \n\n#### Return Value\n\n### Method cookies\n\n    public IISRequestDictionary cookies()\n\n#### Return Value\n\n### Method expires\n\n    public int expires([int expiresMinutes])\n\n#### Parameters\n\nexpiresMinutes  \n\n#### Return Value\n\n### Method expiresAbsolute\n\n    public COMVariant expiresAbsolute([COMVariant expires])\n\n#### Parameters\n\nexpires  \n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method isClientConnected\n\n    public boolean isClientConnected()\n\n#### Return Value\n\n### Method status\n\nGets or sets the status of an object.\n\n    public str status([str status])\n\n#### Parameters\n\nstatus  \n\n#### Return Value\n\nThe current value of the status of the object.\n\n### Method addHeader\n\n    public void addHeader(str headerName, str headerValue)\n\n#### Parameters\n\nheaderName  \n\n<!-- -->\n\nheaderValue  \n\n### Method writeTxt\n\n    public void writeTxt(str text)\n\n#### Parameters\n\ntext  \n\n### Method write\n\n    public void write(COMVariant text)\n\n#### Parameters\n\ntext  \n\n### Method clear\n\n    public void clear()\n\n### Method finalize\n\n    public void finalize()\n\n### Method binaryWrite\n\n    public void binaryWrite(COMVariant input)\n\n#### Parameters\n\ninput  \n\n### Method appendToLog\n\n    public void appendToLog(str logEntry)\n\n#### Parameters\n\nlogEntry  \n\n### Method new\n\nInitializes a new instance of the IISResponse class.\n\n    public void new()\n\n### Method redirect\n\n    public void redirect(str url)\n\n#### Parameters\n\nurl  \n\n### Method flush\n\n    public void flush()\n\n### Method pics\n\n    public void pics(str headerValue)\n\n#### Parameters\n\nheaderValue  \n\n### Method end\n\n    public void end()\n\n## Class IISServer\n    class IISServer extends Object\n\nThe IISServer class wraps the Server object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one connection between the methods of the IISServer class and the methods of the Server object that is offered by IIS. Therefore, for more information about the methods of the IISServer class, see the Microsoft documentation for IIS. Use of the IISServer class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                                           | Description                                        |\n|--------------------------------------------------|----------------------------------------------------|\n| public COM createObject(str progID)              |                                                    |\n| public str htmlEncode(str txt)                   |                                                    |\n| public ComInterface interface()                  |                                                    |\n| public str mapPath(str logicalPath)              |                                                    |\n| public int scriptTimeout(\\[int timeoutSeconds\\]) |                                                    |\n| public str urlEncode(str txt)                    |                                                    |\n| public str urlPathEncode(str txt)                |                                                    |\n| public void execute(str logicalPath)             |                                                    |\n| public void transfer(str logicalPath)            |                                                    |\n| public void new()                                | Initializes a new instance of the IISServer class. |\n| public void finalize()                           |                                                    |\n\n### Method createObject\n\n    public COM createObject(str progID)\n\n#### Parameters\n\nprogID  \n\n#### Return Value\n\n### Method htmlEncode\n\n    public str htmlEncode(str txt)\n\n#### Parameters\n\ntxt  \n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method mapPath\n\n    public str mapPath(str logicalPath)\n\n#### Parameters\n\nlogicalPath  \n\n#### Return Value\n\n### Method scriptTimeout\n\n    public int scriptTimeout([int timeoutSeconds])\n\n#### Parameters\n\ntimeoutSeconds  \n\n#### Return Value\n\n### Method urlEncode\n\n    public str urlEncode(str txt)\n\n#### Parameters\n\ntxt  \n\n#### Return Value\n\n### Method urlPathEncode\n\n    public str urlPathEncode(str txt)\n\n#### Parameters\n\ntxt  \n\n#### Return Value\n\n### Method execute\n\n    public void execute(str logicalPath)\n\n#### Parameters\n\nlogicalPath  \n\n### Method transfer\n\n    public void transfer(str logicalPath)\n\n#### Parameters\n\nlogicalPath  \n\n### Method new\n\nInitializes a new instance of the IISServer class.\n\n    public void new()\n\n### Method finalize\n\n    public void finalize()\n\n## Class IISSessionObject\n    class IISSessionObject extends Object\n\nThe IISSessionObject class wraps the Session object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one connection between the methods of the IISSessionObject class and the methods of the Session object that is offered by IIS. Therefore, for more information about the methods of the IISSessionObject class, see the Microsoft documentation for IIS. Use of the IISSessionObject class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                                                 | Description                                               |\n|--------------------------------------------------------|-----------------------------------------------------------|\n| public int codePage(\\[int codePage\\])                  |                                                           |\n| public IISVariantDictionary contents()                 |                                                           |\n| public str getSessionID()                              |                                                           |\n| public ComInterface interface()                        |                                                           |\n| public int lcid(\\[int lcid\\])                          |                                                           |\n| public IISVariantDictionary staticObjects()            |                                                           |\n| public int timeout(\\[int timeout\\])                    |                                                           |\n| public COMVariant value(str value, \\[COMVariant var\\]) |                                                           |\n| public str valueTxt(str value, \\[str var\\])            |                                                           |\n| public void new()                                      | Initializes a new instance of the IISSessionObject class. |\n| public void abandon()                                  |                                                           |\n| public void finalize()                                 |                                                           |\n\n### Method codePage\n\n    public int codePage([int codePage])\n\n#### Parameters\n\ncodePage  \n\n#### Return Value\n\n### Method contents\n\n    public IISVariantDictionary contents()\n\n#### Return Value\n\n### Method getSessionID\n\n    public str getSessionID()\n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method lcid\n\n    public int lcid([int lcid])\n\n#### Parameters\n\nlcid  \n\n#### Return Value\n\n### Method staticObjects\n\n    public IISVariantDictionary staticObjects()\n\n#### Return Value\n\n### Method timeout\n\n    public int timeout([int timeout])\n\n#### Parameters\n\ntimeout  \n\n#### Return Value\n\n### Method value\n\n    public COMVariant value(str value, [COMVariant var])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nvar  \n\n#### Return Value\n\n### Method valueTxt\n\n    public str valueTxt(str value, [str var])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nvar  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the IISSessionObject class.\n\n    public void new()\n\n### Method abandon\n\n    public void abandon()\n\n### Method finalize\n\n    public void finalize()\n\n## Class IISStringList\n    class IISStringList extends Object\n\nThe IISStringList class wraps the StringList object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one connection between the methods of the IISStringList class and the methods of the StringList object that is offered by IIS. Therefore, for more information about the methods of the IISStringList class, see the Microsoft documentation for IIS. Use of the IISStringList class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                           | Description                                     |\n|----------------------------------|-------------------------------------------------|\n| public int count()               |                                                 |\n| public COMEnum2Variant getEnum() |                                                 |\n| public ComInterface interface()  |                                                 |\n| public str item(\\[str item\\])    |                                                 |\n| public void finalize()           |                                                 |\n| public void new(COM stringList)  | Initializes a new instance of the Object class. |\n\n### Method count\n\n    public int count()\n\n#### Return Value\n\n### Method getEnum\n\n    public COMEnum2Variant getEnum()\n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method item\n\n    public str item([str item])\n\n#### Parameters\n\nitem  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(COM stringList)\n\n#### Parameters\n\nstringList  \n\n## Class IISVariantDictionary\n    class IISVariantDictionary extends Object\n\nThe IISVariantDictionary class wraps the VariantDictionary object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one connection between the methods of the IISVariantDictionary class and the methods of the VariantDictionary object that is offered by IIS. Therefore, for more information about the methods of the IISVariantDictionary class, see the Microsoft documentation for IIS. Use of the IISVariantDictionary class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                                                      | Description                                     |\n|-------------------------------------------------------------|-------------------------------------------------|\n| public int count()                                          |                                                 |\n| public COMEnum2Variant getEnum()                            |                                                 |\n| public ComInterface interface()                             |                                                 |\n| public COMVariant item(COMVariant item, \\[COMVariant var\\]) |                                                 |\n| public COM itemObj(str item, \\[COM var\\])                   |                                                 |\n| public str itemTxt(str item, \\[str var\\])                   |                                                 |\n| public str key(str key)                                     |                                                 |\n| public void finalize()                                      |                                                 |\n| public void remove(str key)                                 |                                                 |\n| public void removeAll()                                     |                                                 |\n| public void new(COM variantDictionary)                      | Initializes a new instance of the Object class. |\n\n### Method count\n\n    public int count()\n\n#### Return Value\n\n### Method getEnum\n\n    public COMEnum2Variant getEnum()\n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method item\n\n    public COMVariant item(COMVariant item, [COMVariant var])\n\n#### Parameters\n\nitem  \n\n<!-- -->\n\nvar  \n\n#### Return Value\n\n### Method itemObj\n\n    public COM itemObj(str item, [COM var])\n\n#### Parameters\n\nitem  \n\n<!-- -->\n\nvar  \n\n#### Return Value\n\n### Method itemTxt\n\n    public str itemTxt(str item, [str var])\n\n#### Parameters\n\nitem  \n\n<!-- -->\n\nvar  \n\n#### Return Value\n\n### Method key\n\n    public str key(str key)\n\n#### Parameters\n\nkey  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n### Method remove\n\n    public void remove(str key)\n\n#### Parameters\n\nkey  \n\n### Method removeAll\n\n    public void removeAll()\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(COM variantDictionary)\n\n#### Parameters\n\nvariantDictionary  \n\n## Class IISViewState\n    class IISViewState extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                         | Description                                           |\n|------------------------------------------------|-------------------------------------------------------|\n| public boolean viewStateContains(str key)      |                                                       |\n| public str viewStateItem(str key, \\[str val\\]) |                                                       |\n| public void finalize()                         |                                                       |\n| public void viewStateDelete(str key)           |                                                       |\n| public void new()                              | Initializes a new instance of the IISViewState class. |\n\n### Method viewStateContains\n\n    public boolean viewStateContains(str key)\n\n#### Parameters\n\nkey  \n\n#### Return Value\n\n### Method viewStateItem\n\n    public str viewStateItem(str key, [str val])\n\n#### Parameters\n\nkey  \n\n<!-- -->\n\nval  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n### Method viewStateDelete\n\n    public void viewStateDelete(str key)\n\n#### Parameters\n\nkey  \n\n### Method new\n\nInitializes a new instance of the IISViewState class.\n\n    public void new()\n\n## Class IISWriteCookie\n    class IISWriteCookie extends Object\n\nThe IISWriteCookie class wraps the WriteCookie object that is offered by Internet Information Services (IIS).\n\n### Remarks\n\nThere is a one-to-one connection between the methods of the IISWriteCookie class and the methods of the WriteCookie object that is offered by IIS. Therefore, for more information about the methods of the IISWriteCookie class, see the Microsoft documentation for IIS. Use of the IISWriteCookie class is valid only when code is run by the Microsoft Dynamics 365 for Operations Internet Connector under IIS.\n\n### Examples\n\n### Methods\n\n| Method                                  | Description                                     |\n|-----------------------------------------|-------------------------------------------------|\n| public COMEnum2Variant getEnum()        |                                                 |\n| public boolean hasKeys()                |                                                 |\n| public ComInterface interface()         |                                                 |\n| public void new(COM writeCookie)        | Initializes a new instance of the Object class. |\n| public void secure(boolean secure)      |                                                 |\n| public void path(str path)              |                                                 |\n| public void finalize()                  |                                                 |\n| public void domain(str domain)          |                                                 |\n| public void expires(COMVariant expires) |                                                 |\n| public void item(str item, str value)   |                                                 |\n\n### Method getEnum\n\n    public COMEnum2Variant getEnum()\n\n#### Return Value\n\n### Method hasKeys\n\n    public boolean hasKeys()\n\n#### Return Value\n\n### Method interface\n\n    public ComInterface interface()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(COM writeCookie)\n\n#### Parameters\n\nwriteCookie  \n\n### Method secure\n\n    public void secure(boolean secure)\n\n#### Parameters\n\nsecure  \n\n### Method path\n\n    public void path(str path)\n\n#### Parameters\n\npath  \n\n### Method finalize\n\n    public void finalize()\n\n### Method domain\n\n    public void domain(str domain)\n\n#### Parameters\n\ndomain  \n\n### Method expires\n\n    public void expires(COMVariant expires)\n\n#### Parameters\n\nexpires  \n\n### Method item\n\n    public void item(str item, str value)\n\n#### Parameters\n\nitem  \n\n<!-- -->\n\nvalue  \n\n## Class Image\n    class Image extends BinData\n\nProvides methods for loading, saving, and manipulating images. If you want to manipulate several images at the same time, use the Imagelist Class.\n\n### Remarks\n\nYou can construct Image objects from the following file types:\n\n-   Raster (bitmap) formats - .bmp, .gif, .jpg, .png, .tiff, and .exif\n-   Vector formats - .emf and .wmf\n\nIf you want to work with several images at the same time, use the Imagelist class. You can construct the Image objects from the following file types:\n\n-   Raster, which is a bitmap, formats - .bmp, .gif, .jpg, .png, .tiff, and .exif\n-   Vector formats - .emf and .wmf\n\nIn Microsoft Dynamics 365 for Operations, the Image class is bound to the client. The class can no longer be run from the server because of the security risks that are associated with file handling.\n\n### Examples\n\nThe following example prints the height of Picture.jpg in pixels.\n\n    Image img = new  Image(); \n    img.loadFile(@'C:\\MyPictures\\Picture.jpg'); \n    print img.height(); \n    pause;\n\n### Methods\n\n| Method                                                                                                      | Description                                                                                                                                   |\n|-------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|\n| public int captureScreen(int left, int top, int right, int bottom)                                          | Captures an image from the screen by using the coordinates that are supplied in the parameter list.                                           |\n| public int captureWindow(int hWnd)                                                                          | Captures a window as an image, using the handle that is supplied as a parameter.                                                              |\n| public int clipboardCopy()                                                                                  | Copies an image to the clipboard.                                                                                                             |\n| public int clipboardPaste()                                                                                 | Overwrites an existing image with the content of the system clipboard.                                                                        |\n| public int copyImage(Image image)                                                                           | Copies the current image object.                                                                                                              |\n| public int createImage(int Width, int Height, int BitsPerPixel)                                             | Creates an empty bitmap image with the width, height, and color depth as specified by the parameters.                                         |\n| public int crop(int x, int y, int w, int h)                                                                 | Crops the image.                                                                                                                              |\n| public int displayImage(Int64 HDC, \\[int Mode\\], \\[int Xpos\\], \\[int Ypos\\], \\[int Width\\], \\[int Height\\]) | Draws an image with the device context specified by the HDC parameter.                                                                        |\n| public Int64 exportBitmap()                                                                                 | Gets a handle for the image.                                                                                                                  |\n| public int flip(FlipType FlipType)                                                                          | Rotates the image 180 degrees in a vertical or horizontal direction.                                                                          |\n| public container getImageDimensionUnits()                                                                   |                                                                                                                                               |\n| public int getPixel(int x, int y)                                                                           | Retrieves the ARGB color value of the pixel at the point that is specified by the parameters.                                                 |\n| public int height()                                                                                         | Retrieves the height of the image in pixels.                                                                                                  |\n| public container imageInfo()                                                                                | Retrieves the width, height, and color depth of the image.                                                                                    |\n| public int imageSpotlight(int x, int y, int radius, int smoothing, int intensity)                           | Produces a spotlight effect within the circle that is defined by radius with center coordinates x and y.                                      |\n| public int importBitmap(Int64 hBitmap)                                                                      | Clones a bitmap from the image that is specified by the hBitmap parameter.                                                                    |\n| public int importFileIcon(str fileName)                                                                     | Creates an icon from the file specified by the fileName parameter by copying the icon that is used for the file.                              |\n| public int importIcon(str fileName, int iconIdx)                                                            | Retrieves a handle to an icon from an executable file in Microsoft Dynamics 365 for Operations. The icon is specified by the fileName and iconIdx parameters. |\n| public int loadImage(str fileName)                                                                          | Loads an image from the file specified by the fileName parameter.                                                                             |\n| public int loadResource(int id)                                                                             | Loads a resource from Ax32.exe.                                                                                                               |\n| public int promoteColor(int noOfColorBits)                                                                  | Increases the color depth of the image.                                                                                                       |\n| public int reduceColorOctree(int maxColors)                                                                 | Reduces the color depth of an image.                                                                                                          |\n| public int removeImage()                                                                                    | Removes the data about an image; the object still exists, but has no data.                                                                    |\n| public int resize(int newWidth, int newHeight, InterpolationMode InterpolationMode)                         | Resizes the image to the size that is specified by the newWidth and newHeight parameters.                                                     |\n| public int rotate(RotateType RotateType)                                                                    | Rotates the image.                                                                                                                            |\n| public int saveImage(str fileName, \\[ImageSaveType Type\\])                                                  | Saves the image to the specified file name.                                                                                                   |\n| public ImageSaveType saveType(\\[ImageSaveType Type\\])                                                       | Gets or sets the image decoder.                                                                                                               |\n| public int setPixel(int x, int y, int pixel)                                                                | Sets the color for the pixel that is specified by the x and y parameters.                                                                     |\n| public int transparent(\\[boolean Set\\], \\[int RValue\\], \\[int GValue\\], \\[int BValue\\])                     | Sets the transparent color for the image.                                                                                                     |\n| public int width()                                                                                          | Retrieves the width of the image in pixels.                                                                                                   |\n| ::public static int canLoad(str filename)                                                                   | Determines whether an image file exists and can be opened.                                                                                    |\n| ::public static container loadExt(int idx)                                                                  | Retrieves a list of the extensions of the file formats that are supported by the Image class.                                                 |\n| ::public static int resourceType(int resourceIdx)                                                           | Determines whether a particular resource is a bitmap or an icon.                                                                              |\n| ::public static int rgb(int R, int G, int B)                                                                | Converts an RGB value to an ARGB value.                                                                                                       |\n| ::public static int validResource(int id)                                                                   | Determines whether the resource specified by the id parameter is valid.                                                                       |\n| public void new(\\[AnyType image\\], \\[int width\\], \\[int height\\])                                           | Creates a new image.                                                                                                                          |\n| public void displayOrign(int Xpos, int Ypos)                                                                | Enables you to specify an offset (X, Y) from the original origin (0, 0).                                                                      |\n| public void finalize()                                                                                      |                                                                                                                                               |\n\n### Method captureScreen\n\nCaptures an image from the screen by using the coordinates that are supplied in the parameter list.\n\n    public int captureScreen(int left, int top, int right, int bottom)\n\n#### Parameters\n\nleft  \nY coordinate of the lower-right corner of the part of the screen that you want to capture.\n\n<!-- -->\n\ntop  \nY coordinate of the lower-right corner of the part of the screen that you want to capture.\n\n<!-- -->\n\nright  \nY coordinate of the lower-right corner of the part of the screen that you want to capture.\n\n<!-- -->\n\nbottom  \nY coordinate of the lower-right corner of the part of the screen that you want to capture.\n\n#### Return Value\n\n0 indicates success. Other values indicate failure.\n\n#### Examples\n\nThe following example captures a part of the screen and saves it to a file that is named test.bmp.\n\n    Image img = new Image(); \n    img.captureScreen(0, 0, 100, 100); \n    img.saveFile(@'C:\\test.bmp');\n\n### Method captureWindow\n\nCaptures a window as an image, using the handle that is supplied as a parameter.\n\n    public int captureWindow(int hWnd)\n\n#### Parameters\n\nhWnd  \nThe handle to the window that you want to capture which must be supplied as an integer.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n### Method clipboardCopy\n\nCopies an image to the clipboard.\n\n    public int clipboardCopy()\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Examples\n\nThe following example copies the content from a file that is named Test.bmp.\n\n    Image img = new Image(); \n    img.loadFile(@'C:\\Test.bmp'); \n    img.clipboardCopy(); \n    // Image can now be pasted into an application.\n\n### Method clipboardPaste\n\nOverwrites an existing image with the content of the system clipboard.\n\n    public int clipboardPaste()\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Remarks\n\nFor the method to be used successfully, the clipboard must have content.\n\n#### Examples\n\nThe following example creates a new image file by using contents previously copied to the clipboard.\n\n    Image img = new Image();\n    // Copy an image to the clipboard before this test \n    img.clipboardPaste(); \n    img.saveFile(@'C:\\test.jpg');\n\n### Method copyImage\n\nCopies the current image object.\n\n    public int copyImage(Image image)\n\n#### Parameters\n\nimage  \nThe image to be copied.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Examples\n\nThe following example creates two new images and then overwrites the contents of one image with the contents of the other.\n\n    Image img =  new Image(); \n    Image img2 = new Image(); \n    img.loadFile(@'C:\\test.bmp'); \n    img2.loadFile(@'C:\\test2.bmp'); \n    img2.copyImage(img); //img2 now the same as img\n\n### Method createImage\n\nCreates an empty bitmap image with the width, height, and color depth as specified by the parameters.\n\n    public int createImage(int Width, int Height, int BitsPerPixel)\n\n#### Parameters\n\nWidth  \nThe color depth of the image. Possible values are 1, 4, 8, 16, 24, and 32.\n\n<!-- -->\n\nHeight  \nThe color depth of the image. Possible values are 1, 4, 8, 16, 24, and 32.\n\n<!-- -->\n\nBitsPerPixel  \nThe color depth of the image. Possible values are 1, 4, 8, 16, 24, and 32.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Examples\n\nThe following example creates an image with a height and width of 16 pixels, and a color depth of 32 bits per pixel.\n\n    int i;\n    int j;\n    Image image;\n    image.createImage(\n        Imagelist::smallIconWidth(),\n        Imagelist::smallIconHeight(),\n        32);\n    for (i=0; i < Imagelist::smallIconWidth(); i++)\n    {\n        for (j=0; j < Imagelist::smallIconHeight(); j++)\n        {\n            if (i >= Imagelist::smallIconWidth()-2)\n            {\n                image.setPixel(i, j, WinAPI::RGB2int(0, 255, 255));\n            }\n            else\n            {\n                image.setPixel(i, j, WinAPI::imageTransparentColor());\n            }\n        }\n    }\n\n### Method crop\n\nCrops the image.\n\n    public int crop(int x, int y, int w, int h)\n\n#### Parameters\n\nx  \nThe height of the region that you want to crop from the point (x, y).\n\n<!-- -->\n\ny  \nThe height of the region that you want to crop from the point (x, y).\n\n<!-- -->\n\nw  \nThe height of the region that you want to crop from the point (x, y).\n\n<!-- -->\n\nh  \nThe height of the region that you want to crop from the point (x, y).\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n### Method displayImage\n\nDraws an image with the device context specified by the HDC parameter.\n\n    public int displayImage(Int64 HDC, [int Mode], [int Xpos], [int Ypos], [int Width], [int Height])\n\n#### Parameters\n\nHDC  \nOptional parameter.\n\n<!-- -->\n\nMode  \nOptional parameter.\n\n<!-- -->\n\nXpos  \nOptional parameter.\n\n<!-- -->\n\nYpos  \nOptional parameter.\n\n<!-- -->\n\nWidth  \nOptional parameter.\n\n<!-- -->\n\nHeight  \nOptional parameter.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n### Method exportBitmap\n\nGets a handle for the image.\n\n    public Int64 exportBitmap()\n\n#### Return Value\n\nAn integer that represents the handle for the image.\n\n#### Examples\n\nThe following example retrieves the handle for an image and then uses the handle to clone the image.\n\n    { \n        int hdlBitmap; \n        Image img = new Image(); \n        Image img2 = new Image(); \n        img.loadImage(@'C:\\MyImage.bmp'); \n        //Set hdlBitmap to handle for MyImage.bmp \n        hdlBitmap = img.exportBitmap(); \n        //Load MyImage.bmp to img2 using image handle \n        if (hdlBitmap) \n        { \n            img2.importBitmap(hdlBitmap); \n        } \n    }\n\n### Method flip\n\nRotates the image 180 degrees in a vertical or horizontal direction.\n\n    public int flip(FlipType FlipType)\n\n#### Parameters\n\nFlipType  \nA FlipType enumeration that determines the way in which the image is flipped.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Remarks\n\nThe possible values for the FlipType parameter are those available in the FlipType system enum:\n\n|     |                    |                                                          |\n|-----|--------------------|----------------------------------------------------------|\n| 0   | RotateNoneFlipNone | No flip                                                  |\n| 1   | RotateNoneFlipX    | Rotates the image 180 degrees in a horizontal direction. |\n| 2   | RotateNoneFlipY    | Rotates the image 180 degrees in a vertical direction.   |\n\n### Method getImageDimensionUnits\n\n    public container getImageDimensionUnits()\n\n#### Return Value\n\n### Method getPixel\n\nRetrieves the ARGB color value of the pixel at the point that is specified by the parameters.\n\n    public int getPixel(int x, int y)\n\n#### Parameters\n\nx  \nThe vertical coordinate of the pixel.\n\n<!-- -->\n\ny  \nThe vertical coordinate of the pixel.\n\n#### Return Value\n\nAn integer that is the ARGB value of the pixel (a 32-bit representation of an RGB color).\n\n### Method height\n\nRetrieves the height of the image in pixels.\n\n    public int height()\n\n#### Return Value\n\nAn integer that represents the height of the image in pixels.\n\n#### Examples\n\nThe following example prints out the height of the image that is contained in test.bmp.\n\n    Image img = new Image(); \n    img.loadFile(@'C:\\test.bmp'); \n    print img.height(); \n    pause;\n\n### Method imageInfo\n\nRetrieves the width, height, and color depth of the image.\n\n    public container imageInfo()\n\n#### Return Value\n\nA container that holds values that specify the width of the image, the height of the image, and the number of bits per pixel.\n\n#### Examples\n\nThe following example prints out the width and height of the image test.bmp, and specifies the color depth in bits per pixel.\n\n    Image img = new Image(); \n    container c; \n    img.loadFile(@'C:\\Test.bmp'); \n    c = img.imageInfo(); \n    print con2str(c); \n    pause;\n\n### Method imageSpotlight\n\nProduces a spotlight effect within the circle that is defined by radius with center coordinates x and y.\n\n    public int imageSpotlight(int x, int y, int radius, int smoothing, int intensity)\n\n#### Parameters\n\nx  \nThe intensity of the surrounding pixels. The possible values are between 0 and 100 (%).\n\n<!-- -->\n\ny  \nThe intensity of the surrounding pixels. The possible values are between 0 and 100 (%).\n\n<!-- -->\n\nradius  \nThe intensity of the surrounding pixels. The possible values are between 0 and 100 (%).\n\n<!-- -->\n\nsmoothing  \nThe intensity of the surrounding pixels. The possible values are between 0 and 100 (%).\n\n<!-- -->\n\nintensity  \nThe intensity of the surrounding pixels. The possible values are between 0 and 100 (%).\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Remarks\n\nThe pixels within the circle are unchanged, but the other pixels in the image are darkened by reducing their intensity.\n\n### Method importBitmap\n\nClones a bitmap from the image that is specified by the hBitmap parameter.\n\n    public int importBitmap(Int64 hBitmap)\n\n#### Parameters\n\nhBitmap  \nThe handle to the image that you clone.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Examples\n\nThe following example retrieves the handle for an image and then uses the importBitmap method to clone the image.\n\n    { \n        int hdlBitmap; \n        Image img = new Image(); \n        Image img2 = new Image(); \n        img.loadImage(@'C:\\MyImage.bmp'); \n        //Set hdlBitmap to handle for MyImage.bmp \n        hdlBitmap = img.exportBitmap(); \n        //Load MyImage.bmp to img2 using image handle \n        if (hdlBitmap) \n        { \n            img2.importBitmap(hdlBitmap); \n        } \n    }\n\n### Method importFileIcon\n\nCreates an icon from the file specified by the fileName parameter by copying the icon that is used for the file.\n\n    public int importFileIcon(str fileName)\n\n#### Parameters\n\nfileName  \nThe name and the path of the file from which you create an icon.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Examples\n\nThe following example copies the icon that is used for the file test.bmp.\n\n    Image img = new Image(); \n    img.importFileIcon(@'C:\\test.bmp'); \n    img.clipboardCopy(); \n    // Icon used for test.bmp can now be pasted into an application.\n\n### Method importIcon\n\nRetrieves a handle to an icon from an executable file in Microsoft Dynamics 365 for Operations. The icon is specified by the fileName and iconIdx parameters.\n\n    public int importIcon(str fileName, int iconIdx)\n\n#### Parameters\n\nfileName  \nThe resource within the specified file.\n\n<!-- -->\n\niconIdx  \nThe resource within the specified file.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n### Method loadImage\n\nLoads an image from the file specified by the fileName parameter.\n\n    public int loadImage(str fileName)\n\n#### Parameters\n\nfileName  \nThe resource from which you want to load the image.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n### Method loadResource\n\nLoads a resource from Ax32.exe.\n\n    public int loadResource(int id)\n\n#### Parameters\n\nid  \nThe ID of the resource that you want to load. Values of resources can be found in the Resources macro.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Examples\n\nThe following example adds two resources to an image list.\n\n    #Resource \n    Image img; \n    ImageList imageList; \n    imageList = new Imagelist( \n        Imagelist::smallIconWidth(), \n        Imagelist::smallIconHeight()); \n    img = new Image(); \n    img.loadResource(#RES_NODE_CLOSED); \n    imageList.add(img); \n    img = new Image(); \n    img.loadResource(#RES_NODE_OPEN); \n    imageList.add(img);\n\n### Method promoteColor\n\nIncreases the color depth of the image.\n\n    public int promoteColor(int noOfColorBits)\n\n#### Parameters\n\nnoOfColorBits  \nThe number of bits that you want to promote the image to.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Remarks\n\nThe method promotes:\n\n-   8-bit images to 24 or 32 bits.\n-   4-bit images to 8, 24, or 32 bits.\n-   1-bit images to 4, 8, 24, or 32 bits.\n\n#### Examples\n\nThe following example increases the color depth of an image to 8 bits per pixel, unless it is already 8 or more.\n\n    Image img = new Image(); \n    img.loadFile(@'C:\\test.bmp'); \n    if (conpeek(img.imageInfo(),3) <8) \n    { \n        img.promoteColor(8); \n    }\n\n### Method reduceColorOctree\n\nReduces the color depth of an image.\n\n    public int reduceColorOctree(int maxColors)\n\n#### Parameters\n\nmaxColors  \nThe maximum number of colors.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Remarks\n\nThe method reduces a 24-bit image to 8 bits, or an 8-bit image to 4 bits, unless other instructions are specified in the maxColors parameter. If the maxColors parameter is less than or equal to 16, a 4-bit image is produced. If maxColors is more than 16, an 8-bit image is produced.\n\n### Method removeImage\n\nRemoves the data about an image; the object still exists, but has no data.\n\n    public int removeImage()\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n### Method resize\n\nResizes the image to the size that is specified by the newWidth and newHeight parameters.\n\n    public int resize(int newWidth, int newHeight, InterpolationMode InterpolationMode)\n\n#### Parameters\n\nnewWidth  \nThe resizing method.\n\n<!-- -->\n\nnewHeight  \nThe resizing method.\n\n<!-- -->\n\nInterpolationMode  \nThe resizing method.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Remarks\n\nThe possible values for the InterpolationMode parameter are those available in the InterpolationMode system enum:\n\n|     |                                      |                                                                                                                                                                        |\n|-----|--------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 0   | InterpolationModeDefault             | Specifies the default interpolation mode.                                                                                                                              |\n| 1   | InterpolationModeLowQuality          | Specifies a low-quality mode.                                                                                                                                          |\n| 2   | InterpolationModeHighQuality         | Specifies a high-quality mode.                                                                                                                                         |\n| 3   | InterpolationModeBilinear            | Specifies bilinear interpolation. No pre-filtering is done. This method is not suitable for shrinking an image below 50% of its original size.                         |\n| 4   | InterpolationModeBicubic             | Specifies bicubic interpolation. No pre-filtering is done. This method is not suitable for shrinking an image below 25% of its original size.                          |\n| 5   | InterpolationModeNearestNeighbor     | Specifies nearest-neighbor interpolation.                                                                                                                              |\n| 6   | InterpolationModeHighQualityBilinear | Specifies high-quality, bilinear interpolation. Pre-filtering is performed to ensure high-quality shrinking.                                                           |\n| 7   | InterpolationModeHighQualityBicubic  | Specifies high-quality, bicubic interpolation. Pre-filtering is performed to ensure high-quality shrinking. This mode produces the highest quality transformed images. |\n\n### Method rotate\n\nRotates the image.\n\n    public int rotate(RotateType RotateType)\n\n#### Parameters\n\nRotateType  \nThe amount to rotate the image by.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Remarks\n\nThe possible values for the RotateType parameter are those available in the RotateType system enum:\n\n|     |                    |                          |\n|-----|--------------------|--------------------------|\n| 0   | RotateNoneFlipNone | No rotation.             |\n| 1   | Rotate90FlipNone   | Rotation by 90 degrees.  |\n| 2   | Rotate180FlipNone  | Rotation by 180 degrees. |\n| 3   | Rotate270FlipNone  | Rotation by 270 degrees. |\n\n### Method saveImage\n\nSaves the image to the specified file name.\n\n    public int saveImage(str fileName, [ImageSaveType Type])\n\n#### Parameters\n\nfileName  \nAn ImageSaveType that enables you to specify that the file should be saved as a different format from that specified by the file extension; optional.\n\n<!-- -->\n\nType  \nAn ImageSaveType that enables you to specify that the file should be saved as a different format from that specified by the file extension; optional.\n\n#### Return Value\n\n0 if the method was successful.\n\n#### Remarks\n\nThe possible values for the Type parameter are those available in the ImageSaveType system enum. For example, you could save test.bmp as a .jpg file.\n\n|     |                |\n|-----|----------------|\n| 0   | Use\\_Extension |\n| 1   | BMP            |\n| 2   | GIF            |\n| 3   | JPG            |\n| 4   | PNG            |\n| 5   | TIFF           |\n| 6   | BMP\\_UNCOMP    |\n| 7   | TIF\\_UNCOMP    |\n\n#### Examples\n\nThe following example captures part of the screen to a file, and then loads that image.\n\n    Image img = new Image(); \n    img.captureScreen(0, 0, 100, 100); \n    img.saveImage(@'C:\\test.bmp'); \n    img.loadFile(@'C:\\test.bmp');\n\n### Method saveType\n\nGets or sets the image decoder.\n\n    public ImageSaveType saveType([ImageSaveType Type])\n\n#### Parameters\n\nType  \nThe type of decoder that you want to set; optional.\n\n#### Return Value\n\n#### Remarks\n\nThe possible values for the Type parameter are those available in the ImageSaveType system enum:\n\n|     |                |\n|-----|----------------|\n| 0   | Use\\_Extension |\n| 1   | BMP            |\n| 2   | GIF            |\n| 3   | JPG            |\n| 4   | PNG            |\n| 5   | TIFF           |\n| 6   | BMP\\_UNCOMP    |\n| 7   | TIF\\_UNCOMP    |\n\n### Method setPixel\n\nSets the color for the pixel that is specified by the x and y parameters.\n\n    public int setPixel(int x, int y, int pixel)\n\n#### Parameters\n\nx  \nThe ARGB value of the color that you want to use.\n\n<!-- -->\n\ny  \nThe ARGB value of the color that you want to use.\n\n<!-- -->\n\npixel  \nThe ARGB value of the color that you want to use.\n\n#### Return Value\n\n0 indicates success; otherwise, failure.\n\n#### Remarks\n\nTo convert an RGB color value to an ARGB value, use the Image::rgb Method.\n\n### Method transparent\n\nSets the transparent color for the image.\n\n    public int transparent([boolean Set], [int RValue], [int GValue], [int BValue])\n\n#### Parameters\n\nSet  \nBlue value of the color that you want to set; optional.\n\n<!-- -->\n\nRValue  \nBlue value of the color that you want to set; optional.\n\n<!-- -->\n\nGValue  \nBlue value of the color that you want to set; optional.\n\n<!-- -->\n\nBValue  \nBlue value of the color that you want to set; optional.\n\n#### Return Value\n\n0 to indicate success; otherwise, failure.\n\n#### Remarks\n\nIf any of the input parameters are missing, the color at the point (0,0) in the image is used. If you want to specify a color, this is expressed as an RGB color by using parameters 2 to 4.\n\n### Method width\n\nRetrieves the width of the image in pixels.\n\n    public int width()\n\n#### Return Value\n\nAn integer that represents the width of the image in pixels.\n\n#### Examples\n\nThe following example prints out the width of the image in the test.bmp file.\n\n    Image img = new Image(); \n    img.loadFile(@'C:\\test.bmp'); \n    print img.width(); \n    pause;\n\n### Method canLoad\n\nDetermines whether an image file exists and can be opened.\n\n    public static int canLoad(str filename)\n\n#### Parameters\n\nfilename  \nThe name and path of the file to check.\n\n#### Return Value\n\n1 if the image is found and can be opened; otherwise, 0.\n\n### Method loadExt\n\nRetrieves a list of the extensions of the file formats that are supported by the Image class.\n\n    public static container loadExt(int idx)\n\n#### Parameters\n\nidx  \n\n#### Return Value\n\nA container that holds a list of the supported file formats.\n\n### Method resourceType\n\nDetermines whether a particular resource is a bitmap or an icon.\n\n    public static int resourceType(int resourceIdx)\n\n#### Parameters\n\nresourceIdx  \nThe ID of the resource that you want to load.\n\n#### Return Value\n\n0 if the image is a bitmap; 1 if it is an icon.\n\n#### Remarks\n\nThe values of resources can be found in the Resources macro.\n\n#### Examples\n\nThe following example tests whether resource 3020 is an icon or a bitmap.\n\n    #Resource \n    print Image::resourceType(3020); \n    pause;\n\n### Method rgb\n\nConverts an RGB value to an ARGB value.\n\n    public static int rgb(int R, int G, int B)\n\n#### Parameters\n\nR  \nThe blue value of the color.\n\n<!-- -->\n\nG  \nThe blue value of the color.\n\n<!-- -->\n\nB  \nThe blue value of the color.\n\n#### Return Value\n\nAn integer that represents the ARGB value of the color that is specified by the parameters.\n\n### Method validResource\n\nDetermines whether the resource specified by the id parameter is valid.\n\n    public static int validResource(int id)\n\n#### Parameters\n\nid  \nThe ID of the resource that you want to check.\n\n#### Return Value\n\n0 if the ID is valid.\n\n### Method new\n\nCreates a new image.\n\n    public void new([AnyType image], [int width], [int height])\n\n#### Parameters\n\nimage  \nThe height of the image in pixels; optional.\n\n<!-- -->\n\nwidth  \nThe height of the image in pixels; optional.\n\n<!-- -->\n\nheight  \nThe height of the image in pixels; optional.\n\n#### Remarks\n\nYou do not need to specify any parameters, but it is possible to specify the image contents and size. For the image parameter, you can specify a file name and location, a resource, a particular image in an array, or another Image object.\n\n#### Examples\n\nThe following examples illustrate how you can optionally specify the existing content for the new image object.\n\n    Image img1 = new Image(@\"C:\\MyPicture.jpg\", 100, 100); \n    Image img2 = new Image(121,100, 100); // Uses resource 121 in Ax32.exe \n    Image img4 = new Image(img1, 200, 200);\n\n### Method displayOrign\n\nEnables you to specify an offset (X, Y) from the original origin (0, 0).\n\n    public void displayOrign(int Xpos, int Ypos)\n\n#### Parameters\n\nXpos  \nNew Y (vertical) coordinate for the origin.\n\n<!-- -->\n\nYpos  \nNew Y (vertical) coordinate for the origin.\n\n### Method finalize\n\n    public void finalize()\n\n## Class Imagelist\n    class Imagelist extends BinData\n\nThe Imagelist class lets you work with a list of images.\n\n### Remarks\n\nTo work with a single image, use the Image class.\n\n### Examples\n\nThe following example creates an image list and adds the icons in the Shell32.dll file. It then deletes the fourth member of the list.\n\n    Imagelist list = new Imagelist( \n        Imagelist::iconWidth(), \n        Imagelist::iconHeight() ); \n    list.loadIcons('shell32.dll'); \n    print list.count(); \n    list.remove(4); \n    print list.count(); \n    pause;\n\n### Methods\n\n| Method                                                                         | Description                                                                                                                        |\n|--------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------|\n| public int add(Image image)                                                    | Adds a new image to the image list.                                                                                                |\n| public boolean autoResize(\\[boolean value\\])                                   | Sets the Boolean autoResize flag, which determines whether new images are automatically resized.                                   |\n| public int clear()                                                             | Removes all images from the image list.                                                                                            |\n| public int count()                                                             | Retrieves the number of images in an image list.                                                                                   |\n| public boolean dragBegin(int imageIdx, int hotSpotX, int hotSpotY)             | Begins dragging an image.                                                                                                          |\n| public boolean dragEnd()                                                       | Ends a drag operation.                                                                                                             |\n| public boolean dragEnter(int hWnd, int x, int y)                               | Locks updates to the specified window during a drag operation and displays the drag image at the specified position in the window. |\n| public boolean dragLeave(int hWnd)                                             | Unlocks the specified window and hides the drag image, so that the window to be updated.                                           |\n| public boolean dragMove(int x, int y)                                          | Moves the image that is being dragged during a drag-and-drop operation.                                                            |\n| public boolean dragShowImage(boolean show)                                     | Shows or hides the image that is being dragged.                                                                                    |\n| public int height()                                                            | Retrieves the height, in pixels, of the images in the image list.                                                                  |\n| public int loadIcons(str moduleName)                                           | Loads icons from the specified resource into the image list.                                                                       |\n| public int remove(int imageIdx)                                                | Removes an image from an image list.                                                                                               |\n| public int replace(int imageIdx, Image image)                                  | Replaces an existing image in the list.                                                                                            |\n| public boolean setOverlayImage(int imageIdx, int overlayIdx)                   | Adds an image to the list of images to use as overlay masks.                                                                       |\n| public int width()                                                             | Retrieves the width, in pixels, of the images in the image list.                                                                   |\n| ::public static int iconHeight()                                               | Retrieves the system metrics for the height of a standard icon.                                                                    |\n| ::public static int iconWidth()                                                | Retrieves the system metrics for the width of a standard icon.                                                                     |\n| ::public static int smallIconHeight()                                          | Retrieves the system metrics for the height of a small icon.                                                                       |\n| ::public static int smallIconWidth()                                           | Retrieves the system metrics for the width of a small icon.                                                                        |\n| public void maskColor(int Color)                                               | Sets the masking color.                                                                                                            |\n| public void draw(int HDC, int imageIdx, int x, int y, \\[boolean transparent\\]) | Draws an image list item in the specified device context.                                                                          |\n| public void finalize()                                                         |                                                                                                                                    |\n| public void new(int cx, int cy, \\[boolean transparent\\])                       | Creates a new empty list to hold images.                                                                                           |\n\n### Method add\n\nAdds a new image to the image list.\n\n    public int add(Image image)\n\n#### Parameters\n\nimage  \nThe new image to add to the list.\n\n#### Return Value\n\n0 if the method is successful.\n\n#### Remarks\n\nYou can use the autoResize method to automatically resize images when you add them to the list.\n\n#### Examples\n\nThe following example creates a new image list and adds three images to it.\n\n    ImageList list = new Imagelist( \n        Imagelist::smallIconWidth(), \n        Imagelist::smallIconHeight()); \n    list.add(new Image(3104)); \n    list.add(new Image(1097)); \n    list.add(new Image(1200)); \n    // Prints 3 \n    print list.count(); \n    pause;\n\n### Method autoResize\n\nSets the Boolean autoResize flag, which determines whether new images are automatically resized.\n\n    public boolean autoResize([boolean value])\n\n#### Parameters\n\nvalue  \nA Boolean value that determines whether the autoResize flag is set; optional.\n\n#### Return Value\n\n#### Remarks\n\nIf the autoResize flag is set to true, any image that you add to the list is automatically resized to the dimensions that were specified when you created the image list.\n\n### Method clear\n\nRemoves all images from the image list.\n\n    public int clear()\n\n#### Return Value\n\n0 if the method is successful.\n\n### Method count\n\nRetrieves the number of images in an image list.\n\n    public int count()\n\n#### Return Value\n\nAn integer that represents the number of images in the list.\n\n#### Examples\n\nThe following example creates an image list, loads icons from the shell.dll file, and then prints the number of images in the list.\n\n    Imagelist list; \n    int       counter; \n    list = new Imagelist( \n       Imagelist::iconWidth(), \n       Imagelist::iconHeight() ); \n    list.loadIcons('shell32.dll'); \n    print list.count(); \n    pause;\n\n### Method dragBegin\n\nBegins dragging an image.\n\n    public boolean dragBegin(int imageIdx, int hotSpotX, int hotSpotY)\n\n#### Parameters\n\nimageIdx  \nThe Y-coordinate of the drag position, relative to the upper-left corner of the image.\n\n<!-- -->\n\nhotSpotX  \nThe Y-coordinate of the drag position, relative to the upper-left corner of the image.\n\n<!-- -->\n\nhotSpotY  \nThe Y-coordinate of the drag position, relative to the upper-left corner of the image.\n\n#### Return Value\n\n1 if the method is successful.\n\n#### Remarks\n\nThe rest of the drag operation is specified by the dragEnter, dragMove, dragLeave, and dragEnd methods.\n\n### Method dragEnd\n\nEnds a drag operation.\n\n    public boolean dragEnd()\n\n#### Return Value\n\n1 if the method is successful; otherwise, 0.\n\n#### Remarks\n\nThe rest of the drag operation is specified by the dragBegin, dragEnter, dragMove, and dragLeave methods.\n\n### Method dragEnter\n\nLocks updates to the specified window during a drag operation and displays the drag image at the specified position in the window.\n\n    public boolean dragEnter(int hWnd, int x, int y)\n\n#### Parameters\n\nhWnd  \nThe Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.\n\n<!-- -->\n\nx  \nThe Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.\n\n<!-- -->\n\ny  \nThe Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.\n\n#### Return Value\n\n1 if the method is successful; otherwise, 0.\n\n#### Remarks\n\nTo start the drag operation, call the dragBegin method. The rest of the drag operation is specified by the dragMove, dragLeave, and dragEnd methods.\n\n### Method dragLeave\n\nUnlocks the specified window and hides the drag image, so that the window to be updated.\n\n    public boolean dragLeave(int hWnd)\n\n#### Parameters\n\nhWnd  \nThe handle to the window that owns the drag image.\n\n#### Return Value\n\n1 if the method is successful; otherwise, 0.\n\n#### Remarks\n\nThe rest of the drag operation is specified by the dragBegin, dragEnter, dragMove, and dragEnd methods.\n\n### Method dragMove\n\nMoves the image that is being dragged during a drag-and-drop operation.\n\n    public boolean dragMove(int x, int y)\n\n#### Parameters\n\nx  \nThe Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.\n\n<!-- -->\n\ny  \nThe Y-coordinate at which to display the drag icon, relative to the upper-left corner of the window.\n\n#### Return Value\n\n1 if the method is successful; otherwise, 0.\n\n#### Remarks\n\nTo start the drag operation, call the dragBegin method and then the dragEnter method. The rest of the drag operation is specified by the dragLeave and dragEnd methods.\n\n### Method dragShowImage\n\nShows or hides the image that is being dragged.\n\n    public boolean dragShowImage(boolean show)\n\n#### Parameters\n\nshow  \nA value that specifies whether to show the image.\n\n#### Return Value\n\n### Method height\n\nRetrieves the height, in pixels, of the images in the image list.\n\n    public int height()\n\n#### Return Value\n\nAn integer that represents the height of the images in pixels.\n\n#### Remarks\n\nThe height of the images in the list is set when you instantiate the list.\n\n#### Examples\n\nThe following example creates an image list, and sets the height and width of the images to the dimensions that are specified by the iconWidth and iconHeight methods. It then prints the height of images in the list.\n\n    Imagelist list; \n    list = new Imagelist( \n        Imagelist::iconWidth(), \n        Imagelist::iconHeight()); \n    print list.height();   \n    pause;\n\n### Method loadIcons\n\nLoads icons from the specified resource into the image list.\n\n    public int loadIcons(str moduleName)\n\n#### Parameters\n\nmoduleName  \nThe name of the file from which to load images.\n\n#### Return Value\n\n0 if the method is successful.\n\n#### Examples\n\nThe following example creates a list of images and then loads the images that are contained in the shell32.dll file.\n\n    Imagelist list; \n    list = new Imagelist(Imagelist::iconWidth(),Imagelist::iconHeight()); \n    list.loadIcons('shell32.dll');\n\n### Method remove\n\nRemoves an image from an image list.\n\n    public int remove(int imageIdx)\n\n#### Parameters\n\nimageIdx  \nThe position of the image to remove from the list.\n\n#### Return Value\n\n0 if the method is successful.\n\n#### Examples\n\nThe following example creates an image list, adds the icons in shell32.dll file, and then deletes the fourth member of the list.\n\n    Imagelist list = new Imagelist( \n        Imagelist::iconWidth(), \n        Imagelist::iconHeight() ); \n    list.loadIcons('shell32.dll'); \n    print list.count(); \n    list.remove(4); \n    print list.count(); \n    pause;\n\n### Method replace\n\nReplaces an existing image in the list.\n\n    public int replace(int imageIdx, Image image)\n\n#### Parameters\n\nimageIdx  \nThe image to use to replace the existing image.\n\n<!-- -->\n\nimage  \nThe image to use to replace the existing image.\n\n#### Return Value\n\n0 if the method is successful.\n\n### Method setOverlayImage\n\nAdds an image to the list of images to use as overlay masks.\n\n    public boolean setOverlayImage(int imageIdx, int overlayIdx)\n\n#### Parameters\n\nimageIdx  \nThe one-based index of the overlay mask.\n\n<!-- -->\n\noverlayIdx  \nThe one-based index of the overlay mask.\n\n#### Return Value\n\n1 if the method is successful.\n\n#### Examples\n\nThe following example creates an image list that has three images and then sets the last image as an overlay mask.\n\n    Imagelist list = new Imagelist( \n        Imagelist::iconWidth(), \n        Imagelist::iconHeight() ); \n    list.add(new Image(824)); // Image 0 \n    list.add(new Image(815)); // Image 1 \n    list.add(new Image(936)); //Image 2 \n    list.setOverlayImage (2,1);\n\n### Method width\n\nRetrieves the width, in pixels, of the images in the image list.\n\n    public int width()\n\n#### Return Value\n\nAn integer that represents the width of the images in pixels.\n\n#### Remarks\n\nThe width of the images in the list is set when you instantiate the list.\n\n#### Examples\n\nThe following example creates an image list that has the standard height and width for icons, and then prints the width of images in the list.\n\n    Imagelist list; \n    list = new Imagelist( \n        Imagelist::iconWidth(), \n        Imagelist::iconHeight()); \n    print list.width();   \n    pause;\n\n### Method iconHeight\n\nRetrieves the system metrics for the height of a standard icon.\n\n    public static int iconHeight()\n\n#### Return Value\n\nAn integer that represents the height of a standard icon.\n\n#### Examples\n\nThe following example creates a list of images, and then sets them to the standard icon width and height.\n\n    ImageList list = new Imagelist( \n        Imagelist::iconWidth(), \n        Imagelist::iconHeight());\n\n### Method iconWidth\n\nRetrieves the system metrics for the width of a standard icon.\n\n    public static int iconWidth()\n\n#### Return Value\n\nAn integer that represents the width of a standard icon.\n\n#### Examples\n\nThe following example creates a list of images, and then sets them to the standard icon width and height.\n\n    ImageList list = new Imagelist( \n        Imagelist::iconWidth(), \n        Imagelist::iconHeight());\n\n### Method smallIconHeight\n\nRetrieves the system metrics for the height of a small icon.\n\n    public static int smallIconHeight()\n\n#### Return Value\n\nAn integer that represents the height of a small icon.\n\n#### Examples\n\nThe following example creates an image list that has the standard height and width for small icons, and then prints the height of images in the list.\n\n    Imagelist list = new Imagelist( \n        Imagelist::smallIconWidth(), \n        Imagelist::smallIconHeight()); \n    print list.height();   \n    pause;\n\n### Method smallIconWidth\n\nRetrieves the system metrics for the width of a small icon.\n\n    public static int smallIconWidth()\n\n#### Return Value\n\nAn integer that represents the width of a small icon.\n\n#### Examples\n\nThe following example creates an image list that has the standard height and width for small icons, and then prints the width of images in the list.\n\n    Imagelist list = new Imagelist( \n       Imagelist::smallIconWidth(), \n       Imagelist::smallIconHeight()); \n    print list.width();   \n    pause;\n\n### Method maskColor\n\nSets the masking color.\n\n    public void maskColor(int Color)\n\n#### Parameters\n\nColor  \nThe color as an ARGB value.\n\n### Method draw\n\nDraws an image list item in the specified device context.\n\n    public void draw(int HDC, int imageIdx, int x, int y, [boolean transparent])\n\n#### Parameters\n\nHDC  \nA Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.\n\n<!-- -->\n\nimageIdx  \nA Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.\n\n<!-- -->\n\nx  \nA Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.\n\n<!-- -->\n\ntransparent  \nA Boolean value that indicates whether the image is drawn transparently by using the mask, regardless of background color; optional.\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nCreates a new empty list to hold images.\n\n    public void new(int cx, int cy, [boolean transparent])\n\n#### Parameters\n\ncx  \n\n<!-- -->\n\ncy  \n\n<!-- -->\n\ntransparent  \n\n#### Remarks\n\nYou can use the autoResize method to automatically resize images when you add them to the list.\n\n#### Examples\n\nThe following example creates an image list to hold items of the standard icon width and height.\n\n    Imagelist list; \n    list = new Imagelist( \n       Imagelist::iconWidth(), \n       Imagelist::iconHeight());\n\n## Class ImportTableDataInfo\n    class ImportTableDataInfo extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                  | Description                                     |\n|---------------------------------------------------------|-------------------------------------------------|\n| public int addColumnData(str szColName, AnyType colVal) |                                                 |\n| public int copyDataRow()                                |                                                 |\n| public void new(int usTableId)                          | Initializes a new instance of the Object class. |\n\n### Method addColumnData\n\n    public int addColumnData(str szColName, AnyType colVal)\n\n#### Parameters\n\nszColName  \n\n<!-- -->\n\ncolVal  \n\n#### Return Value\n\n### Method copyDataRow\n\n    public int copyDataRow()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(int usTableId)\n\n#### Parameters\n\nusTableId  \n\n## Class ImportTableSchemaInfo\n    class ImportTableSchemaInfo extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                             | Description                                     |\n|------------------------------------------------------------------------------------|-------------------------------------------------|\n| public int addColumnInfo(str szColName, Types eColType, int eColRole, int lColOrd) |                                                 |\n| public int addColumnMapping(str szRefRecIdColName, str szRefTableIdColName)        |                                                 |\n| public int hasEqualityCriteria(boolean fHasEqualityCriteria)                       |                                                 |\n| public int shreddedMetadataTable(boolean fIsShreddedMetadataTable)                 |                                                 |\n| public void new(int usTableId)                                                     | Initializes a new instance of the Object class. |\n\n### Method addColumnInfo\n\n    public int addColumnInfo(str szColName, Types eColType, int eColRole, int lColOrd)\n\n#### Parameters\n\nszColName  \n\n<!-- -->\n\neColType  \n\n<!-- -->\n\neColRole  \n\n<!-- -->\n\nlColOrd  \n\n#### Return Value\n\n### Method addColumnMapping\n\n    public int addColumnMapping(str szRefRecIdColName, str szRefTableIdColName)\n\n#### Parameters\n\nszRefRecIdColName  \n\n<!-- -->\n\nszRefTableIdColName  \n\n#### Return Value\n\n### Method hasEqualityCriteria\n\n    public int hasEqualityCriteria(boolean fHasEqualityCriteria)\n\n#### Parameters\n\nfHasEqualityCriteria  \n\n#### Return Value\n\n### Method shreddedMetadataTable\n\n    public int shreddedMetadataTable(boolean fIsShreddedMetadataTable)\n\n#### Parameters\n\nfIsShreddedMetadataTable  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(int usTableId)\n\n#### Parameters\n\nusTableId  \n\n## Class InfoPart\n    class InfoPart extends TreeNode\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                   | Description                                                                                                                               |\n|------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| public str caption(\\[str value\\])        | Gets or set the caption of the control.                                                                                                   |\n| public str changedBy(\\[str value\\])      | Gets or sets the name of the user who last changed the application object.                                                                |\n| public Date changedDate(\\[Date value\\])  | Gets or sets the date an application object was last changed.                                                                             |\n| public str changedTime(\\[str value\\])    | Gets or sets the time an application object was last changed.                                                                             |\n| public str createdBy(\\[str value\\])      | Gets or sets the name of the user who created the application object.                                                                     |\n| public Date creationDate(\\[Date value\\]) | Gets or sets the date an application object was created.                                                                                  |\n| public str creationTime(\\[str value\\])   |                                                                                                                                           |\n| public str name(\\[str value\\])           | Gets or sets the name that is used in code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object. |\n| public Guid origin(\\[Guid value\\])       |                                                                                                                                           |\n| public str query(\\[str value\\])          |                                                                                                                                           |\n| public void new()                        | Initializes a new instance of the InfoPart class.                                                                                         |\n\n### Method caption\n\nGets or set the caption of the control.\n\n    public str caption([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe string that is used as the caption of the control.\n\n### Method changedBy\n\nGets or sets the name of the user who last changed the application object.\n\n    public str changedBy([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name of the user.\n\n### Method changedDate\n\nGets or sets the date an application object was last changed.\n\n    public Date changedDate([Date value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe date an application object was last changed.\n\n### Method changedTime\n\nGets or sets the time an application object was last changed.\n\n    public str changedTime([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe time an application object was last changed.\n\n### Method createdBy\n\nGets or sets the name of the user who created the application object.\n\n    public str createdBy([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name of the user.\n\n### Method creationDate\n\nGets or sets the date an application object was created.\n\n    public Date creationDate([Date value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe date an application object was created.\n\n### Method creationTime\n\n    public str creationTime([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   Begins with a letter.\n-   Doesn't exceed 250 characters.\n-   Can include numbers and underscore characters.\n-   Cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, classes, and so on.\n\n### Method origin\n\n    public Guid origin([Guid value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method query\n\n    public str query([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the InfoPart class.\n\n    public void new()\n\n## Class InfoPartField\n    class InfoPartField extends TreeNode\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                            | Description                                                                                                                               |\n|---------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| public str dataField(\\[str value\\])               |                                                                                                                                           |\n| public str dataMethod(\\[str value\\])              |                                                                                                                                           |\n| public str dataSource(\\[str value\\])              | Gets or sets a data source that will be used by the control or the form.                                                                  |\n| public str label(\\[str value\\])                   | Gets or sets the label for a control.                                                                                                     |\n| public boolean manualRetrieval(\\[boolean value\\]) |                                                                                                                                           |\n| public str name(\\[str value\\])                    | Gets or sets the name that is used in code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object. |\n| public int style(\\[int value\\])                   |                                                                                                                                           |\n| public void new()                                 | Initializes a new instance of the InfoPartField class.                                                                                    |\n\n### Method dataField\n\n    public str dataField([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataMethod\n\n    public str dataMethod([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataSource\n\nGets or sets a data source that will be used by the control or the form.\n\n    public str dataSource([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe identifier of the data source that will be used.\n\n### Method label\n\nGets or sets the label for a control.\n\n    public str label([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the label string.\n\n#### Remarks\n\nThe label determines which text is displayed in the control or adjacent to it. The label property value cannot exceed 250 characters.\n\n### Method manualRetrieval\n\n    public boolean manualRetrieval([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   Begins with a letter.\n-   Doesn't exceed 250 characters.\n-   Can include numbers and underscore characters.\n-   Cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, classes, and so on.\n\n### Method style\n\n    public int style([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the InfoPartField class.\n\n    public void new()\n\n## Class InfoPartGroup\n    class InfoPartGroup extends TreeNode\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                         | Description                                                                                                                                   |\n|----------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|\n| public str caption(\\[str value\\])                              | Gets or sets the caption of the control.                                                                                                      |\n| public str dataGroup(\\[str value\\])                            |                                                                                                                                               |\n| public str dataSource(\\[str value\\])                           | Gets or sets a data source that will be used by the control or the form.                                                                      |\n| public int labelPosition(\\[int value\\])                        |                                                                                                                                               |\n| public str name(\\[str value\\])                                 | Gets or sets the name that is used in the code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object. |\n| public boolean repeating(\\[boolean value\\])                    |                                                                                                                                               |\n| public int rowCountWhenSmall(\\[int value\\], \\[AutoMode mode\\]) |                                                                                                                                               |\n| public AutoMode rowCountWhenSmallMode(\\[AutoMode mode\\])       |                                                                                                                                               |\n| public int rowCountWhenSmallValue(\\[int value\\])               |                                                                                                                                               |\n| public boolean showCaption(\\[boolean value\\])                  |                                                                                                                                               |\n| public boolean showLabels(\\[boolean value\\])                   |                                                                                                                                               |\n| public int showWhenPartSize(\\[int value\\])                     |                                                                                                                                               |\n| public boolean verticalSpacing(\\[boolean value\\])              |                                                                                                                                               |\n| public void new()                                              | Initializes a new instance of the InfoPartGroup class.                                                                                        |\n\n### Method caption\n\nGets or sets the caption of the control.\n\n    public str caption([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe string that is used as the caption of the control.\n\n### Method dataGroup\n\n    public str dataGroup([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataSource\n\nGets or sets a data source that will be used by the control or the form.\n\n    public str dataSource([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe identifier of the data source that will be used.\n\n### Method labelPosition\n\n    public int labelPosition([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method name\n\nGets or sets the name that is used in the code to identify a form, report, table, query, or another Microsoft Dynamics 365 for Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name that is used in the code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   Begins with a letter.\n-   Doesn't exceed 250 characters.\n-   Can include numbers and underscore characters.\n-   Cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, classes, and so on.\n\n### Method repeating\n\n    public boolean repeating([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method rowCountWhenSmall\n\n    public int rowCountWhenSmall([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\n### Method rowCountWhenSmallMode\n\n    public AutoMode rowCountWhenSmallMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method rowCountWhenSmallValue\n\n    public int rowCountWhenSmallValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method showCaption\n\n    public boolean showCaption([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method showLabels\n\n    public boolean showLabels([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method showWhenPartSize\n\n    public int showWhenPartSize([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method verticalSpacing\n\n    public boolean verticalSpacing([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the InfoPartGroup class.\n\n    public void new()\n\n## Class InfoPartLayout\n    class InfoPartLayout extends TreeNode\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                       | Description                                             |\n|----------------------------------------------|---------------------------------------------------------|\n| public boolean showMore(\\[boolean value\\])   |                                                         |\n| public str showMoreDataSource(\\[str value\\]) |                                                         |\n| public void new()                            | Initializes a new instance of the InfoPartLayout class. |\n\n### Method showMore\n\n    public boolean showMore([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method showMoreDataSource\n\n    public str showMoreDataSource([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the InfoPartLayout class.\n\n    public void new()\n\n## Class InitialQueryParameter\n    class InitialQueryParameter extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                       | Description                                                    |\n|--------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------|\n| public boolean applyQuery(FormDataSource datasource)                                                         |                                                                |\n| public str dataSourceName(\\[str dataSourceName\\])                                                            |                                                                |\n| public str modeledQueryName(\\[str modeledQueryName\\])                                                        |                                                                |\n| public Query query(\\[Query query\\])                                                                          |                                                                |\n| ::public static InitialQueryParameter createByModeledQueryName(str modeledQueryName, \\[str dataSourceName\\]) |                                                                |\n| ::public static InitialQueryParameter createByQuery(Query query, \\[str dataSourceName\\])                     |                                                                |\n| public void finalize()                                                                                       |                                                                |\n| public void new()                                                                                            | Initializes a new instance of the InitialQueryParameter class. |\n\n### Method applyQuery\n\n    public boolean applyQuery(FormDataSource datasource)\n\n#### Parameters\n\ndatasource  \n\n#### Return Value\n\n### Method dataSourceName\n\n    public str dataSourceName([str dataSourceName])\n\n#### Parameters\n\ndataSourceName  \n\n#### Return Value\n\n### Method modeledQueryName\n\n    public str modeledQueryName([str modeledQueryName])\n\n#### Parameters\n\nmodeledQueryName  \n\n#### Return Value\n\n### Method query\n\n    public Query query([Query query])\n\n#### Parameters\n\nquery  \n\n#### Return Value\n\n### Method createByModeledQueryName\n\n    public static InitialQueryParameter createByModeledQueryName(str modeledQueryName, [str dataSourceName])\n\n#### Parameters\n\nmodeledQueryName  \n\n<!-- -->\n\ndataSourceName  \n\n#### Return Value\n\n### Method createByQuery\n\n    public static InitialQueryParameter createByQuery(Query query, [str dataSourceName])\n\n#### Parameters\n\nquery  \n\n<!-- -->\n\ndataSourceName  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the InitialQueryParameter class.\n\n    public void new()\n\n## Class InteropPermission\n    class InteropPermission extends CodeAccessPermission\n\nThe InteropPermission class controls the ability to call unmanaged and managed code.\n\n### Remarks\n\nThe InteropPermission class is designed to check permissions for specific APIs. For a list of all APIs that are protected by permissions, see Secured APIs. Before the protected API is run, you must call the assert method on the same tier (usually the server tier) that the corresponding CodeAccessPermission::demand method is called on. Call a method on the server tier from one of the following methods:\n\n-   A server static method\n-   A class instance method that is set to run on the server by using the RunOn class property.\n\n### Examples\n\nThe following code example shows a new instance of the InteropPermission class. The assert method is called to declare that the code can then instantiate the DLL class that provides the ability to communicate with a MicrosoftWindows dynamic-link library (DLL).\n\n    server static void main(Args args) \n    { \n        InteropPermission _perm; \n        DLL _dll; \n        _perm = new InteropPermission(InteropKind::DllInterop); \n        _perm.assert(); \n        // Invoke the protected API. \n        _dll = new DLL('cfx2032.dll'); \n        // Optionally, call revertAssert() to limit the scope of assert. \n        CodeAccessPermission::revertAssert(); \n    }\n\n### Methods\n\n| Method                                                 | Description                                                                        |\n|--------------------------------------------------------|------------------------------------------------------------------------------------|\n| public CodeAccessPermission copy()                     | Creates and returns a copy of the current permission class object.                 |\n| public boolean isSubsetOf(CodeAccessPermission target) | Determines whether the current permission is a subset of the specified permission. |\n| public void new(InteropKind kind)                      | Creates an new instance of the InteropPermission class.                            |\n\n### Method copy\n\nCreates and returns a copy of the current permission class object.\n\n    public CodeAccessPermission copy()\n\n#### Return Value\n\nA copy of the current permission object.\n\n#### Remarks\n\nYou override this method when you derive a class from the CodeAccessPermission class. For more information, see the copy method.\n\n### Method isSubsetOf\n\nDetermines whether the current permission is a subset of the specified permission.\n\n    public boolean isSubsetOf(CodeAccessPermission target)\n\n#### Parameters\n\ntarget  \nA CodeAccessPermission class object.\n\n#### Return Value\n\ntrue if the current permission is a subset of the specified permission; otherwise, false.\n\n#### Remarks\n\nYou override this method when you derive a class from the CodeAccessPermission class. For more information, see the isSubsetOf method.\n\n### Method new\n\nCreates an new instance of the InteropPermission class.\n\n    public void new(InteropKind kind)\n\n#### Parameters\n\nkind  \nAn InteropKind system enumeration value that specifies access to managed or unmanaged code.\n\n#### Examples\n\nThe following code example shows a new instance of the InteropPermission class that specifies access to Win32 DLLs.\n\n    server static void main(Args args) \n    { \n        InteropPermission _perm; \n        _perm = new InteropPermission(InteropKind::DllInterop); \n    }\n\n## Class Io\n    class Io extends Object\n\nThe Io class serves as the base class for the format-specific Io classes, which are used to access external files.\n\n### Remarks\n\nThe basic Io class features no actual data I/O but works as base class for the format-specific Io classes. The methods that are common to all Io classes are described here. For format-specific features and behavior of the member functions, refer to the documentation for each of the I/O classes. To support reading and writing of different formats of external files, MorphX features a range of different Io classesfor comma-separated files, for comma-separated 7 bit files, for binary files, and for plain-text files.\n\n### Examples\n\n### Methods\n\n| Method                                       | Description                                                                                                                  |\n|----------------------------------------------|------------------------------------------------------------------------------------------------------------------------------|\n| public str inFieldDelimiter(\\[str value\\])   | Determines the delimiter used to separate fields in records accessed by the \\*Io classes.                                    |\n| public str inRecordDelimiter(\\[str value\\])  | Determines to the \\*Io classes what character or characters to search for to determine whether a full record has been read.  |\n| public int inRecordLength(\\[int value\\])     | Gets or sets the number of characters to read for each record in a file.                                                     |\n| public str outFieldDelimiter(\\[str value\\])  | Gets or sets the sequence of characters that are written to a file that is used to separate the fields of a record.          |\n| public str outRecordDelimiter(\\[str value\\]) | Gets or sets the sequence of characters that is written to the output files, which separate the records in the output files. |\n| public container read()                      | Reads the next full record from the Io object.                                                                               |\n| public IO\\_Status status()                   | Retrieves the status of the last operation performed on the Io object.                                                       |\n| public boolean write(VarArg values)          | Writes values of a simple type.                                                                                              |\n| public boolean writeExp(container data)      | Writes the content of a container to the file.                                                                               |\n| public void finalize()                       | Closes the file and, if data was written, flushes the file buffers to disk.                                                  |\n| public void new(str filename, str mode)      | Creates a new instance of the Io class.                                                                                      |\n\n### Method inFieldDelimiter\n\nDetermines the delimiter used to separate fields in records accessed by the \\*Io classes.\n\n    public str inFieldDelimiter([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe delimiter used to separate fields in records accessed by the \\*Io classes.\n\n### Method inRecordDelimiter\n\nDetermines to the \\*Io classes what character or characters to search for to determine whether a full record has been read.\n\n    public str inRecordDelimiter([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe character or characters that indicate whether a full record has been read.\n\n#### Remarks\n\nFor standard text, the delimiter is a newline character.\n\n### Method inRecordLength\n\nGets or sets the number of characters to read for each record in a file.\n\n    public int inRecordLength([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe number of characters to read for each record in the file.\n\n#### Remarks\n\nFor files that have a fixed-length format, use the inRecordLength property to guarantee that no more than the specified number of characters are read for each record. If the record format is overruled by a specified inRecordDelimiter property value , that is the inRecordDelimiter value is met before the fixed length is read, the record is accepted, and no additional data is read. To guarantee that a fixed number of characters are read, set the inRecordDelimiter property value to an empty string. When no inRecordDelimiter property value is found, the inRecordDelimiter property value is the maximum limit of characters to read. Set the inRecordDelimiter property value to zero to disable the record length check.\n\n### Method outFieldDelimiter\n\nGets or sets the sequence of characters that are written to a file that is used to separate the fields of a record.\n\n    public str outFieldDelimiter([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe sequence of characters that are written to a file that is used to separate the fields of a record.\n\n### Method outRecordDelimiter\n\nGets or sets the sequence of characters that is written to the output files, which separate the records in the output files.\n\n    public str outRecordDelimiter([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe sequence of characters that is written to the output files.\n\n#### Remarks\n\nFor standard text files, the delimiter is a newline character.\n\n### Method read\n\nReads the next full record from the Io object.\n\n    public container read()\n\n#### Return Value\n\nA container that holds the next full record from the Io object.\n\n#### Remarks\n\nThe definition of the next full record is controlled by the inFieldDelimiter, inRecordDelimiter, and inRecordLength method properties. The record is returned as a container. Each entry in the container equals one field in the record. Each of the specialized Io classes has default settings for inFieldDelimiter, inRecordDelimiter, and inRecordLength enabling input and output of the most common formats. You might have to adjust these to support the wanted format.\n\n#### Examples\n\nThis method demonstrates the use of the run method. However, the following example will not compile in a job as it must be run in the context of a class, form, or other object.\n\n    static void Job1(Args _args) \n    { \n        FileIoPermission _perm; \n        AsciiIo myfileio; \n        Container c; \n        _perm = new FileIoPermission(\"myfile.txt\",\"r\"); \n        myfileio = new AsciiIo(\"myfile.txt\",\"r\"); \n        while(myfileio.status()==IO_Status::OK) \n        { \n            c = myfileio.read(); \n            // ...do something with the container \n        } \n    }\n\n### Method status\n\nRetrieves the status of the last operation performed on the Io object.\n\n    public IO_Status status()\n\n#### Return Value\n\nThe status of the last operation, as an IO\\_Status system enumeration value.\n\n#### Remarks\n\nThe range of possible IO\\_Status values returned varies among Io Classes.\n\n#### Examples\n\n    static void myExample(Args _args) \n    { \n        Io myIo; \n        //.. create io object and perform some operations \n        if (myIo.status()==IO_Status::OK) \n        { \n            // ...go ahead - last operation was successful \n        } \n    }\n\n### Method write\n\nWrites values of a simple type.\n\n    public boolean write(VarArg values)\n\n#### Parameters\n\nvalues  \nThe simple types are string, integer, real, enum, and date.\n\n#### Return Value\n\ntrue if the write operation succeeds; otherwise false. If the write failed, the status method could be checked for the cause.\n\n#### Remarks\n\nThe method accepts a variable number of arguments. Each value specified is put into the output record as a field. The first argument as the first field, the second argument as the second field, and so on. The fields are separated with the field delimiter that is specified in the outFieldDelimiter method. Each record is separated by the outRecordDelimiter method. To write complete containers, use the writeExp method.\n\n### Method writeExp\n\nWrites the content of a container to the file.\n\n    public boolean writeExp(container data)\n\n#### Parameters\n\ndata  \nThe container with data for the record.\n\n#### Return Value\n\ntrue if the operation succeeded; otherwise false.\n\n#### Remarks\n\nIf this method returns false, check the status method for the cause. The entries in the container are treated as fields, and the container is treated as a full record. The field separator is defined in the outFieldDelimiter method. The record separator is defined in the outRecordDelimiter method.\n\n#### Examples\n\n    static void testMethod(Args _args) \n    { \n        FileIOPermission _perm; \n        container c; \n        CommaIo myfile; \n        _perm = new FileIOPermission(\"myfile.txt\",\"w\"); \n        _perm.assert(); \n        myfile = new CommaIo(\"myfile.txt\",\"w\"); \n        // Assign the entries in the container according to record layout. \n        c = [1,\"MyText\",1.324,\"Last field\"]; \n        // write this record according to file format (record/field delimiters). \n        myfile.writeExp(c); \n    }\n\n### Method finalize\n\nCloses the file and, if data was written, flushes the file buffers to disk.\n\n    public void finalize()\n\n#### Remarks\n\nThe object is typically finalized by leaving the scope, so finalize is typically not called directly. Written output will not be valid before the object is finalized.\n\n### Method new\n\nCreates a new instance of the Io class.\n\n    public void new(str filename, str mode)\n\n#### Parameters\n\nfilename  \nThe mode in which the file should be opened.\n\n<!-- -->\n\nmode  \nThe mode in which the file should be opened.\n\n#### Remarks\n\nThe mode parameter can be one of the following modes:\n\n-   R – read\n-   W – write\n-   A – append (implies W)\n-   T – translate (text)\n-   B – binary\n\nA run-time error occurs if the file is accessed with a method that does not correspond to the current opened mode (for example, if an attempt is made to write to a read-mode file). If an attacker can control input to the new method, a security risk exists. Therefore, this method runs under Code Access Security. Calls to this method on the server require permission. . Ensure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.\n\n#### Examples\n\nThis example uses the Io class to write to ExampleFile.\n\n    void IoExample() \n    { \n        Io io; \n        container con; \n        FileIoPermission perm; \n        #define.ExampleFile(@\"c:\\test.txt\") \n        #define.ExampleOpenMode(\"w\") \n        // Grants permission to execute the \n        // Io.new method. \n        // Io.new runs under code access security. \n        perm = new FileIoPermission(#ExampleFile, #ExampleOpenMode); \n        if (perm == null) \n        { \n            return; \n        } \n        perm.assert(); \n        io = new Io(#ExampleFile, #ExampleOpenMode); \n        if (io != null) \n        { \n            io.write(\"Test\"); \n        } \n        // Close the code access permission scope. \n        CodeAccessPermission::revertAssert(); \n    }\n\n"}