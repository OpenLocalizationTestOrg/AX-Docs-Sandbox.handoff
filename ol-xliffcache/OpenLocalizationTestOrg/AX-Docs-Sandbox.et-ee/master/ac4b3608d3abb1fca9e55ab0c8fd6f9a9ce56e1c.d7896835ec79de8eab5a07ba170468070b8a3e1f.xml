{"nodes":[{"pos":[32,58],"content":"U Classes | Microsoft Docs","needQuote":true,"needEscape":true,"nodes":[{"content":"U Classes | Microsoft Docs","pos":[0,26]}]},{"pos":[72,120],"content":"System API classes that start with the letter U.","needQuote":true,"needEscape":true,"nodes":[{"content":"System API classes that start with the letter U.","pos":[0,48]}]},{"pos":[545,554],"content":"U Classes","linkify":"U Classes","nodes":[{"content":"U Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter U.","pos":[556,604]},{"pos":[606,622],"content":"Class UnitofWork","linkify":"Class UnitofWork","nodes":[{"content":"Class UnitofWork","pos":[0,16]}]},{"pos":[682,689],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[695,703],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[709,716],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[720,726]},{"content":"Description","pos":[783,794]},{"content":"public boolean getByKey(Common record)","pos":[958,996]},{"content":"public void updateonSaveChanges(Common record)","pos":[1077,1123]},{"content":"public void saveChanges(<ph id=\"ph1\">\\[</ph>UserConnection user<ph id=\"ph2\">\\_</ph>connection<ph id=\"ph3\">\\]</ph>)","pos":[1196,1256],"source":"public void saveChanges(\\[UserConnection user\\_connection\\])"},{"content":"public void deleteonSaveChanges(Common record)","pos":[1315,1361]},{"content":"public void insertonSaveChanges(Common record)","pos":[1434,1480]},{"content":"public void finalize()","pos":[1553,1575]},{"content":"public void new()","pos":[1672,1689]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[1735,1786]},{"content":"public void clear()","pos":[1791,1810]},{"pos":[1913,1928],"content":"Method getByKey","linkify":"Method getByKey","nodes":[{"content":"Method getByKey","pos":[0,15]}]},{"pos":[1979,1989],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[1991,1997]},{"pos":[2006,2018],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2024,2050],"content":"Method updateonSaveChanges","linkify":"Method updateonSaveChanges","nodes":[{"content":"Method updateonSaveChanges","pos":[0,26]}]},{"pos":[2109,2119],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2121,2127]},{"pos":[2135,2153],"content":"Method saveChanges","linkify":"Method saveChanges","nodes":[{"content":"Method saveChanges","pos":[0,18]}]},{"pos":[2223,2233],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"user<ph id=\"ph1\">\\_</ph>connection","pos":[2235,2251],"source":"user\\_connection"},{"pos":[2259,2285],"content":"Method deleteonSaveChanges","linkify":"Method deleteonSaveChanges","nodes":[{"content":"Method deleteonSaveChanges","pos":[0,26]}]},{"pos":[2344,2354],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2356,2362]},{"pos":[2370,2396],"content":"Method insertonSaveChanges","linkify":"Method insertonSaveChanges","nodes":[{"content":"Method insertonSaveChanges","pos":[0,26]}]},{"pos":[2455,2465],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2467,2473]},{"pos":[2481,2496],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[2530,2540],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[2542,2593]},{"pos":[2622,2634],"content":"Method clear","linkify":"Method clear","nodes":[{"content":"Method clear","pos":[0,12]}]},{"pos":[2664,2684],"content":"Class UserConnection","linkify":"Class UserConnection","nodes":[{"content":"Class UserConnection","pos":[0,20]}]},{"content":"The UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.","pos":[2730,2869]},{"pos":[2875,2882],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"SQL statements are executed, and results are returned in the context of a UserConnection class.","pos":[2884,2979]},{"content":"The UserConnection class can be used to obtain a separate transaction scope.","pos":[2980,3056]},{"pos":[3062,3070],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[3645,3652],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[3656,3662]},{"content":"Description","pos":[3712,3723]},{"content":"public void new(<ph id=\"ph1\">\\[</ph>boolean generateNewTransactionID<ph id=\"ph2\">\\]</ph>)","pos":[3880,3933],"source":"public void new(\\[boolean generateNewTransactionID\\])"},{"content":"Initializes a new instance of the Connection class.","pos":[3936,3987]},{"pos":[3995,4005],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Connection class.","pos":[4007,4058]},{"pos":[4122,4132],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"generateNewTransactionID","pos":[4134,4158]},{"pos":[4165,4183],"content":"Class UserMenuList","linkify":"Class UserMenuList","nodes":[{"content":"Class UserMenuList","pos":[0,18]}]},{"content":"The UserMenuList class enables you to create, read, update, and delete X++ code and metadata.","pos":[4225,4318]},{"pos":[4324,4331],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4337,4345],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[4351,4358],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[4362,4368]},{"content":"Description","pos":[4401,4412]},{"content":"public void createMenu(<ph id=\"ph1\">\\[</ph>str name<ph id=\"ph2\">\\]</ph>)","pos":[4472,4508],"source":"public void createMenu(\\[str name\\])"},{"pos":[4530,4547],"content":"Method createMenu","linkify":"Method createMenu","nodes":[{"content":"Method createMenu","pos":[0,17]}]},{"pos":[4594,4604],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[4606,4610]},{"pos":[4617,4632],"content":"Class UserSetup","linkify":"Class UserSetup","nodes":[{"content":"Class UserSetup","pos":[0,15]}]},{"content":"The UserSetup class provides an interface for setting user parameters.","pos":[4671,4741]},{"pos":[4747,4754],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class is used mainly in the SysUserSetup form.","pos":[4756,4807]},{"content":"This class lets you create, read, update, and delete X++ code and metadata.","pos":[4808,4883]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[4884,4994]},{"pos":[5000,5008],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5014,5021],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5025,5031]},{"content":"Description","pos":[5067,5078]},{"content":"public boolean xRef(<ph id=\"ph1\">\\[</ph>boolean enable<ph id=\"ph2\">\\]</ph>)","pos":[5141,5180],"source":"public boolean xRef(\\[boolean enable\\])"},{"content":"public void setUserSetup(Common cursor)","pos":[5199,5238]},{"content":"public void setDefaults(Common cursor)","pos":[5257,5295]},{"pos":[5318,5329],"content":"Method xRef","linkify":"Method xRef","nodes":[{"content":"Method xRef","pos":[0,11]}]},{"pos":[5379,5389],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"enable","pos":[5391,5397]},{"pos":[5406,5418],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5424,5443],"content":"Method setUserSetup","linkify":"Method setUserSetup","nodes":[{"content":"Method setUserSetup","pos":[0,19]}]},{"pos":[5495,5505],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5507,5513]},{"pos":[5521,5539],"content":"Method setDefaults","linkify":"Method setDefaults","nodes":[{"content":"Method setDefaults","pos":[0,18]}]},{"pos":[5590,5600],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5602,5608]},{"pos":[5615,5629],"content":"Class UtilFile","linkify":"Class UtilFile","nodes":[{"content":"Class UtilFile","pos":[0,14]}]},{"pos":[5669,5676],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5682,5690],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5696,5703],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5707,5713]},{"content":"Description","pos":[5769,5780]},{"content":"public boolean aodFileExist(UtilEntryLevel layer)","pos":[5969,6018]},{"content":"public int importAODFile(UtilEntryLevel layer, int modelId)","pos":[6100,6159]},{"content":"public str layers()","pos":[6231,6250]},{"content":"public boolean needReindex()","pos":[6362,6390]},{"content":"public void check(str layer, str action)","pos":[6493,6533]},{"content":"public void new(str fileType)","pos":[6624,6653]},{"content":"Initializes a new instance of the Object class.","pos":[6686,6733]},{"content":"public void reindex()","pos":[6755,6776]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[6817,6881]},{"content":"public void flushCache()","pos":[6886,6910]},{"pos":[7020,7039],"content":"Method aodFileExist","linkify":"Method aodFileExist","nodes":[{"content":"Method aodFileExist","pos":[0,19]}]},{"pos":[7101,7111],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7113,7118]},{"pos":[7127,7139],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7145,7165],"content":"Method importAODFile","linkify":"Method importAODFile","nodes":[{"content":"Method importAODFile","pos":[0,20]}]},{"pos":[7237,7247],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7249,7254]},{"content":"modelId","pos":[7268,7275]},{"pos":[7284,7296],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7302,7315],"content":"Method layers","linkify":"Method layers","nodes":[{"content":"Method layers","pos":[0,13]}]},{"pos":[7347,7359],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7365,7383],"content":"Method needReindex","linkify":"Method needReindex","nodes":[{"content":"Method needReindex","pos":[0,18]}]},{"pos":[7424,7436],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7442,7454],"content":"Method check","linkify":"Method check","nodes":[{"content":"Method check","pos":[0,12]}]},{"pos":[7507,7517],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7519,7524]},{"content":"action","pos":[7538,7544]},{"pos":[7552,7562],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[7564,7611]},{"pos":[7653,7663],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileType","pos":[7665,7673]},{"pos":[7681,7695],"content":"Method reindex","linkify":"Method reindex","nodes":[{"content":"Method reindex","pos":[0,14]}]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[7697,7761]},{"pos":[7795,7802],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before you call this API.","pos":[7804,7913]},{"pos":[7920,7928],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example calls the UtilFile.reindex method.","pos":[7930,7986]},{"content":"It checks whether the user has the required security key before you perform a modification.","pos":[7987,8078]},{"pos":[8266,8283],"content":"Method flushCache","linkify":"Method flushCache","nodes":[{"content":"Method flushCache","pos":[0,17]}]}],"content":"---\n# required metadata\n\ntitle: U Classes | Microsoft Docs\ndescription: System API classes that start with the letter U.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-23 23:49:03\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# keywords: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.suite: Released- Dynamics AX 7.0.0\n# ms.tgt_pltfrm: \nms.custom: 51691\nms.assetid: ad270716-7544-422e-8528-1d27f3c477ee\nms.region: Global\n# ms.industry: \nms.author: robinr\n\n---\n\n# U Classes\n\nSystem API classes that start with the letter U.\n\nClass UnitofWork\n----------------\n\n    class UnitofWork extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                       | Description                                         |\n|--------------------------------------------------------------|-----------------------------------------------------|\n| public boolean getByKey(Common record)                       |                                                     |\n| public void updateonSaveChanges(Common record)               |                                                     |\n| public void saveChanges(\\[UserConnection user\\_connection\\]) |                                                     |\n| public void deleteonSaveChanges(Common record)               |                                                     |\n| public void insertonSaveChanges(Common record)               |                                                     |\n| public void finalize()                                       |                                                     |\n| public void new()                                            | Initializes a new instance of the UnitofWork class. |\n| public void clear()                                          |                                                     |\n\n### Method getByKey\n\n    public boolean getByKey(Common record)\n\n#### Parameters\n\nrecord  \n\n#### Return Value\n\n### Method updateonSaveChanges\n\n    public void updateonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method saveChanges\n\n    public void saveChanges([UserConnection user_connection])\n\n#### Parameters\n\nuser\\_connection  \n\n### Method deleteonSaveChanges\n\n    public void deleteonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method insertonSaveChanges\n\n    public void insertonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the UnitofWork class.\n\n    public void new()\n\n### Method clear\n\n    public void clear()\n\n## Class UserConnection\n    class UserConnection extends Connection\n\nThe UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.\n\n### Remarks\n\nSQL statements are executed, and results are returned in the context of a UserConnection class. The UserConnection class can be used to obtain a separate transaction scope.\n\n### Examples\n\n    static void example()  \n    { \n        UserConnection Con; \n        Statement Stmt; \n        Str sql; \n        ResultSet R; \n        SqlStatementExecutePermission perm; \n        Con = new UserConnection(); \n        sql = 'SELECT VALUE FROM SQLSYSTEMVARIABLES'; \n        Stmt = Con.createStatement(); \n        perm = new SqlStatementExecutePermission(sql); \n        // Check for permission to use the statement. \n        perm.assert(); \n        R = Stmt.executeQuery(sql); \n        while ( R.next() ) \n        { \n            print R.getString(1); \n        } \n    }\n\n### Methods\n\n| Method                                                | Description                                         |\n|-------------------------------------------------------|-----------------------------------------------------|\n| public void new(\\[boolean generateNewTransactionID\\]) | Initializes a new instance of the Connection class. |\n\n### Method new\n\nInitializes a new instance of the Connection class.\n\n    public void new([boolean generateNewTransactionID])\n\n#### Parameters\n\ngenerateNewTransactionID  \n\n## Class UserMenuList\n    class UserMenuList extends TreeNode\n\nThe UserMenuList class enables you to create, read, update, and delete X++ code and metadata.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                               | Description |\n|--------------------------------------|-------------|\n| public void createMenu(\\[str name\\]) |             |\n\n### Method createMenu\n\n    public void createMenu([str name])\n\n#### Parameters\n\nname  \n\n## Class UserSetup\n    class UserSetup extends TreeNode\n\nThe UserSetup class provides an interface for setting user parameters.\n\n### Remarks\n\nThis class is used mainly in the SysUserSetup form. This class lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n### Examples\n\n### Methods\n\n| Method                                  | Description |\n|-----------------------------------------|-------------|\n| public boolean xRef(\\[boolean enable\\]) |             |\n| public void setUserSetup(Common cursor) |             |\n| public void setDefaults(Common cursor)  |             |\n\n### Method xRef\n\n    public boolean xRef([boolean enable])\n\n#### Parameters\n\nenable  \n\n#### Return Value\n\n### Method setUserSetup\n\n    public void setUserSetup(Common cursor)\n\n#### Parameters\n\ncursor  \n\n### Method setDefaults\n\n    public void setDefaults(Common cursor)\n\n#### Parameters\n\ncursor  \n\n## Class UtilFile\n    class UtilFile extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                      | Description                                                      |\n|-------------------------------------------------------------|------------------------------------------------------------------|\n| public boolean aodFileExist(UtilEntryLevel layer)           |                                                                  |\n| public int importAODFile(UtilEntryLevel layer, int modelId) |                                                                  |\n| public str layers()                                         |                                                                  |\n| public boolean needReindex()                                |                                                                  |\n| public void check(str layer, str action)                    |                                                                  |\n| public void new(str fileType)                               | Initializes a new instance of the Object class.                  |\n| public void reindex()                                       | Lets you create, read, update, and delete X++ code and metadata. |\n| public void flushCache()                                    |                                                                  |\n\n### Method aodFileExist\n\n    public boolean aodFileExist(UtilEntryLevel layer)\n\n#### Parameters\n\nlayer  \n\n#### Return Value\n\n### Method importAODFile\n\n    public int importAODFile(UtilEntryLevel layer, int modelId)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\nmodelId  \n\n#### Return Value\n\n### Method layers\n\n    public str layers()\n\n#### Return Value\n\n### Method needReindex\n\n    public boolean needReindex()\n\n#### Return Value\n\n### Method check\n\n    public void check(str layer, str action)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\naction  \n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(str fileType)\n\n#### Parameters\n\nfileType  \n\n### Method reindex\n\nLets you create, read, update, and delete X++ code and metadata.\n\n    public void reindex()\n\n#### Remarks\n\nMake sure that the user has access to the development security key (SysDevelopment) before you call this API.\n\n#### Examples\n\nThe following example calls the UtilFile.reindex method. It checks whether the user has the required security key before you perform a modification.\n\n    server static public void Main(Args _args) \n    { \n        UtilFile u; \n        u = new UtilFile(\"util\"); \n        if (u) \n        { \n            u.reindex(); \n        } \n    }\n\n### Method flushCache\n\n    public void flushCache()\n\n"}