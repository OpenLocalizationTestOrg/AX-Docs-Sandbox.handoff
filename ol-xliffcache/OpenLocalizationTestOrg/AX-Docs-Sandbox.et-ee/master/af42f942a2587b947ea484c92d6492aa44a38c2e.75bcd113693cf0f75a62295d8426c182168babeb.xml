{"nodes":[{"pos":[32,76],"content":"X++ Math run-time functions | Microsoft Docs","needQuote":true,"needEscape":true,"nodes":[{"content":"X++ Math run-time functions | Microsoft Docs","pos":[0,44]}]},{"pos":[90,138],"content":"This wiki describes the math run-time functions.","needQuote":true,"needEscape":true,"nodes":[{"content":"This wiki describes the math run-time functions.","pos":[0,48]}]},{"pos":[552,579],"content":"X++ Math run-time functions","linkify":"X++ Math run-time functions","nodes":[{"content":"X++ Math run-time functions","pos":[0,27]}]},{"content":"These functions perform mathematical calculations.","pos":[581,631]},{"pos":[633,636],"content":"abs","linkify":"abs","nodes":[{"content":"abs","pos":[0,3]}]},{"content":"Retrieves the absolute value of a real number.","pos":[642,688]},{"content":"Examples:","pos":[689,698]},{"pos":[704,748],"content":"<bpt id=\"p1\">**</bpt>abs(-100.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>100.0<ept id=\"p2\">**</ept>.","source":"**abs(-100.0)** returns the value **100.0**."},{"pos":[753,796],"content":"<bpt id=\"p1\">**</bpt>abs(30.56)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>30.56<ept id=\"p2\">**</ept>.","source":"**abs(30.56)** returns the value **30.56**."},{"pos":[802,808],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[838,848],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[852,861]},{"content":"Description","pos":[864,875]},{"content":"arg","pos":[966,969]},{"content":"The number to get the absolute value of.","pos":[978,1018]},{"pos":[1026,1038],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1040,1068],"content":"The absolute value of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The absolute value of *arg*."},{"pos":[1074,1081],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1340,1344],"content":"acos","linkify":"acos","nodes":[{"content":"acos","pos":[0,4]}]},{"content":"Retrieves the arc cosine of a real number.","pos":[1345,1387]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[1388,1536],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[1542,1548],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1579,1589],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1593,1602]},{"content":"Description","pos":[1605,1616]},{"content":"arg","pos":[1709,1712]},{"content":"The number to retrieve the arc cosine of.","pos":[1721,1762]},{"pos":[1770,1782],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1784,1808],"content":"The arc cosine of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The arc cosine of *arg*."},{"pos":[1814,1821],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2031,2035],"content":"asin","linkify":"asin","nodes":[{"content":"asin","pos":[0,4]}]},{"content":"Retrieves the arc sine of a real number.","pos":[2036,2076]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[2077,2225],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[2231,2237],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2268,2278],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2282,2291]},{"content":"Description","pos":[2294,2305]},{"content":"arg","pos":[2398,2401]},{"content":"The number to calculate the arc sine for.","pos":[2410,2451]},{"pos":[2459,2471],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc sine of the specified number.","pos":[2473,2510]},{"pos":[2516,2523],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2525,2557],"content":"<bpt id=\"p1\">**</bpt>aSin(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.37<ept id=\"p2\">**</ept>.","source":"**aSin(0.36)** returns **0.37**."},{"pos":[2562,2566],"content":"atan","linkify":"atan","nodes":[{"content":"atan","pos":[0,4]}]},{"content":"Retrieves the arc tangent of a real number.","pos":[2567,2610]},{"pos":[2616,2622],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2653,2663],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2667,2676]},{"content":"Description","pos":[2679,2690]},{"content":"arg","pos":[2789,2792]},{"content":"The number to calculate the arc tangent for.","pos":[2801,2845]},{"pos":[2853,2865],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc tangent of the specified number.","pos":[2867,2907]},{"pos":[2913,2920],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2922,2954],"content":"<bpt id=\"p1\">**</bpt>aTan(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.35<ept id=\"p2\">**</ept>.","source":"**aTan(0.36)** returns **0.35**."},{"pos":[2960,2967],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3146,3157],"content":"corrFlagGet","linkify":"corrFlagGet","nodes":[{"content":"corrFlagGet","pos":[0,11]}]},{"content":"Retrieves the state of the correction flag for a real number.","pos":[3158,3219]},{"pos":[3225,3231],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3268,3278],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3282,3291]},{"content":"Description","pos":[3294,3305]},{"content":"arg","pos":[3386,3389]},{"content":"The flag to retrieve the state for.","pos":[3398,3433]},{"pos":[3441,3453],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[3455,3528],"content":"A non-zero value if the flag is set; <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero) if the flag is cleared.","source":"A non-zero value if the flag is set; **0** (zero) if the flag is cleared."},{"pos":[3534,3541],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3543,3580],"content":"The following example displays <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>.","source":"The following example displays **1**."},{"pos":[3728,3739],"content":"corrFlagSet","linkify":"corrFlagSet","nodes":[{"content":"corrFlagSet","pos":[0,11]}]},{"content":"Controls the correction flag for a real number.","pos":[3740,3787]},{"pos":[3793,3799],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3847,3857],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3861,3870]},{"content":"Description","pos":[3873,3884]},{"content":"real","pos":[4025,4029]},{"content":"The number in which to turn the correction flag on or off.","pos":[4037,4095]},{"content":"arg","pos":[4107,4110]},{"pos":[4119,4184],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> to turn the flag off; a non-zero value to turn the flag on.","source":"**0** to turn the flag off; a non-zero value to turn the flag on."},{"pos":[4192,4204],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[4206,4275],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> if the flag is now off; a non-zero value if the flag is now on.","source":"**0** if the flag is now off; a non-zero value if the flag is now on."},{"pos":[4277,4280],"content":"cos","linkify":"cos","nodes":[{"content":"cos","pos":[0,3]}]},{"content":"Retrieves the cosine of a real number.","pos":[4286,4324]},{"pos":[4330,4336],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4366,4376],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4380,4389]},{"content":"Description","pos":[4392,4403]},{"content":"arg","pos":[4482,4485]},{"content":"The number to find the cosine for.","pos":[4494,4528]},{"pos":[4536,4548],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The cosine of the specified number.","pos":[4550,4585]},{"pos":[4591,4598],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4600,4652],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[4658,4665],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4667,4712],"content":"The following code example displays <bpt id=\"p1\">**</bpt>0.76<ept id=\"p1\">**</ept>.","source":"The following code example displays **0.76**."},{"pos":[4874,4878],"content":"cosh","linkify":"cosh","nodes":[{"content":"cosh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic cosine of a real number.","pos":[4879,4928]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[4929,5081],"source":"**Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[5087,5093],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5124,5134],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5138,5147]},{"content":"Description","pos":[5150,5161]},{"content":"arg","pos":[5272,5275]},{"content":"The hyperbolic number to calculate the cosine for.","pos":[5284,5334]},{"pos":[5342,5354],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic cosine of the specified number.","pos":[5356,5402]},{"pos":[5408,5415],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5417,5469],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[5475,5482],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5678,5686],"content":"decRound","linkify":"decRound","nodes":[{"content":"decRound","pos":[0,8]}]},{"content":"Rounds a number to the specified number of decimal places.","pos":[5687,5745]},{"pos":[5751,5757],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5809,5819],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5823,5832]},{"content":"Description","pos":[5835,5846]},{"content":"figure","pos":[5939,5945]},{"content":"The number to round.","pos":[5951,5971]},{"content":"decimals","pos":[5997,6005]},{"content":"The number of decimal places to round to.","pos":[6009,6050]},{"pos":[6058,6070],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The value of the specified number, rounded to the specified number of decimal places.","pos":[6072,6157]},{"pos":[6163,6170],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6172,6249],"content":"The value of the <bpt id=\"p1\">*</bpt>decimals<ept id=\"p1\">*</ept> parameter can be positive, 0 (zero), or negative.","source":"The value of the *decimals* parameter can be positive, 0 (zero), or negative."},{"pos":[6255,6311],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1234.66<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,2)** returns the value **1234.66**."},{"pos":[6316,6369],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1235<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,0)** returns the value **1235**."},{"pos":[6374,6428],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,-2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1200<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,-2)** returns the value **1200**."},{"pos":[6433,6491],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12345.70<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,1)** returns the value **12345.70**."},{"pos":[6496,6555],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,-1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12350.00<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,-1)** returns the value **12350.00**."},{"pos":[6557,6560],"content":"exp","linkify":"exp","nodes":[{"content":"exp","pos":[0,3]}]},{"content":"Retrieves the natural antilogarithm of the specified real number.","pos":[6566,6631]},{"pos":[6637,6643],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[6673,6683],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6687,6696]},{"content":"Description","pos":[6699,6710]},{"content":"arg","pos":[6839,6842]},{"content":"The real number to calculate the natural antilogarithm for.","pos":[6851,6910]},{"pos":[6918,6930],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural antilogarithm of the specified real number.","pos":[6932,6987]},{"pos":[6993,7000],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7002,7127],"content":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter.","source":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter."},{"pos":[7133,7140],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7424,7429],"content":"exp10","linkify":"exp10","nodes":[{"content":"exp10","pos":[0,5]}]},{"content":"Retrieves the base-10 antilogarithm of the specified real number.","pos":[7430,7495]},{"pos":[7501,7507],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[7543,7553],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7557,7566]},{"content":"Description","pos":[7569,7580]},{"content":"decimal","pos":[7709,7716]},{"content":"The real number to calculate the base-10 antilogarithm for.","pos":[7721,7780]},{"pos":[7788,7800],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[7802,7869],"content":"The 10-based antilogarithm of the value of the <bpt id=\"p1\">*</bpt>decimal<ept id=\"p1\">*</ept> parameter.","source":"The 10-based antilogarithm of the value of the *decimal* parameter."},{"pos":[7875,7882],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8168,8172],"content":"frac","linkify":"frac","nodes":[{"content":"frac","pos":[0,4]}]},{"content":"Retrieves the decimal part of a real number.","pos":[8173,8217]},{"pos":[8223,8229],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8264,8274],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8278,8287]},{"content":"Description","pos":[8290,8301]},{"content":"decimal","pos":[8410,8417]},{"content":"The real number to retrieve the decimal part for.","pos":[8422,8471]},{"pos":[8479,8491],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The decimal part of the specified number.","pos":[8493,8534]},{"pos":[8540,8547],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8549,8594],"content":"<bpt id=\"p1\">**</bpt>frac(12.345)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>0.345<ept id=\"p2\">**</ept>.","source":"**frac(12.345)** returns the value **0.345**."},{"pos":[8599,8604],"content":"log10","linkify":"log10","nodes":[{"content":"log10","pos":[0,5]}]},{"content":"Retrieves the 10-digit logarithm of a real number.","pos":[8605,8655]},{"pos":[8661,8667],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8699,8709],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8713,8722]},{"content":"Description","pos":[8725,8736]},{"content":"arg","pos":[8831,8834]},{"content":"The number to calculate the logarithm for.","pos":[8843,8885]},{"pos":[8893,8905],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The base-10 logarithm of the specified number.","pos":[8907,8953]},{"pos":[8959,8966],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8968,9010],"content":"<bpt id=\"p1\">**</bpt>log10(200)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.30<ept id=\"p2\">**</ept>.","source":"**log10(200)** returns the value **2.30**."},{"pos":[9015,9019],"content":"logN","linkify":"logN","nodes":[{"content":"logN","pos":[0,4]}]},{"content":"Retrieves the natural logarithm of the specified real number.","pos":[9020,9081]},{"pos":[9087,9093],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[9124,9134],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9138,9147]},{"content":"Description","pos":[9150,9161]},{"content":"arg","pos":[9272,9275]},{"content":"The number to calculate the natural logarithm for.","pos":[9284,9334]},{"pos":[9342,9354],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural logarithm of the specified number.","pos":[9356,9402]},{"pos":[9408,9415],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9417,9457],"content":"<bpt id=\"p1\">**</bpt>logN(45)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>3.81<ept id=\"p2\">**</ept>.","source":"**logN(45)** returns the value **3.81**."},{"pos":[9459,9462],"content":"max","linkify":"max","nodes":[{"content":"max","pos":[0,3]}]},{"content":"Retrieves the larger of two specified values.","pos":[9468,9513]},{"pos":[9570,9580],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9584,9593]},{"content":"Description","pos":[9596,9607]},{"content":"object1","pos":[9652,9659]},{"content":"The first value.","pos":[9664,9680]},{"content":"object2","pos":[9686,9693]},{"content":"The second value.","pos":[9698,9715]},{"pos":[9723,9735],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[9737,9827],"content":"The larger of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The larger of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[9833,9840],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9846,9892],"content":"<bpt id=\"p1\">**</bpt>max(12.0,12.1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12.1<ept id=\"p2\">**</ept>.","source":"**max(12.0,12.1)** returns the value **12.1**."},{"pos":[9897,9936],"content":"<bpt id=\"p1\">**</bpt>max(2,33)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>33<ept id=\"p2\">**</ept>.","source":"**max(2,33)** returns the value **33**."},{"pos":[9938,9941],"content":"min","linkify":"min","nodes":[{"content":"min","pos":[0,3]}]},{"content":"Retrieves the smaller of two specified values.","pos":[9947,9993]},{"pos":[10050,10060],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10064,10073]},{"content":"Description","pos":[10076,10087]},{"content":"object1","pos":[10132,10139]},{"content":"The first value.","pos":[10144,10160]},{"content":"object2","pos":[10166,10173]},{"content":"The second value.","pos":[10178,10195]},{"pos":[10203,10215],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[10217,10308],"content":"The smaller of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The smaller of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[10314,10321],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10323,10361],"content":"<bpt id=\"p1\">**</bpt>min(2,33<ept id=\"p1\">**</ept>) returns the value <bpt id=\"p2\">**</bpt>2<ept id=\"p2\">**</ept>.","source":"**min(2,33**) returns the value **2**."},{"pos":[10367,10374],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10611,10616],"content":"power","linkify":"power","nodes":[{"content":"power","pos":[0,5]}]},{"content":"Raises a real number to the power of another real number.","pos":[10617,10674]},{"pos":[10680,10686],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[10733,10743],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10747,10756]},{"content":"Description","pos":[10759,10770]},{"content":"arg","pos":[10931,10934]},{"content":"The number to calculate the power of.","pos":[10943,10980]},{"content":"exponent","pos":[11023,11031]},{"pos":[11035,11110],"content":"The number to raise the number that is specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to.","source":"The number to raise the number that is specified by the *arg* parameter to."},{"pos":[11118,11130],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[11132,11265],"content":"The real number that is the number specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to the power of the number specified by the <bpt id=\"p2\">*</bpt>exponent<ept id=\"p2\">*</ept> parameter.","source":"The real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter."},{"pos":[11271,11278],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11284,11330],"content":"<bpt id=\"p1\">**</bpt>power(5.0,2.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.0<ept id=\"p2\">**</ept>.","source":"**power(5.0,2.0)** returns the value **25.0**."},{"pos":[11335,11380],"content":"<bpt id=\"p1\">**</bpt>power(4.0,0.5)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.0<ept id=\"p2\">**</ept>.","source":"**power(4.0,0.5)** returns the value **2.0**."},{"pos":[11385,11390],"content":"round","linkify":"round","nodes":[{"content":"round","pos":[0,5]}]},{"content":"Rounds a real number to the nearest multiple of another real number.","pos":[11391,11459]},{"pos":[11465,11471],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11520,11530],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11534,11543]},{"content":"Description","pos":[11547,11558]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[11738,11743],"source":"\\_arg"},{"content":"The original number.","pos":[11751,11771]},{"content":"<ph id=\"ph1\">\\_</ph>decimals","pos":[11840,11850],"source":"\\_decimals"},{"pos":[11853,11937],"content":"The number that the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be rounded to a multiple of.","source":"The number that the value of the *\\_arg* parameter must be rounded to a multiple of."},{"pos":[11945,11957],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[11959,12105],"content":"The number that is a multiple of the value specified by the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimals<ept id=\"p1\">*</ept> parameter and is closest to the value specified by the <bpt id=\"p2\">*</bpt><ph id=\"ph2\">\\_</ph>arg<ept id=\"p2\">*</ept> parameter.","source":"The number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter."},{"pos":[12111,12118],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12120,12296],"content":"To round a real number to a specified number of decimal places, use the <bpt id=\"p1\">[</bpt>decround function<ept id=\"p1\">](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)</ept>.","source":"To round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)."},{"pos":[12302,12309],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12315,12367],"content":"<bpt id=\"p1\">**</bpt>round(123.45,5.00)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>125.00<ept id=\"p2\">**</ept>.","source":"**round(123.45,5.00)** returns the value **125.00**."},{"pos":[12372,12420],"content":"<bpt id=\"p1\">**</bpt>round(7.45,1.05)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>7.35<ept id=\"p2\">**</ept>.","source":"**round(7.45,1.05)** returns the value **7.35**."},{"pos":[12425,12473],"content":"<bpt id=\"p1\">**</bpt>round(23.9,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(23.9,5.0)** returns the value **25.00**."},{"pos":[12478,12526],"content":"<bpt id=\"p1\">**</bpt>round(26.1,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(26.1,5.0)** returns the value **25.00**."},{"pos":[12528,12531],"content":"sin","linkify":"sin","nodes":[{"content":"sin","pos":[0,3]}]},{"content":"Retrieves the sine of a real number.","pos":[12537,12573]},{"pos":[12579,12585],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[12616,12626],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[12630,12639]},{"content":"Description","pos":[12642,12653]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[12738,12743],"source":"\\_arg"},{"content":"The number to calculate the sine for.","pos":[12750,12787]},{"pos":[12795,12807],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The sine of the specified real number.","pos":[12809,12847]},{"pos":[12853,12860],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12862,12916],"content":"The value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *\\_arg* parameter must be in radians."},{"pos":[12922,12929],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13337,13341],"content":"sinh","linkify":"sinh","nodes":[{"content":"sinh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic sine of a real number.","pos":[13342,13389]},{"pos":[13395,13401],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[13433,13443],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13447,13456]},{"content":"Description","pos":[13459,13470]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[13577,13582],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic sine for.","pos":[13589,13637]},{"pos":[13645,13657],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic sine of the specified real number.","pos":[13659,13708]},{"pos":[13714,13721],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13723,13882],"content":"Values for the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[13888,13895],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13897,13953],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>sinh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **sinh** function."},{"pos":[14349,14352],"content":"tan","linkify":"tan","nodes":[{"content":"tan","pos":[0,3]}]},{"content":"Retrieves the tangent of a real number.","pos":[14358,14397]},{"pos":[14403,14409],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[14439,14449],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[14453,14462]},{"content":"Description","pos":[14465,14476]},{"content":"arg","pos":[14577,14580]},{"content":"The real number to calculate the tangent for.","pos":[14589,14634]},{"pos":[14642,14654],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The tangent of the specified real number.","pos":[14656,14697]},{"pos":[14703,14710],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14712,14869],"content":"Values for the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[14875,14882],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14884,14939],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tan<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tan** function."},{"pos":[15103,15107],"content":"tanh","linkify":"tanh","nodes":[{"content":"tanh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic tangent of a real number.","pos":[15108,15158]},{"pos":[15164,15170],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[15202,15212],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15216,15225]},{"content":"Description","pos":[15228,15239]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[15352,15357],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic tangent for.","pos":[15364,15415]},{"pos":[15423,15435],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic tangent of the specified real number.","pos":[15437,15489]},{"pos":[15495,15502],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15504,15560],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tanh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tanh** function."},{"pos":[15772,15777],"content":"trunc","linkify":"trunc","nodes":[{"content":"trunc","pos":[0,5]}]},{"content":"Truncates a real number by removing any decimal places.","pos":[15778,15833]},{"pos":[15839,15845],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[15882,15892],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15896,15905]},{"content":"Description","pos":[15908,15919]},{"content":"<ph id=\"ph1\">\\_</ph>decimal","pos":[15976,15985],"source":"\\_decimal"},{"content":"The number to truncate.","pos":[15988,16011]},{"pos":[16019,16031],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[16033,16146],"content":"A number that is equivalent to the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimal<ept id=\"p1\">*</ept> parameter after the decimal places have been removed.","source":"A number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed."},{"pos":[16152,16159],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function always rounds numbers down to a complete integer.","pos":[16161,16224]},{"pos":[16230,16237],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example truncates 2.7147 to 2.00.","pos":[16239,16286]}],"content":"---\n# required metadata\n\ntitle: X++ Math run-time functions | Microsoft Docs\ndescription: This wiki describes the math run-time functions.\nauthor: annbe\nmanager: AnnBe\nms.date: 2016-02-04 22:13:25\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# keywords: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \n# ms.reviewer: \nms.suite: Released- Dynamics AX 7.0.0\n# ms.tgt_pltfrm: \nms.custom: 31361\nms.assetid: fd6b686d-323e-4e14-b9a5-7b757813f788\n# ms.region: \n# ms.industry: \nms.author: RobinARH\n\n---\n\n# X++ Math run-time functions\n\nThese functions perform mathematical calculations.\n\nabs\n---\n\nRetrieves the absolute value of a real number. Examples:\n\n-   **abs(-100.0)** returns the value **100.0**.\n-   **abs(30.56)** returns the value **30.56**.\n\n### Syntax\n\n    real abs(real arg)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| arg       | The number to get the absolute value of. |\n\n### Return value\n\nThe absolute value of *arg*.\n\n### Example\n\n    static void absExample(Args _args)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = abs(-3.14);\n        r2 = abs(3.14);\n        if (r1 == r2)\n        {\n            print \"abs of values are the same\";\n            pause;\n        }\n    }\n\n## acos\nRetrieves the arc cosine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real acos(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to retrieve the arc cosine of. |\n\n### Return value\n\nThe arc cosine of *arg*.\n\n### Example\n\n    static void acosExample(Args _args)\n    {\n        real r;\n        str  s;\n        ;\n        r = acos(0.0);\n        s = strFmt(\"The arc cosine of 0.0 is %1 \", r);\n        print s;\n        pause;\n    }\n\n## asin\nRetrieves the arc sine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real asin(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to calculate the arc sine for. |\n\n### Return value\n\nThe arc sine of the specified number.\n\n### Remarks\n\n**aSin(0.36)** returns **0.37**.\n\n## atan\nRetrieves the arc tangent of a real number.\n\n### Syntax\n\n    real atan(real arg)\n\n### Parameters\n\n| Parameter | Description                                  |\n|-----------|----------------------------------------------|\n| arg       | The number to calculate the arc tangent for. |\n\n### Return value\n\nThe arc tangent of the specified number.\n\n### Remarks\n\n**aTan(0.36)** returns **0.35**.\n\n### Example\n\n    static void atanExample(Args _args)\n    {\n        real r;\n        ;\n        r = atan(1.0);\n        print strFmt(\"The Arc Tangent of 1.0 is %1\", r);\n        pause;\n    }\n\n## corrFlagGet\nRetrieves the state of the correction flag for a real number.\n\n### Syntax\n\n    int corrFlagGet(real arg)\n\n### Parameters\n\n| Parameter | Description                         |\n|-----------|-------------------------------------|\n| arg       | The flag to retrieve the state for. |\n\n### Return value\n\nA non-zero value if the flag is set; **0** (zero) if the flag is cleared.\n\n### Example\n\nThe following example displays **1**.\n\n    static void corrFlagGetExample(Args _args)\n    {\n        real rr;\n        rr = corrFlagSet(0.36,2);\n        print(corrFlagGet(rr));\n    }\n\n## corrFlagSet\nControls the correction flag for a real number.\n\n### Syntax\n\n    real corrFlagSet(real real, int arg)\n\n### Parameters\n\n| Parameter | Description                                                       |\n|-----------|-------------------------------------------------------------------|\n| real      | The number in which to turn the correction flag on or off.        |\n| arg       | **0** to turn the flag off; a non-zero value to turn the flag on. |\n\n### Return value\n\n**0** if the flag is now off; a non-zero value if the flag is now on.\n\ncos\n---\n\nRetrieves the cosine of a real number.\n\n### Syntax\n\n    real cos(real arg)\n\n### Parameters\n\n| Parameter | Description                        |\n|-----------|------------------------------------|\n| arg       | The number to find the cosine for. |\n\n### Return value\n\nThe cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\nThe following code example displays **0.76**.\n\n    static void cosExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cos(15);\n        print strFmt(\"Cos of 15 is %1\", r);\n        pause;\n    }\n\n## cosh\nRetrieves the hyperbolic cosine of a real number. **Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real cosh(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The hyperbolic number to calculate the cosine for. |\n\n### Return value\n\nThe hyperbolic cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\n    static void coshExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cosh(0.1);\n        print \"The hyperbolic cosine of 0.1 is \" + num2Str(r, 2, 2, 1, 1);\n        pause;\n    }\n\n## decRound\nRounds a number to the specified number of decimal places.\n\n### Syntax\n\n    real decRound(real figure, int decimals)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| figure    | The number to round.                      |\n| decimals  | The number of decimal places to round to. |\n\n### Return value\n\nThe value of the specified number, rounded to the specified number of decimal places.\n\n### Remarks\n\nThe value of the *decimals* parameter can be positive, 0 (zero), or negative.\n\n-   **decRound(1234.6574,2)** returns the value **1234.66**.\n-   **decRound(1234.6574,0)** returns the value **1235**.\n-   **decRound(1234.6574,-2)** returns the value **1200**.\n-   **decRound(12345.6789,1)** returns the value **12345.70**.\n-   **decRound(12345.6789,-1)** returns the value **12350.00**.\n\nexp\n---\n\nRetrieves the natural antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp(real arg)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| arg       | The real number to calculate the natural antilogarithm for. |\n\n### Return value\n\nThe natural antilogarithm of the specified real number.\n\n### Remarks\n\nThe calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter.\n\n### Example\n\n    static void expExample(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## exp10\nRetrieves the base-10 antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp10(real decimal)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| decimal   | The real number to calculate the base-10 antilogarithm for. |\n\n### Return value\n\nThe 10-based antilogarithm of the value of the *decimal* parameter.\n\n### Example\n\n    static void exp10Example(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## frac\nRetrieves the decimal part of a real number.\n\n### Syntax\n\n    real frac(real decimal)\n\n### Parameters\n\n| Parameter | Description                                       |\n|-----------|---------------------------------------------------|\n| decimal   | The real number to retrieve the decimal part for. |\n\n### Return value\n\nThe decimal part of the specified number.\n\n### Remarks\n\n**frac(12.345)** returns the value **0.345**.\n\n## log10\nRetrieves the 10-digit logarithm of a real number.\n\n### Syntax\n\n    real log10(real arg)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| arg       | The number to calculate the logarithm for. |\n\n### Return value\n\nThe base-10 logarithm of the specified number.\n\n### Remarks\n\n**log10(200)** returns the value **2.30**.\n\n## logN\nRetrieves the natural logarithm of the specified real number.\n\n### Syntax\n\n    real logN(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The number to calculate the natural logarithm for. |\n\n### Return value\n\nThe natural logarithm of the specified number.\n\n### Remarks\n\n**logN(45)** returns the value **3.81**.\n\nmax\n---\n\nRetrieves the larger of two specified values.\n\n    anytype max(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe larger of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n-   **max(12.0,12.1)** returns the value **12.1**.\n-   **max(2,33)** returns the value **33**.\n\nmin\n---\n\nRetrieves the smaller of two specified values.\n\n    anytype min(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe smaller of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n**min(2,33**) returns the value **2**.\n\n### Example\n\n    static void minExample(Args _arg)\n    {\n            anytype a;\n            real r = 3.0;\n            real s = 2.0;\n\n            a = min(r, s);\n            print num2Str(a, 1, 2, 1, 1) + \" is less than the other number.\";\n    }\n\n## power\nRaises a real number to the power of another real number.\n\n### Syntax\n\n    real power(real arg, real exponent)\n\n### Parameters\n\n| Parameter | Description                                                                 |\n|-----------|-----------------------------------------------------------------------------|\n| arg       | The number to calculate the power of.                                       |\n| exponent  | The number to raise the number that is specified by the *arg* parameter to. |\n\n### Return value\n\nThe real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter.\n\n### Remarks\n\n-   **power(5.0,2.0)** returns the value **25.0**.\n-   **power(4.0,0.5)** returns the value **2.0**.\n\n## round\nRounds a real number to the nearest multiple of another real number.\n\n### Syntax\n\n    real round(real _arg, real _decimals)\n\n### Parameters\n\n| Parameter  | Description                                                                          |\n|------------|--------------------------------------------------------------------------------------|\n| \\_arg      | The original number.                                                                 |\n| \\_decimals | The number that the value of the *\\_arg* parameter must be rounded to a multiple of. |\n\n### Return value\n\nThe number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter.\n\n### Remarks\n\nTo round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx).\n\n### Remarks\n\n-   **round(123.45,5.00)** returns the value **125.00**.\n-   **round(7.45,1.05)** returns the value **7.35**.\n-   **round(23.9,5.0)** returns the value **25.00**.\n-   **round(26.1,5.0)** returns the value **25.00**.\n\nsin\n---\n\nRetrieves the sine of a real number.\n\n### Syntax\n\n    real sin(real _arg)\n\n### Parameters\n\n| Parameter | Description                           |\n|-----------|---------------------------------------|\n| \\_arg     | The number to calculate the sine for. |\n\n### Return value\n\nThe sine of the specified real number.\n\n### Remarks\n\nThe value of the *\\_arg* parameter must be in radians.\n\n### Example\n\n    static void sinExample(Args _arg)\n    {\n        real angleDegrees = 15.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sin(angleRadians);\n        print \"sin of a \"\n            + num2Str(angleDegrees, 2, 2, 1, 1)\n            + \" degree angle is \"\n            + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## sinh\nRetrieves the hyperbolic sine of a real number.\n\n### Syntax\n\n    real sinh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                      |\n|-----------|--------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic sine for. |\n\n### Return value\n\nThe hyperbolic sine of the specified real number.\n\n### Remarks\n\nValues for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **sinh** function.\n\n    static void sinhExample(Args _arg)\n    {\n        real angleDegrees = 45.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sinh(angleRadians);\n        print \"sinh of a \"\n        + num2Str(angleDegrees, 2, 2, 1, 1)\n        + \" degree angle is \"\n        + num2Str(r, 2, 15, 1, 1);\n        pause;\n    }\n\ntan\n---\n\nRetrieves the tangent of a real number.\n\n### Syntax\n\n    real tan(real arg)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| arg       | The real number to calculate the tangent for. |\n\n### Return value\n\nThe tangent of the specified real number.\n\n### Remarks\n\nValues for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **tan** function.\n\n    static void tanExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tan(250);\n        print strFmt(\"Tan of 250 is %1\", r);\n        pause;\n    }\n\n## tanh\nRetrieves the hyperbolic tangent of a real number.\n\n### Syntax\n\n    real tanh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                         |\n|-----------|-----------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic tangent for. |\n\n### Return value\n\nThe hyperbolic tangent of the specified real number.\n\n### Example\n\nThe following example illustrates the **tanh** function.\n\n    static void tanhExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tanh(0.1);\n        print \"The hyperbolic tangent of angle 0.1 is \"\n        + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## trunc\nTruncates a real number by removing any decimal places.\n\n### Syntax\n\n    real trunc(real _decimal)\n\n### Parameters\n\n| Parameter | Description             |\n|-----------|-------------------------|\n| \\_decimal | The number to truncate. |\n\n### Return value\n\nA number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed.\n\n### Remarks\n\nThis function always rounds numbers down to a complete integer.\n\n### Example\n\nThe following example truncates 2.7147 to 2.00.\n\n    static void truncExample(Args _arg)\n    {\n        real r;\n        ;\n        r = trunc(2.7147);\n        print strFmt(\"r = %1\",  r);\n        pause;\n    }\n\n"}