{"nodes":[{"pos":[32,62],"content":"Hardware Station extensibility","needQuote":true,"needEscape":true,"nodes":[{"content":"Hardware Station extensibility","pos":[0,30]}]},{"pos":[76,200],"content":"This topic explains how to extend Hardware Station to add support for new devices and new device types for existing devices.","needQuote":true,"needEscape":true,"nodes":[{"content":"This topic explains how to extend Hardware Station to add support for new devices and new device types for existing devices.","pos":[0,124]}]},{"pos":[708,738],"content":"Hardware Station extensibility","linkify":"Hardware Station extensibility","nodes":[{"content":"Hardware Station extensibility","pos":[0,30]}]},{"content":"This topic explains how to extend Hardware Station to add support for new devices and new device types for existing devices.","pos":[740,864]},{"pos":[866,898],"content":"Retail Hardware Station overview","linkify":"Retail Hardware Station overview","nodes":[{"content":"Retail Hardware Station overview","pos":[0,32]}]},{"content":"Retail Hardware Station is used by Retail Modern POS and Cloud POS to connect to retail hardware peripherals such as printers, cash drawers, scanners, and payment terminals.","pos":[933,1106]},{"content":"<ph id=\"ph1\">\\[</ph>caption id=\"attachment<ph id=\"ph2\">\\_</ph>262924\" align=\"alignnone\" width=\"300\"<ph id=\"ph3\">\\]</ph><bpt id=\"p1\">[</bpt><ph id=\"ph4\">![</ph>HWS-Local-Traditional<ept id=\"p1\">](./media/hws-local-300x236.png)](./media/hws-local.png)</ept> Traditional local setup<ph id=\"ph5\">\\[</ph>/caption<ph id=\"ph6\">\\]</ph> <ph id=\"ph7\">\\[</ph>caption id=\"attachment<ph id=\"ph8\">\\_</ph>262934\" align=\"alignnone\" width=\"300\"<ph id=\"ph9\">\\]</ph><bpt id=\"p2\">[</bpt><ph id=\"ph10\">![</ph>HWS-Shared<ept id=\"p2\">](./media/hws-shared-300x224.png)](./media/hws-shared.png)</ept> Shared setup<ph id=\"ph11\">\\[</ph>/caption<ph id=\"ph12\">\\]</ph>","pos":[1107,1450],"source":"\\[caption id=\"attachment\\_262924\" align=\"alignnone\" width=\"300\"\\][![HWS-Local-Traditional](./media/hws-local-300x236.png)](./media/hws-local.png) Traditional local setup\\[/caption\\] \\[caption id=\"attachment\\_262934\" align=\"alignnone\" width=\"300\"\\][![HWS-Shared](./media/hws-shared-300x224.png)](./media/hws-shared.png) Shared setup\\[/caption\\]"},{"pos":[1455,1484],"content":"Retail Hardware Station setup","linkify":"Retail Hardware Station setup","nodes":[{"content":"Retail Hardware Station setup","pos":[0,29]}]},{"pos":[1485,1728],"content":"Before you start, use the information in <bpt id=\"p1\">[</bpt>Retail hardware station configuration and installation<ept id=\"p1\">](retail-hardware-station-configuration-installation.md)</ept> to install Hardware Station, and to get a feel of what hardware is and how it's installed.","source":"Before you start, use the information in [Retail hardware station configuration and installation](retail-hardware-station-configuration-installation.md) to install Hardware Station, and to get a feel of what hardware is and how it's installed."},{"pos":[1733,1769],"content":"Retail Hardware Station architecture","linkify":"Retail Hardware Station architecture","nodes":[{"content":"Retail Hardware Station architecture","pos":[0,36]}]},{"content":"Hardware Station exposes Web API for Hardware Station application programming interfaces (APIs).","pos":[1770,1866]},{"content":"Hardware Station can be extended either by implementing a new controller for a new device (for example, a cash dispenser) or by overriding an existing controller for an existing device type (for example, a new Audio Jack magnetic stripe reader <ph id=\"ph1\">\\[</ph>MSR<ph id=\"ph2\">\\]</ph> implementation).","pos":[1867,2135],"source":" Hardware Station can be extended either by implementing a new controller for a new device (for example, a cash dispenser) or by overriding an existing controller for an existing device type (for example, a new Audio Jack magnetic stripe reader \\[MSR\\] implementation)."},{"content":"<ph id=\"ph1\">\\[</ph>caption id=\"attachment<ph id=\"ph2\">\\_</ph>262954\" align=\"alignnone\" width=\"640\"<ph id=\"ph3\">\\]</ph><bpt id=\"p1\">[</bpt><ph id=\"ph4\">![</ph>Hardware Station Architecture<ept id=\"p1\">](./media/hardware-station-architecture-1024x764.png)](./media/hardware-station-architecture.png)</ept> Hardware Station architecture<ph id=\"ph5\">\\[</ph>/caption<ph id=\"ph6\">\\]</ph>","pos":[2136,2372],"source":"\\[caption id=\"attachment\\_262954\" align=\"alignnone\" width=\"640\"\\][![Hardware Station Architecture](./media/hardware-station-architecture-1024x764.png)](./media/hardware-station-architecture.png) Hardware Station architecture\\[/caption\\]"},{"pos":[2377,2424],"content":"Retail Hardware Station extensibility scenarios","linkify":"Retail Hardware Station extensibility scenarios","nodes":[{"content":"Retail Hardware Station extensibility scenarios","pos":[0,47]}]},{"content":"Extensibility in Hardware Station is achieved by using <bpt id=\"p1\">[</bpt>Managed Extensibility Framework (MEF)<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/dd460648(v=vs.110).aspx)</ept>, which is supported by .NET.","pos":[2425,2614],"source":"Extensibility in Hardware Station is achieved by using [Managed Extensibility Framework (MEF)](https://msdn.microsoft.com/en-us/library/dd460648(v=vs.110).aspx), which is supported by .NET."},{"content":"<bpt id=\"p1\">**</bpt>Extensibility guideline:<ept id=\"p1\">**</ept> Always write your extension in your own extension assembly.","pos":[2615,2703],"source":"**Extensibility guideline:** Always write your extension in your own extension assembly."},{"content":"That way, you're writing a true extension, and upgrades will be much easier.","pos":[2704,2780]},{"content":"There are two basic scenarios for extension:","pos":[2781,2825]},{"content":"<bpt id=\"p1\">**</bpt>Adding a new device<ept id=\"p1\">**</ept> – The out-of-box Hardware Station doesn't already support the device (for example, a cash dispenser).","pos":[2831,2956],"source":"**Adding a new device** – The out-of-box Hardware Station doesn't already support the device (for example, a cash dispenser)."},{"content":"Therefore, you must add support for the new device in Hardware Station.","pos":[2957,3028]},{"pos":[3033,3285],"content":"<bpt id=\"p1\">**</bpt>Adding a new device type for an existing device<ept id=\"p1\">**</ept> – The out-of-box Hardware Station implementation already supports the device (for example, an MSR), but you must add support for a specific device type (for example, an Audio Jack MSR implementation).","source":"**Adding a new device type for an existing device** – The out-of-box Hardware Station implementation already supports the device (for example, an MSR), but you must add support for a specific device type (for example, an Audio Jack MSR implementation)."},{"pos":[3291,3322],"content":"Scenario 1: Adding a new device","linkify":"Scenario 1: Adding a new device","nodes":[{"content":"Scenario 1: Adding a new device","pos":[0,31]}]},{"content":"For this scenario, we will add support for a cash dispenser device in Hardware Station.","pos":[3324,3411]},{"content":"In our example, we will create a fake cash dispenser that dispenses cash in the Notepad file.","pos":[3412,3505]},{"content":"However, this example will help you understand the end-to-end extensibility of Hardware Station.","pos":[3506,3602]},{"content":"The Retail software development kit (SDK) has a cash dispenser sample.","pos":[3608,3678]},{"content":"See RetailSdk<ph id=\"ph1\">\\\\</ph>SampleExtensions<ph id=\"ph2\">\\\\</ph>HardwareStation.","pos":[3679,3728],"source":" See RetailSdk\\\\SampleExtensions\\\\HardwareStation."},{"content":"In this case, we must add a new Web API controller and helper properties/methods.","pos":[3733,3814]},{"pos":[3819,3921],"content":"The new <bpt id=\"p1\">**</bpt>CashDispender<ept id=\"p1\">**</ept> controller must extend <bpt id=\"p2\">**</bpt>ApiController<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>IHardwareStationController<ept id=\"p3\">**</ept>.","source":"The new **CashDispender** controller must extend **ApiController** and **IHardwareStationController**."},{"pos":[3926,4081],"content":"The <bpt id=\"p1\">**</bpt>Export<ept id=\"p1\">**</ept> attribute string here specifies the device that this controller is used for: <ph id=\"ph1\">\\[</ph>Export(\"CASHDISPENSER\", typeof(IHardwareStationController))<ph id=\"ph2\">\\]</ph>","source":"The **Export** attribute string here specifies the device that this controller is used for: \\[Export(\"CASHDISPENSER\", typeof(IHardwareStationController))\\]"},{"pos":[4773,4832],"content":"Scenario 2: Adding a new device type for an existing device","linkify":"Scenario 2: Adding a new device type for an existing device","nodes":[{"content":"Scenario 2: Adding a new device type for an existing device","pos":[0,59]}]},{"content":"For this scenario, we will add support for a new device type for an existing device (an Audio Jack MSR implementation).","pos":[4834,4953]},{"pos":[4959,5099],"content":"The <bpt id=\"p1\">**</bpt>Export<ept id=\"p1\">**</ept> attribute string specifies the device that this controller is used for: <ph id=\"ph1\">\\[</ph>Export(\"MSR\", typeof(IHardwareStationController))<ph id=\"ph2\">\\]</ph>","source":"The **Export** attribute string specifies the device that this controller is used for: \\[Export(\"MSR\", typeof(IHardwareStationController))\\]"},{"content":"Because there will be multiple controllers for MSRs, Hardware Station uses the configuration file to determine which implementation to use at run time.","pos":[5104,5255]},{"content":"For more information, see the \"Retail Hardware Station extensibility configuration\" section later in this article.","pos":[5256,5370]},{"pos":[6302,6353],"content":"Retail Hardware Station extensibility configuration","linkify":"Retail Hardware Station extensibility configuration","nodes":[{"content":"Retail Hardware Station extensibility configuration","pos":[0,51]}]},{"pos":[6358,6403],"content":"Configuration for IIS-hosted Hardware Station","linkify":"Configuration for IIS-hosted Hardware Station","nodes":[{"content":"Configuration for IIS-hosted Hardware Station","pos":[0,45]}]},{"content":"Before Hardware Station can consume your extension, the <bpt id=\"p1\">**</bpt>composition<ept id=\"p1\">**</ept> section in the Hardware Station Web.config file must be updated so that it includes an entry for your extension.","pos":[6405,6589],"source":"Before Hardware Station can consume your extension, the **composition** section in the Hardware Station Web.config file must be updated so that it includes an entry for your extension."},{"content":"The order of the composition targets in the configuration file determines precedence.","pos":[6590,6675]},{"content":"<ph id=\"ph1\">\\[</ph>caption id=\"attachment<ph id=\"ph2\">\\_</ph>263184\" align=\"alignnone\" width=\"960\"<ph id=\"ph3\">\\]</ph><bpt id=\"p1\">[</bpt><ph id=\"ph4\">![</ph>Hardware Station Web Config<ept id=\"p1\">](./media/hws-webconfig.png)](./media/hws-webconfig.png)</ept> Hardware Station Web.config file<ph id=\"ph5\">\\[</ph>/caption<ph id=\"ph6\">\\]</ph>","pos":[6676,6872],"source":"\\[caption id=\"attachment\\_263184\" align=\"alignnone\" width=\"960\"\\][![Hardware Station Web Config](./media/hws-webconfig.png)](./media/hws-webconfig.png) Hardware Station Web.config file\\[/caption\\]"},{"pos":[6878,6928],"content":"Configuration for local IPC-based Hardware Station","linkify":"Configuration for local IPC-based Hardware Station","nodes":[{"content":"Configuration for local IPC-based Hardware Station","pos":[0,50]}]},{"content":"Before local Hardware Station can consume your extension, the <bpt id=\"p1\">**</bpt>composition<ept id=\"p1\">**</ept> section in the Modern POS DLLHost.exe.config file (C:<ph id=\"ph1\">\\\\</ph>Program Files (x86)<ph id=\"ph2\">\\\\</ph>Microsoft Dynamics AX<ph id=\"ph3\">\\\\</ph>70<ph id=\"ph4\">\\\\</ph>Retail Modern POS<ph id=\"ph5\">\\\\</ph>ClientBroker) must be updated so that it includes an entry for your extension.","pos":[6930,7208],"source":"Before local Hardware Station can consume your extension, the **composition** section in the Modern POS DLLHost.exe.config file (C:\\\\Program Files (x86)\\\\Microsoft Dynamics AX\\\\70\\\\Retail Modern POS\\\\ClientBroker) must be updated so that it includes an entry for your extension."},{"content":"The order of the composition targets in the configuration file determines precedence.","pos":[7209,7294]},{"content":"<ph id=\"ph1\">\\[</ph>caption id=\"attachment<ph id=\"ph2\">\\_</ph>263194\" align=\"alignleft\" width=\"960\"<ph id=\"ph3\">\\]</ph><bpt id=\"p1\">[</bpt><ph id=\"ph4\">![</ph>Local Hardware station config<ept id=\"p1\">](./media/hws-dll-host-local-config.png)](./media/hws-dll-host-local-config.png)</ept> Local Hardware station configuration<ph id=\"ph5\">\\[</ph>/caption<ph id=\"ph6\">\\]</ph>","pos":[7295,7521],"source":"\\[caption id=\"attachment\\_263194\" align=\"alignleft\" width=\"960\"\\][![Local Hardware station config](./media/hws-dll-host-local-config.png)](./media/hws-dll-host-local-config.png) Local Hardware station configuration\\[/caption\\]"}],"content":"---\n# required metadata\n\ntitle: Hardware Station extensibility\ndescription: This topic explains how to extend Hardware Station to add support for new devices and new device types for existing devices.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2015-12-04 22 - 04 - 15\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \n# ms.reviewer: 2051\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 17971\nms.assetid: 138dc563-d3a1-468c-8adc-2a14bb24ac5a\nms.search.region: Global\n# ms.search.industry: \nms.author: sijoshi\nms.dyn365.ops.intro: Feb-16\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# Hardware Station extensibility\n\nThis topic explains how to extend Hardware Station to add support for new devices and new device types for existing devices.\n\nRetail Hardware Station overview\n--------------------------------\n\nRetail Hardware Station is used by Retail Modern POS and Cloud POS to connect to retail hardware peripherals such as printers, cash drawers, scanners, and payment terminals. \\[caption id=\"attachment\\_262924\" align=\"alignnone\" width=\"300\"\\][![HWS-Local-Traditional](./media/hws-local-300x236.png)](./media/hws-local.png) Traditional local setup\\[/caption\\] \\[caption id=\"attachment\\_262934\" align=\"alignnone\" width=\"300\"\\][![HWS-Shared](./media/hws-shared-300x224.png)](./media/hws-shared.png) Shared setup\\[/caption\\]\n\n## Retail Hardware Station setup\nBefore you start, use the information in [Retail hardware station configuration and installation](retail-hardware-station-configuration-installation.md) to install Hardware Station, and to get a feel of what hardware is and how it's installed.\n\n## Retail Hardware Station architecture\nHardware Station exposes Web API for Hardware Station application programming interfaces (APIs). Hardware Station can be extended either by implementing a new controller for a new device (for example, a cash dispenser) or by overriding an existing controller for an existing device type (for example, a new Audio Jack magnetic stripe reader \\[MSR\\] implementation). \\[caption id=\"attachment\\_262954\" align=\"alignnone\" width=\"640\"\\][![Hardware Station Architecture](./media/hardware-station-architecture-1024x764.png)](./media/hardware-station-architecture.png) Hardware Station architecture\\[/caption\\]\n\n## Retail Hardware Station extensibility scenarios\nExtensibility in Hardware Station is achieved by using [Managed Extensibility Framework (MEF)](https://msdn.microsoft.com/en-us/library/dd460648(v=vs.110).aspx), which is supported by .NET. **Extensibility guideline:** Always write your extension in your own extension assembly. That way, you're writing a true extension, and upgrades will be much easier. There are two basic scenarios for extension:\n\n-   **Adding a new device** – The out-of-box Hardware Station doesn't already support the device (for example, a cash dispenser). Therefore, you must add support for the new device in Hardware Station.\n-   **Adding a new device type for an existing device** – The out-of-box Hardware Station implementation already supports the device (for example, an MSR), but you must add support for a specific device type (for example, an Audio Jack MSR implementation).\n\n### Scenario 1: Adding a new device\n\nFor this scenario, we will add support for a cash dispenser device in Hardware Station. In our example, we will create a fake cash dispenser that dispenses cash in the Notepad file. However, this example will help you understand the end-to-end extensibility of Hardware Station.\n\n-   The Retail software development kit (SDK) has a cash dispenser sample. See RetailSdk\\\\SampleExtensions\\\\HardwareStation.\n-   In this case, we must add a new Web API controller and helper properties/methods.\n-   The new **CashDispender** controller must extend **ApiController** and **IHardwareStationController**.\n-   The **Export** attribute string here specifies the device that this controller is used for: \\[Export(\"CASHDISPENSER\", typeof(IHardwareStationController))\\]\n\n<!-- -->\n\n    namespace Contoso\n    {\n        namespace Commerce.HardwareStation.CashDispenserSample\n        {\n            using System;\n            using System.Composition;\n            using System.Web.Http;\n            using Microsoft.Dynamics.Commerce.HardwareStation;\n            using Microsoft.Dynamics.Retail.Diagnostics;\n            /// <summary>\n            /// Cash dispenser web API controller class.\n            /// </summary>\n            [Export(\"CASHDISPENSER\", typeof(IHardwareStationController))]\n            public class CashDispenserController : ApiController, IHardwareStationController\n            { \n                // Add your controller code here\n            }\n\n### Scenario 2: Adding a new device type for an existing device\n\nFor this scenario, we will add support for a new device type for an existing device (an Audio Jack MSR implementation).\n\n-   The **Export** attribute string specifies the device that this controller is used for: \\[Export(\"MSR\", typeof(IHardwareStationController))\\]\n-   Because there will be multiple controllers for MSRs, Hardware Station uses the configuration file to determine which implementation to use at run time. For more information, see the \"Retail Hardware Station extensibility configuration\" section later in this article.\n\n<!-- -->\n\n    namespace Contoso\n    {\n        namespace Commerce.HardwareStation.RamblerService\n        {\n            using System;\n            using System.Composition;\n            using System.Threading.Tasks;\n            using System.Web.Http;\n            using System.Web.Http.Controllers;\n            using Microsoft.Dynamics.Commerce.HardwareStation;\n            using Microsoft.Dynamics.Commerce.HardwareStation.DataEntity;\n            using Microsoft.Dynamics.Commerce.HardwareStation.Models;\n            using Microsoft.Dynamics.Retail.Diagnostics;\n            /// <summary>\n            /// MSR device web API controller class.\n            /// </summary>\n            [Export(\"MSR\", typeof(IHardwareStationController))]\n            [Authorize]\n            public class AudioJackMSRController : ApiController, IHardwareStationController\n            {\n                // Add controller implementation here\n            }\n\n## Retail Hardware Station extensibility configuration\n### Configuration for IIS-hosted Hardware Station\n\nBefore Hardware Station can consume your extension, the **composition** section in the Hardware Station Web.config file must be updated so that it includes an entry for your extension. The order of the composition targets in the configuration file determines precedence. \\[caption id=\"attachment\\_263184\" align=\"alignnone\" width=\"960\"\\][![Hardware Station Web Config](./media/hws-webconfig.png)](./media/hws-webconfig.png) Hardware Station Web.config file\\[/caption\\]\n\n### Configuration for local IPC-based Hardware Station\n\nBefore local Hardware Station can consume your extension, the **composition** section in the Modern POS DLLHost.exe.config file (C:\\\\Program Files (x86)\\\\Microsoft Dynamics AX\\\\70\\\\Retail Modern POS\\\\ClientBroker) must be updated so that it includes an entry for your extension. The order of the composition targets in the configuration file determines precedence. \\[caption id=\"attachment\\_263194\" align=\"alignleft\" width=\"960\"\\][![Local Hardware station config](./media/hws-dll-host-local-config.png)](./media/hws-dll-host-local-config.png) Local Hardware station configuration\\[/caption\\]\n\n"}