{"nodes":[{"pos":[32,59],"content":"X++ math run-time functions","needQuote":true,"needEscape":true,"nodes":[{"content":"X++ math run-time functions","pos":[0,27]}]},{"pos":[73,121],"content":"This wiki describes the math run-time functions.","needQuote":true,"needEscape":true,"nodes":[{"content":"This wiki describes the math run-time functions.","pos":[0,48]}]},{"pos":[630,657],"content":"X++ math run-time functions","linkify":"X++ math run-time functions","nodes":[{"content":"X++ math run-time functions","pos":[0,27]}]},{"content":"This wiki describes the math run-time functions.","pos":[659,707]},{"content":"These functions perform mathematical calculations.","pos":[709,759]},{"pos":[761,764],"content":"abs","linkify":"abs","nodes":[{"content":"abs","pos":[0,3]}]},{"content":"Retrieves the absolute value of a real number.","pos":[770,816]},{"content":"Examples:","pos":[817,826]},{"pos":[832,876],"content":"<bpt id=\"p1\">**</bpt>abs(-100.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>100.0<ept id=\"p2\">**</ept>.","source":"**abs(-100.0)** returns the value **100.0**."},{"pos":[881,924],"content":"<bpt id=\"p1\">**</bpt>abs(30.56)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>30.56<ept id=\"p2\">**</ept>.","source":"**abs(30.56)** returns the value **30.56**."},{"pos":[930,936],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[966,976],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[980,989]},{"content":"Description","pos":[992,1003]},{"content":"arg","pos":[1094,1097]},{"content":"The number to get the absolute value of.","pos":[1106,1146]},{"pos":[1154,1166],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1168,1196],"content":"The absolute value of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The absolute value of *arg*."},{"pos":[1202,1209],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1468,1472],"content":"acos","linkify":"acos","nodes":[{"content":"acos","pos":[0,4]}]},{"content":"Retrieves the arc cosine of a real number.","pos":[1473,1515]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[1516,1664],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[1670,1676],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1707,1717],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1721,1730]},{"content":"Description","pos":[1733,1744]},{"content":"arg","pos":[1837,1840]},{"content":"The number to retrieve the arc cosine of.","pos":[1849,1890]},{"pos":[1898,1910],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1912,1936],"content":"The arc cosine of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The arc cosine of *arg*."},{"pos":[1942,1949],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2159,2163],"content":"asin","linkify":"asin","nodes":[{"content":"asin","pos":[0,4]}]},{"content":"Retrieves the arc sine of a real number.","pos":[2164,2204]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[2205,2353],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[2359,2365],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2396,2406],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2410,2419]},{"content":"Description","pos":[2422,2433]},{"content":"arg","pos":[2526,2529]},{"content":"The number to calculate the arc sine for.","pos":[2538,2579]},{"pos":[2587,2599],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc sine of the specified number.","pos":[2601,2638]},{"pos":[2644,2651],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2653,2685],"content":"<bpt id=\"p1\">**</bpt>aSin(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.37<ept id=\"p2\">**</ept>.","source":"**aSin(0.36)** returns **0.37**."},{"pos":[2690,2694],"content":"atan","linkify":"atan","nodes":[{"content":"atan","pos":[0,4]}]},{"content":"Retrieves the arc tangent of a real number.","pos":[2695,2738]},{"pos":[2744,2750],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2781,2791],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2795,2804]},{"content":"Description","pos":[2807,2818]},{"content":"arg","pos":[2917,2920]},{"content":"The number to calculate the arc tangent for.","pos":[2929,2973]},{"pos":[2981,2993],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc tangent of the specified number.","pos":[2995,3035]},{"pos":[3041,3048],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3050,3082],"content":"<bpt id=\"p1\">**</bpt>aTan(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.35<ept id=\"p2\">**</ept>.","source":"**aTan(0.36)** returns **0.35**."},{"pos":[3088,3095],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3274,3285],"content":"corrFlagGet","linkify":"corrFlagGet","nodes":[{"content":"corrFlagGet","pos":[0,11]}]},{"content":"Retrieves the state of the correction flag for a real number.","pos":[3286,3347]},{"pos":[3353,3359],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3396,3406],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3410,3419]},{"content":"Description","pos":[3422,3433]},{"content":"arg","pos":[3514,3517]},{"content":"The flag to retrieve the state for.","pos":[3526,3561]},{"pos":[3569,3581],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[3583,3656],"content":"A non-zero value if the flag is set; <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero) if the flag is cleared.","source":"A non-zero value if the flag is set; **0** (zero) if the flag is cleared."},{"pos":[3662,3669],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3671,3708],"content":"The following example displays <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>.","source":"The following example displays **1**."},{"pos":[3856,3867],"content":"corrFlagSet","linkify":"corrFlagSet","nodes":[{"content":"corrFlagSet","pos":[0,11]}]},{"content":"Controls the correction flag for a real number.","pos":[3868,3915]},{"pos":[3921,3927],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3975,3985],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3989,3998]},{"content":"Description","pos":[4001,4012]},{"content":"real","pos":[4153,4157]},{"content":"The number in which to turn the correction flag on or off.","pos":[4165,4223]},{"content":"arg","pos":[4235,4238]},{"pos":[4247,4312],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> to turn the flag off; a non-zero value to turn the flag on.","source":"**0** to turn the flag off; a non-zero value to turn the flag on."},{"pos":[4320,4332],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[4334,4403],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> if the flag is now off; a non-zero value if the flag is now on.","source":"**0** if the flag is now off; a non-zero value if the flag is now on."},{"pos":[4405,4408],"content":"cos","linkify":"cos","nodes":[{"content":"cos","pos":[0,3]}]},{"content":"Retrieves the cosine of a real number.","pos":[4414,4452]},{"pos":[4458,4464],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4494,4504],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4508,4517]},{"content":"Description","pos":[4520,4531]},{"content":"arg","pos":[4610,4613]},{"content":"The number to find the cosine for.","pos":[4622,4656]},{"pos":[4664,4676],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The cosine of the specified number.","pos":[4678,4713]},{"pos":[4719,4726],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4728,4780],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[4786,4793],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4795,4840],"content":"The following code example displays <bpt id=\"p1\">**</bpt>0.76<ept id=\"p1\">**</ept>.","source":"The following code example displays **0.76**."},{"pos":[5002,5006],"content":"cosh","linkify":"cosh","nodes":[{"content":"cosh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic cosine of a real number.","pos":[5007,5056]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[5057,5209],"source":"**Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[5215,5221],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5252,5262],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5266,5275]},{"content":"Description","pos":[5278,5289]},{"content":"arg","pos":[5400,5403]},{"content":"The hyperbolic number to calculate the cosine for.","pos":[5412,5462]},{"pos":[5470,5482],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic cosine of the specified number.","pos":[5484,5530]},{"pos":[5536,5543],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5545,5597],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[5603,5610],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5806,5814],"content":"decRound","linkify":"decRound","nodes":[{"content":"decRound","pos":[0,8]}]},{"content":"Rounds a number to the specified number of decimal places.","pos":[5815,5873]},{"pos":[5879,5885],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5937,5947],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5951,5960]},{"content":"Description","pos":[5963,5974]},{"content":"figure","pos":[6067,6073]},{"content":"The number to round.","pos":[6079,6099]},{"content":"decimals","pos":[6125,6133]},{"content":"The number of decimal places to round to.","pos":[6137,6178]},{"pos":[6186,6198],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The value of the specified number, rounded to the specified number of decimal places.","pos":[6200,6285]},{"pos":[6291,6298],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6300,6377],"content":"The value of the <bpt id=\"p1\">*</bpt>decimals<ept id=\"p1\">*</ept> parameter can be positive, 0 (zero), or negative.","source":"The value of the *decimals* parameter can be positive, 0 (zero), or negative."},{"pos":[6383,6439],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1234.66<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,2)** returns the value **1234.66**."},{"pos":[6444,6497],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1235<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,0)** returns the value **1235**."},{"pos":[6502,6556],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,-2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1200<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,-2)** returns the value **1200**."},{"pos":[6561,6619],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12345.70<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,1)** returns the value **12345.70**."},{"pos":[6624,6683],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,-1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12350.00<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,-1)** returns the value **12350.00**."},{"pos":[6685,6688],"content":"exp","linkify":"exp","nodes":[{"content":"exp","pos":[0,3]}]},{"content":"Retrieves the natural antilogarithm of the specified real number.","pos":[6694,6759]},{"pos":[6765,6771],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[6801,6811],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6815,6824]},{"content":"Description","pos":[6827,6838]},{"content":"arg","pos":[6967,6970]},{"content":"The real number to calculate the natural antilogarithm for.","pos":[6979,7038]},{"pos":[7046,7058],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural antilogarithm of the specified real number.","pos":[7060,7115]},{"pos":[7121,7128],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7130,7255],"content":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter.","source":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter."},{"pos":[7261,7268],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7552,7557],"content":"exp10","linkify":"exp10","nodes":[{"content":"exp10","pos":[0,5]}]},{"content":"Retrieves the base-10 antilogarithm of the specified real number.","pos":[7558,7623]},{"pos":[7629,7635],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[7671,7681],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7685,7694]},{"content":"Description","pos":[7697,7708]},{"content":"decimal","pos":[7837,7844]},{"content":"The real number to calculate the base-10 antilogarithm for.","pos":[7849,7908]},{"pos":[7916,7928],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[7930,7997],"content":"The 10-based antilogarithm of the value of the <bpt id=\"p1\">*</bpt>decimal<ept id=\"p1\">*</ept> parameter.","source":"The 10-based antilogarithm of the value of the *decimal* parameter."},{"pos":[8003,8010],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8296,8300],"content":"frac","linkify":"frac","nodes":[{"content":"frac","pos":[0,4]}]},{"content":"Retrieves the decimal part of a real number.","pos":[8301,8345]},{"pos":[8351,8357],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8392,8402],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8406,8415]},{"content":"Description","pos":[8418,8429]},{"content":"decimal","pos":[8538,8545]},{"content":"The real number to retrieve the decimal part for.","pos":[8550,8599]},{"pos":[8607,8619],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The decimal part of the specified number.","pos":[8621,8662]},{"pos":[8668,8675],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8677,8722],"content":"<bpt id=\"p1\">**</bpt>frac(12.345)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>0.345<ept id=\"p2\">**</ept>.","source":"**frac(12.345)** returns the value **0.345**."},{"pos":[8727,8732],"content":"log10","linkify":"log10","nodes":[{"content":"log10","pos":[0,5]}]},{"content":"Retrieves the 10-digit logarithm of a real number.","pos":[8733,8783]},{"pos":[8789,8795],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8827,8837],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8841,8850]},{"content":"Description","pos":[8853,8864]},{"content":"arg","pos":[8959,8962]},{"content":"The number to calculate the logarithm for.","pos":[8971,9013]},{"pos":[9021,9033],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The base-10 logarithm of the specified number.","pos":[9035,9081]},{"pos":[9087,9094],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9096,9138],"content":"<bpt id=\"p1\">**</bpt>log10(200)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.30<ept id=\"p2\">**</ept>.","source":"**log10(200)** returns the value **2.30**."},{"pos":[9143,9147],"content":"logN","linkify":"logN","nodes":[{"content":"logN","pos":[0,4]}]},{"content":"Retrieves the natural logarithm of the specified real number.","pos":[9148,9209]},{"pos":[9215,9221],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[9252,9262],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9266,9275]},{"content":"Description","pos":[9278,9289]},{"content":"arg","pos":[9400,9403]},{"content":"The number to calculate the natural logarithm for.","pos":[9412,9462]},{"pos":[9470,9482],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural logarithm of the specified number.","pos":[9484,9530]},{"pos":[9536,9543],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9545,9585],"content":"<bpt id=\"p1\">**</bpt>logN(45)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>3.81<ept id=\"p2\">**</ept>.","source":"**logN(45)** returns the value **3.81**."},{"pos":[9587,9590],"content":"max","linkify":"max","nodes":[{"content":"max","pos":[0,3]}]},{"content":"Retrieves the larger of two specified values.","pos":[9596,9641]},{"pos":[9698,9708],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9712,9721]},{"content":"Description","pos":[9724,9735]},{"content":"object1","pos":[9780,9787]},{"content":"The first value.","pos":[9792,9808]},{"content":"object2","pos":[9814,9821]},{"content":"The second value.","pos":[9826,9843]},{"pos":[9851,9863],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[9865,9955],"content":"The larger of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The larger of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[9961,9968],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9974,10020],"content":"<bpt id=\"p1\">**</bpt>max(12.0,12.1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12.1<ept id=\"p2\">**</ept>.","source":"**max(12.0,12.1)** returns the value **12.1**."},{"pos":[10025,10064],"content":"<bpt id=\"p1\">**</bpt>max(2,33)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>33<ept id=\"p2\">**</ept>.","source":"**max(2,33)** returns the value **33**."},{"pos":[10066,10069],"content":"min","linkify":"min","nodes":[{"content":"min","pos":[0,3]}]},{"content":"Retrieves the smaller of two specified values.","pos":[10075,10121]},{"pos":[10178,10188],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10192,10201]},{"content":"Description","pos":[10204,10215]},{"content":"object1","pos":[10260,10267]},{"content":"The first value.","pos":[10272,10288]},{"content":"object2","pos":[10294,10301]},{"content":"The second value.","pos":[10306,10323]},{"pos":[10331,10343],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[10345,10436],"content":"The smaller of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The smaller of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[10442,10449],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10451,10489],"content":"<bpt id=\"p1\">**</bpt>min(2,33<ept id=\"p1\">**</ept>) returns the value <bpt id=\"p2\">**</bpt>2<ept id=\"p2\">**</ept>.","source":"**min(2,33**) returns the value **2**."},{"pos":[10495,10502],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10739,10744],"content":"power","linkify":"power","nodes":[{"content":"power","pos":[0,5]}]},{"content":"Raises a real number to the power of another real number.","pos":[10745,10802]},{"pos":[10808,10814],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[10861,10871],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10875,10884]},{"content":"Description","pos":[10887,10898]},{"content":"arg","pos":[11059,11062]},{"content":"The number to calculate the power of.","pos":[11071,11108]},{"content":"exponent","pos":[11151,11159]},{"pos":[11163,11238],"content":"The number to raise the number that is specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to.","source":"The number to raise the number that is specified by the *arg* parameter to."},{"pos":[11246,11258],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[11260,11393],"content":"The real number that is the number specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to the power of the number specified by the <bpt id=\"p2\">*</bpt>exponent<ept id=\"p2\">*</ept> parameter.","source":"The real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter."},{"pos":[11399,11406],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11412,11458],"content":"<bpt id=\"p1\">**</bpt>power(5.0,2.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.0<ept id=\"p2\">**</ept>.","source":"**power(5.0,2.0)** returns the value **25.0**."},{"pos":[11463,11508],"content":"<bpt id=\"p1\">**</bpt>power(4.0,0.5)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.0<ept id=\"p2\">**</ept>.","source":"**power(4.0,0.5)** returns the value **2.0**."},{"pos":[11513,11518],"content":"round","linkify":"round","nodes":[{"content":"round","pos":[0,5]}]},{"content":"Rounds a real number to the nearest multiple of another real number.","pos":[11519,11587]},{"pos":[11593,11599],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11648,11658],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11662,11671]},{"content":"Description","pos":[11675,11686]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[11866,11871],"source":"\\_arg"},{"content":"The original number.","pos":[11879,11899]},{"content":"<ph id=\"ph1\">\\_</ph>decimals","pos":[11968,11978],"source":"\\_decimals"},{"pos":[11981,12065],"content":"The number that the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be rounded to a multiple of.","source":"The number that the value of the *\\_arg* parameter must be rounded to a multiple of."},{"pos":[12073,12085],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[12087,12233],"content":"The number that is a multiple of the value specified by the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimals<ept id=\"p1\">*</ept> parameter and is closest to the value specified by the <bpt id=\"p2\">*</bpt><ph id=\"ph2\">\\_</ph>arg<ept id=\"p2\">*</ept> parameter.","source":"The number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter."},{"pos":[12239,12246],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12248,12424],"content":"To round a real number to a specified number of decimal places, use the <bpt id=\"p1\">[</bpt>decround function<ept id=\"p1\">](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)</ept>.","source":"To round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)."},{"pos":[12430,12437],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12443,12495],"content":"<bpt id=\"p1\">**</bpt>round(123.45,5.00)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>125.00<ept id=\"p2\">**</ept>.","source":"**round(123.45,5.00)** returns the value **125.00**."},{"pos":[12500,12548],"content":"<bpt id=\"p1\">**</bpt>round(7.45,1.05)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>7.35<ept id=\"p2\">**</ept>.","source":"**round(7.45,1.05)** returns the value **7.35**."},{"pos":[12553,12601],"content":"<bpt id=\"p1\">**</bpt>round(23.9,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(23.9,5.0)** returns the value **25.00**."},{"pos":[12606,12654],"content":"<bpt id=\"p1\">**</bpt>round(26.1,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(26.1,5.0)** returns the value **25.00**."},{"pos":[12656,12659],"content":"sin","linkify":"sin","nodes":[{"content":"sin","pos":[0,3]}]},{"content":"Retrieves the sine of a real number.","pos":[12665,12701]},{"pos":[12707,12713],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[12744,12754],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[12758,12767]},{"content":"Description","pos":[12770,12781]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[12866,12871],"source":"\\_arg"},{"content":"The number to calculate the sine for.","pos":[12878,12915]},{"pos":[12923,12935],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The sine of the specified real number.","pos":[12937,12975]},{"pos":[12981,12988],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12990,13044],"content":"The value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *\\_arg* parameter must be in radians."},{"pos":[13050,13057],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13465,13469],"content":"sinh","linkify":"sinh","nodes":[{"content":"sinh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic sine of a real number.","pos":[13470,13517]},{"pos":[13523,13529],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[13561,13571],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13575,13584]},{"content":"Description","pos":[13587,13598]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[13705,13710],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic sine for.","pos":[13717,13765]},{"pos":[13773,13785],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic sine of the specified real number.","pos":[13787,13836]},{"pos":[13842,13849],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13851,14010],"content":"Values for the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[14016,14023],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14025,14081],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>sinh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **sinh** function."},{"pos":[14477,14480],"content":"tan","linkify":"tan","nodes":[{"content":"tan","pos":[0,3]}]},{"content":"Retrieves the tangent of a real number.","pos":[14486,14525]},{"pos":[14531,14537],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[14567,14577],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[14581,14590]},{"content":"Description","pos":[14593,14604]},{"content":"arg","pos":[14705,14708]},{"content":"The real number to calculate the tangent for.","pos":[14717,14762]},{"pos":[14770,14782],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The tangent of the specified real number.","pos":[14784,14825]},{"pos":[14831,14838],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14840,14997],"content":"Values for the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[15003,15010],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15012,15067],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tan<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tan** function."},{"pos":[15231,15235],"content":"tanh","linkify":"tanh","nodes":[{"content":"tanh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic tangent of a real number.","pos":[15236,15286]},{"pos":[15292,15298],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[15330,15340],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15344,15353]},{"content":"Description","pos":[15356,15367]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[15480,15485],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic tangent for.","pos":[15492,15543]},{"pos":[15551,15563],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic tangent of the specified real number.","pos":[15565,15617]},{"pos":[15623,15630],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15632,15688],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tanh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tanh** function."},{"pos":[15900,15905],"content":"trunc","linkify":"trunc","nodes":[{"content":"trunc","pos":[0,5]}]},{"content":"Truncates a real number by removing any decimal places.","pos":[15906,15961]},{"pos":[15967,15973],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[16010,16020],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[16024,16033]},{"content":"Description","pos":[16036,16047]},{"content":"<ph id=\"ph1\">\\_</ph>decimal","pos":[16104,16113],"source":"\\_decimal"},{"content":"The number to truncate.","pos":[16116,16139]},{"pos":[16147,16159],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[16161,16274],"content":"A number that is equivalent to the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimal<ept id=\"p1\">*</ept> parameter after the decimal places have been removed.","source":"A number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed."},{"pos":[16280,16287],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function always rounds numbers down to a complete integer.","pos":[16289,16352]},{"pos":[16358,16365],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example truncates 2.7147 to 2.00.","pos":[16367,16414]}],"content":"---\n# required metadata\n\ntitle: X++ math run-time functions\ndescription: This wiki describes the math run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-04 22 - 13 - 25\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 31361\nms.assetid: 64b76d85-6234-4a90-9a8e-ba5a701c6076\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.dyn365.ops.intro: Feb-16\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# X++ math run-time functions\n\nThis wiki describes the math run-time functions.\n\nThese functions perform mathematical calculations.\n\nabs\n---\n\nRetrieves the absolute value of a real number. Examples:\n\n-   **abs(-100.0)** returns the value **100.0**.\n-   **abs(30.56)** returns the value **30.56**.\n\n### Syntax\n\n    real abs(real arg)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| arg       | The number to get the absolute value of. |\n\n### Return value\n\nThe absolute value of *arg*.\n\n### Example\n\n    static void absExample(Args _args)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = abs(-3.14);\n        r2 = abs(3.14);\n        if (r1 == r2)\n        {\n            print \"abs of values are the same\";\n            pause;\n        }\n    }\n\n## acos\nRetrieves the arc cosine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real acos(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to retrieve the arc cosine of. |\n\n### Return value\n\nThe arc cosine of *arg*.\n\n### Example\n\n    static void acosExample(Args _args)\n    {\n        real r;\n        str  s;\n        ;\n        r = acos(0.0);\n        s = strFmt(\"The arc cosine of 0.0 is %1 \", r);\n        print s;\n        pause;\n    }\n\n## asin\nRetrieves the arc sine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real asin(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to calculate the arc sine for. |\n\n### Return value\n\nThe arc sine of the specified number.\n\n### Remarks\n\n**aSin(0.36)** returns **0.37**.\n\n## atan\nRetrieves the arc tangent of a real number.\n\n### Syntax\n\n    real atan(real arg)\n\n### Parameters\n\n| Parameter | Description                                  |\n|-----------|----------------------------------------------|\n| arg       | The number to calculate the arc tangent for. |\n\n### Return value\n\nThe arc tangent of the specified number.\n\n### Remarks\n\n**aTan(0.36)** returns **0.35**.\n\n### Example\n\n    static void atanExample(Args _args)\n    {\n        real r;\n        ;\n        r = atan(1.0);\n        print strFmt(\"The Arc Tangent of 1.0 is %1\", r);\n        pause;\n    }\n\n## corrFlagGet\nRetrieves the state of the correction flag for a real number.\n\n### Syntax\n\n    int corrFlagGet(real arg)\n\n### Parameters\n\n| Parameter | Description                         |\n|-----------|-------------------------------------|\n| arg       | The flag to retrieve the state for. |\n\n### Return value\n\nA non-zero value if the flag is set; **0** (zero) if the flag is cleared.\n\n### Example\n\nThe following example displays **1**.\n\n    static void corrFlagGetExample(Args _args)\n    {\n        real rr;\n        rr = corrFlagSet(0.36,2);\n        print(corrFlagGet(rr));\n    }\n\n## corrFlagSet\nControls the correction flag for a real number.\n\n### Syntax\n\n    real corrFlagSet(real real, int arg)\n\n### Parameters\n\n| Parameter | Description                                                       |\n|-----------|-------------------------------------------------------------------|\n| real      | The number in which to turn the correction flag on or off.        |\n| arg       | **0** to turn the flag off; a non-zero value to turn the flag on. |\n\n### Return value\n\n**0** if the flag is now off; a non-zero value if the flag is now on.\n\ncos\n---\n\nRetrieves the cosine of a real number.\n\n### Syntax\n\n    real cos(real arg)\n\n### Parameters\n\n| Parameter | Description                        |\n|-----------|------------------------------------|\n| arg       | The number to find the cosine for. |\n\n### Return value\n\nThe cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\nThe following code example displays **0.76**.\n\n    static void cosExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cos(15);\n        print strFmt(\"Cos of 15 is %1\", r);\n        pause;\n    }\n\n## cosh\nRetrieves the hyperbolic cosine of a real number. **Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real cosh(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The hyperbolic number to calculate the cosine for. |\n\n### Return value\n\nThe hyperbolic cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\n    static void coshExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cosh(0.1);\n        print \"The hyperbolic cosine of 0.1 is \" + num2Str(r, 2, 2, 1, 1);\n        pause;\n    }\n\n## decRound\nRounds a number to the specified number of decimal places.\n\n### Syntax\n\n    real decRound(real figure, int decimals)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| figure    | The number to round.                      |\n| decimals  | The number of decimal places to round to. |\n\n### Return value\n\nThe value of the specified number, rounded to the specified number of decimal places.\n\n### Remarks\n\nThe value of the *decimals* parameter can be positive, 0 (zero), or negative.\n\n-   **decRound(1234.6574,2)** returns the value **1234.66**.\n-   **decRound(1234.6574,0)** returns the value **1235**.\n-   **decRound(1234.6574,-2)** returns the value **1200**.\n-   **decRound(12345.6789,1)** returns the value **12345.70**.\n-   **decRound(12345.6789,-1)** returns the value **12350.00**.\n\nexp\n---\n\nRetrieves the natural antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp(real arg)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| arg       | The real number to calculate the natural antilogarithm for. |\n\n### Return value\n\nThe natural antilogarithm of the specified real number.\n\n### Remarks\n\nThe calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter.\n\n### Example\n\n    static void expExample(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## exp10\nRetrieves the base-10 antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp10(real decimal)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| decimal   | The real number to calculate the base-10 antilogarithm for. |\n\n### Return value\n\nThe 10-based antilogarithm of the value of the *decimal* parameter.\n\n### Example\n\n    static void exp10Example(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## frac\nRetrieves the decimal part of a real number.\n\n### Syntax\n\n    real frac(real decimal)\n\n### Parameters\n\n| Parameter | Description                                       |\n|-----------|---------------------------------------------------|\n| decimal   | The real number to retrieve the decimal part for. |\n\n### Return value\n\nThe decimal part of the specified number.\n\n### Remarks\n\n**frac(12.345)** returns the value **0.345**.\n\n## log10\nRetrieves the 10-digit logarithm of a real number.\n\n### Syntax\n\n    real log10(real arg)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| arg       | The number to calculate the logarithm for. |\n\n### Return value\n\nThe base-10 logarithm of the specified number.\n\n### Remarks\n\n**log10(200)** returns the value **2.30**.\n\n## logN\nRetrieves the natural logarithm of the specified real number.\n\n### Syntax\n\n    real logN(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The number to calculate the natural logarithm for. |\n\n### Return value\n\nThe natural logarithm of the specified number.\n\n### Remarks\n\n**logN(45)** returns the value **3.81**.\n\nmax\n---\n\nRetrieves the larger of two specified values.\n\n    anytype max(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe larger of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n-   **max(12.0,12.1)** returns the value **12.1**.\n-   **max(2,33)** returns the value **33**.\n\nmin\n---\n\nRetrieves the smaller of two specified values.\n\n    anytype min(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe smaller of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n**min(2,33**) returns the value **2**.\n\n### Example\n\n    static void minExample(Args _arg)\n    {\n            anytype a;\n            real r = 3.0;\n            real s = 2.0;\n\n            a = min(r, s);\n            print num2Str(a, 1, 2, 1, 1) + \" is less than the other number.\";\n    }\n\n## power\nRaises a real number to the power of another real number.\n\n### Syntax\n\n    real power(real arg, real exponent)\n\n### Parameters\n\n| Parameter | Description                                                                 |\n|-----------|-----------------------------------------------------------------------------|\n| arg       | The number to calculate the power of.                                       |\n| exponent  | The number to raise the number that is specified by the *arg* parameter to. |\n\n### Return value\n\nThe real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter.\n\n### Remarks\n\n-   **power(5.0,2.0)** returns the value **25.0**.\n-   **power(4.0,0.5)** returns the value **2.0**.\n\n## round\nRounds a real number to the nearest multiple of another real number.\n\n### Syntax\n\n    real round(real _arg, real _decimals)\n\n### Parameters\n\n| Parameter  | Description                                                                          |\n|------------|--------------------------------------------------------------------------------------|\n| \\_arg      | The original number.                                                                 |\n| \\_decimals | The number that the value of the *\\_arg* parameter must be rounded to a multiple of. |\n\n### Return value\n\nThe number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter.\n\n### Remarks\n\nTo round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx).\n\n### Remarks\n\n-   **round(123.45,5.00)** returns the value **125.00**.\n-   **round(7.45,1.05)** returns the value **7.35**.\n-   **round(23.9,5.0)** returns the value **25.00**.\n-   **round(26.1,5.0)** returns the value **25.00**.\n\nsin\n---\n\nRetrieves the sine of a real number.\n\n### Syntax\n\n    real sin(real _arg)\n\n### Parameters\n\n| Parameter | Description                           |\n|-----------|---------------------------------------|\n| \\_arg     | The number to calculate the sine for. |\n\n### Return value\n\nThe sine of the specified real number.\n\n### Remarks\n\nThe value of the *\\_arg* parameter must be in radians.\n\n### Example\n\n    static void sinExample(Args _arg)\n    {\n        real angleDegrees = 15.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sin(angleRadians);\n        print \"sin of a \"\n            + num2Str(angleDegrees, 2, 2, 1, 1)\n            + \" degree angle is \"\n            + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## sinh\nRetrieves the hyperbolic sine of a real number.\n\n### Syntax\n\n    real sinh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                      |\n|-----------|--------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic sine for. |\n\n### Return value\n\nThe hyperbolic sine of the specified real number.\n\n### Remarks\n\nValues for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **sinh** function.\n\n    static void sinhExample(Args _arg)\n    {\n        real angleDegrees = 45.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sinh(angleRadians);\n        print \"sinh of a \"\n        + num2Str(angleDegrees, 2, 2, 1, 1)\n        + \" degree angle is \"\n        + num2Str(r, 2, 15, 1, 1);\n        pause;\n    }\n\ntan\n---\n\nRetrieves the tangent of a real number.\n\n### Syntax\n\n    real tan(real arg)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| arg       | The real number to calculate the tangent for. |\n\n### Return value\n\nThe tangent of the specified real number.\n\n### Remarks\n\nValues for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **tan** function.\n\n    static void tanExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tan(250);\n        print strFmt(\"Tan of 250 is %1\", r);\n        pause;\n    }\n\n## tanh\nRetrieves the hyperbolic tangent of a real number.\n\n### Syntax\n\n    real tanh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                         |\n|-----------|-----------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic tangent for. |\n\n### Return value\n\nThe hyperbolic tangent of the specified real number.\n\n### Example\n\nThe following example illustrates the **tanh** function.\n\n    static void tanhExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tanh(0.1);\n        print \"The hyperbolic tangent of angle 0.1 is \"\n        + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## trunc\nTruncates a real number by removing any decimal places.\n\n### Syntax\n\n    real trunc(real _decimal)\n\n### Parameters\n\n| Parameter | Description             |\n|-----------|-------------------------|\n| \\_decimal | The number to truncate. |\n\n### Return value\n\nA number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed.\n\n### Remarks\n\nThis function always rounds numbers down to a complete integer.\n\n### Example\n\nThe following example truncates 2.7147 to 2.00.\n\n    static void truncExample(Args _arg)\n    {\n        real r;\n        ;\n        r = trunc(2.7147);\n        print strFmt(\"r = %1\",  r);\n        pause;\n    }\n\n"}