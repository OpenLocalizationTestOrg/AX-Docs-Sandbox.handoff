{"nodes":[{"pos":[6,23],"content":"required metadata","linkify":"required metadata","nodes":[{"content":"required metadata","pos":[0,17]}]},{"content":"title: Formula designer in Electronic reporting | Microsoft Docs description: This topic explains how to use the formula designer in Electronic reporting (ER).","pos":[25,184],"source":"title: Formula designer in Electronic reporting | Microsoft Docs\ndescription: This topic explains how to use the formula designer in Electronic reporting (ER)."},{"content":"When you design a format for a specific electronic document in ER, you can use Microsoft Excel–like formulas for data transformation to meet the requirements for that document's fulfillment and formatting.","pos":[185,390]},{"content":"Various types of functions are supported: text, date and time, mathematical logical, information, data type conversion, and other (business domain–specific functions).","pos":[391,558]},{"content":"author: kfend manager: AnnBe ms.date: 2016-03-07 15:27:59 ms.topic: article ms.prod: ms.service: Dynamics365Operations ms.technology:","pos":[559,693],"source":"\nauthor: kfend\nmanager: AnnBe\nms.date: 2016-03-07 15:27:59\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology:"},{"pos":[698,715],"content":"optional metadata","linkify":"optional metadata","nodes":[{"content":"optional metadata","pos":[0,17]}]},{"content":"keywords: ERDataModelDesigner, ERExpressionDesignerFormula, ERMappedFormatDesigner, ERModelMappingDesigner","pos":[717,823]},{"pos":[826,833],"content":"ROBOTS:","linkify":"ROBOTS:","nodes":[{"content":"ROBOTS:","pos":[0,7]}]},{"content":"audience: Application User, IT Pro","pos":[835,869]},{"pos":[872,883],"content":"ms.devlang:","linkify":"ms.devlang:","nodes":[{"content":"ms.devlang:","pos":[0,11]}]},{"pos":[885,938],"content":"ms.reviewer: 71 ms.suite: Released- Dynamics AX 7.0.0","source":"ms.reviewer: 71\nms.suite: Released- Dynamics AX 7.0.0"},{"pos":[941,955],"content":"ms.tgt_pltfrm:","linkify":"ms.tgt_pltfrm:","nodes":[{"content":"ms.tgt_pltfrm:","pos":[0,14]}]},{"pos":[957,1040],"content":"ms.custom: 58771 ms.assetid: 514e80d4-34c8-4670-9370-cfcc272c58e4 ms.region: Global","source":"ms.custom: 58771\nms.assetid: 514e80d4-34c8-4670-9370-cfcc272c58e4\nms.region: Global"},{"pos":[1043,1055],"content":"ms.industry:","linkify":"ms.industry:","nodes":[{"content":"ms.industry:","pos":[0,12]}]},{"content":"ms.author: nselin","pos":[1057,1074]},{"pos":[1083,1123],"content":"Formula designer in Electronic reporting","linkify":"Formula designer in Electronic reporting","nodes":[{"content":"Formula designer in Electronic reporting","pos":[0,40]}]},{"content":"This topic explains how to use the formula designer in Electronic reporting (ER).","pos":[1125,1206]},{"content":"When you design a format for a specific electronic document in ER, you can use Microsoft Excel–like formulas for data transformation to meet the requirements for that document's fulfillment and formatting.","pos":[1207,1412]},{"content":"Various types of functions are supported: text, date and time, mathematical logical, information, data type conversion, and other (business domain–specific functions).","pos":[1413,1580]},{"pos":[1582,1607],"content":"Formula designer overview","linkify":"Formula designer overview","nodes":[{"content":"Formula designer overview","pos":[0,25]}]},{"content":"Electronic reporting (ER) supports the formula designer.","pos":[1635,1691]},{"content":"Therefore, at design time, you can configure expressions that can be used for the following tasks at run time:","pos":[1692,1802]},{"content":"Transforming data that is received from a Microsoft Dynamics 365 for Operations database, and that should be populated in an ER data model that is designed to be a data source for ER formats (filtering, grouping, data type conversion, etc.).","pos":[1808,2049]},{"content":"Formatting data that must be sent to a generating electronic document in accordance with the layout and conditions of a specific ER format (in accordance with the requested language or culture, encoding, etc.).","pos":[2054,2264]},{"content":"Controlling the process of electronic document generation (enabling/disabling output of specific elements of the format, depending on processing data, interrupting document creation, throwing messages for end users, etc.).","pos":[2269,2491]},{"content":"The formula designer page can be opened when you do any of the following:","pos":[2493,2566]},{"content":"Bind data source items to data model components.","pos":[2572,2620]},{"content":"Bind data source items to format components.","pos":[2625,2669]},{"content":"Complete maintenance of calculated fields as part of data sources.","pos":[2674,2740]},{"content":"Define the visibility conditions for user input parameters.","pos":[2745,2804]},{"content":"Design a format's transformations.","pos":[2809,2843]},{"content":"Define the enabling conditions for the format's components.","pos":[2848,2907]},{"content":"Define the file names for the format's FILE components.","pos":[2912,2967]},{"content":"Define the conditions for process control validations.","pos":[2972,3026]},{"content":"Define the message text for process control validations.","pos":[3031,3087]},{"pos":[3092,3113],"content":"Designing ER formulas","linkify":"Designing ER formulas","nodes":[{"content":"Designing ER formulas","pos":[0,21]}]},{"pos":[3118,3130],"content":"Data binding","linkify":"Data binding","nodes":[{"content":"Data binding","pos":[0,12]}]},{"content":"The ER formula designer can be used to define an expression that transforms data that is received from data sources, so that the data can be populated in the data consumer at run time:","pos":[3132,3316]},{"content":"From Dynamics 365 for Operations data sources and run-time parameters to an ER data model.","pos":[3322,3412]},{"content":"From an ER data model to an ER format.","pos":[3417,3455]},{"content":"From Dynamics 365 for Operations data sources and run-time parameters to an ER format.","pos":[3460,3546]},{"content":"The following illustration shows the design of an expression of this type.","pos":[3548,3622]},{"content":"In this example, the expression returns the value of the <bpt id=\"p1\">**</bpt>Intrastat.AmountMST<ept id=\"p1\">**</ept> field of the Dynamics 365 for Operations <bpt id=\"p2\">**</bpt>Intrastat<ept id=\"p2\">**</ept> table, after that value has been rounded to two decimal places.","pos":[3623,3822],"source":" In this example, the expression returns the value of the **Intrastat.AmountMST** field of the Dynamics 365 for Operations **Intrastat** table, after that value has been rounded to two decimal places."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>picture-expression-binding<ept id=\"p1\">](./media/picture-expression-binding.jpg)](./media/picture-expression-binding.jpg)</ept> The following illustration shows how an expression of this type can be used.","pos":[3823,4011],"source":"[![picture-expression-binding](./media/picture-expression-binding.jpg)](./media/picture-expression-binding.jpg) The following illustration shows how an expression of this type can be used."},{"content":"In this example, the result of the designed expression is populated in the <bpt id=\"p1\">**</bpt>Transaction.InvoicedAmount<ept id=\"p1\">**</ept> component of the <bpt id=\"p2\">**</bpt>Tax reporting model<ept id=\"p2\">**</ept> data model.","pos":[4012,4170],"source":" In this example, the result of the designed expression is populated in the **Transaction.InvoicedAmount** component of the **Tax reporting model** data model."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>picture-expression-binding2<ept id=\"p1\">](./media/picture-expression-binding2.jpg)](./media/picture-expression-binding2.jpg)</ept> At run time, the designed formula, <bpt id=\"p2\">**</bpt>ROUND (Intrastat.AmountMST, 2)<ept id=\"p2\">**</ept>, will round the value of the <bpt id=\"p3\">**</bpt>AmountMST<ept id=\"p3\">**</ept> field for each record of the <bpt id=\"p4\">**</bpt>Intrastat<ept id=\"p4\">**</ept> table to two decimal places, and populate the rounded value to the <bpt id=\"p5\">**</bpt>Transaction.InvoicedAmount<ept id=\"p5\">**</ept> component of the <bpt id=\"p6\">**</bpt>Tax reporting<ept id=\"p6\">**</ept> data model.","pos":[4171,4586],"source":"[![picture-expression-binding2](./media/picture-expression-binding2.jpg)](./media/picture-expression-binding2.jpg) At run time, the designed formula, **ROUND (Intrastat.AmountMST, 2)**, will round the value of the **AmountMST** field for each record of the **Intrastat** table to two decimal places, and populate the rounded value to the **Transaction.InvoicedAmount** component of the **Tax reporting** data model."},{"pos":[4592,4607],"content":"Data formatting","linkify":"Data formatting","nodes":[{"content":"Data formatting","pos":[0,15]}]},{"content":"The ER formula designer can be used to define an expression that formats data that is received from data sources, so that the data can be sent as part of the generating electronic document.","pos":[4609,4798]},{"content":"If you have formatting that must be applied as a typical rule that should be reused for a format, you can introduce that formatting one time in a format configuration as a named transformation that has a formatting expression.","pos":[4799,5025]},{"content":"This named transformation can then be linked with many format components for which the output must be formatted according to the expression that was created.","pos":[5026,5183]},{"content":"The following illustration shows the design of a transformation of this type.","pos":[5184,5261]},{"content":"In this example, the <bpt id=\"p1\">**</bpt>TrimmedString<ept id=\"p1\">**</ept> transformation takes incoming data of the <bpt id=\"p2\">**</bpt>String<ept id=\"p2\">**</ept> data type, and truncates leading and trailing spaces when it returns the string value.","pos":[5262,5440],"source":" In this example, the **TrimmedString** transformation takes incoming data of the **String** data type, and truncates leading and trailing spaces when it returns the string value."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>picture-transformation-design<ept id=\"p1\">](./media/picture-transformation-design.jpg)](./media/picture-transformation-design.jpg)</ept> The following illustration shows how a transformation of this type can be used.","pos":[5441,5641],"source":"[![picture-transformation-design](./media/picture-transformation-design.jpg)](./media/picture-transformation-design.jpg) The following illustration shows how a transformation of this type can be used."},{"content":"In this example, several format components that send text as output to the generating electronic document at run time refer to the <bpt id=\"p1\">**</bpt>TrimmedString<ept id=\"p1\">**</ept> transformation by name.","pos":[5642,5814],"source":" In this example, several format components that send text as output to the generating electronic document at run time refer to the **TrimmedString** transformation by name."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>picture-transformation-usage<ept id=\"p1\">](./media/picture-transformation-usage.jpg)](./media/picture-transformation-usage.jpg)</ept> When format components refer to the <bpt id=\"p2\">**</bpt>TrimmedString <ept id=\"p2\">**</ept>transformation (for example, the <bpt id=\"p3\">**</bpt>partyName<ept id=\"p3\">**</ept> component in the preceding illustration) this sends text as output to the generating document.","pos":[5815,6128],"source":"[![picture-transformation-usage](./media/picture-transformation-usage.jpg)](./media/picture-transformation-usage.jpg) When format components refer to the **TrimmedString **transformation (for example, the **partyName** component in the preceding illustration) this sends text as output to the generating document."},{"content":"The text does not include leading and trailing spaces.","pos":[6129,6183]},{"content":"If you have formatting that must be applied individually, you can introduce that formatting as an individual expression of a binding of a specific format component.","pos":[6184,6348]},{"content":"The following illustration shows an expression of this type.","pos":[6349,6409]},{"content":"In this example, the <bpt id=\"p1\">**</bpt>partyType<ept id=\"p1\">**</ept> format component is bound to the data source via an expression that converts incoming data from the <bpt id=\"p2\">**</bpt>Model.Company.RegistrationType<ept id=\"p2\">**</ept> field in the data source to uppercase text and sends that text as output to the electronic document.","pos":[6410,6680],"source":" In this example, the **partyType** format component is bound to the data source via an expression that converts incoming data from the **Model.Company.RegistrationType** field in the data source to uppercase text and sends that text as output to the electronic document."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>picture-binding-with-formula<ept id=\"p1\">](./media/picture-binding-with-formula.jpg)](./media/picture-binding-with-formula.jpg)</ept>","pos":[6681,6798],"source":"[![picture-binding-with-formula](./media/picture-binding-with-formula.jpg)](./media/picture-binding-with-formula.jpg)"},{"pos":[6804,6824],"content":"Process flow control","linkify":"Process flow control","nodes":[{"content":"Process flow control","pos":[0,20]}]},{"content":"The ER formula designer can be used to define expressions that control the process flow of generating documents.","pos":[6826,6938]},{"content":"You can:","pos":[6939,6947]},{"content":"Define conditions that determine when a document creation process must be stopped.","pos":[6953,7035]},{"content":"Specify expressions that either create messages for the end user about stopped processes or throw execution log messages about the continuing process of report generation.","pos":[7040,7211]},{"content":"Specify the file names of generating documents, and control conditions of their creation.","pos":[7216,7305]},{"content":"Each rule of the process flow control is designed as an individual validation.","pos":[7307,7385]},{"content":"The following illustration shows a validation of this type.","pos":[7386,7445]},{"content":"Here is an explanation of the configuration in this example:","pos":[7446,7506]},{"pos":[7512,7603],"content":"The validation is evaluated when the <bpt id=\"p1\">**</bpt>INSTAT<ept id=\"p1\">**</ept> node is created in the generating XML file.","source":"The validation is evaluated when the **INSTAT** node is created in the generating XML file."},{"pos":[7608,7711],"content":"If the list of transactions is empty, the validation stops the execution process and returns <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","source":"If the list of transactions is empty, the validation stops the execution process and returns **FALSE**."},{"content":"The validation returns an error message that includes the text of label SYS70894 in the user's preferred language.","pos":[7716,7830]},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>picture-validation<ept id=\"p1\">](./media/picture-validation.jpg)](./media/picture-validation.jpg)</ept> The ER formula designer can also be used to specify a file name for a generating electronic document and control the file creation process.","pos":[7832,8059],"source":"[![picture-validation](./media/picture-validation.jpg)](./media/picture-validation.jpg) The ER formula designer can also be used to specify a file name for a generating electronic document and control the file creation process."},{"content":"The following illustration shows the design of a process flow control of this type.","pos":[8060,8143]},{"content":"Here is an explanation of the configuration in this example:","pos":[8144,8204]},{"pos":[8210,8339],"content":"The list of records from the <bpt id=\"p1\">**</bpt>model.Intrastat<ept id=\"p1\">**</ept> data source is divided into batches, each of which contains up to 1,000 records.","source":"The list of records from the **model.Intrastat** data source is divided into batches, each of which contains up to 1,000 records."},{"content":"The output creates a zip file that contains one file in XML format for every batch that was created.","pos":[8344,8444]},{"content":"An expression returns a file name for generating electronic documents by concatenating the file name and file extension.","pos":[8449,8569]},{"content":"For the second batch and all subsequent batches, the file name contains the batch ID as a suffix.","pos":[8570,8667]},{"pos":[8672,8792],"content":"An expression enables (by returning <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>) the process of file creation for batches that contain at least one record.","source":"An expression enables (by returning **TRUE**) the process of file creation for batches that contain at least one record."},{"pos":[8794,8887],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>picture-file-control<ept id=\"p1\">](./media/picture-file-control.jpg)](./media/picture-file-control.jpg)</ept>","source":"[![picture-file-control](./media/picture-file-control.jpg)](./media/picture-file-control.jpg)"},{"pos":[8893,8905],"content":"Basic syntax","linkify":"Basic syntax","nodes":[{"content":"Basic syntax","pos":[0,12]}]},{"content":"ER expressions can contain any or all of the following elements:","pos":[8907,8971]},{"content":"Constants","pos":[8977,8986]},{"content":"Operators","pos":[8991,9000]},{"content":"References","pos":[9005,9015]},{"content":"Paths","pos":[9020,9025]},{"content":"Functions","pos":[9030,9039]},{"pos":[9046,9055],"content":"Constants","linkify":"Constants","nodes":[{"content":"Constants","pos":[0,9]}]},{"content":"You can use text and numeric constants (values that aren't calculated) when you design expressions.","pos":[9057,9156]},{"content":"For example, the expression <bpt id=\"p1\">**</bpt>VALUE (\"100\") + 20 <ept id=\"p1\">**</ept>uses the numeric constant 20 and the string constant “100”, and returns the numeric value <bpt id=\"p2\">**</bpt>120<ept id=\"p2\">**</ept>.","pos":[9157,9306],"source":" For example, the expression **VALUE (\"100\") + 20 **uses the numeric constant 20 and the string constant “100”, and returns the numeric value **120**."},{"content":"The ER formula designer supports escape sequences, which means that you can specify the expression string that should be handled differently.","pos":[9307,9448]},{"content":"For example, the expression <bpt id=\"p1\">**</bpt>\"Leo Tolstoy \"\"War and Peace\"\" Volume 1\"<ept id=\"p1\">**</ept> returns the text string <bpt id=\"p2\">**</bpt>Leo Tolstoy \"War and Peace\" Volume 1<ept id=\"p2\">**</ept>.","pos":[9449,9587],"source":" For example, the expression **\"Leo Tolstoy \"\"War and Peace\"\" Volume 1\"** returns the text string **Leo Tolstoy \"War and Peace\" Volume 1**."},{"pos":[9594,9603],"content":"Operators","linkify":"Operators","nodes":[{"content":"Operators","pos":[0,9]}]},{"content":"The following table shows the arithmetic operators that you can use to perform basic mathematical operations, such as addition, subtraction, division, and multiplication.","pos":[9605,9775]},{"content":"Operator","pos":[9779,9787]},{"content":"Meaning","pos":[9790,9797]},{"content":"Example","pos":[9813,9820]},{"content":"Addition","pos":[9882,9890]},{"content":"1+2","pos":[9905,9908]},{"content":"Subtraction Negation","pos":[9928,9948]},{"content":"5-2 -1","pos":[9951,9957]},{"content":"Multiplication","pos":[9974,9988]},{"content":"7<ph id=\"ph1\">\\*</ph>8","pos":[9997,10001],"source":"7\\*8"},{"content":"Division","pos":[10020,10028]},{"content":"9/3","pos":[10043,10046]},{"content":"The following table shows the comparison operators that are supported, and that you can use to compare two values.","pos":[10054,10168]},{"content":"Operator","pos":[10172,10180]},{"content":"Meaning","pos":[10183,10190]},{"content":"Example","pos":[10210,10217]},{"content":"Equal","pos":[10289,10294]},{"content":"X=Y","pos":[10316,10319]},{"content":"Greater than","pos":[10342,10354]},{"content":"X<ph id=\"ph1\">&amp;gt;</ph>Y","pos":[10369,10375],"source":"X&gt;Y"},{"content":"Less than","pos":[10395,10404]},{"content":"X<ph id=\"ph1\">&amp;lt;</ph>Y","pos":[10422,10428],"source":"X&lt;Y"},{"content":"Greater than or equal to","pos":[10448,10472]},{"content":"X<ph id=\"ph1\">&amp;gt;</ph>=Y","pos":[10475,10482],"source":"X&gt;=Y"},{"content":"Less than or equal to","pos":[10501,10522]},{"content":"X<ph id=\"ph1\">&amp;lt;</ph>=Y","pos":[10528,10535],"source":"X&lt;=Y"},{"content":"Not equal to","pos":[10554,10566]},{"content":"X<ph id=\"ph1\">&amp;lt;</ph><ph id=\"ph2\">&amp;gt;</ph>Y","pos":[10581,10591],"source":"X&lt;&gt;Y"},{"content":"Additionally, you can use an ampersand (&amp;) as a text concatenation operator to join, or concatenate, one or more text strings into a single piece of text.","pos":[10595,10749],"source":"Additionally, you can use an ampersand (&) as a text concatenation operator to join, or concatenate, one or more text strings into a single piece of text."},{"content":"Operator","pos":[10753,10761]},{"content":"Meaning","pos":[10764,10771]},{"content":"Example","pos":[10778,10785]},{"content":"Concatenate","pos":[10916,10927]},{"content":"\"Nothing to print\" &amp; \": \" &amp; \"no records found\"","pos":[10930,10976],"source":"\"Nothing to print\" & \": \" & \"no records found\""},{"pos":[10985,11004],"content":"Operator precedence","linkify":"Operator precedence","nodes":[{"content":"Operator precedence","pos":[0,19]}]},{"content":"The order in which the parts of a compound expression are evaluated is important.","pos":[11006,11087]},{"content":"For example, the result of the expression<bpt id=\"p1\">**</bpt> 1 + 4 / 2<ept id=\"p1\">**</ept> differs, depending on whether the addition operation or the division operation is performed first.","pos":[11088,11242],"source":" For example, the result of the expression** 1 + 4 / 2** differs, depending on whether the addition operation or the division operation is performed first."},{"content":"You can use parentheses to explicitly define how an expression is evaluated.","pos":[11243,11319]},{"content":"For example, to indicate that the addition operation should be performed first, you can modify the preceding expression to <bpt id=\"p1\">**</bpt>(1 + 4) / 2<ept id=\"p1\">**</ept>.","pos":[11320,11459],"source":" For example, to indicate that the addition operation should be performed first, you can modify the preceding expression to **(1 + 4) / 2**."},{"content":"If the order of operations that must be performed in an expression isn't explicitly defined, the order is based on the default precedence that is assigned to the supported operators.","pos":[11460,11642]},{"content":"The following tables shows the operators and the precedence that is assigned to each.","pos":[11643,11728]},{"content":"Operators that have higher precedence (for example, 7) are evaluated before operators that have lower precedence (for example, 1).","pos":[11729,11859]},{"content":"Precedence","pos":[11863,11873]},{"content":"Operators","pos":[11876,11885]},{"content":"Syntax","pos":[11893,11899]},{"content":"7","pos":[12045,12046]},{"content":"Grouping","pos":[12058,12066]},{"content":"( …","pos":[12075,12078]},{"content":")","pos":[12079,12080]},{"content":"6","pos":[12136,12137]},{"content":"Member access","pos":[12149,12162]},{"content":"…","pos":[12166,12167]},{"content":".","pos":[12168,12169]},{"content":"…","pos":[12170,12171]},{"content":"5","pos":[12227,12228]},{"content":"Function call","pos":[12240,12253]},{"content":"…","pos":[12257,12258]},{"content":"( …","pos":[12259,12262]},{"content":")","pos":[12263,12264]},{"content":"4","pos":[12318,12319]},{"content":"Multiplicative","pos":[12331,12345]},{"content":"…","pos":[12348,12349]},{"content":"<ph id=\"ph1\">\\*</ph> …","pos":[12350,12354],"source":"\\* …"},{"content":"…","pos":[12355,12356]},{"content":"/ …","pos":[12357,12360]},{"content":"3","pos":[12409,12410]},{"content":"Additive","pos":[12422,12430]},{"content":"…","pos":[12439,12440]},{"content":"+ …","pos":[12441,12444]},{"content":"…","pos":[12445,12446]},{"content":"- …","pos":[12447,12450]},{"content":"2","pos":[12500,12501]},{"content":"Comparison","pos":[12513,12523]},{"content":"…","pos":[12530,12531]},{"content":"<ph id=\"ph1\">&amp;lt;</ph> …","pos":[12532,12538],"source":"&lt; …"},{"content":"…","pos":[12539,12540]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>= …","pos":[12541,12548],"source":"&lt;= …"},{"content":"…","pos":[12549,12550]},{"content":"=<ph id=\"ph1\">&amp;gt;</ph> …","pos":[12551,12558],"source":" =&gt; …"},{"content":"…","pos":[12559,12560]},{"content":"<ph id=\"ph1\">&amp;gt;</ph> …","pos":[12561,12567],"source":"&gt; …"},{"content":"…","pos":[12568,12569]},{"content":"= …","pos":[12570,12573]},{"content":"…","pos":[12574,12575]},{"content":"<ph id=\"ph1\">&amp;lt;</ph><ph id=\"ph2\">&amp;gt;</ph> …","pos":[12576,12586],"source":"&lt;&gt; …"},{"content":"1","pos":[12591,12592]},{"content":"Separation","pos":[12604,12614]},{"content":"…","pos":[12621,12622]},{"content":", …","pos":[12623,12626]},{"content":"Operators on the same line have equal precedence.","pos":[12681,12730]},{"content":"If an expression includes more than one of these operators, the expression is evaluated from left to right.","pos":[12731,12838]},{"content":"For example, the expression <bpt id=\"p1\">**</bpt>1 + 6 / 2 <ph id=\"ph1\">\\*</ph> 3 <ph id=\"ph2\">&amp;gt;</ph> 5<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept>.","pos":[12839,12910],"source":" For example, the expression **1 + 6 / 2 \\* 3 &gt; 5** returns **true**."},{"content":"We recommend that you use parentheses to explicitly indicate the desired order of evaluation for expressions, to make the expressions easier to read and maintain.","pos":[12911,13073]},{"pos":[13080,13090],"content":"References","linkify":"References","nodes":[{"content":"References","pos":[0,10]}]},{"content":"All data sources of the current ER component (either a model or a format) that are available during the design of an expression can be used as named references.","pos":[13092,13252]},{"content":"For example, the current ER data model contains the <bpt id=\"p1\">**</bpt>ReportingDate<ept id=\"p1\">**</ept> data source, which returns a value of the <bpt id=\"p2\">**</bpt>DATETIME<ept id=\"p2\">**</ept> data type.","pos":[13253,13388],"source":" For example, the current ER data model contains the **ReportingDate** data source, which returns a value of the **DATETIME** data type."},{"content":"To properly format that value in the generating document, you can reference the data source in the expression as follows: <bpt id=\"p1\">**</bpt>DATETIMEFORMAT (ReportingDate, \"dd-MM-yyyy\")<ept id=\"p1\">**</ept> All characters in the name of a referencing data source that don't represent a letter of the alphabet must be preceded by a single quotation mark (').","pos":[13389,13710],"source":" To properly format that value in the generating document, you can reference the data source in the expression as follows: **DATETIMEFORMAT (ReportingDate, \"dd-MM-yyyy\")** All characters in the name of a referencing data source that don't represent a letter of the alphabet must be preceded by a single quotation mark (')."},{"content":"If the name of a referencing data source contains at least one symbol that doesn't represent a letter of the alphabet (for example, punctuation marks or other written symbols), the name must be enclosed in single quotation marks.","pos":[13711,13940]},{"content":"Here are some examples:","pos":[13941,13964]},{"pos":[13970,14088],"content":"The <bpt id=\"p1\">**</bpt>Today's date &amp; time<ept id=\"p1\">**</ept> data source must be referred to in an ER expression as follows: <bpt id=\"p2\">**</bpt>'Today''s date &amp; time'<ept id=\"p2\">**</ept>","source":"The **Today's date & time** data source must be referred to in an ER expression as follows: **'Today''s date & time'**"},{"pos":[14093,14222],"content":"The <bpt id=\"p1\">**</bpt>name()<ept id=\"p1\">**</ept> method of the <bpt id=\"p2\">**</bpt>Customers<ept id=\"p2\">**</ept> data source must be referred to in an ER expression as follows: <bpt id=\"p3\">**</bpt>Customers.'name()'<ept id=\"p3\">**</ept>","source":"The **name()** method of the **Customers** data source must be referred to in an ER expression as follows: **Customers.'name()'**"},{"pos":[14229,14233],"content":"Path","linkify":"Path","nodes":[{"content":"Path","pos":[0,4]}]},{"content":"When an expression references a structured data source, you can use the path definition to select a specific primitive element of that data source.","pos":[14235,14382]},{"content":"A dot character (.) is used to separate individual elements of a structured data source.","pos":[14383,14471]},{"content":"For example, the current ER data model contains the <bpt id=\"p1\">**</bpt>InvoiceTransactions<ept id=\"p1\">**</ept> data source, which returns a list of records.","pos":[14472,14593],"source":" For example, the current ER data model contains the **InvoiceTransactions** data source, which returns a list of records."},{"content":"The <bpt id=\"p1\">**</bpt>InvoiceTransactions<ept id=\"p1\">**</ept> record structure contain the <bpt id=\"p2\">**</bpt>AmountDebit<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>AmountCredit<ept id=\"p3\">**</ept> fields, which return numeric values.","pos":[14594,14724],"source":" The **InvoiceTransactions** record structure contain the **AmountDebit** and **AmountCredit** fields, which return numeric values."},{"content":"Therefore, you can design the following expression to calculate the invoiced amount: <bpt id=\"p1\">**</bpt>InvoiceTransactions.AmountDebit - InvoiceTransactions.AmountCredit<ept id=\"p1\">**</ept>","pos":[14725,14880],"source":" Therefore, you can design the following expression to calculate the invoiced amount: **InvoiceTransactions.AmountDebit - InvoiceTransactions.AmountCredit**"},{"pos":[14887,14896],"content":"Functions","linkify":"Functions","nodes":[{"content":"Functions","pos":[0,9]}]},{"content":"The next section describes the functions that can be used in ER expressions.","pos":[14898,14974]},{"content":"All data sources of the expression context (the current ER data model or ER format), and also constants, can be used as parameters of calling functions, in accordance with the list of calling function arguments.","pos":[14975,15186]},{"content":"For example, the current ER data model contains the <bpt id=\"p1\">**</bpt>InvoiceTransactions<ept id=\"p1\">**</ept> data source, which returns a list of records.","pos":[15187,15308],"source":" For example, the current ER data model contains the **InvoiceTransactions** data source, which returns a list of records."},{"content":"The <bpt id=\"p1\">**</bpt>InvoiceTransactions<ept id=\"p1\">**</ept> record structure contain the <bpt id=\"p2\">**</bpt>AmountDebit<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>AmountCredit<ept id=\"p3\">**</ept> fields, which return numeric values.","pos":[15309,15439],"source":" The **InvoiceTransactions** record structure contain the **AmountDebit** and **AmountCredit** fields, which return numeric values."},{"content":"Therefore, to calculate the invoiced amount, you can design the following expression that uses the built-in ER rounding function: <bpt id=\"p1\">**</bpt>ROUND (InvoiceTransactions.AmountDebit - InvoiceTransactions.AmountCredit, 2)<ept id=\"p1\">**</ept>","pos":[15440,15651],"source":" Therefore, to calculate the invoiced amount, you can design the following expression that uses the built-in ER rounding function: **ROUND (InvoiceTransactions.AmountDebit - InvoiceTransactions.AmountCredit, 2)**"},{"pos":[15656,15675],"content":"Supported functions","linkify":"Supported functions","nodes":[{"content":"Supported functions","pos":[0,19]}]},{"content":"The following tables describe the data manipulation functions that you can use to design ER data models and ER reports.","pos":[15676,15795]},{"content":"The list of functions isn't fixed and can be extended by developers.","pos":[15796,15864]},{"content":"To see the list of functions that you can use, access the functions pane in the ER formula designer.","pos":[15865,15965]},{"pos":[15971,15994],"content":"Date and time functions","linkify":"Date and time functions","nodes":[{"content":"Date and time functions","pos":[0,23]}]},{"content":"Function","pos":[15998,16006]},{"content":"Description","pos":[16043,16054]},{"content":"Example","pos":[16398,16405]},{"content":"ADDDAYS (datetime, days)","pos":[17394,17418]},{"content":"Add the specified number of days to the specified datetime value.","pos":[17439,17504]},{"pos":[17794,17868],"content":"<bpt id=\"p1\">**</bpt>ADDDAYS (NOW(), 7)<ept id=\"p1\">**</ept> returns the date and time seven days in the future.","source":"**ADDDAYS (NOW(), 7)** returns the date and time seven days in the future."},{"content":"DATETODATETIME (date)","pos":[18092,18113]},{"content":"Convert the specified date value to a datetime value.","pos":[18137,18190]},{"content":"<bpt id=\"p1\">**</bpt>DATETODATETIME (CompInfo. 'getCurrentDate()')<ept id=\"p1\">**</ept> returns the current Dynamics 365 for Operations session date, 12/24/2015, as <bpt id=\"p2\">**</bpt>12/24/2015 12:00:00 AM<ept id=\"p2\">**</ept>.","pos":[18492,18646],"source":"**DATETODATETIME (CompInfo. 'getCurrentDate()')** returns the current Dynamics 365 for Operations session date, 12/24/2015, as **12/24/2015 12:00:00 AM**."},{"content":"In this example, <bpt id=\"p1\">**</bpt>CompInfo<ept id=\"p1\">**</ept> is an ER data source of the <bpt id=\"p2\">**</bpt>Dynamics 365 for Operations/Table<ept id=\"p2\">**</ept> type that refers to the CompanyInfo table.","pos":[18647,18785],"source":" In this example, **CompInfo** is an ER data source of the **Dynamics 365 for Operations/Table** type that refers to the CompanyInfo table."},{"content":"NOW ()","pos":[18790,18796]},{"content":"Return the current Dynamics 365 for Operations application server date and time as a datetime value.","pos":[18835,18935]},{"content":"TODAY ()","pos":[19488,19496]},{"content":"Return the current Dynamics 365 for Operations application server date as a date value.","pos":[19533,19620]},{"content":"NULLDATE ()","pos":[20186,20197]},{"pos":[20231,20260],"content":"Return a <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept> date value.","source":"Return a **null** date value."},{"content":"NULLDATETIME ()","pos":[20884,20899]},{"pos":[20929,20962],"content":"Return a <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept> datetime value.","source":"Return a **null** datetime value."},{"content":"DATETIMEFORMAT (datetime, format)","pos":[21582,21615]},{"content":"Convert the specified datetime value to a string in the specified format.","pos":[21627,21700]},{"content":"(For information about the supported formats, see <bpt id=\"p1\">[</bpt>standard<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx)</ept> and <bpt id=\"p2\">[</bpt>custom<ept id=\"p2\">](https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx)</ept>.)","pos":[21701,21908],"source":" (For information about the supported formats, see [standard](https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx) and [custom](https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx).)"},{"pos":[21982,22170],"content":"<bpt id=\"p1\">**</bpt>DATETIMEFORMAT (NOW(), \"dd-MM-yyyy\")<ept id=\"p1\">**</ept> returns the current Dynamics 365 for Operations application server date, 12/24/2015, as <bpt id=\"p2\">**</bpt>\"24-12-2015\"<ept id=\"p2\">**</ept>, according to the specified custom format.","source":"**DATETIMEFORMAT (NOW(), \"dd-MM-yyyy\")** returns the current Dynamics 365 for Operations application server date, 12/24/2015, as **\"24-12-2015\"**, according to the specified custom format."},{"content":"DATETIMEFORMAT (datetime, format, culture)","pos":[22280,22322]},{"content":"Convert the specified datetime value to a string in the specified format and <bpt id=\"p1\">[</bpt>culture<ept id=\"p1\">](https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx)</ept>.","pos":[22325,22469],"source":"Convert the specified datetime value to a string in the specified format and [culture](https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx)."},{"content":"(For information about the supported formats, see <bpt id=\"p1\">[</bpt>standard<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx)</ept> and <bpt id=\"p2\">[</bpt>custom<ept id=\"p2\">](https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx)</ept>).","pos":[22470,22677],"source":" (For information about the supported formats, see [standard](https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx) and [custom](https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx))."},{"pos":[22680,22865],"content":"<bpt id=\"p1\">**</bpt>DATETIMEFORMAT (NOW(), \"d\", \"de\")<ept id=\"p1\">**</ept> returns the current Dynamics 365 for Operations application server date, 12/24/2015, as <bpt id=\"p2\">**</bpt>\"24.12.2015\"<ept id=\"p2\">**</ept>, according to the selected German culture.","source":"**DATETIMEFORMAT (NOW(), \"d\", \"de\")** returns the current Dynamics 365 for Operations application server date, 12/24/2015, as **\"24.12.2015\"**, according to the selected German culture."},{"content":"SESSIONTODAY ()","pos":[22978,22993]},{"content":"Returns the current Dynamics 365 for Operations session date as date value.","pos":[23023,23098]},{"content":"SESSIONNOW ()","pos":[23676,23689]},{"content":"Returns the current Dynamics 365 for Operations session date and time as datetime value.","pos":[23721,23809]},{"content":"DATEFORMAT (date, format)","pos":[24374,24399]},{"content":"Returns string representation of date using specified format.","pos":[24419,24480]},{"pos":[24774,24950],"content":"<bpt id=\"p1\">**</bpt>DATEFORMAT (SESSIONTODAY (), \"dd-MM-yyyy\")<ept id=\"p1\">**</ept> returns the current Dynamics 365 for Operations session date 12/24/2015 as “<bpt id=\"p2\">**</bpt>24-12-2015<ept id=\"p2\">**</ept>” according to specified custom format.","source":"**DATEFORMAT (SESSIONTODAY (), \"dd-MM-yyyy\")** returns the current Dynamics 365 for Operations session date 12/24/2015 as “**24-12-2015**” according to specified custom format."},{"content":"DATEFORMAT (date, format, culture)","pos":[25072,25106]},{"content":"Convert the specified date value to a string in the specified format and <bpt id=\"p1\">[</bpt>culture<ept id=\"p1\">](https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx)</ept>.","pos":[25117,25257],"source":"Convert the specified date value to a string in the specified format and [culture](https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx)."},{"content":"(For information about the supported formats, see <bpt id=\"p1\">[</bpt>standard<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx)</ept> and <bpt id=\"p2\">[</bpt>custom<ept id=\"p2\">](https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx)</ept>).","pos":[25258,25465],"source":" (For information about the supported formats, see [standard](https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx) and [custom](https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx))."},{"pos":[25472,25647],"content":"<bpt id=\"p1\">**</bpt>DATETIMEFORMAT (SESSIONNOW (), \"d\", \"de\")<ept id=\"p1\">**</ept> returns the current Dynamics 365 for Operations session date 12/24/2015 as <bpt id=\"p2\">**</bpt>“24.12.2015”<ept id=\"p2\">**</ept> according to selected German culture.","source":"**DATETIMEFORMAT (SESSIONNOW (), \"d\", \"de\")** returns the current Dynamics 365 for Operations session date 12/24/2015 as **“24.12.2015”** according to selected German culture."},{"pos":[25773,25787],"content":"List functions","linkify":"List functions","nodes":[{"content":"List functions","pos":[0,14]}]},{"content":"Function","pos":[25912,25920]},{"content":"Description","pos":[25930,25941]},{"content":"Example","pos":[25951,25958]},{"content":"SPLIT (input, length)","pos":[26008,26029]},{"content":"Split the specified input string into substrings, each of which has the specified length.","pos":[26039,26128]},{"content":"Return the result as a new list.","pos":[26129,26161]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>SPLIT (<ph id=\"ph1\">&amp;quot;</ph>abcd<ph id=\"ph2\">&amp;quot;</ph>, 3)<ept id=\"p1\">&lt;/strong&gt;</ept> returns a new list that consists of two records that have a <bpt id=\"p2\">&lt;strong&gt;</bpt>STRING<ept id=\"p2\">&lt;/strong&gt;</ept> field.","pos":[26171,26306],"source":"<strong>SPLIT (&quot;abcd&quot;, 3)</strong> returns a new list that consists of two records that have a <strong>STRING</strong> field."},{"content":"The field in the first record contains the text <bpt id=\"p1\">&lt;strong&gt;</bpt><ph id=\"ph1\">&amp;quot;</ph>abc<ph id=\"ph2\">&amp;quot;</ph><ept id=\"p1\">&lt;/strong&gt;</ept>, and the field in the second record contains the text <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph3\">&amp;quot;</ph>d<ph id=\"ph4\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[26307,26473],"source":" The field in the first record contains the text <strong>&quot;abc&quot;</strong>, and the field in the second record contains the text <strong>&quot;d&quot;</strong>."},{"content":"SPLITLIST (list, number)","pos":[26507,26531]},{"content":"Split the specified list into batches, each of which contains the specified number of records.","pos":[26541,26635]},{"content":"Return the result as a new list of batches that contains the following elements:","pos":[26636,26716],"source":" Return the result as a new list of batches that contains the following elements:\n"},{"content":"Batches as regular lists (<bpt id=\"p1\">&lt;strong&gt;</bpt>Value<ept id=\"p1\">&lt;/strong&gt;</ept> component)","pos":[26726,26785],"source":"Batches as regular lists (<strong>Value</strong> component)"},{"content":"The current batch number (<bpt id=\"p1\">&lt;strong&gt;</bpt>BatchNumber<ept id=\"p1\">&lt;/strong&gt;</ept> component)","pos":[26795,26860],"source":"The current batch number (<strong>BatchNumber</strong> component)"},{"content":"In the following example, the <bpt id=\"p1\">&lt;strong&gt;</bpt>Lines<ept id=\"p1\">&lt;/strong&gt;</ept> data source is created as a record list of three records, which is divided into batches, each of which contains up to two records.","pos":[26881,27064],"source":"In the following example, the <strong>Lines</strong> data source is created as a record list of three records, which is divided into batches, each of which contains up to two records."},{"content":"<ph id=\"ph1\">&lt;a href=\"./media/picture-splitlist-datasource.jpg\"&gt;</ph><ph id=\"ph2\">&lt;img src=\"./media/picture-splitlist-datasource.jpg\" alt=\"Data source that is divided into batches\" class=\"alignnone wp-image-290681 size-full\" width=\"397\" height=\"136\" /&gt;</ph><ph id=\"ph3\">&lt;/a&gt;</ph> This shows the designed format layout, where bindings to the <bpt id=\"p1\">&lt;strong&gt;</bpt>Lines<ept id=\"p1\">&lt;/strong&gt;</ept> data source are created to generate output in XML format that presents individual nodes for each batch and the records in it.","pos":[27065,27500],"source":"<a href=\"./media/picture-splitlist-datasource.jpg\"><img src=\"./media/picture-splitlist-datasource.jpg\" alt=\"Data source that is divided into batches\" class=\"alignnone wp-image-290681 size-full\" width=\"397\" height=\"136\" /></a> This shows the designed format layout, where bindings to the <strong>Lines</strong> data source are created to generate output in XML format that presents individual nodes for each batch and the records in it."},{"content":"<ph id=\"ph1\">&lt;a href=\"./media/picture-splitlist-format.jpg\"&gt;</ph><ph id=\"ph2\">&lt;img src=\"./media/picture-splitlist-format.jpg\" alt=\"Format layout that has bindings to a data source\" class=\"alignnone wp-image-290691 size-full\" width=\"374\" height=\"161\" /&gt;</ph><ph id=\"ph3\">&lt;/a&gt;</ph> The following is the result of running the designed format.","pos":[27501,27786],"source":"<a href=\"./media/picture-splitlist-format.jpg\"><img src=\"./media/picture-splitlist-format.jpg\" alt=\"Format layout that has bindings to a data source\" class=\"alignnone wp-image-290691 size-full\" width=\"374\" height=\"161\" /></a> The following is the result of running the designed format."},{"content":"LIST (record 1 [, record 2, ...])","pos":[28025,28058]},{"content":"Return a new list that is created from the specified arguments.","pos":[28068,28131]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>LIST (model.MainData, model.OtherData)<ept id=\"p1\">&lt;/strong&gt;</ept> returns an empty record, where the list of fields contains all fields of the <bpt id=\"p2\">&lt;strong&gt;</bpt>MainData<ept id=\"p2\">&lt;/strong&gt;</ept> and <bpt id=\"p3\">&lt;strong&gt;</bpt>OtherData<ept id=\"p3\">&lt;/strong&gt;</ept> record lists.","pos":[28141,28344],"source":"<strong>LIST (model.MainData, model.OtherData)</strong> returns an empty record, where the list of fields contains all fields of the <strong>MainData</strong> and <strong>OtherData</strong> record lists."},{"content":"LISTJOIN (list 1, list 2, ...)","pos":[28378,28408]},{"content":"Return a joined list that is created from lists of specified arguments.","pos":[28418,28489]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>LISTJOIN (SPLIT (<ph id=\"ph1\">&amp;quot;</ph>abc<ph id=\"ph2\">&amp;quot;</ph>, 1), SPLIT (<ph id=\"ph3\">&amp;quot;</ph>def<ph id=\"ph4\">&amp;quot;</ph>, 1))<ept id=\"p1\">&lt;/strong&gt;</ept> returns the list of six records, where one field of the <bpt id=\"p2\">&lt;strong&gt;</bpt>STRING<ept id=\"p2\">&lt;/strong&gt;</ept> data type contains single letters.","pos":[28499,28696],"source":"<strong>LISTJOIN (SPLIT (&quot;abc&quot;, 1), SPLIT (&quot;def&quot;, 1))</strong> returns the list of six records, where one field of the <strong>STRING</strong> data type contains single letters."},{"content":"ISEMPTY (list)","pos":[28729,28743]},{"content":"Return <bpt id=\"p1\">&lt;strong&gt;</bpt>TRUE<ept id=\"p1\">&lt;/strong&gt;</ept> if the specified list doesn't contain any elements.","pos":[28753,28833],"source":"Return <strong>TRUE</strong> if the specified list doesn't contain any elements."},{"content":"Otherwise, return <bpt id=\"p1\">&lt;strong&gt;</bpt>FALSE<ept id=\"p1\">&lt;/strong&gt;</ept>.","pos":[28834,28875],"source":" Otherwise, return <strong>FALSE</strong>."},{"content":"EMPTYLIST (list)","pos":[28919,28935]},{"content":"Return an empty list by using the specified list as a source for the list structure.","pos":[28945,29029]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>EMPTYLIST (SPLIT (<ph id=\"ph1\">&amp;quot;</ph>abc<ph id=\"ph2\">&amp;quot;</ph>, 1))<ept id=\"p1\">&lt;/strong&gt;</ept> returns a new empty list that has the same structure as the list that is returned by <bpt id=\"p2\">&lt;strong&gt;</bpt>SPLIT<ept id=\"p2\">&lt;/strong&gt;</ept> function.","pos":[29039,29212],"source":"<strong>EMPTYLIST (SPLIT (&quot;abc&quot;, 1))</strong> returns a new empty list that has the same structure as the list that is returned by <strong>SPLIT</strong> function."},{"content":"FIRST (list)","pos":[29245,29257]},{"content":"Return the first record of the specified list, if that record isn't empty.","pos":[29267,29341]},{"content":"Otherwise, throw an exception.","pos":[29342,29372]},{"content":"FIRSTORNULL (list)","pos":[29416,29434]},{"content":"Return the first record of the specified list, if that record isn't empty.","pos":[29444,29518]},{"content":"Otherwise, return a <bpt id=\"p1\">&lt;strong&gt;</bpt>null<ept id=\"p1\">&lt;/strong&gt;</ept> record.","pos":[29519,29568],"source":" Otherwise, return a <strong>null</strong> record."},{"content":"LISTOFFIRSTITEM (list)","pos":[29611,29633]},{"content":"Return a list that contains only the first item of the specified list.","pos":[29643,29713]},{"content":"ALLITEMS (path)","pos":[29757,29772]},{"content":"Return a new flattened list that represents all items that match the specified path.","pos":[29782,29866]},{"content":"The path must be defined as a valid data source path to a data source element of a record list data type.","pos":[29867,29972]},{"content":"The path to string, date, etc. data elements should raise an error at design time in ER expression builder.","pos":[29973,30080]},{"content":"If you enter <bpt id=\"p1\">&lt;strong&gt;</bpt>SPLIT(<ph id=\"ph1\">&amp;quot;</ph>abcdef<ph id=\"ph2\">&amp;quot;</ph> , 2)<ept id=\"p1\">&lt;/strong&gt;</ept> as a data source (DS), <bpt id=\"p2\">&lt;strong&gt;</bpt>COUNT( ALLITEMS (DS.Value))<ept id=\"p2\">&lt;/strong&gt;</ept> returns <bpt id=\"p3\">&lt;strong&gt;</bpt>3<ept id=\"p3\">&lt;/strong&gt;</ept>.","pos":[30090,30245],"source":"If you enter <strong>SPLIT(&quot;abcdef&quot; , 2)</strong> as a data source (DS), <strong>COUNT( ALLITEMS (DS.Value))</strong> returns <strong>3</strong>."},{"content":"ORDERBY (list [, expression 1, expression 2, …])","pos":[30278,30326]},{"content":"Return the specified list, which is sorted according to the specified arguments that can be defined as expressions.","pos":[30336,30451]},{"content":"When <bpt id=\"p1\">&lt;strong&gt;</bpt>Vendor<ept id=\"p1\">&lt;/strong&gt;</ept> is configured as an ER data source that refers to the VendTable table, <bpt id=\"p2\">&lt;strong&gt;</bpt>ORDERBY (Vendors, Vendors.'name()')<ept id=\"p2\">&lt;/strong&gt;</ept> returns the list of vendors that is sorted by name in ascending order.","pos":[30461,30684],"source":"When <strong>Vendor</strong> is configured as an ER data source that refers to the VendTable table, <strong>ORDERBY (Vendors, Vendors.'name()')</strong> returns the list of vendors that is sorted by name in ascending order."},{"content":"REVERSE (list)","pos":[30718,30732]},{"content":"Return the specified list in reversed sort order.","pos":[30742,30791]},{"content":"When <bpt id=\"p1\">&lt;strong&gt;</bpt>Vendor<ept id=\"p1\">&lt;/strong&gt;</ept> is configured as an ER data source that refers to the VendTable table, <bpt id=\"p2\">&lt;strong&gt;</bpt>REVERSE (ORDERBY (Vendors, Vendors.'name()')) )<ept id=\"p2\">&lt;/strong&gt;</ept> returns the list of vendors that is sorted by name in descending order.","pos":[30801,31037],"source":"When <strong>Vendor</strong> is configured as an ER data source that refers to the VendTable table, <strong>REVERSE (ORDERBY (Vendors, Vendors.'name()')) )</strong> returns the list of vendors that is sorted by name in descending order."},{"content":"WHERE (list, condition)","pos":[31070,31093]},{"content":"Return the specified list, which is filtered according to the specified condition.","pos":[31103,31185]},{"content":"Unlike <bpt id=\"p1\">&lt;strong&gt;</bpt>FILTER<ept id=\"p1\">&lt;/strong&gt;</ept> function, the specified condition is applied to the list in the memory.","pos":[31186,31288],"source":" Unlike <strong>FILTER</strong> function, the specified condition is applied to the list in the memory."},{"content":"When <bpt id=\"p1\">&lt;strong&gt;</bpt>Vendor<ept id=\"p1\">&lt;/strong&gt;</ept> is configured as an ER data source that refers to the VendTable table, <bpt id=\"p2\">&lt;strong&gt;</bpt>WHERE(Vendors, Vendors.VendGroup = <ph id=\"ph1\">&amp;quot;</ph>40<ph id=\"ph2\">&amp;quot;</ph>)<ept id=\"p2\">&lt;/strong&gt;</ept> returns the list of vendors that belong to the vendor group 40.","pos":[31298,31529],"source":"When <strong>Vendor</strong> is configured as an ER data source that refers to the VendTable table, <strong>WHERE(Vendors, Vendors.VendGroup = &quot;40&quot;)</strong> returns the list of vendors that belong to the vendor group 40."},{"content":"ENUMERATE (list)","pos":[31563,31579]},{"content":"Return a new list that consists of enumerated records of the specified list, and that exposes the following elements:","pos":[31589,31706],"source":"Return a new list that consists of enumerated records of the specified list, and that exposes the following elements:\n"},{"content":"Specified list records as regular lists (<bpt id=\"p1\">&lt;strong&gt;</bpt>Value<ept id=\"p1\">&lt;/strong&gt;</ept> component)","pos":[31716,31790],"source":"Specified list records as regular lists (<strong>Value</strong> component)"},{"content":"The current record index (<bpt id=\"p1\">&lt;strong&gt;</bpt>Number<ept id=\"p1\">&lt;/strong&gt;</ept> component)","pos":[31800,31860],"source":"The current record index (<strong>Number</strong> component)"},{"content":"In the following example, the <bpt id=\"p1\">&lt;strong&gt;</bpt>Enumerated<ept id=\"p1\">&lt;/strong&gt;</ept> data source is created as an enumerated list of vendor records from the <bpt id=\"p2\">&lt;strong&gt;</bpt>Vendors<ept id=\"p2\">&lt;/strong&gt;</ept> data source that refers to the <bpt id=\"p3\">&lt;strong&gt;</bpt>VendTable<ept id=\"p3\">&lt;/strong&gt;</ept> table.","pos":[31881,32100],"source":"In the following example, the <strong>Enumerated</strong> data source is created as an enumerated list of vendor records from the <strong>Vendors</strong> data source that refers to the <strong>VendTable</strong> table."},{"content":"<ph id=\"ph1\">&lt;a href=\"./media/picture-enumerate-datasource.jpg\"&gt;</ph><ph id=\"ph2\">&lt;img src=\"./media/picture-enumerate-datasource.jpg\" alt=\"Enumerated data source\" class=\"alignnone wp-image-290711 size-full\" width=\"387\" height=\"136\" /&gt;</ph><ph id=\"ph3\">&lt;/a&gt;</ph> Here is the format, where data bindings are created to generate output in XML format that presents individual vendors as enumerated nodes.","pos":[32101,32447],"source":"<a href=\"./media/picture-enumerate-datasource.jpg\"><img src=\"./media/picture-enumerate-datasource.jpg\" alt=\"Enumerated data source\" class=\"alignnone wp-image-290711 size-full\" width=\"387\" height=\"136\" /></a> Here is the format, where data bindings are created to generate output in XML format that presents individual vendors as enumerated nodes."},{"content":"<ph id=\"ph1\">&lt;a href=\"./media/picture-enumerate-format.jpg\"&gt;</ph><ph id=\"ph2\">&lt;img src=\"./media/picture-enumerate-format.jpg\" alt=\"Format that has data bindings\" class=\"alignnone wp-image-290721 size-full\" width=\"414\" height=\"138\" /&gt;</ph><ph id=\"ph3\">&lt;/a&gt;</ph> This is the result of running the designed format.","pos":[32448,32705],"source":"<a href=\"./media/picture-enumerate-format.jpg\"><img src=\"./media/picture-enumerate-format.jpg\" alt=\"Format that has data bindings\" class=\"alignnone wp-image-290721 size-full\" width=\"414\" height=\"138\" /></a> This is the result of running the designed format."},{"content":"COUNT (list)","pos":[32944,32956]},{"content":"Return the number of records in the specified list, if the list isn't empty.","pos":[32966,33042]},{"content":"Otherwise, return <bpt id=\"p1\">&lt;strong&gt;</bpt>0<ept id=\"p1\">&lt;/strong&gt;</ept> (zero).","pos":[33043,33087],"source":" Otherwise, return <strong>0</strong> (zero)."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>COUNT (SPLIT(<ph id=\"ph1\">&amp;quot;</ph>abcd<ph id=\"ph2\">&amp;quot;</ph> , 3))<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt>2<ept id=\"p2\">&lt;/strong&gt;</ept>, because the <bpt id=\"p3\">&lt;strong&gt;</bpt>SPLIT<ept id=\"p3\">&lt;/strong&gt;</ept> function creates a list that consists of two records.","pos":[33097,33266],"source":"<strong>COUNT (SPLIT(&quot;abcd&quot; , 3))</strong> returns <strong>2</strong>, because the <strong>SPLIT</strong> function creates a list that consists of two records."},{"content":"LISTOFFIELDS (path)","pos":[33300,33319]},{"content":"Returns a records list created from an argument of one of the following types:","pos":[33329,33407],"source":"Returns a records list created from an argument of one of the following types:\n"},{"content":"Model enumeration","pos":[33417,33434]},{"content":"Format enumeration","pos":[33444,33462]},{"content":"Container","pos":[33472,33481]},{"content":"The created list will consist of records with the following fields:","pos":[33493,33560],"source":"\nThe created list will consist of records with the following fields:\n"},{"content":"Name","pos":[33570,33574]},{"content":"Label","pos":[33584,33589]},{"content":"Description","pos":[33599,33610]},{"content":"The Label and Description fields will return at run-time values based on format’s language settings.","pos":[33622,33722],"source":"\nThe Label and Description fields will return at run-time values based on format’s language settings."},{"content":"The following example shows the enumeration introduced in a data model.","pos":[33732,33803]},{"content":"<ph id=\"ph1\">&lt;a href=\"./media/ger-listoffields-function-model-enumeration.png\"&gt;</ph><ph id=\"ph2\">&lt;img src=\"./media/ger-listoffields-function-model-enumeration-e1474545790761.png\" alt=\"GER LISTOFFIELDS function - model enumeration\" class=\"alignnone wp-image-1203943 size-full\" width=\"514\" height=\"155\" /&gt;</ph><ph id=\"ph3\">&lt;/a&gt;</ph>The following example shows:","pos":[33804,34108],"source":"<a href=\"./media/ger-listoffields-function-model-enumeration.png\"><img src=\"./media/ger-listoffields-function-model-enumeration-e1474545790761.png\" alt=\"GER LISTOFFIELDS function - model enumeration\" class=\"alignnone wp-image-1203943 size-full\" width=\"514\" height=\"155\" /></a>The following example shows:\n"},{"content":"Model enumeration inserted into a report as a data source.","pos":[34118,34176]},{"content":"ER expression designed to use model enumeration as parameter of this function.","pos":[34186,34264]},{"content":"Data source of the record list type inserted into a report using the created ER expression.","pos":[34274,34365]},{"content":"<ph id=\"ph1\">\n&lt;a href=\"./media/ger-listoffields-function-in-format-expression.png\"&gt;</ph><ph id=\"ph2\">&lt;img src=\"./media/ger-listoffields-function-in-format-expression-e1474546110395.png\" alt=\"GER LISTOFFIELDS function - in format expression\" class=\"alignnone wp-image-1204033 size-full\" width=\"549\" height=\"318\" /&gt;</ph><ph id=\"ph3\">&lt;/a&gt;</ph> The following example shows the ER format elements that are bound to the data source of record list type that was created using the LISTOFFIELDS function.<ph id=\"ph4\">&lt;a href=\"./media/ger-listoffields-function-format-design.png\"&gt;</ph><ph id=\"ph5\">&lt;img src=\"./media/ger-listoffields-function-format-design.png\" alt=\"GER LISTOFFIELDS function - format design\" class=\"alignnone size-full wp-image-1204043\" width=\"466\" height=\"221\" /&gt;</ph><ph id=\"ph6\">&lt;/a&gt;</ph>This is the result of the designed format execution.<ph id=\"ph7\">&lt;a href=\"./media/ger-listoffields-function-format-output.png\"&gt;</ph><ph id=\"ph8\">&lt;img src=\"./media/ger-listoffields-function-format-output.png\" alt=\"GER LISTOFFIELDS function - format output\" class=\"alignnone size-full wp-image-1204053\" width=\"585\" height=\"158\" /&gt;</ph><ph id=\"ph9\">&lt;/a&gt;</ph><bpt id=\"p1\">&lt;strong&gt;</bpt>Note:<ept id=\"p1\">&lt;/strong&gt;</ept> Translated text for labels and descriptions is populated to ER format output in accordance with the language settings configured for parent FILE and FOLDER format elements.","pos":[34376,35562],"source":"\n<a href=\"./media/ger-listoffields-function-in-format-expression.png\"><img src=\"./media/ger-listoffields-function-in-format-expression-e1474546110395.png\" alt=\"GER LISTOFFIELDS function - in format expression\" class=\"alignnone wp-image-1204033 size-full\" width=\"549\" height=\"318\" /></a> The following example shows the ER format elements that are bound to the data source of record list type that was created using the LISTOFFIELDS function.<a href=\"./media/ger-listoffields-function-format-design.png\"><img src=\"./media/ger-listoffields-function-format-design.png\" alt=\"GER LISTOFFIELDS function - format design\" class=\"alignnone size-full wp-image-1204043\" width=\"466\" height=\"221\" /></a>This is the result of the designed format execution.<a href=\"./media/ger-listoffields-function-format-output.png\"><img src=\"./media/ger-listoffields-function-format-output.png\" alt=\"GER LISTOFFIELDS function - format output\" class=\"alignnone size-full wp-image-1204053\" width=\"585\" height=\"158\" /></a><strong>Note:</strong> Translated text for labels and descriptions is populated to ER format output in accordance with the language settings configured for parent FILE and FOLDER format elements."},{"content":"STRINGJOIN (list, field name, delimiter)","pos":[35595,35635]},{"content":"Returns the string of concatenated values of a field from a list separated with a selected delimiter.","pos":[35645,35746]},{"content":"If you entered SPLIT(“abc” , 1) as a data source DS, expression STRINGJOIN (DS, DS.Value, “:”) returns “a:b:c”","pos":[35756,35866]},{"content":"SPLITLISTBYLIMIT (list, limit value, limit source)","pos":[35900,35950]},{"content":"Splits the given list into a new list of sub-lists and returns the result in record list content.","pos":[35960,36057]},{"content":"The limit value parameter specifies the value of the limit to split the origin list.","pos":[36058,36142]},{"content":"The limit source parameter specifies the step which the total sum is increased on.","pos":[36143,36225]},{"content":"The limit is not applied to a single item of the given list when the limit source exceeds the defined limit.","pos":[36226,36334]},{"content":"The following example shows the sample format using data sources.","pos":[36344,36409]},{"content":"<ph id=\"ph1\">&lt;a href=\"./media/ger-splitlistbylimit-format.png\"&gt;</ph><ph id=\"ph2\">&lt;img src=\"./media/ger-splitlistbylimit-format.png\" alt=\"GER SPLITLISTBYLIMIT - format\" class=\"alignnone size-full wp-image-1204063\" width=\"396\" height=\"195\" /&gt;</ph><ph id=\"ph3\">&lt;/a&gt;</ph><ph id=\"ph4\">&lt;a href=\"./media/ger-splitlistbylimit-datasources.png\"&gt;</ph><ph id=\"ph5\">&lt;img src=\"./media/ger-splitlistbylimit-datasources.png\" alt=\"GER SPLITLISTBYLIMIT - datasources\" class=\"alignnone size-full wp-image-1204073\" width=\"320\" height=\"208\" /&gt;</ph><ph id=\"ph6\">&lt;/a&gt;</ph>This is the result format execution that presents the flat list of commodity items.<ph id=\"ph7\">&lt;a href=\"./media/ger-splitlistbylimit-output.png\"&gt;</ph><ph id=\"ph8\">&lt;img src=\"./media/ger-splitlistbylimit-output.png\" alt=\"GER SPLITLISTBYLIMIT - output\" class=\"alignnone size-full wp-image-1204083\" width=\"462\" height=\"204\" /&gt;</ph><ph id=\"ph9\">&lt;/a&gt;</ph>The following example shows the same format that was adjusted to present the list of commodity items in batches when a single batch must include commodities with the total weight that should not exceed the limit of 9.<ph id=\"ph10\">&lt;a href=\"./media/ger-splitlistbylimit-format-1.png\"&gt;</ph><ph id=\"ph11\">&lt;img src=\"./media/ger-splitlistbylimit-format-1.png\" alt=\"GER SPLITLISTBYLIMIT - format 1\" class=\"alignnone size-full wp-image-1204103\" width=\"466\" height=\"438\" /&gt;</ph><ph id=\"ph12\">&lt;/a&gt;</ph><ph id=\"ph13\">&lt;a href=\"./media/ger-splitlistbylimit-datasources-1.png\"&gt;</ph><ph id=\"ph14\">&lt;img src=\"./media/ger-splitlistbylimit-datasources-1.png\" alt=\"GER SPLITLISTBYLIMIT - datasources 1\" class=\"alignnone size-full wp-image-1204093\" width=\"645\" height=\"507\" /&gt;</ph><ph id=\"ph15\">&lt;/a&gt;</ph>This is the result of the adjusted format execution.","pos":[36410,37869],"source":"<a href=\"./media/ger-splitlistbylimit-format.png\"><img src=\"./media/ger-splitlistbylimit-format.png\" alt=\"GER SPLITLISTBYLIMIT - format\" class=\"alignnone size-full wp-image-1204063\" width=\"396\" height=\"195\" /></a><a href=\"./media/ger-splitlistbylimit-datasources.png\"><img src=\"./media/ger-splitlistbylimit-datasources.png\" alt=\"GER SPLITLISTBYLIMIT - datasources\" class=\"alignnone size-full wp-image-1204073\" width=\"320\" height=\"208\" /></a>This is the result format execution that presents the flat list of commodity items.<a href=\"./media/ger-splitlistbylimit-output.png\"><img src=\"./media/ger-splitlistbylimit-output.png\" alt=\"GER SPLITLISTBYLIMIT - output\" class=\"alignnone size-full wp-image-1204083\" width=\"462\" height=\"204\" /></a>The following example shows the same format that was adjusted to present the list of commodity items in batches when a single batch must include commodities with the total weight that should not exceed the limit of 9.<a href=\"./media/ger-splitlistbylimit-format-1.png\"><img src=\"./media/ger-splitlistbylimit-format-1.png\" alt=\"GER SPLITLISTBYLIMIT - format 1\" class=\"alignnone size-full wp-image-1204103\" width=\"466\" height=\"438\" /></a><a href=\"./media/ger-splitlistbylimit-datasources-1.png\"><img src=\"./media/ger-splitlistbylimit-datasources-1.png\" alt=\"GER SPLITLISTBYLIMIT - datasources 1\" class=\"alignnone size-full wp-image-1204093\" width=\"645\" height=\"507\" /></a>This is the result of the adjusted format execution."},{"content":"<ph id=\"ph1\">&lt;a href=\"./media/ger-splitlistbylimit-output-1.png\"&gt;</ph><ph id=\"ph2\">&lt;img src=\"./media/ger-splitlistbylimit-output-1.png\" alt=\"GER SPLITLISTBYLIMIT - output 1\" class=\"alignnone size-full wp-image-1204113\" width=\"676\" height=\"611\" /&gt;</ph><ph id=\"ph3\">&lt;/a&gt;</ph><bpt id=\"p1\">&lt;strong&gt;</bpt>Note:<ept id=\"p1\">&lt;/strong&gt;</ept> The limit is not applied to the last item of the origin list as the value (11) of its limit’s source (weight) exceeds the defined limit (9).","pos":[37870,38252],"source":"<a href=\"./media/ger-splitlistbylimit-output-1.png\"><img src=\"./media/ger-splitlistbylimit-output-1.png\" alt=\"GER SPLITLISTBYLIMIT - output 1\" class=\"alignnone size-full wp-image-1204113\" width=\"676\" height=\"611\" /></a><strong>Note:</strong> The limit is not applied to the last item of the origin list as the value (11) of its limit’s source (weight) exceeds the defined limit (9)."},{"content":"Use either the function <bpt id=\"p1\">&lt;strong&gt;</bpt>WHERE<ept id=\"p1\">&lt;/strong&gt;</ept> or the <bpt id=\"p2\">&lt;strong&gt;</bpt>Enabled<ept id=\"p2\">&lt;/strong&gt;</ept> expression of the corresponding format element to ignore (skip) sub-lists during the report generation (if needed).","pos":[38253,38447],"source":" Use either the function <strong>WHERE</strong> or the <strong>Enabled</strong> expression of the corresponding format element to ignore (skip) sub-lists during the report generation (if needed)."},{"content":"FILTER (list, condition)","pos":[38480,38504]},{"content":"Returns the given list filtered for the specified condition by modifying the query.","pos":[38514,38597]},{"content":"Unlike the <bpt id=\"p1\">&lt;strong&gt;</bpt>WHERE<ept id=\"p1\">&lt;/strong&gt;</ept> function, the specified condition is applied at the database level to any ER data source of the Table records type.","pos":[38598,38747],"source":" Unlike the <strong>WHERE</strong> function, the specified condition is applied at the database level to any ER data source of the Table records type."},{"content":"FILTER (Vendors, Vendors.VendGroup = <ph id=\"ph1\">&amp;quot;</ph>40<ph id=\"ph2\">&amp;quot;</ph>) returns the list of only vendors belonging to the vendors’ group “40” when <bpt id=\"p1\">&lt;strong&gt;</bpt>Vendor<ept id=\"p1\">&lt;/strong&gt;</ept> is configured as ER data source referring to the <bpt id=\"p2\">&lt;strong&gt;</bpt>VendTable<ept id=\"p2\">&lt;/strong&gt;</ept> table","pos":[38757,38990],"source":"FILTER (Vendors, Vendors.VendGroup = &quot;40&quot;) returns the list of only vendors belonging to the vendors’ group “40” when <strong>Vendor</strong> is configured as ER data source referring to the <strong>VendTable</strong> table"},{"pos":[39025,39042],"content":"Logical functions","linkify":"Logical functions","nodes":[{"content":"Logical functions","pos":[0,17]}]},{"content":"Function","pos":[39046,39054]},{"content":"Description","pos":[39136,39147]},{"content":"Example","pos":[39410,39417]},{"content":"CASE (expression, option 1, result 1 <ph id=\"ph1\">\\[</ph>, option 2, result 2<ph id=\"ph2\">\\]</ph> ... <ph id=\"ph3\">\\[</ph>, default result<ph id=\"ph4\">\\]</ph>)","pos":[40288,40375],"source":"CASE (expression, option 1, result 1 \\[, option 2, result 2\\] ... \\[, default result\\])"},{"content":"Evaluate the specified expression value against the specified alternative options.","pos":[40378,40460]},{"content":"Return the result of the option that is equal to the value of the expression.","pos":[40461,40538]},{"content":"Otherwise, return the optionally entered default result (the last parameter that isn't preceded by an option).","pos":[40539,40649]},{"content":"<bpt id=\"p1\">**</bpt>CASE( DATETIMEFORMAT( NOW(), \"MM\"), \"10\", \"WINTER\", \"11\", \"WINTER\", \"12\", \"WINTER\", \"\")<ept id=\"p1\">**</ept> returns the string <bpt id=\"p2\">**</bpt>\"WINTER\"<ept id=\"p2\">**</ept> when the current Dynamics 365 for Operations session date is between October and December.","pos":[40652,40866],"source":"**CASE( DATETIMEFORMAT( NOW(), \"MM\"), \"10\", \"WINTER\", \"11\", \"WINTER\", \"12\", \"WINTER\", \"\")** returns the string **\"WINTER\"** when the current Dynamics 365 for Operations session date is between October and December."},{"content":"Otherwise, it returns a blank string.","pos":[40867,40904]},{"content":"IF (condition, value 1, value 2)","pos":[40909,40941]},{"content":"Return the specified value 1 when the given condition is met.","pos":[40999,41060]},{"content":"Otherwise, return value 2.","pos":[41061,41087]},{"content":"If value 1 and value 2 are records or record lists, the result will have only the fields that exist in both lists.","pos":[41088,41202]},{"pos":[41273,41376],"content":"<bpt id=\"p1\">**</bpt>IF (1=2, \"condition is met\", \"condition is not met\")<ept id=\"p1\">**</ept> returns the string <bpt id=\"p2\">**</bpt>\"condition is not met\"<ept id=\"p2\">**</ept>.","source":"**IF (1=2, \"condition is met\", \"condition is not met\")** returns the string **\"condition is not met\"**."},{"content":"NOT (condition)","pos":[41530,41545]},{"content":"Return the reversed logical value of the specified condition.","pos":[41620,41681]},{"pos":[41894,41927],"content":"<bpt id=\"p1\">**</bpt>NOT (TRUE)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","source":"**NOT (TRUE)** returns **FALSE**."},{"content":"AND (condition 1<ph id=\"ph1\">\\[</ph>, condition 2, ...<ph id=\"ph2\">\\]</ph>)","pos":[42151,42190],"source":"AND (condition 1\\[, condition 2, ...\\])"},{"content":"Return <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if <bpt id=\"p2\">*</bpt>all<ept id=\"p2\">*</ept> specified conditions are true.","pos":[42241,42296],"source":"Return **TRUE** if *all* specified conditions are true."},{"content":"Otherwise, return <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[42297,42325],"source":" Otherwise, return **FALSE**."},{"content":"<bpt id=\"p1\">**</bpt>AND (1=1, \"a\"=\"a\")<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>TRUE<ept id=\"p2\">**</ept>.","pos":[42515,42555],"source":"**AND (1=1, \"a\"=\"a\")** returns **TRUE**."},{"content":"<bpt id=\"p1\">**</bpt>AND (1=2, \"a\"=\"a\")<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","pos":[42556,42597],"source":"**AND (1=2, \"a\"=\"a\")** returns **FALSE**."},{"content":"OR (condition 1<ph id=\"ph1\">\\[</ph>, condition 2, ...<ph id=\"ph2\">\\]</ph>)","pos":[42772,42810],"source":"OR (condition 1\\[, condition 2, ...\\])"},{"content":"Return <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if <bpt id=\"p2\">*</bpt>all<ept id=\"p2\">*</ept> specified conditions are false.","pos":[42862,42919],"source":"Return **FALSE** if *all* specified conditions are false."},{"content":"Return <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if <bpt id=\"p2\">*</bpt>any<ept id=\"p2\">*</ept> specified condition is true.","pos":[42920,42973],"source":" Return **TRUE** if *any* specified condition is true."},{"pos":[43136,43175],"content":"<bpt id=\"p1\">**</bpt>OR (1=2, \"a\"=\"a\")<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>TRUE<ept id=\"p2\">**</ept>.","source":"**OR (1=2, \"a\"=\"a\")** returns **TRUE**."},{"pos":[43396,43418],"content":"Mathematical functions","linkify":"Mathematical functions","nodes":[{"content":"Mathematical functions","pos":[0,22]}]},{"content":"Function","pos":[43543,43551]},{"content":"Description","pos":[43561,43572]},{"content":"Example","pos":[43582,43589]},{"content":"ABS (number)","pos":[43639,43651]},{"content":"Return the absolute value of the specified number (the number without its sign).","pos":[43661,43741]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>ABS (-1)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt>1<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[43751,43804],"source":"<strong>ABS (-1)</strong> returns <strong>1</strong>."},{"content":"POWER (number, power)","pos":[43838,43859]},{"content":"Return the result of raising the specified positive number to the specified power.","pos":[43869,43951]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>POWER (10, 2)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt>100<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[43961,44021],"source":"<strong>POWER (10, 2)</strong> returns <strong>100</strong>."},{"content":"NUMBERVALUE (string, decimal separator, digit grouping separator)","pos":[44054,44119]},{"content":"Convert the specified string to a number.","pos":[44129,44170]},{"content":"The specified symbol is used to separate the integer and fractional parts of a decimal number, and the specified thousands separator is also used.","pos":[44171,44317]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>NUMBERVALUE(<ph id=\"ph1\">&amp;quot;</ph>1 234,56<ph id=\"ph2\">&amp;quot;</ph>, <ph id=\"ph3\">&amp;quot;</ph>,<ph id=\"ph4\">&amp;quot;</ph>, <ph id=\"ph5\">&amp;quot;</ph> <ph id=\"ph6\">&amp;quot;</ph>)<ept id=\"p1\">&lt;/strong&gt;</ept> returns the value <bpt id=\"p2\">&lt;strong&gt;</bpt>1234.56<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[44327,44451],"source":"<strong>NUMBERVALUE(&quot;1 234,56&quot;, &quot;,&quot;, &quot; &quot;)</strong> returns the value <strong>1234.56</strong>."},{"content":"VALUE (string)","pos":[44485,44499]},{"content":"Convert the specified string to a number.","pos":[44509,44550]},{"content":"Commas and dot characters (.) are considered decimal separators, and a leading hyphen (-) is used as negative sign.","pos":[44551,44666]},{"content":"Throw an exception if other non-numeric characters are encountered in the specified string.","pos":[44667,44758]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>VALUE (<ph id=\"ph1\">&amp;quot;</ph>1 234,56<ph id=\"ph2\">&amp;quot;</ph>)<ept id=\"p1\">&lt;/strong&gt;</ept> throws an exception.","pos":[44768,44834],"source":"<strong>VALUE (&quot;1 234,56&quot;)</strong> throws an exception."},{"content":"ROUND (number, decimals)","pos":[44867,44891]},{"content":"Return the specified number, which is rounded to the specified number of decimal places:","pos":[44901,44989],"source":"Return the specified number, which is rounded to the specified number of decimal places:\n"},{"content":"If the specified decimals value is more than 0 (zero), the specified number is rounded to the specified number of decimal places.","pos":[44999,45128]},{"content":"If the specified decimals value is 0 (zero), the specified number is rounded to the nearest integer.","pos":[45138,45238]},{"content":"If the specified decimals value is less than 0 (zero), the specified number is rounded to the left of the decimal point.","pos":[45248,45368]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>ROUND (1200.767, 2)<ept id=\"p1\">&lt;/strong&gt;</ept> rounds to two decimal places and returns <bpt id=\"p2\">&lt;strong&gt;</bpt>1200.77<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[45389,45492],"source":"<strong>ROUND (1200.767, 2)</strong> rounds to two decimal places and returns <strong>1200.77</strong>."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>ROUND (1200.767, -3)<ept id=\"p1\">&lt;/strong&gt;</ept> rounds to the nearest multiple of 1,000 and returns <bpt id=\"p2\">&lt;strong&gt;</bpt>1000<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[45493,45605],"source":"<strong>ROUND (1200.767, -3)</strong> rounds to the nearest multiple of 1,000 and returns <strong>1000</strong>."},{"content":"ROUNDDOWN (number, decimals)","pos":[45639,45667]},{"content":"Return the specified number, which is rounded down (toward zero) to the specified number of decimal places.","pos":[45677,45784]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Note:<ept id=\"p1\">&lt;/strong&gt;</ept> This function behaves like <bpt id=\"p2\">&lt;strong&gt;</bpt>ROUND<ept id=\"p2\">&lt;/strong&gt;</ept>, but it always rounds the specified number down.","pos":[45785,45906],"source":"<strong>Note:</strong> This function behaves like <strong>ROUND</strong>, but it always rounds the specified number down."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>ROUNDDOWN (1200.767, 2)<ept id=\"p1\">&lt;/strong&gt;</ept> rounds down to two decimal places and returns <bpt id=\"p2\">&lt;strong&gt;</bpt>1200.76<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[45916,46028],"source":"<strong>ROUNDDOWN (1200.767, 2)</strong> rounds down to two decimal places and returns <strong>1200.76</strong>."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>ROUNDDOWN (1700.767, -3)<ept id=\"p1\">&lt;/strong&gt;</ept> rounds down to the nearest multiple of 1,000 and returns <bpt id=\"p2\">&lt;strong&gt;</bpt>1000<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[46029,46150],"source":"<strong>ROUNDDOWN (1700.767, -3)</strong> rounds down to the nearest multiple of 1,000 and returns <strong>1000</strong>."},{"content":"ROUNDUP (number, decimals)","pos":[46183,46209]},{"content":"Return the specified number, which is rounded up (away from zero) to the specified number of decimal places.","pos":[46219,46327]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Note:<ept id=\"p1\">&lt;/strong&gt;</ept> This function behaves like <bpt id=\"p2\">&lt;strong&gt;</bpt>ROUND<ept id=\"p2\">&lt;/strong&gt;</ept>, but it always rounds the specified number up.","pos":[46328,46447],"source":"<strong>Note:</strong> This function behaves like <strong>ROUND</strong>, but it always rounds the specified number up."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>ROUNDUP (1200.763, 2)<ept id=\"p1\">&lt;/strong&gt;</ept> rounds up to two decimal places and returns <bpt id=\"p2\">&lt;strong&gt;</bpt>1200.77<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[46457,46565],"source":"<strong>ROUNDUP (1200.763, 2)</strong> rounds up to two decimal places and returns <strong>1200.77</strong>."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>ROUNDUP (1200.767, -3)<ept id=\"p1\">&lt;/strong&gt;</ept> rounds up to the nearest multiple of 1,000 and returns <bpt id=\"p2\">&lt;strong&gt;</bpt>2000<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[46566,46683],"source":"<strong>ROUNDUP (1200.767, -3)</strong> rounds up to the nearest multiple of 1,000 and returns <strong>2000</strong>."},{"pos":[46718,46734],"content":"Record functions","linkify":"Record functions","nodes":[{"content":"Record functions","pos":[0,16]}]},{"content":"Function","pos":[46738,46746]},{"content":"Description","pos":[46761,46772]},{"content":"Example","pos":[47003,47010]},{"content":"NULLCONTAINER (list)","pos":[47572,47592]},{"content":"Return a <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept> record that has the same structure as the specified record list or record.","pos":[47595,47687],"source":"Return a **null** record that has the same structure as the specified record list or record."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> This function is obsolete.","pos":[47688,47724],"source":"**Note:** This function is obsolete."},{"content":"Use <bpt id=\"p1\">**</bpt>EMPTYRECORD<ept id=\"p1\">**</ept> instead.","pos":[47725,47753],"source":" Use **EMPTYRECORD** instead."},{"pos":[47837,47984],"content":"<bpt id=\"p1\">**</bpt>NULLCONTAINER (SPLIT (\"abc\", 1))<ept id=\"p1\">**</ept> returns a new empty record that has the same structure as the list that is returned by the <bpt id=\"p2\">**</bpt>SPLIT<ept id=\"p2\">**</ept> function.","source":"**NULLCONTAINER (SPLIT (\"abc\", 1))** returns a new empty record that has the same structure as the list that is returned by the **SPLIT** function."},{"content":"EMPTYRECORD (record)","pos":[47989,48009]},{"content":"Return a <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept> record that has the same structure as the specified record list or record.","pos":[48012,48104],"source":"Return a **null** record that has the same structure as the specified record list or record."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> A <bpt id=\"p2\">**</bpt>null<ept id=\"p2\">**</ept> record is a record where all fields have an empty value (<bpt id=\"p3\">**</bpt>0<ept id=\"p3\">**</ept> <ph id=\"ph1\">\\[</ph>zero<ph id=\"ph2\">\\]</ph> for numbers, an empty string for strings, and so on).","pos":[48105,48251],"source":"**Note:** A **null** record is a record where all fields have an empty value (**0** \\[zero\\] for numbers, an empty string for strings, and so on)."},{"pos":[48254,48399],"content":"<bpt id=\"p1\">**</bpt>EMPTYRECORD (SPLIT (\"abc\", 1))<ept id=\"p1\">**</ept> returns a new empty record that has the same structure as the list that is returned by the <bpt id=\"p2\">**</bpt>SPLIT<ept id=\"p2\">**</ept> function.","source":"**EMPTYRECORD (SPLIT (\"abc\", 1))** returns a new empty record that has the same structure as the list that is returned by the **SPLIT** function."},{"pos":[48409,48423],"content":"Text functions","linkify":"Text functions","nodes":[{"content":"Text functions","pos":[0,14]}]},{"content":"Function","pos":[48548,48556]},{"content":"Description","pos":[48566,48577]},{"content":"Example","pos":[48587,48594]},{"content":"UPPER (string)","pos":[48644,48658]},{"content":"Return the specified string, which is converted to uppercase letters.","pos":[48668,48737]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>UPPER(<ph id=\"ph1\">&amp;quot;</ph>Sample<ph id=\"ph2\">&amp;quot;</ph>)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph3\">&amp;quot;</ph>SAMPLE<ph id=\"ph4\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[48747,48834],"source":"<strong>UPPER(&quot;Sample&quot;)</strong> returns <strong>&quot;SAMPLE&quot;</strong>."},{"content":"LOWER (string)","pos":[48868,48882]},{"content":"Return the specified string, which is converted to lowercase letters.","pos":[48892,48961]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>LOWER (<ph id=\"ph1\">&amp;quot;</ph>Sample<ph id=\"ph2\">&amp;quot;</ph>)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph3\">&amp;quot;</ph>sample<ph id=\"ph4\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[48971,49059],"source":"<strong>LOWER (&quot;Sample&quot;)</strong> returns <strong>&quot;sample&quot;</strong>."},{"content":"LEFT (string, number of characters)","pos":[49092,49127]},{"content":"Return the specified number of characters from the start of the specified string.","pos":[49137,49218]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>LEFT (<ph id=\"ph1\">&amp;quot;</ph>Sample<ph id=\"ph2\">&amp;quot;</ph>, 3)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph3\">&amp;quot;</ph>Sam<ph id=\"ph4\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[49228,49315],"source":"<strong>LEFT (&quot;Sample&quot;, 3)</strong> returns <strong>&quot;Sam&quot;</strong>."},{"content":"RIGHT (string, number of characters)","pos":[49349,49385]},{"content":"Return the specified number of characters from the end of the specified string.","pos":[49395,49474]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>RIGHT (<ph id=\"ph1\">&amp;quot;</ph>Sample<ph id=\"ph2\">&amp;quot;</ph>, 3)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph3\">&amp;quot;</ph>ple<ph id=\"ph4\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[49484,49572],"source":"<strong>RIGHT (&quot;Sample&quot;, 3)</strong> returns <strong>&quot;ple&quot;</strong>."},{"content":"MID (string, starting position, number of characters)","pos":[49605,49658]},{"content":"Return the specified number of characters from the specified string, starting at the specified position.","pos":[49668,49772]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>MID (<ph id=\"ph1\">&amp;quot;</ph>Sample<ph id=\"ph2\">&amp;quot;</ph>, 2, 3)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph3\">&amp;quot;</ph>amp<ph id=\"ph4\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[49782,49871],"source":"<strong>MID (&quot;Sample&quot;, 2, 3)</strong> returns <strong>&quot;amp&quot;</strong>."},{"content":"LEN (string)","pos":[49905,49917]},{"content":"Return the number of characters in the specified string.","pos":[49927,49983]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>LEN (<ph id=\"ph1\">&amp;quot;</ph>Sample<ph id=\"ph2\">&amp;quot;</ph>)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt>6<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[49993,50062],"source":"<strong>LEN (&quot;Sample&quot;)</strong> returns <strong>6</strong>."},{"content":"CHAR (number)","pos":[50095,50108]},{"content":"Return the string of characters that is referenced by the specified Unicode number.","pos":[50118,50201]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>CHAR (255)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph1\">&amp;quot;</ph>ÿ<ph id=\"ph2\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[50211,50278],"source":"<strong>CHAR (255)</strong> returns <strong>&quot;ÿ&quot;</strong>."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Note:<ept id=\"p1\">&lt;/strong&gt;</ept> The returned string depends on the encoding that is selected in the parent FILE format element.","pos":[50279,50397],"source":"<strong>Note:</strong> The returned string depends on the encoding that is selected in the parent FILE format element."},{"content":"The list of supported encodings can be found in the <bpt id=\"p1\">&lt;a href=\"https://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\"&gt;</bpt>Encoding Class<ept id=\"p1\">&lt;/a&gt;</ept> topic.","pos":[50398,50562],"source":" The list of supported encodings can be found in the <a href=\"https://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\">Encoding Class</a> topic."},{"content":"CONCATENATE (string 1 [, string 2, …])","pos":[50596,50634]},{"content":"Return all specified text strings, which are joined into one string.","pos":[50644,50712]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>CONCATENATE (<ph id=\"ph1\">&amp;quot;</ph>abc<ph id=\"ph2\">&amp;quot;</ph>, <ph id=\"ph3\">&amp;quot;</ph>def<ph id=\"ph4\">&amp;quot;</ph>)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph5\">&amp;quot;</ph>abcdef<ph id=\"ph6\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[50722,50830],"source":"<strong>CONCATENATE (&quot;abc&quot;, &quot;def&quot;)</strong> returns <strong>&quot;abcdef&quot;</strong>."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Note:<ept id=\"p1\">&lt;/strong&gt;</ept> The expression <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph1\">&amp;quot;</ph>abc<ph id=\"ph2\">&amp;quot;</ph> <ph id=\"ph3\">&amp;amp;</ph> <ph id=\"ph4\">&amp;quot;</ph>def<ph id=\"ph5\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept> also returns <bpt id=\"p3\">&lt;strong&gt;</bpt><ph id=\"ph6\">&amp;quot;</ph>abcdef<ph id=\"ph7\">&amp;quot;</ph><ept id=\"p3\">&lt;/strong&gt;</ept>.","pos":[50831,50973],"source":"<strong>Note:</strong> The expression <strong>&quot;abc&quot; &amp; &quot;def&quot;</strong> also returns <strong>&quot;abcdef&quot;</strong>."},{"content":"TRANSLATE (string, pattern, replacement)","pos":[51006,51046]},{"content":"Return the specified string, in which all occurrences of the characters in the specified pattern string are replaced by the characters at the corresponding position of the specified replacement string.","pos":[51056,51257]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>TRANSLATE (<ph id=\"ph1\">&amp;quot;</ph>abcdef<ph id=\"ph2\">&amp;quot;</ph>, <ph id=\"ph3\">&amp;quot;</ph>cd<ph id=\"ph4\">&amp;quot;</ph>, <ph id=\"ph5\">&amp;quot;</ph>GH<ph id=\"ph6\">&amp;quot;</ph>)<ept id=\"p1\">&lt;/strong&gt;</ept> replaces the pattern <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph7\">&amp;quot;</ph>cd<ph id=\"ph8\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept> with the string <bpt id=\"p3\">&lt;strong&gt;</bpt><ph id=\"ph9\">&amp;quot;</ph>GH<ph id=\"ph10\">&amp;quot;</ph><ept id=\"p3\">&lt;/strong&gt;</ept> and returns <bpt id=\"p4\">&lt;strong&gt;</bpt><ph id=\"ph11\">&amp;quot;</ph>abGHef<ph id=\"ph12\">&amp;quot;</ph><ept id=\"p4\">&lt;/strong&gt;</ept>.","pos":[51267,51496],"source":"<strong>TRANSLATE (&quot;abcdef&quot;, &quot;cd&quot;, &quot;GH&quot;)</strong> replaces the pattern <strong>&quot;cd&quot;</strong> with the string <strong>&quot;GH&quot;</strong> and returns <strong>&quot;abGHef&quot;</strong>."},{"content":"REPLACE (string, pattern, replacement, regular expression flag)","pos":[51530,51593]},{"content":"When the specified regular expression flag is <bpt id=\"p1\">&lt;strong&gt;</bpt>true<ept id=\"p1\">&lt;/strong&gt;</ept>, return the specified string, which is modified by applying the regular expression that is specified as a pattern argument for this function.","pos":[51603,51812],"source":"When the specified regular expression flag is <strong>true</strong>, return the specified string, which is modified by applying the regular expression that is specified as a pattern argument for this function."},{"content":"This expression is used to find characters that must be replaced.","pos":[51813,51878]},{"content":"Characters of the specified replacement argument are used to replace characters that are found.","pos":[51879,51974]},{"content":"When the specified regular expression flag is <bpt id=\"p1\">&lt;strong&gt;</bpt>false<ept id=\"p1\">&lt;/strong&gt;</ept>, this function behaves like <bpt id=\"p2\">&lt;strong&gt;</bpt>TRANSLATE<ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[51975,52099],"source":" When the specified regular expression flag is <strong>false</strong>, this function behaves like <strong>TRANSLATE</strong>."},{"content":"<bpt id=\"p1\">  &lt;strong&gt;</bpt>REPLACE (<ph id=\"ph1\">&amp;quot;</ph>+1 923 456 4971<ph id=\"ph2\">&amp;quot;</ph>, <ph id=\"ph3\">&amp;quot;</ph>[^0-9]<ph id=\"ph4\">&amp;quot;</ph>, <ph id=\"ph5\">&amp;quot;</ph><ph id=\"ph6\">&amp;quot;</ph>, true)<ept id=\"p1\">&lt;/strong&gt;</ept> applies a regular expression that removes all non-numeric symbols, and returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph7\">&amp;quot;</ph>19234564971<ph id=\"ph8\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[52109,52326],"source":"  <strong>REPLACE (&quot;+1 923 456 4971&quot;, &quot;[^0-9]&quot;, &quot;&quot;, true)</strong> applies a regular expression that removes all non-numeric symbols, and returns <strong>&quot;19234564971&quot;</strong>."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>REPLACE (<ph id=\"ph1\">&amp;quot;</ph>abcdef<ph id=\"ph2\">&amp;quot;</ph>, <ph id=\"ph3\">&amp;quot;</ph>cd<ph id=\"ph4\">&amp;quot;</ph>, <ph id=\"ph5\">&amp;quot;</ph>GH<ph id=\"ph6\">&amp;quot;</ph>, false)<ept id=\"p1\">&lt;/strong&gt;</ept> replaces the pattern <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph7\">&amp;quot;</ph>cd<ph id=\"ph8\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept> with the string <bpt id=\"p3\">&lt;strong&gt;</bpt><ph id=\"ph9\">&amp;quot;</ph>GH<ph id=\"ph10\">&amp;quot;</ph><ept id=\"p3\">&lt;/strong&gt;</ept> and returns <bpt id=\"p4\">&lt;strong&gt;</bpt><ph id=\"ph11\">&amp;quot;</ph>abGHef<ph id=\"ph12\">&amp;quot;</ph><ept id=\"p4\">&lt;/strong&gt;</ept>.","pos":[52327,52561],"source":"<strong>REPLACE (&quot;abcdef&quot;, &quot;cd&quot;, &quot;GH&quot;, false)</strong> replaces the pattern <strong>&quot;cd&quot;</strong> with the string <strong>&quot;GH&quot;</strong> and returns <strong>&quot;abGHef&quot;</strong>."},{"content":"TEXT (input)","pos":[52594,52606]},{"content":"Return the specified input, which is converted to a text string that is formatted according to the server locale settings of the current Dynamics 365 for Operations instance.","pos":[52616,52790]},{"content":"For values of the <bpt id=\"p1\">&lt;strong&gt;</bpt>real<ept id=\"p1\">&lt;/strong&gt;</ept> type, the string conversion is limited to two decimal places.","pos":[52791,52892],"source":" For values of the <strong>real</strong> type, the string conversion is limited to two decimal places."},{"content":"If the Dynamics 365 for Operations instance server locale is defined as <bpt id=\"p1\">&lt;strong&gt;</bpt>EN-US<ept id=\"p1\">&lt;/strong&gt;</ept>, <bpt id=\"p2\">&lt;strong&gt;</bpt>TEXT (NOW ())<ept id=\"p2\">&lt;/strong&gt;</ept> returns the current Dynamics 365 for Operations session date, 12/17/2015, as the text string <bpt id=\"p3\">&lt;strong&gt;</bpt><ph id=\"ph1\">&amp;quot;</ph>12/17/2015 07:59:23 AM<ph id=\"ph2\">&amp;quot;</ph><ept id=\"p3\">&lt;/strong&gt;</ept>.","pos":[52902,53174],"source":"If the Dynamics 365 for Operations instance server locale is defined as <strong>EN-US</strong>, <strong>TEXT (NOW ())</strong> returns the current Dynamics 365 for Operations session date, 12/17/2015, as the text string <strong>&quot;12/17/2015 07:59:23 AM&quot;</strong>."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>TEXT (1/3)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph1\">&amp;quot;</ph>0.33<ph id=\"ph2\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[53175,53245],"source":"<strong>TEXT (1/3)</strong> returns <strong>&quot;0.33&quot;</strong>."},{"content":"FORMAT (string 1, string 2[, string 3, ...])","pos":[53279,53323]},{"content":"Return the specified string, which is formatted by substituting any occurrences of <bpt id=\"p1\">&lt;strong&gt;</bpt>%N<ept id=\"p1\">&lt;/strong&gt;</ept> with the <bpt id=\"p2\">&lt;em&gt;</bpt>n<ept id=\"p2\">&lt;/em&gt;</ept>th argument.","pos":[53333,53467],"source":"Return the specified string, which is formatted by substituting any occurrences of <strong>%N</strong> with the <em>n</em>th argument."},{"content":"The arguments are strings.","pos":[53468,53494]},{"content":"If an argument isn't provided for a parameter, the parameter is returned as <bpt id=\"p1\">&lt;strong&gt;</bpt><ph id=\"ph1\">&amp;quot;</ph>%N<ph id=\"ph2\">&amp;quot;</ph><ept id=\"p1\">&lt;/strong&gt;</ept> in the string.","pos":[53495,53617],"source":" If an argument isn't provided for a parameter, the parameter is returned as <strong>&quot;%N&quot;</strong> in the string."},{"content":"For values of the <bpt id=\"p1\">&lt;strong&gt;</bpt>real<ept id=\"p1\">&lt;/strong&gt;</ept> type, the string conversion is limited to two decimal places.","pos":[53618,53719],"source":" For values of the <strong>real</strong> type, the string conversion is limited to two decimal places."},{"content":"In this example, the <bpt id=\"p1\">&lt;strong&gt;</bpt>PaymentModel<ept id=\"p1\">&lt;/strong&gt;</ept> data source returns the list of customer records via the <bpt id=\"p2\">&lt;strong&gt;</bpt>Customer<ept id=\"p2\">&lt;/strong&gt;</ept> component and the processing date value via the <bpt id=\"p3\">&lt;strong&gt;</bpt>ProcessingDate<ept id=\"p3\">&lt;/strong&gt;</ept> field.","pos":[53729,53949],"source":"In this example, the <strong>PaymentModel</strong> data source returns the list of customer records via the <strong>Customer</strong> component and the processing date value via the <strong>ProcessingDate</strong> field."},{"content":"<ph id=\"ph1\">&lt;a href=\"./media/picture-format-datasource.jpg\"&gt;</ph><ph id=\"ph2\">&lt;img src=\"./media/picture-format-datasource.jpg\" alt=\"PaymentModel data source\" class=\"alignnone wp-image-290751 size-full\" width=\"293\" height=\"143\" /&gt;</ph><ph id=\"ph3\">&lt;/a&gt;</ph> In the ER format that is designed to generate an electronic file for selected customers, <bpt id=\"p1\">&lt;strong&gt;</bpt>PaymentModel<ept id=\"p1\">&lt;/strong&gt;</ept> is selected as a data source and controls the process flow.","pos":[53950,54332],"source":"<a href=\"./media/picture-format-datasource.jpg\"><img src=\"./media/picture-format-datasource.jpg\" alt=\"PaymentModel data source\" class=\"alignnone wp-image-290751 size-full\" width=\"293\" height=\"143\" /></a> In the ER format that is designed to generate an electronic file for selected customers, <strong>PaymentModel</strong> is selected as a data source and controls the process flow."},{"content":"An exception is thrown for end users when a selected customer is stopped for the date when the report is processed.","pos":[54333,54448]},{"content":"The formula that is designed for this type of processing control can use the following resources:","pos":[54449,54546],"source":" The formula that is designed for this type of processing control can use the following resources:\n"},{"content":"Dynamics 365 for Operations label SYS70894, which has the following text:","pos":[54556,54629],"source":"Dynamics 365 for Operations label SYS70894, which has the following text:\n"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>For the EN-US language:<ept id=\"p1\">&lt;/strong&gt;</ept> <ph id=\"ph1\">&amp;quot;</ph>Nothing to print<ph id=\"ph2\">&amp;quot;</ph>","pos":[54639,54708],"source":"<strong>For the EN-US language:</strong> &quot;Nothing to print&quot;"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>For the DE language:<ept id=\"p1\">&lt;/strong&gt;</ept> <ph id=\"ph1\">&amp;quot;</ph>Nichts zu drucken<ph id=\"ph2\">&amp;quot;</ph>","pos":[54718,54785],"source":"<strong>For the DE language:</strong> &quot;Nichts zu drucken&quot;"},{"content":"Dynamics 365 for Operations label SYS18389, which has the following text:","pos":[54806,54879],"source":"Dynamics 365 for Operations label SYS18389, which has the following text:\n"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>For the EN-US language:<ept id=\"p1\">&lt;/strong&gt;</ept> <ph id=\"ph1\">&amp;quot;</ph>Customer %1 is stopped for %2.<ph id=\"ph2\">&amp;quot;</ph>","pos":[54889,54972],"source":"<strong>For the EN-US language:</strong> &quot;Customer %1 is stopped for %2.&quot;"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>For the DE language:<ept id=\"p1\">&lt;/strong&gt;</ept> <ph id=\"ph1\">&amp;quot;</ph>Debitor '%1' wird für %2 gesperrt.<ph id=\"ph2\">&amp;quot;</ph>","pos":[54982,55066],"source":"<strong>For the DE language:</strong> &quot;Debitor '%1' wird für %2 gesperrt.&quot;"},{"content":"Here is the formula that can be designed: FORMAT (CONCATENATE <ph id=\"ph1\">(@</ph><ph id=\"ph2\">&amp;quot;</ph>SYS70894<ph id=\"ph3\">&amp;quot;</ph>, <ph id=\"ph4\">&amp;quot;</ph>.","pos":[55089,55182],"source":"\nHere is the formula that can be designed: FORMAT (CONCATENATE (@&quot;SYS70894&quot;, &quot;."},{"content":"<ph id=\"ph1\">&amp;quot;</ph>, <ph id=\"ph2\">@</ph><ph id=\"ph3\">&amp;quot;</ph>SYS18389<ph id=\"ph4\">&amp;quot;</ph>), model.Customer.Name, DATETIMEFORMAT (model.ProcessingDate, <ph id=\"ph5\">&amp;quot;</ph>d<ph id=\"ph6\">&amp;quot;</ph>)) If a report is processed for the <bpt id=\"p1\">&lt;strong&gt;</bpt>Litware Retail customer<ept id=\"p1\">&lt;/strong&gt;</ept> on December 17, 2015, in the <bpt id=\"p2\">&lt;strong&gt;</bpt>EN-US<ept id=\"p2\">&lt;/strong&gt;</ept> culture and the <bpt id=\"p3\">&lt;strong&gt;</bpt>EN-US<ept id=\"p3\">&lt;/strong&gt;</ept> language, this formula returns the following text, which can be presented as an exception message for the end user: <ph id=\"ph7\">&amp;quot;</ph>Nothing to print.","pos":[55183,55594],"source":"&quot;, @&quot;SYS18389&quot;), model.Customer.Name, DATETIMEFORMAT (model.ProcessingDate, &quot;d&quot;)) If a report is processed for the <strong>Litware Retail customer</strong> on December 17, 2015, in the <strong>EN-US</strong> culture and the <strong>EN-US</strong> language, this formula returns the following text, which can be presented as an exception message for the end user: &quot;Nothing to print."},{"content":"Customer Litware Retail is stopped for 12/17/2015.<ph id=\"ph1\">&amp;quot;</ph>","pos":[55595,55651],"source":" Customer Litware Retail is stopped for 12/17/2015.&quot;"},{"content":"If the same report is processed for the<bpt id=\"p1\">&lt;strong&gt;</bpt> Litware Retail customer<ept id=\"p1\">&lt;/strong&gt;</ept> on December 17, 2015, in the <bpt id=\"p2\">&lt;strong&gt;</bpt>DE<ept id=\"p2\">&lt;/strong&gt;</ept> culture and the <bpt id=\"p3\">&lt;strong&gt;</bpt>DE<ept id=\"p3\">&lt;/strong&gt;</ept> language, this formula returns the following text, which uses a different date format: <ph id=\"ph1\">&amp;quot;</ph>Nichts zu drucken.","pos":[55652,55929],"source":" If the same report is processed for the<strong> Litware Retail customer</strong> on December 17, 2015, in the <strong>DE</strong> culture and the <strong>DE</strong> language, this formula returns the following text, which uses a different date format: &quot;Nichts zu drucken."},{"content":"Debitor 'Litware Retail' wird für 17.12.2015 gesperrt.<ph id=\"ph1\">&amp;quot;</ph>","pos":[55930,55990],"source":" Debitor 'Litware Retail' wird für 17.12.2015 gesperrt.&quot;"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Note:<ept id=\"p1\">&lt;/strong&gt;</ept> The following syntax is applied in ER formulas for labels:","pos":[55991,56072],"source":"<strong>Note:</strong> The following syntax is applied in ER formulas for labels:\n"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>For labels from Dynamics 365 for Operations resources:<ept id=\"p1\">&lt;/strong&gt;</ept><bpt id=\"p2\"> &lt;strong&gt;</bpt><ph id=\"ph1\">@</ph><ph id=\"ph2\">&amp;quot;</ph>X<ph id=\"ph3\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>, where X is the label ID in the Application Object Tree (AOT)","pos":[56082,56247],"source":"<strong>For labels from Dynamics 365 for Operations resources:</strong> <strong>@&quot;X&quot;</strong>, where X is the label ID in the Application Object Tree (AOT)"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>For labels that reside in ER configurations:<ept id=\"p1\">&lt;/strong&gt;</ept><bpt id=\"p2\"> &lt;strong&gt;</bpt><ph id=\"ph1\">@</ph><ph id=\"ph2\">&amp;quot;</ph>ER_LABEL:X<ph id=\"ph3\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>, where X is the label ID in the ER configuration","pos":[56257,56408],"source":"<strong>For labels that reside in ER configurations:</strong> <strong>@&quot;ER_LABEL:X&quot;</strong>, where X is the label ID in the ER configuration"},{"content":"NUMBERFORMAT (number, format)","pos":[56452,56481]},{"content":"Return the string representation of the specified number in the specified format.","pos":[56491,56572]},{"content":"(For information about the supported formats, see <bpt id=\"p1\">&lt;a href=\"https://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx\"&gt;</bpt>standard<ept id=\"p1\">&lt;/a&gt;</ept> and <bpt id=\"p2\">&lt;a href=\"https://msdn.microsoft.com/en-us/library/0c899ak8(v=vs.110).aspx\"&gt;</bpt>custom<ept id=\"p2\">&lt;/a&gt;</ept>.) The context that this function is run in determines the culture that is used to format numbers.","pos":[56573,56898],"source":" (For information about the supported formats, see <a href=\"https://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx\">standard</a> and <a href=\"https://msdn.microsoft.com/en-us/library/0c899ak8(v=vs.110).aspx\">custom</a>.) The context that this function is run in determines the culture that is used to format numbers."},{"content":"For the EN-US culture, <bpt id=\"p1\">&lt;strong&gt;</bpt>NUMBERFORMAT (0.45, <ph id=\"ph1\">&amp;quot;</ph>p<ph id=\"ph2\">&amp;quot;</ph>)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph3\">&amp;quot;</ph>45.00 %<ph id=\"ph4\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[56908,57028],"source":"For the EN-US culture, <strong>NUMBERFORMAT (0.45, &quot;p&quot;)</strong> returns <strong>&quot;45.00 %&quot;</strong>."},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>NUMBERFORMAT (10.45, <ph id=\"ph1\">&amp;quot;</ph><ph id=\"ph2\">#</ph><ph id=\"ph3\">&amp;quot;</ph>)<ept id=\"p1\">&lt;/strong&gt;</ept> returns <bpt id=\"p2\">&lt;strong&gt;</bpt><ph id=\"ph4\">&amp;quot;</ph>10<ph id=\"ph5\">&amp;quot;</ph><ept id=\"p2\">&lt;/strong&gt;</ept>.","pos":[57029,57122],"source":"<strong>NUMBERFORMAT (10.45, &quot;#&quot;)</strong> returns <strong>&quot;10&quot;</strong>."},{"content":"NUMERALSTOTEXT (number, language, currency, print currency name flag, decimal points)","pos":[57156,57241]},{"content":"Returns the number spelled out (converted) to text strings in the defined language.","pos":[57251,57334]},{"content":"The language code is optional: when it is defined as empty string, the running context language code (defined for a generating folder or file) will be used instead.","pos":[57335,57499]},{"content":"The currency code is optional.","pos":[57500,57530]},{"content":"When it is defined as empty string, the company currency is taken.","pos":[57531,57597]},{"content":"Note, the <bpt id=\"p1\">&lt;strong&gt;</bpt>Print currency name<ept id=\"p1\">&lt;/strong&gt;</ept> parameter and the <bpt id=\"p2\">&lt;strong&gt;</bpt>Decimal points<ept id=\"p2\">&lt;/strong&gt;</ept> parameter are analyzed for the following language codes only: <bpt id=\"p3\">&lt;strong&gt;</bpt>CS<ept id=\"p3\">&lt;/strong&gt;</ept>, <bpt id=\"p4\">&lt;strong&gt;</bpt>ET<ept id=\"p4\">&lt;/strong&gt;</ept>, <bpt id=\"p5\">&lt;strong&gt;</bpt>HU<ept id=\"p5\">&lt;/strong&gt;</ept>, <bpt id=\"p6\">&lt;strong&gt;</bpt>LT<ept id=\"p6\">&lt;/strong&gt;</ept>, <bpt id=\"p7\">&lt;strong&gt;</bpt>LV<ept id=\"p7\">&lt;/strong&gt;</ept>, <bpt id=\"p8\">&lt;strong&gt;</bpt>PL<ept id=\"p8\">&lt;/strong&gt;</ept>, <bpt id=\"p9\">&lt;strong&gt;</bpt>RU<ept id=\"p9\">&lt;/strong&gt;</ept>.","pos":[57598,57903],"source":" Note, the <strong>Print currency name</strong> parameter and the <strong>Decimal points</strong> parameter are analyzed for the following language codes only: <strong>CS</strong>, <strong>ET</strong>, <strong>HU</strong>, <strong>LT</strong>, <strong>LV</strong>, <strong>PL</strong>, <strong>RU</strong>."},{"content":"Note, the <bpt id=\"p1\">&lt;strong&gt;</bpt>Print currency name<ept id=\"p1\">&lt;/strong&gt;</ept> parameter is analyzed for only Dynamics 365 for Operations companies with country's context that supports currency's declension.","pos":[57904,58079],"source":" Note, the <strong>Print currency name</strong> parameter is analyzed for only Dynamics 365 for Operations companies with country's context that supports currency's declension."},{"content":"NUMERALSTOTEXT (1234.56, <ph id=\"ph1\">&amp;quot;</ph>EN<ph id=\"ph2\">&amp;quot;</ph>, <ph id=\"ph3\">&amp;quot;</ph><ph id=\"ph4\">&amp;quot;</ph>, false, 2) returns “One Thousand Two Hundred Thirty Four and 56” NUMERALSTOTEXT (120, <ph id=\"ph5\">&amp;quot;</ph>PL<ph id=\"ph6\">&amp;quot;</ph>, <ph id=\"ph7\">&amp;quot;</ph><ph id=\"ph8\">&amp;quot;</ph>, false, 0) returns “Sto dwadzieścia” NUMERALSTOTEXT (120.21, <ph id=\"ph9\">&amp;quot;</ph>RU<ph id=\"ph10\">&amp;quot;</ph>, <ph id=\"ph11\">&amp;quot;</ph>EUR<ph id=\"ph12\">&amp;quot;</ph>, true, 2) returns “Сто двадцать евро 21 евроцент”","pos":[58089,58400],"source":"NUMERALSTOTEXT (1234.56, &quot;EN&quot;, &quot;&quot;, false, 2) returns “One Thousand Two Hundred Thirty Four and 56” NUMERALSTOTEXT (120, &quot;PL&quot;, &quot;&quot;, false, 0) returns “Sto dwadzieścia” NUMERALSTOTEXT (120.21, &quot;RU&quot;, &quot;EUR&quot;, true, 2) returns “Сто двадцать евро 21 евроцент”"},{"content":"PADLEFT (string, length, padding chars)","pos":[58433,58472]},{"content":"Returns a string of a specified length in which the beginning of the current string is padded with specified characters.","pos":[58482,58602]},{"content":"PADLEFT (“1234”, 10, “ “) returns the text string “      1234”","pos":[58612,58674]},{"pos":[58709,58734],"content":"Data collection functions","linkify":"Data collection functions","nodes":[{"content":"Data collection functions","pos":[0,25]}]},{"content":"Function","pos":[58736,58744]},{"content":"Description","pos":[58746,58757]},{"content":"Example","pos":[58759,58766]},{"content":"FORMATELEMENTNAME ()","pos":[58768,58788]},{"content":"Returns the name of the current format’s element.","pos":[58790,58839]},{"content":"Returns empty string when the flag <bpt id=\"p1\">**</bpt>Collect output details<ept id=\"p1\">**</ept> of the current files is turned off.","pos":[58840,58937],"source":" Returns empty string when the flag **Collect output details** of the current files is turned off."},{"pos":[58939,59146],"content":"Refer to the <bpt id=\"p1\">**</bpt>ER Use data of format output for counting and summing<ept id=\"p1\">**</ept> (part of the <bpt id=\"p2\">**</bpt>Acquire/Develop IT service/solution components<ept id=\"p2\">**</ept> business process) Task guide to learn more about these functions' usage.","source":"Refer to the **ER Use data of format output for counting and summing** (part of the **Acquire/Develop IT service/solution components** business process) Task guide to learn more about these functions' usage."},{"content":"SUMIFS (key string for summing, criteria range1 string, criteria value1 string <ph id=\"ph1\">\\[</ph>, criteria range2 string, criteria value2 string, …<ph id=\"ph2\">\\]</ph>)","pos":[59148,59283],"source":"SUMIFS (key string for summing, criteria range1 string, criteria value1 string \\[, criteria range2 string, criteria value2 string, …\\])"},{"content":"Returns a sum of values of nodes (with name defined as a key) of XML, which has been collected during this format execution and satisfies the entered conditions (pairs of range and value).","pos":[59285,59473]},{"content":"Returns zero value when the flag <bpt id=\"p1\">**</bpt>Collect output details<ept id=\"p1\">**</ept> of the current files is turned off.","pos":[59474,59569],"source":" Returns zero value when the flag **Collect output details** of the current files is turned off."},{"content":"SUMIF (key string for summing, criteria range string, criteria value string)","pos":[59571,59647]},{"content":"Returns a sum of values of nodes (with name defined as a key) of XML, which has been collected during this format execution and satisfies the entered condition (range and value).","pos":[59649,59827]},{"content":"Returns zero value when the flag <bpt id=\"p1\">**</bpt>Collect output details<ept id=\"p1\">**</ept> of the current files is turned off.","pos":[59828,59923],"source":" Returns zero value when the flag **Collect output details** of the current files is turned off."},{"content":"COUNTIFS (criteria range1 string, criteria value1 string <ph id=\"ph1\">\\[</ph>, criteria range2 string, criteria value2 string, …<ph id=\"ph2\">\\]</ph>)","pos":[59925,60038],"source":"COUNTIFS (criteria range1 string, criteria value1 string \\[, criteria range2 string, criteria value2 string, …\\])"},{"content":"Returns number of nodes of XML, which has been collected during this format execution and satisfies the entered conditions (pairs of range and value).","pos":[60040,60190]},{"content":"Returns zero value when the flag <bpt id=\"p1\">**</bpt>Collect output details<ept id=\"p1\">**</ept> of the current files is turned off.","pos":[60191,60286],"source":" Returns zero value when the flag **Collect output details** of the current files is turned off."},{"content":"COUNTIF (criteria range string, criteria value string)","pos":[60288,60342]},{"content":"Returns number of nodes of XML, which has been collected during this format execution and satisfies the entered condition (range and value).","pos":[60344,60484]},{"content":"Returns zero value when the flag <bpt id=\"p1\">**</bpt>Collect output details<ept id=\"p1\">**</ept> of the current files is turned off.","pos":[60485,60580],"source":" Returns zero value when the flag **Collect output details** of the current files is turned off."},{"content":"COLLECTEDLIST (criteria range1 string, criteria value1 string <ph id=\"ph1\">\\[</ph>, criteria range2 string, criteria value2 string, …<ph id=\"ph2\">\\]</ph>)","pos":[60582,60700],"source":"COLLECTEDLIST (criteria range1 string, criteria value1 string \\[, criteria range2 string, criteria value2 string, …\\])"},{"content":"Returns a list of values of nodes of XML, which has been collected during this format execution and satisfies the entered conditions (range and value).","pos":[60702,60853]},{"content":"Returns an empty list when the flag <bpt id=\"p1\">**</bpt>Collect output details<ept id=\"p1\">**</ept> of the current files is turned off.","pos":[60854,60952],"source":" Returns an empty list when the flag **Collect output details** of the current files is turned off."},{"pos":[60958,61000],"content":"Other (business domain–specific) functions","linkify":"Other (business domain–specific) functions","nodes":[{"content":"Other (business domain–specific) functions","pos":[0,42]}]},{"content":"Function","pos":[61004,61012]},{"content":"Description","pos":[61087,61098]},{"content":"Example","pos":[61348,61355]},{"content":"CONVERTCURRENCY (amount, source currency, target currency, date, company)","pos":[62304,62377]},{"content":"Convert the specified monetary amount from the source currency to the target currency by using the settings of the specified Dynamics 365 for Operations company on the specified date.","pos":[62387,62570]},{"pos":[62648,62820],"content":"<bpt id=\"p1\">**</bpt>CONVERTCURRENCY (1, \"EUR\", \"USD\", TODAY(), \"DEMF\")<ept id=\"p1\">**</ept> returns the equivalent of one euro in US dollars on the current session date, based on settings for the DEMF company.","source":"**CONVERTCURRENCY (1, \"EUR\", \"USD\", TODAY(), \"DEMF\")** returns the equivalent of one euro in US dollars on the current session date, based on settings for the DEMF company."},{"content":"ROUNDAMOUNT (number, decimals, round rule)","pos":[62954,62996]},{"content":"Round the specified amount according to the specified rounding rule and the specified number of decimal places.","pos":[63037,63148]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> The rounding rule must be specified as a value of the Dynamics 365 for Operations <bpt id=\"p2\">**</bpt>RoundOffType<ept id=\"p2\">**</ept> enumeration.","pos":[63149,63270],"source":"**Note:** The rounding rule must be specified as a value of the Dynamics 365 for Operations **RoundOffType** enumeration."},{"content":"If the <bpt id=\"p1\">**</bpt>model.RoundOff<ept id=\"p1\">**</ept> parameter is set to ****Downward****, <bpt id=\"p2\">**</bpt>ROUNDAMOUNT (1000.787, 2, model.RoundOff)<ept id=\"p2\">**</ept> returns the value <bpt id=\"p3\">**</bpt>1000.78<ept id=\"p3\">**</ept>.","pos":[63298,63438],"source":"If the **model.RoundOff** parameter is set to ****Downward****, **ROUNDAMOUNT (1000.787, 2, model.RoundOff)** returns the value **1000.78**."},{"content":"If the <bpt id=\"p1\">**</bpt>model.RoundOff<ept id=\"p1\">**</ept> parameter is set to either <bpt id=\"p2\">**</bpt>Normal<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>Rounding-up<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>ROUNDAMOUNT (1000.787, 2, model.RoundOff)<ept id=\"p4\">**</ept> returns the value <bpt id=\"p5\">**</bpt>1000.79<ept id=\"p5\">**</ept>.","pos":[63439,63599],"source":" If the **model.RoundOff** parameter is set to either **Normal** or **Rounding-up**, **ROUNDAMOUNT (1000.787, 2, model.RoundOff)** returns the value **1000.79**."},{"content":"CURCredRef (digits)","pos":[63604,63623]},{"content":"Return a creditor reference, based on the digits of the specified invoice number.","pos":[63687,63768]},{"pos":[63948,64001],"content":"<bpt id=\"p1\">**</bpt>CURCredRef (\"VEND-200002\")<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>\"2200002\"<ept id=\"p2\">**</ept>.","source":"**CURCredRef (\"VEND-200002\")** returns **\"2200002\"**."},{"content":"MOD<ph id=\"ph1\">\\_</ph>97 (digits)","pos":[64254,64270],"source":"MOD\\_97 (digits)"},{"content":"Return a creditor reference as a MOD97 expression, based on the digits of the specified invoice number.","pos":[64337,64440]},{"pos":[64598,64649],"content":"<bpt id=\"p1\">**</bpt>MOD<ph id=\"ph1\">\\_</ph>97 (\"VEND-200002\")<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>\"20000285\"<ept id=\"p2\">**</ept>.","source":"**MOD\\_97 (\"VEND-200002\")** returns **\"20000285\"**."},{"content":"ISOCredRef (digits)","pos":[64904,64923]},{"content":"Return an ISO creditor reference, based on the digits and alphabetic symbols of the specified invoice number.","pos":[64987,65096]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> To eliminate symbols from alphabets that aren't ISO-compliant, the input parameter must be translated before it's passed to this function.","pos":[65097,65245],"source":"**Note:** To eliminate symbols from alphabets that aren't ISO-compliant, the input parameter must be translated before it's passed to this function."},{"pos":[65248,65309],"content":"<bpt id=\"p1\">**</bpt>ISOCredRef (\"VEND-200002\")<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>\"RF23VEND-200002\"<ept id=\"p2\">**</ept>.","source":"**ISOCredRef (\"VEND-200002\")** returns **\"RF23VEND-200002\"**."},{"content":"CN<ph id=\"ph1\">\\_</ph>GBT<ph id=\"ph2\">\\_</ph>AdditionalDimensionID (string, number)","pos":[65554,65601],"source":"CN\\_GBT\\_AdditionalDimensionID (string, number)"},{"content":"Get the additional financial dimension ID.","pos":[65637,65679]},{"content":"Dimensions are represented in this string as IDs separated by commas.","pos":[65680,65749]},{"content":"Numbers define the requested dimension’s sequence code in this string.","pos":[65750,65820]},{"content":"CN<ph id=\"ph1\">\\_</ph>GBT<ph id=\"ph2\">\\_</ph>AdditionalDimensionID (\"AA,BB,CC,DD,EE,FF,GG,HH\",3) return “CC”","pos":[65898,65970],"source":"CN\\_GBT\\_AdditionalDimensionID (\"AA,BB,CC,DD,EE,FF,GG,HH\",3) return “CC”"},{"content":"GetCurrentCompany ()","pos":[66204,66224]},{"content":"Returns the code of the current logged company.","pos":[66287,66334]},{"content":"CH<ph id=\"ph1\">\\_</ph>BANK<ph id=\"ph2\">\\_</ph>MOD<ph id=\"ph3\">\\_</ph>10 (digits)","pos":[66854,66880],"source":"CH\\_BANK\\_MOD\\_10 (digits)"},{"content":"Returns a creditor reference as MOD10 expression based on digits of the given invoice number.","pos":[66937,67030]},{"content":"CH<ph id=\"ph1\">\\_</ph>BANK<ph id=\"ph2\">\\_</ph>MOD<ph id=\"ph3\">\\_</ph>10 (\"VEND-200002\") returns 3","pos":[67198,67241],"source":"CH\\_BANK\\_MOD\\_10 (\"VEND-200002\") returns 3"},{"content":"FA<ph id=\"ph1\">\\_</ph>SUM (fixed asset code, value model code, start date, end date)","pos":[67504,67570],"source":"FA\\_SUM (fixed asset code, value model code, start date, end date)"},{"content":"Returns the prepared data container of a fixed asset amounts for a period.","pos":[67587,67661]},{"content":"FA<ph id=\"ph1\">\\_</ph>SUM (\"COMP-000001\", “Current”, Date1, Date2) returns the prepared data container of the fixed asset \"COMP-000001\" with the value model “Current” for a period from Date1 to Date2.","pos":[67848,68030],"source":"FA\\_SUM (\"COMP-000001\", “Current”, Date1, Date2) returns the prepared data container of the fixed asset \"COMP-000001\" with the value model “Current” for a period from Date1 to Date2."},{"content":"FA<ph id=\"ph1\">\\_</ph>BALANCE (fixed asset code, value model code, reporting year, reporting date)","pos":[68154,68234],"source":"FA\\_BALANCE (fixed asset code, value model code, reporting year, reporting date)"},{"content":"Returns the prepared data container of a fixed asset balances.","pos":[68237,68299]},{"content":"Reporting year must be specified as a value of the Dynamics 365 for Operations enumeration <bpt id=\"p1\">**</bpt>AssetYear<ept id=\"p1\">**</ept>.","pos":[68300,68405],"source":" Reporting year must be specified as a value of the Dynamics 365 for Operations enumeration **AssetYear**."},{"content":"FA<ph id=\"ph1\">\\_</ph>SUM (\"COMP-000001\", “Current”, AxEnumAssetYear.ThisYear, SESSIONTODAY ()) returns the prepared data container of balances for the fixed asset \"COMP-000001\" with the value model “Current” on the current 365 for Operations session date.","pos":[68498,68736],"source":"FA\\_SUM (\"COMP-000001\", “Current”, AxEnumAssetYear.ThisYear, SESSIONTODAY ()) returns the prepared data container of balances for the fixed asset \"COMP-000001\" with the value model “Current” on the current 365 for Operations session date."},{"pos":[68807,68831],"content":"Functions list extension","linkify":"Functions list extension","nodes":[{"content":"Functions list extension","pos":[0,24]}]},{"content":"ER lets you extend the list of functions that are used in ER expressions.","pos":[68833,68906]},{"content":"Some engineering efforts are required.","pos":[68907,68945]},{"content":"For detailed information, see <bpt id=\"p1\">[</bpt>Extending the list of Electronic reporting functions<ept id=\"p1\">](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/analytics-bi-reporting/general-electronic-reporting-ger-formulas-list-extension)</ept>.","pos":[68946,69178],"source":" For detailed information, see [Extending the list of Electronic reporting functions](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/analytics-bi-reporting/general-electronic-reporting-ger-formulas-list-extension)."},{"pos":[69180,69188],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[69199,69353],"content":"<bpt id=\"p1\">[</bpt>Electronic Reporting overview<ept id=\"p1\">](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/analytics-bi-reporting/general-electronic-reporting-ger)</ept>","source":"[Electronic Reporting overview](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/analytics-bi-reporting/general-electronic-reporting-ger)"},{"pos":[69355,69558],"content":"<bpt id=\"p1\">[</bpt>Extend the list of Electronic reporting (ER) functions<ept id=\"p1\">](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/analytics-bi-reporting/general-electronic-reporting-ger-formulas-list-extension)</ept>","source":"[Extend the list of Electronic reporting (ER) functions](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/analytics-bi-reporting/general-electronic-reporting-ger-formulas-list-extension)"}],"content":"---\n# required metadata\n\ntitle: Formula designer in Electronic reporting | Microsoft Docs\ndescription: This topic explains how to use the formula designer in Electronic reporting (ER). When you design a format for a specific electronic document in ER, you can use Microsoft Excel–like formulas for data transformation to meet the requirements for that document's fulfillment and formatting. Various types of functions are supported: text, date and time, mathematical logical, information, data type conversion, and other (business domain–specific functions).\nauthor: kfend\nmanager: AnnBe\nms.date: 2016-03-07 15:27:59\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\nkeywords: ERDataModelDesigner, ERExpressionDesignerFormula, ERMappedFormatDesigner, ERModelMappingDesigner\n# ROBOTS: \naudience: Application User, IT Pro\n# ms.devlang: \nms.reviewer: 71\nms.suite: Released- Dynamics AX 7.0.0\n# ms.tgt_pltfrm: \nms.custom: 58771\nms.assetid: 514e80d4-34c8-4670-9370-cfcc272c58e4\nms.region: Global\n# ms.industry: \nms.author: nselin\n\n---\n\n# Formula designer in Electronic reporting\n\nThis topic explains how to use the formula designer in Electronic reporting (ER). When you design a format for a specific electronic document in ER, you can use Microsoft Excel–like formulas for data transformation to meet the requirements for that document's fulfillment and formatting. Various types of functions are supported: text, date and time, mathematical logical, information, data type conversion, and other (business domain–specific functions).\n\nFormula designer overview\n-------------------------\n\nElectronic reporting (ER) supports the formula designer. Therefore, at design time, you can configure expressions that can be used for the following tasks at run time:\n\n-   Transforming data that is received from a Microsoft Dynamics 365 for Operations database, and that should be populated in an ER data model that is designed to be a data source for ER formats (filtering, grouping, data type conversion, etc.).\n-   Formatting data that must be sent to a generating electronic document in accordance with the layout and conditions of a specific ER format (in accordance with the requested language or culture, encoding, etc.).\n-   Controlling the process of electronic document generation (enabling/disabling output of specific elements of the format, depending on processing data, interrupting document creation, throwing messages for end users, etc.).\n\nThe formula designer page can be opened when you do any of the following:\n\n-   Bind data source items to data model components.\n-   Bind data source items to format components.\n-   Complete maintenance of calculated fields as part of data sources.\n-   Define the visibility conditions for user input parameters.\n-   Design a format's transformations.\n-   Define the enabling conditions for the format's components.\n-   Define the file names for the format's FILE components.\n-   Define the conditions for process control validations.\n-   Define the message text for process control validations.\n\n## Designing ER formulas\n### Data binding\n\nThe ER formula designer can be used to define an expression that transforms data that is received from data sources, so that the data can be populated in the data consumer at run time:\n\n-   From Dynamics 365 for Operations data sources and run-time parameters to an ER data model.\n-   From an ER data model to an ER format.\n-   From Dynamics 365 for Operations data sources and run-time parameters to an ER format.\n\nThe following illustration shows the design of an expression of this type. In this example, the expression returns the value of the **Intrastat.AmountMST** field of the Dynamics 365 for Operations **Intrastat** table, after that value has been rounded to two decimal places. [![picture-expression-binding](./media/picture-expression-binding.jpg)](./media/picture-expression-binding.jpg) The following illustration shows how an expression of this type can be used. In this example, the result of the designed expression is populated in the **Transaction.InvoicedAmount** component of the **Tax reporting model** data model. [![picture-expression-binding2](./media/picture-expression-binding2.jpg)](./media/picture-expression-binding2.jpg) At run time, the designed formula, **ROUND (Intrastat.AmountMST, 2)**, will round the value of the **AmountMST** field for each record of the **Intrastat** table to two decimal places, and populate the rounded value to the **Transaction.InvoicedAmount** component of the **Tax reporting** data model.\n\n### Data formatting\n\nThe ER formula designer can be used to define an expression that formats data that is received from data sources, so that the data can be sent as part of the generating electronic document. If you have formatting that must be applied as a typical rule that should be reused for a format, you can introduce that formatting one time in a format configuration as a named transformation that has a formatting expression. This named transformation can then be linked with many format components for which the output must be formatted according to the expression that was created. The following illustration shows the design of a transformation of this type. In this example, the **TrimmedString** transformation takes incoming data of the **String** data type, and truncates leading and trailing spaces when it returns the string value. [![picture-transformation-design](./media/picture-transformation-design.jpg)](./media/picture-transformation-design.jpg) The following illustration shows how a transformation of this type can be used. In this example, several format components that send text as output to the generating electronic document at run time refer to the **TrimmedString** transformation by name. [![picture-transformation-usage](./media/picture-transformation-usage.jpg)](./media/picture-transformation-usage.jpg) When format components refer to the **TrimmedString **transformation (for example, the **partyName** component in the preceding illustration) this sends text as output to the generating document. The text does not include leading and trailing spaces. If you have formatting that must be applied individually, you can introduce that formatting as an individual expression of a binding of a specific format component. The following illustration shows an expression of this type. In this example, the **partyType** format component is bound to the data source via an expression that converts incoming data from the **Model.Company.RegistrationType** field in the data source to uppercase text and sends that text as output to the electronic document. [![picture-binding-with-formula](./media/picture-binding-with-formula.jpg)](./media/picture-binding-with-formula.jpg)\n\n### Process flow control\n\nThe ER formula designer can be used to define expressions that control the process flow of generating documents. You can:\n\n-   Define conditions that determine when a document creation process must be stopped.\n-   Specify expressions that either create messages for the end user about stopped processes or throw execution log messages about the continuing process of report generation.\n-   Specify the file names of generating documents, and control conditions of their creation.\n\nEach rule of the process flow control is designed as an individual validation. The following illustration shows a validation of this type. Here is an explanation of the configuration in this example:\n\n-   The validation is evaluated when the **INSTAT** node is created in the generating XML file.\n-   If the list of transactions is empty, the validation stops the execution process and returns **FALSE**.\n-   The validation returns an error message that includes the text of label SYS70894 in the user's preferred language.\n\n[![picture-validation](./media/picture-validation.jpg)](./media/picture-validation.jpg) The ER formula designer can also be used to specify a file name for a generating electronic document and control the file creation process. The following illustration shows the design of a process flow control of this type. Here is an explanation of the configuration in this example:\n\n-   The list of records from the **model.Intrastat** data source is divided into batches, each of which contains up to 1,000 records.\n-   The output creates a zip file that contains one file in XML format for every batch that was created.\n-   An expression returns a file name for generating electronic documents by concatenating the file name and file extension. For the second batch and all subsequent batches, the file name contains the batch ID as a suffix.\n-   An expression enables (by returning **TRUE**) the process of file creation for batches that contain at least one record.\n\n[![picture-file-control](./media/picture-file-control.jpg)](./media/picture-file-control.jpg)\n\n### Basic syntax\n\nER expressions can contain any or all of the following elements:\n\n-   Constants\n-   Operators\n-   References\n-   Paths\n-   Functions\n\n#### Constants\n\nYou can use text and numeric constants (values that aren't calculated) when you design expressions. For example, the expression **VALUE (\"100\") + 20 **uses the numeric constant 20 and the string constant “100”, and returns the numeric value **120**. The ER formula designer supports escape sequences, which means that you can specify the expression string that should be handled differently. For example, the expression **\"Leo Tolstoy \"\"War and Peace\"\" Volume 1\"** returns the text string **Leo Tolstoy \"War and Peace\" Volume 1**.\n\n#### Operators\n\nThe following table shows the arithmetic operators that you can use to perform basic mathematical operations, such as addition, subtraction, division, and multiplication.\n\n| Operator | Meaning              | Example |\n|----------|----------------------|---------|\n| +        | Addition             | 1+2     |\n| -        | Subtraction Negation | 5-2 -1  |\n| \\*       | Multiplication       | 7\\*8    |\n| /        | Division             | 9/3     |\n\nThe following table shows the comparison operators that are supported, and that you can use to compare two values.\n\n| Operator | Meaning                  | Example    |\n|----------|--------------------------|------------|\n| =        | Equal                    | X=Y        |\n| &gt;     | Greater than             | X&gt;Y     |\n| &lt;     | Less than                | X&lt;Y     |\n| &gt;=    | Greater than or equal to | X&gt;=Y    |\n| &lt;=    | Less than or equal to    | X&lt;=Y    |\n| &lt;&gt; | Not equal to             | X&lt;&gt;Y |\n\nAdditionally, you can use an ampersand (&) as a text concatenation operator to join, or concatenate, one or more text strings into a single piece of text.\n\n| Operator | Meaning     | Example                                        |\n|----------|-------------|------------------------------------------------|\n| &        | Concatenate | \"Nothing to print\" & \": \" & \"no records found\" |\n\n#### Operator precedence\n\nThe order in which the parts of a compound expression are evaluated is important. For example, the result of the expression** 1 + 4 / 2** differs, depending on whether the addition operation or the division operation is performed first. You can use parentheses to explicitly define how an expression is evaluated. For example, to indicate that the addition operation should be performed first, you can modify the preceding expression to **(1 + 4) / 2**. If the order of operations that must be performed in an expression isn't explicitly defined, the order is based on the default precedence that is assigned to the supported operators. The following tables shows the operators and the precedence that is assigned to each. Operators that have higher precedence (for example, 7) are evaluated before operators that have lower precedence (for example, 1).\n\n| Precedence | Operators      | Syntax                                                   |\n|------------|----------------|----------------------------------------------------------|\n| 7          | Grouping       | ( … )                                                    |\n| 6          | Member access  | … . …                                                    |\n| 5          | Function call  | … ( … )                                                  |\n| 4          | Multiplicative | … \\* … … / …                                             |\n| 3          | Additive       | … + … … - …                                              |\n| 2          | Comparison     | … &lt; … … &lt;= … … =&gt; … … &gt; … … = … … &lt;&gt; … |\n| 1          | Separation     | … , …                                                    |\n\nOperators on the same line have equal precedence. If an expression includes more than one of these operators, the expression is evaluated from left to right. For example, the expression **1 + 6 / 2 \\* 3 &gt; 5** returns **true**. We recommend that you use parentheses to explicitly indicate the desired order of evaluation for expressions, to make the expressions easier to read and maintain.\n\n#### References\n\nAll data sources of the current ER component (either a model or a format) that are available during the design of an expression can be used as named references. For example, the current ER data model contains the **ReportingDate** data source, which returns a value of the **DATETIME** data type. To properly format that value in the generating document, you can reference the data source in the expression as follows: **DATETIMEFORMAT (ReportingDate, \"dd-MM-yyyy\")** All characters in the name of a referencing data source that don't represent a letter of the alphabet must be preceded by a single quotation mark ('). If the name of a referencing data source contains at least one symbol that doesn't represent a letter of the alphabet (for example, punctuation marks or other written symbols), the name must be enclosed in single quotation marks. Here are some examples:\n\n-   The **Today's date & time** data source must be referred to in an ER expression as follows: **'Today''s date & time'**\n-   The **name()** method of the **Customers** data source must be referred to in an ER expression as follows: **Customers.'name()'**\n\n#### Path\n\nWhen an expression references a structured data source, you can use the path definition to select a specific primitive element of that data source. A dot character (.) is used to separate individual elements of a structured data source. For example, the current ER data model contains the **InvoiceTransactions** data source, which returns a list of records. The **InvoiceTransactions** record structure contain the **AmountDebit** and **AmountCredit** fields, which return numeric values. Therefore, you can design the following expression to calculate the invoiced amount: **InvoiceTransactions.AmountDebit - InvoiceTransactions.AmountCredit**\n\n#### Functions\n\nThe next section describes the functions that can be used in ER expressions. All data sources of the expression context (the current ER data model or ER format), and also constants, can be used as parameters of calling functions, in accordance with the list of calling function arguments. For example, the current ER data model contains the **InvoiceTransactions** data source, which returns a list of records. The **InvoiceTransactions** record structure contain the **AmountDebit** and **AmountCredit** fields, which return numeric values. Therefore, to calculate the invoiced amount, you can design the following expression that uses the built-in ER rounding function: **ROUND (InvoiceTransactions.AmountDebit - InvoiceTransactions.AmountCredit, 2)**\n\n## Supported functions\nThe following tables describe the data manipulation functions that you can use to design ER data models and ER reports. The list of functions isn't fixed and can be extended by developers. To see the list of functions that you can use, access the functions pane in the ER formula designer.\n\n### Date and time functions\n\n| Function                                   | Description                                                                                                                                                                                                                                                                                                                                                      | Example                                                                                                                                                                                                                                                                                               |\n|--------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ADDDAYS (datetime, days)                   | Add the specified number of days to the specified datetime value.                                                                                                                                                                                                                                                                                                | **ADDDAYS (NOW(), 7)** returns the date and time seven days in the future.                                                                                                                                                                                                                            |\n| DATETODATETIME (date)                      | Convert the specified date value to a datetime value.                                                                                                                                                                                                                                                                                                            | **DATETODATETIME (CompInfo. 'getCurrentDate()')** returns the current Dynamics 365 for Operations session date, 12/24/2015, as **12/24/2015 12:00:00 AM**. In this example, **CompInfo** is an ER data source of the **Dynamics 365 for Operations/Table** type that refers to the CompanyInfo table. |\n| NOW ()                                     | Return the current Dynamics 365 for Operations application server date and time as a datetime value.                                                                                                                                                                                                                                                             |                                                                                                                                                                                                                                                                                                       |\n| TODAY ()                                   | Return the current Dynamics 365 for Operations application server date as a date value.                                                                                                                                                                                                                                                                          |                                                                                                                                                                                                                                                                                                       |\n| NULLDATE ()                                | Return a **null** date value.                                                                                                                                                                                                                                                                                                                                    |                                                                                                                                                                                                                                                                                                       |\n| NULLDATETIME ()                            | Return a **null** datetime value.                                                                                                                                                                                                                                                                                                                                |                                                                                                                                                                                                                                                                                                       |\n| DATETIMEFORMAT (datetime, format)          | Convert the specified datetime value to a string in the specified format. (For information about the supported formats, see [standard](https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx) and [custom](https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx).)                                                                        | **DATETIMEFORMAT (NOW(), \"dd-MM-yyyy\")** returns the current Dynamics 365 for Operations application server date, 12/24/2015, as **\"24-12-2015\"**, according to the specified custom format.                                                                                                          |\n| DATETIMEFORMAT (datetime, format, culture) | Convert the specified datetime value to a string in the specified format and [culture](https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx). (For information about the supported formats, see [standard](https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx) and [custom](https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx)). | **DATETIMEFORMAT (NOW(), \"d\", \"de\")** returns the current Dynamics 365 for Operations application server date, 12/24/2015, as **\"24.12.2015\"**, according to the selected German culture.                                                                                                             |\n| SESSIONTODAY ()                            | Returns the current Dynamics 365 for Operations session date as date value.                                                                                                                                                                                                                                                                                      |                                                                                                                                                                                                                                                                                                       |\n| SESSIONNOW ()                              | Returns the current Dynamics 365 for Operations session date and time as datetime value.                                                                                                                                                                                                                                                                         |                                                                                                                                                                                                                                                                                                       |\n| DATEFORMAT (date, format)                  | Returns string representation of date using specified format.                                                                                                                                                                                                                                                                                                    | **DATEFORMAT (SESSIONTODAY (), \"dd-MM-yyyy\")** returns the current Dynamics 365 for Operations session date 12/24/2015 as “**24-12-2015**” according to specified custom format.                                                                                                                      |\n| DATEFORMAT (date, format, culture)         | Convert the specified date value to a string in the specified format and [culture](https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx). (For information about the supported formats, see [standard](https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx) and [custom](https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx)).     | **DATETIMEFORMAT (SESSIONNOW (), \"d\", \"de\")** returns the current Dynamics 365 for Operations session date 12/24/2015 as **“24.12.2015”** according to selected German culture.                                                                                                                       |\n\n### List functions\n\n<table>\n<colgroup>\n<col width=\"33%\" />\n<col width=\"33%\" />\n<col width=\"33%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Function</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>SPLIT (input, length)</td>\n<td>Split the specified input string into substrings, each of which has the specified length. Return the result as a new list.</td>\n<td><strong>SPLIT (&quot;abcd&quot;, 3)</strong> returns a new list that consists of two records that have a <strong>STRING</strong> field. The field in the first record contains the text <strong>&quot;abc&quot;</strong>, and the field in the second record contains the text <strong>&quot;d&quot;</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>SPLITLIST (list, number)</td>\n<td>Split the specified list into batches, each of which contains the specified number of records. Return the result as a new list of batches that contains the following elements:\n<ul>\n<li>Batches as regular lists (<strong>Value</strong> component)</li>\n<li>The current batch number (<strong>BatchNumber</strong> component)</li>\n</ul></td>\n<td>In the following example, the <strong>Lines</strong> data source is created as a record list of three records, which is divided into batches, each of which contains up to two records. <a href=\"./media/picture-splitlist-datasource.jpg\"><img src=\"./media/picture-splitlist-datasource.jpg\" alt=\"Data source that is divided into batches\" class=\"alignnone wp-image-290681 size-full\" width=\"397\" height=\"136\" /></a> This shows the designed format layout, where bindings to the <strong>Lines</strong> data source are created to generate output in XML format that presents individual nodes for each batch and the records in it. <a href=\"./media/picture-splitlist-format.jpg\"><img src=\"./media/picture-splitlist-format.jpg\" alt=\"Format layout that has bindings to a data source\" class=\"alignnone wp-image-290691 size-full\" width=\"374\" height=\"161\" /></a> The following is the result of running the designed format. <a href=\"./media/picture-splitlist-result.jpg\"><img src=\"./media/picture-splitlist-result.jpg\" alt=\"Result of running the format\" class=\"alignnone wp-image-290701 size-full\" width=\"358\" height=\"191\" /></a></td>\n</tr>\n<tr class=\"odd\">\n<td>LIST (record 1 [, record 2, ...])</td>\n<td>Return a new list that is created from the specified arguments.</td>\n<td><strong>LIST (model.MainData, model.OtherData)</strong> returns an empty record, where the list of fields contains all fields of the <strong>MainData</strong> and <strong>OtherData</strong> record lists.</td>\n</tr>\n<tr class=\"even\">\n<td>LISTJOIN (list 1, list 2, ...)</td>\n<td>Return a joined list that is created from lists of specified arguments.</td>\n<td><strong>LISTJOIN (SPLIT (&quot;abc&quot;, 1), SPLIT (&quot;def&quot;, 1))</strong> returns the list of six records, where one field of the <strong>STRING</strong> data type contains single letters.</td>\n</tr>\n<tr class=\"odd\">\n<td>ISEMPTY (list)</td>\n<td>Return <strong>TRUE</strong> if the specified list doesn't contain any elements. Otherwise, return <strong>FALSE</strong>.</td>\n<td></td>\n</tr>\n<tr class=\"even\">\n<td>EMPTYLIST (list)</td>\n<td>Return an empty list by using the specified list as a source for the list structure.</td>\n<td><strong>EMPTYLIST (SPLIT (&quot;abc&quot;, 1))</strong> returns a new empty list that has the same structure as the list that is returned by <strong>SPLIT</strong> function.</td>\n</tr>\n<tr class=\"odd\">\n<td>FIRST (list)</td>\n<td>Return the first record of the specified list, if that record isn't empty. Otherwise, throw an exception.</td>\n<td></td>\n</tr>\n<tr class=\"even\">\n<td>FIRSTORNULL (list)</td>\n<td>Return the first record of the specified list, if that record isn't empty. Otherwise, return a <strong>null</strong> record.</td>\n<td></td>\n</tr>\n<tr class=\"odd\">\n<td>LISTOFFIRSTITEM (list)</td>\n<td>Return a list that contains only the first item of the specified list.</td>\n<td></td>\n</tr>\n<tr class=\"even\">\n<td>ALLITEMS (path)</td>\n<td>Return a new flattened list that represents all items that match the specified path. The path must be defined as a valid data source path to a data source element of a record list data type. The path to string, date, etc. data elements should raise an error at design time in ER expression builder.</td>\n<td>If you enter <strong>SPLIT(&quot;abcdef&quot; , 2)</strong> as a data source (DS), <strong>COUNT( ALLITEMS (DS.Value))</strong> returns <strong>3</strong>.</td>\n</tr>\n<tr class=\"odd\">\n<td>ORDERBY (list [, expression 1, expression 2, …])</td>\n<td>Return the specified list, which is sorted according to the specified arguments that can be defined as expressions.</td>\n<td>When <strong>Vendor</strong> is configured as an ER data source that refers to the VendTable table, <strong>ORDERBY (Vendors, Vendors.'name()')</strong> returns the list of vendors that is sorted by name in ascending order.</td>\n</tr>\n<tr class=\"even\">\n<td>REVERSE (list)</td>\n<td>Return the specified list in reversed sort order.</td>\n<td>When <strong>Vendor</strong> is configured as an ER data source that refers to the VendTable table, <strong>REVERSE (ORDERBY (Vendors, Vendors.'name()')) )</strong> returns the list of vendors that is sorted by name in descending order.</td>\n</tr>\n<tr class=\"odd\">\n<td>WHERE (list, condition)</td>\n<td>Return the specified list, which is filtered according to the specified condition. Unlike <strong>FILTER</strong> function, the specified condition is applied to the list in the memory.</td>\n<td>When <strong>Vendor</strong> is configured as an ER data source that refers to the VendTable table, <strong>WHERE(Vendors, Vendors.VendGroup = &quot;40&quot;)</strong> returns the list of vendors that belong to the vendor group 40.</td>\n</tr>\n<tr class=\"even\">\n<td>ENUMERATE (list)</td>\n<td>Return a new list that consists of enumerated records of the specified list, and that exposes the following elements:\n<ul>\n<li>Specified list records as regular lists (<strong>Value</strong> component)</li>\n<li>The current record index (<strong>Number</strong> component)</li>\n</ul></td>\n<td>In the following example, the <strong>Enumerated</strong> data source is created as an enumerated list of vendor records from the <strong>Vendors</strong> data source that refers to the <strong>VendTable</strong> table. <a href=\"./media/picture-enumerate-datasource.jpg\"><img src=\"./media/picture-enumerate-datasource.jpg\" alt=\"Enumerated data source\" class=\"alignnone wp-image-290711 size-full\" width=\"387\" height=\"136\" /></a> Here is the format, where data bindings are created to generate output in XML format that presents individual vendors as enumerated nodes. <a href=\"./media/picture-enumerate-format.jpg\"><img src=\"./media/picture-enumerate-format.jpg\" alt=\"Format that has data bindings\" class=\"alignnone wp-image-290721 size-full\" width=\"414\" height=\"138\" /></a> This is the result of running the designed format. <a href=\"./media/picture-enumerate-result.jpg\"><img src=\"./media/picture-enumerate-result.jpg\" alt=\"Result of running the format\" class=\"alignnone wp-image-290731 size-full\" width=\"567\" height=\"176\" /></a></td>\n</tr>\n<tr class=\"odd\">\n<td>COUNT (list)</td>\n<td>Return the number of records in the specified list, if the list isn't empty. Otherwise, return <strong>0</strong> (zero).</td>\n<td><strong>COUNT (SPLIT(&quot;abcd&quot; , 3))</strong> returns <strong>2</strong>, because the <strong>SPLIT</strong> function creates a list that consists of two records.</td>\n</tr>\n<tr class=\"even\">\n<td>LISTOFFIELDS (path)</td>\n<td>Returns a records list created from an argument of one of the following types:\n<ul>\n<li>Model enumeration</li>\n<li>Format enumeration</li>\n<li>Container</li>\n</ul>\nThe created list will consist of records with the following fields:\n<ul>\n<li>Name</li>\n<li>Label</li>\n<li>Description</li>\n</ul>\nThe Label and Description fields will return at run-time values based on format’s language settings.</td>\n<td>The following example shows the enumeration introduced in a data model. <a href=\"./media/ger-listoffields-function-model-enumeration.png\"><img src=\"./media/ger-listoffields-function-model-enumeration-e1474545790761.png\" alt=\"GER LISTOFFIELDS function - model enumeration\" class=\"alignnone wp-image-1203943 size-full\" width=\"514\" height=\"155\" /></a>The following example shows:\n<ul>\n<li>Model enumeration inserted into a report as a data source.</li>\n<li>ER expression designed to use model enumeration as parameter of this function.</li>\n<li>Data source of the record list type inserted into a report using the created ER expression.</li>\n</ul>\n<a href=\"./media/ger-listoffields-function-in-format-expression.png\"><img src=\"./media/ger-listoffields-function-in-format-expression-e1474546110395.png\" alt=\"GER LISTOFFIELDS function - in format expression\" class=\"alignnone wp-image-1204033 size-full\" width=\"549\" height=\"318\" /></a> The following example shows the ER format elements that are bound to the data source of record list type that was created using the LISTOFFIELDS function.<a href=\"./media/ger-listoffields-function-format-design.png\"><img src=\"./media/ger-listoffields-function-format-design.png\" alt=\"GER LISTOFFIELDS function - format design\" class=\"alignnone size-full wp-image-1204043\" width=\"466\" height=\"221\" /></a>This is the result of the designed format execution.<a href=\"./media/ger-listoffields-function-format-output.png\"><img src=\"./media/ger-listoffields-function-format-output.png\" alt=\"GER LISTOFFIELDS function - format output\" class=\"alignnone size-full wp-image-1204053\" width=\"585\" height=\"158\" /></a><strong>Note:</strong> Translated text for labels and descriptions is populated to ER format output in accordance with the language settings configured for parent FILE and FOLDER format elements.</td>\n</tr>\n<tr class=\"odd\">\n<td>STRINGJOIN (list, field name, delimiter)</td>\n<td>Returns the string of concatenated values of a field from a list separated with a selected delimiter.</td>\n<td>If you entered SPLIT(“abc” , 1) as a data source DS, expression STRINGJOIN (DS, DS.Value, “:”) returns “a:b:c”</td>\n</tr>\n<tr class=\"even\">\n<td>SPLITLISTBYLIMIT (list, limit value, limit source)</td>\n<td>Splits the given list into a new list of sub-lists and returns the result in record list content. The limit value parameter specifies the value of the limit to split the origin list. The limit source parameter specifies the step which the total sum is increased on. The limit is not applied to a single item of the given list when the limit source exceeds the defined limit.</td>\n<td>The following example shows the sample format using data sources. <a href=\"./media/ger-splitlistbylimit-format.png\"><img src=\"./media/ger-splitlistbylimit-format.png\" alt=\"GER SPLITLISTBYLIMIT - format\" class=\"alignnone size-full wp-image-1204063\" width=\"396\" height=\"195\" /></a><a href=\"./media/ger-splitlistbylimit-datasources.png\"><img src=\"./media/ger-splitlistbylimit-datasources.png\" alt=\"GER SPLITLISTBYLIMIT - datasources\" class=\"alignnone size-full wp-image-1204073\" width=\"320\" height=\"208\" /></a>This is the result format execution that presents the flat list of commodity items.<a href=\"./media/ger-splitlistbylimit-output.png\"><img src=\"./media/ger-splitlistbylimit-output.png\" alt=\"GER SPLITLISTBYLIMIT - output\" class=\"alignnone size-full wp-image-1204083\" width=\"462\" height=\"204\" /></a>The following example shows the same format that was adjusted to present the list of commodity items in batches when a single batch must include commodities with the total weight that should not exceed the limit of 9.<a href=\"./media/ger-splitlistbylimit-format-1.png\"><img src=\"./media/ger-splitlistbylimit-format-1.png\" alt=\"GER SPLITLISTBYLIMIT - format 1\" class=\"alignnone size-full wp-image-1204103\" width=\"466\" height=\"438\" /></a><a href=\"./media/ger-splitlistbylimit-datasources-1.png\"><img src=\"./media/ger-splitlistbylimit-datasources-1.png\" alt=\"GER SPLITLISTBYLIMIT - datasources 1\" class=\"alignnone size-full wp-image-1204093\" width=\"645\" height=\"507\" /></a>This is the result of the adjusted format execution. <a href=\"./media/ger-splitlistbylimit-output-1.png\"><img src=\"./media/ger-splitlistbylimit-output-1.png\" alt=\"GER SPLITLISTBYLIMIT - output 1\" class=\"alignnone size-full wp-image-1204113\" width=\"676\" height=\"611\" /></a><strong>Note:</strong> The limit is not applied to the last item of the origin list as the value (11) of its limit’s source (weight) exceeds the defined limit (9). Use either the function <strong>WHERE</strong> or the <strong>Enabled</strong> expression of the corresponding format element to ignore (skip) sub-lists during the report generation (if needed).</td>\n</tr>\n<tr class=\"odd\">\n<td>FILTER (list, condition)</td>\n<td>Returns the given list filtered for the specified condition by modifying the query. Unlike the <strong>WHERE</strong> function, the specified condition is applied at the database level to any ER data source of the Table records type.</td>\n<td>FILTER (Vendors, Vendors.VendGroup = &quot;40&quot;) returns the list of only vendors belonging to the vendors’ group “40” when <strong>Vendor</strong> is configured as ER data source referring to the <strong>VendTable</strong> table</td>\n</tr>\n</tbody>\n</table>\n\n### Logical functions\n\n| Function                                                                                | Description                                                                                                                                                                                                                                                                     | Example                                                                                                                                                                                                                                                      |\n|-----------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| CASE (expression, option 1, result 1 \\[, option 2, result 2\\] ... \\[, default result\\]) | Evaluate the specified expression value against the specified alternative options. Return the result of the option that is equal to the value of the expression. Otherwise, return the optionally entered default result (the last parameter that isn't preceded by an option). | **CASE( DATETIMEFORMAT( NOW(), \"MM\"), \"10\", \"WINTER\", \"11\", \"WINTER\", \"12\", \"WINTER\", \"\")** returns the string **\"WINTER\"** when the current Dynamics 365 for Operations session date is between October and December. Otherwise, it returns a blank string. |\n| IF (condition, value 1, value 2)                                                        | Return the specified value 1 when the given condition is met. Otherwise, return value 2. If value 1 and value 2 are records or record lists, the result will have only the fields that exist in both lists.                                                                     | **IF (1=2, \"condition is met\", \"condition is not met\")** returns the string **\"condition is not met\"**.                                                                                                                                                      |\n| NOT (condition)                                                                         | Return the reversed logical value of the specified condition.                                                                                                                                                                                                                   | **NOT (TRUE)** returns **FALSE**.                                                                                                                                                                                                                            |\n| AND (condition 1\\[, condition 2, ...\\])                                                 | Return **TRUE** if *all* specified conditions are true. Otherwise, return **FALSE**.                                                                                                                                                                                            | **AND (1=1, \"a\"=\"a\")** returns **TRUE**. **AND (1=2, \"a\"=\"a\")** returns **FALSE**.                                                                                                                                                                           |\n| OR (condition 1\\[, condition 2, ...\\])                                                  | Return **FALSE** if *all* specified conditions are false. Return **TRUE** if *any* specified condition is true.                                                                                                                                                                 | **OR (1=2, \"a\"=\"a\")** returns **TRUE**.                                                                                                                                                                                                                      |\n\n### Mathematical functions\n\n<table>\n<colgroup>\n<col width=\"33%\" />\n<col width=\"33%\" />\n<col width=\"33%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Function</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>ABS (number)</td>\n<td>Return the absolute value of the specified number (the number without its sign).</td>\n<td><strong>ABS (-1)</strong> returns <strong>1</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>POWER (number, power)</td>\n<td>Return the result of raising the specified positive number to the specified power.</td>\n<td><strong>POWER (10, 2)</strong> returns <strong>100</strong>.</td>\n</tr>\n<tr class=\"odd\">\n<td>NUMBERVALUE (string, decimal separator, digit grouping separator)</td>\n<td>Convert the specified string to a number. The specified symbol is used to separate the integer and fractional parts of a decimal number, and the specified thousands separator is also used.</td>\n<td><strong>NUMBERVALUE(&quot;1 234,56&quot;, &quot;,&quot;, &quot; &quot;)</strong> returns the value <strong>1234.56</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>VALUE (string)</td>\n<td>Convert the specified string to a number. Commas and dot characters (.) are considered decimal separators, and a leading hyphen (-) is used as negative sign. Throw an exception if other non-numeric characters are encountered in the specified string.</td>\n<td><strong>VALUE (&quot;1 234,56&quot;)</strong> throws an exception.</td>\n</tr>\n<tr class=\"odd\">\n<td>ROUND (number, decimals)</td>\n<td>Return the specified number, which is rounded to the specified number of decimal places:\n<ul>\n<li>If the specified decimals value is more than 0 (zero), the specified number is rounded to the specified number of decimal places.</li>\n<li>If the specified decimals value is 0 (zero), the specified number is rounded to the nearest integer.</li>\n<li>If the specified decimals value is less than 0 (zero), the specified number is rounded to the left of the decimal point.</li>\n</ul></td>\n<td><strong>ROUND (1200.767, 2)</strong> rounds to two decimal places and returns <strong>1200.77</strong>. <strong>ROUND (1200.767, -3)</strong> rounds to the nearest multiple of 1,000 and returns <strong>1000</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>ROUNDDOWN (number, decimals)</td>\n<td>Return the specified number, which is rounded down (toward zero) to the specified number of decimal places. <strong>Note:</strong> This function behaves like <strong>ROUND</strong>, but it always rounds the specified number down.</td>\n<td><strong>ROUNDDOWN (1200.767, 2)</strong> rounds down to two decimal places and returns <strong>1200.76</strong>. <strong>ROUNDDOWN (1700.767, -3)</strong> rounds down to the nearest multiple of 1,000 and returns <strong>1000</strong>.</td>\n</tr>\n<tr class=\"odd\">\n<td>ROUNDUP (number, decimals)</td>\n<td>Return the specified number, which is rounded up (away from zero) to the specified number of decimal places. <strong>Note:</strong> This function behaves like <strong>ROUND</strong>, but it always rounds the specified number up.</td>\n<td><strong>ROUNDUP (1200.763, 2)</strong> rounds up to two decimal places and returns <strong>1200.77</strong>. <strong>ROUNDUP (1200.767, -3)</strong> rounds up to the nearest multiple of 1,000 and returns <strong>2000</strong>.</td>\n</tr>\n</tbody>\n</table>\n\n### Record functions\n\n| Function             | Description                                                                                                                                                                                                                                     | Example                                                                                                                                             |\n|----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| NULLCONTAINER (list) | Return a **null** record that has the same structure as the specified record list or record. **Note:** This function is obsolete. Use **EMPTYRECORD** instead.                                                                                  | **NULLCONTAINER (SPLIT (\"abc\", 1))** returns a new empty record that has the same structure as the list that is returned by the **SPLIT** function. |\n| EMPTYRECORD (record) | Return a **null** record that has the same structure as the specified record list or record. **Note:** A **null** record is a record where all fields have an empty value (**0** \\[zero\\] for numbers, an empty string for strings, and so on). | **EMPTYRECORD (SPLIT (\"abc\", 1))** returns a new empty record that has the same structure as the list that is returned by the **SPLIT** function.   |\n\n### Text functions\n\n<table>\n<colgroup>\n<col width=\"33%\" />\n<col width=\"33%\" />\n<col width=\"33%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Function</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>UPPER (string)</td>\n<td>Return the specified string, which is converted to uppercase letters.</td>\n<td><strong>UPPER(&quot;Sample&quot;)</strong> returns <strong>&quot;SAMPLE&quot;</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>LOWER (string)</td>\n<td>Return the specified string, which is converted to lowercase letters.</td>\n<td><strong>LOWER (&quot;Sample&quot;)</strong> returns <strong>&quot;sample&quot;</strong>.</td>\n</tr>\n<tr class=\"odd\">\n<td>LEFT (string, number of characters)</td>\n<td>Return the specified number of characters from the start of the specified string.</td>\n<td><strong>LEFT (&quot;Sample&quot;, 3)</strong> returns <strong>&quot;Sam&quot;</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>RIGHT (string, number of characters)</td>\n<td>Return the specified number of characters from the end of the specified string.</td>\n<td><strong>RIGHT (&quot;Sample&quot;, 3)</strong> returns <strong>&quot;ple&quot;</strong>.</td>\n</tr>\n<tr class=\"odd\">\n<td>MID (string, starting position, number of characters)</td>\n<td>Return the specified number of characters from the specified string, starting at the specified position.</td>\n<td><strong>MID (&quot;Sample&quot;, 2, 3)</strong> returns <strong>&quot;amp&quot;</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>LEN (string)</td>\n<td>Return the number of characters in the specified string.</td>\n<td><strong>LEN (&quot;Sample&quot;)</strong> returns <strong>6</strong>.</td>\n</tr>\n<tr class=\"odd\">\n<td>CHAR (number)</td>\n<td>Return the string of characters that is referenced by the specified Unicode number.</td>\n<td><strong>CHAR (255)</strong> returns <strong>&quot;ÿ&quot;</strong>. <strong>Note:</strong> The returned string depends on the encoding that is selected in the parent FILE format element. The list of supported encodings can be found in the <a href=\"https://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\">Encoding Class</a> topic.</td>\n</tr>\n<tr class=\"even\">\n<td>CONCATENATE (string 1 [, string 2, …])</td>\n<td>Return all specified text strings, which are joined into one string.</td>\n<td><strong>CONCATENATE (&quot;abc&quot;, &quot;def&quot;)</strong> returns <strong>&quot;abcdef&quot;</strong>. <strong>Note:</strong> The expression <strong>&quot;abc&quot; &amp; &quot;def&quot;</strong> also returns <strong>&quot;abcdef&quot;</strong>.</td>\n</tr>\n<tr class=\"odd\">\n<td>TRANSLATE (string, pattern, replacement)</td>\n<td>Return the specified string, in which all occurrences of the characters in the specified pattern string are replaced by the characters at the corresponding position of the specified replacement string.</td>\n<td><strong>TRANSLATE (&quot;abcdef&quot;, &quot;cd&quot;, &quot;GH&quot;)</strong> replaces the pattern <strong>&quot;cd&quot;</strong> with the string <strong>&quot;GH&quot;</strong> and returns <strong>&quot;abGHef&quot;</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>REPLACE (string, pattern, replacement, regular expression flag)</td>\n<td>When the specified regular expression flag is <strong>true</strong>, return the specified string, which is modified by applying the regular expression that is specified as a pattern argument for this function. This expression is used to find characters that must be replaced. Characters of the specified replacement argument are used to replace characters that are found. When the specified regular expression flag is <strong>false</strong>, this function behaves like <strong>TRANSLATE</strong>.</td>\n<td>  <strong>REPLACE (&quot;+1 923 456 4971&quot;, &quot;[^0-9]&quot;, &quot;&quot;, true)</strong> applies a regular expression that removes all non-numeric symbols, and returns <strong>&quot;19234564971&quot;</strong>. <strong>REPLACE (&quot;abcdef&quot;, &quot;cd&quot;, &quot;GH&quot;, false)</strong> replaces the pattern <strong>&quot;cd&quot;</strong> with the string <strong>&quot;GH&quot;</strong> and returns <strong>&quot;abGHef&quot;</strong>.</td>\n</tr>\n<tr class=\"odd\">\n<td>TEXT (input)</td>\n<td>Return the specified input, which is converted to a text string that is formatted according to the server locale settings of the current Dynamics 365 for Operations instance. For values of the <strong>real</strong> type, the string conversion is limited to two decimal places.</td>\n<td>If the Dynamics 365 for Operations instance server locale is defined as <strong>EN-US</strong>, <strong>TEXT (NOW ())</strong> returns the current Dynamics 365 for Operations session date, 12/17/2015, as the text string <strong>&quot;12/17/2015 07:59:23 AM&quot;</strong>. <strong>TEXT (1/3)</strong> returns <strong>&quot;0.33&quot;</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>FORMAT (string 1, string 2[, string 3, ...])</td>\n<td>Return the specified string, which is formatted by substituting any occurrences of <strong>%N</strong> with the <em>n</em>th argument. The arguments are strings. If an argument isn't provided for a parameter, the parameter is returned as <strong>&quot;%N&quot;</strong> in the string. For values of the <strong>real</strong> type, the string conversion is limited to two decimal places.</td>\n<td>In this example, the <strong>PaymentModel</strong> data source returns the list of customer records via the <strong>Customer</strong> component and the processing date value via the <strong>ProcessingDate</strong> field. <a href=\"./media/picture-format-datasource.jpg\"><img src=\"./media/picture-format-datasource.jpg\" alt=\"PaymentModel data source\" class=\"alignnone wp-image-290751 size-full\" width=\"293\" height=\"143\" /></a> In the ER format that is designed to generate an electronic file for selected customers, <strong>PaymentModel</strong> is selected as a data source and controls the process flow. An exception is thrown for end users when a selected customer is stopped for the date when the report is processed. The formula that is designed for this type of processing control can use the following resources:\n<ul>\n<li>Dynamics 365 for Operations label SYS70894, which has the following text:\n<ul>\n<li><strong>For the EN-US language:</strong> &quot;Nothing to print&quot;</li>\n<li><strong>For the DE language:</strong> &quot;Nichts zu drucken&quot;</li>\n</ul></li>\n<li>Dynamics 365 for Operations label SYS18389, which has the following text:\n<ul>\n<li><strong>For the EN-US language:</strong> &quot;Customer %1 is stopped for %2.&quot;</li>\n<li><strong>For the DE language:</strong> &quot;Debitor '%1' wird für %2 gesperrt.&quot;</li>\n</ul></li>\n</ul>\nHere is the formula that can be designed: FORMAT (CONCATENATE (@&quot;SYS70894&quot;, &quot;. &quot;, @&quot;SYS18389&quot;), model.Customer.Name, DATETIMEFORMAT (model.ProcessingDate, &quot;d&quot;)) If a report is processed for the <strong>Litware Retail customer</strong> on December 17, 2015, in the <strong>EN-US</strong> culture and the <strong>EN-US</strong> language, this formula returns the following text, which can be presented as an exception message for the end user: &quot;Nothing to print. Customer Litware Retail is stopped for 12/17/2015.&quot; If the same report is processed for the<strong> Litware Retail customer</strong> on December 17, 2015, in the <strong>DE</strong> culture and the <strong>DE</strong> language, this formula returns the following text, which uses a different date format: &quot;Nichts zu drucken. Debitor 'Litware Retail' wird für 17.12.2015 gesperrt.&quot; <strong>Note:</strong> The following syntax is applied in ER formulas for labels:\n<ul>\n<li><strong>For labels from Dynamics 365 for Operations resources:</strong> <strong>@&quot;X&quot;</strong>, where X is the label ID in the Application Object Tree (AOT)</li>\n<li><strong>For labels that reside in ER configurations:</strong> <strong>@&quot;ER_LABEL:X&quot;</strong>, where X is the label ID in the ER configuration</li>\n</ul></td>\n</tr>\n<tr class=\"odd\">\n<td>NUMBERFORMAT (number, format)</td>\n<td>Return the string representation of the specified number in the specified format. (For information about the supported formats, see <a href=\"https://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx\">standard</a> and <a href=\"https://msdn.microsoft.com/en-us/library/0c899ak8(v=vs.110).aspx\">custom</a>.) The context that this function is run in determines the culture that is used to format numbers.</td>\n<td>For the EN-US culture, <strong>NUMBERFORMAT (0.45, &quot;p&quot;)</strong> returns <strong>&quot;45.00 %&quot;</strong>. <strong>NUMBERFORMAT (10.45, &quot;#&quot;)</strong> returns <strong>&quot;10&quot;</strong>.</td>\n</tr>\n<tr class=\"even\">\n<td>NUMERALSTOTEXT (number, language, currency, print currency name flag, decimal points)</td>\n<td>Returns the number spelled out (converted) to text strings in the defined language. The language code is optional: when it is defined as empty string, the running context language code (defined for a generating folder or file) will be used instead. The currency code is optional. When it is defined as empty string, the company currency is taken. Note, the <strong>Print currency name</strong> parameter and the <strong>Decimal points</strong> parameter are analyzed for the following language codes only: <strong>CS</strong>, <strong>ET</strong>, <strong>HU</strong>, <strong>LT</strong>, <strong>LV</strong>, <strong>PL</strong>, <strong>RU</strong>. Note, the <strong>Print currency name</strong> parameter is analyzed for only Dynamics 365 for Operations companies with country's context that supports currency's declension.</td>\n<td>NUMERALSTOTEXT (1234.56, &quot;EN&quot;, &quot;&quot;, false, 2) returns “One Thousand Two Hundred Thirty Four and 56” NUMERALSTOTEXT (120, &quot;PL&quot;, &quot;&quot;, false, 0) returns “Sto dwadzieścia” NUMERALSTOTEXT (120.21, &quot;RU&quot;, &quot;EUR&quot;, true, 2) returns “Сто двадцать евро 21 евроцент”</td>\n</tr>\n<tr class=\"odd\">\n<td>PADLEFT (string, length, padding chars)</td>\n<td>Returns a string of a specified length in which the beginning of the current string is padded with specified characters.</td>\n<td>PADLEFT (“1234”, 10, “ “) returns the text string “      1234”</td>\n</tr>\n</tbody>\n</table>\n\n### Data collection functions\n\nFunction\n\nDescription\n\nExample\n\nFORMATELEMENTNAME ()\n\nReturns the name of the current format’s element. Returns empty string when the flag **Collect output details** of the current files is turned off.\n\nRefer to the **ER Use data of format output for counting and summing** (part of the **Acquire/Develop IT service/solution components** business process) Task guide to learn more about these functions' usage.\n\nSUMIFS (key string for summing, criteria range1 string, criteria value1 string \\[, criteria range2 string, criteria value2 string, …\\])\n\nReturns a sum of values of nodes (with name defined as a key) of XML, which has been collected during this format execution and satisfies the entered conditions (pairs of range and value). Returns zero value when the flag **Collect output details** of the current files is turned off.\n\nSUMIF (key string for summing, criteria range string, criteria value string)\n\nReturns a sum of values of nodes (with name defined as a key) of XML, which has been collected during this format execution and satisfies the entered condition (range and value). Returns zero value when the flag **Collect output details** of the current files is turned off.\n\nCOUNTIFS (criteria range1 string, criteria value1 string \\[, criteria range2 string, criteria value2 string, …\\])\n\nReturns number of nodes of XML, which has been collected during this format execution and satisfies the entered conditions (pairs of range and value). Returns zero value when the flag **Collect output details** of the current files is turned off.\n\nCOUNTIF (criteria range string, criteria value string)\n\nReturns number of nodes of XML, which has been collected during this format execution and satisfies the entered condition (range and value). Returns zero value when the flag **Collect output details** of the current files is turned off.\n\nCOLLECTEDLIST (criteria range1 string, criteria value1 string \\[, criteria range2 string, criteria value2 string, …\\])\n\nReturns a list of values of nodes of XML, which has been collected during this format execution and satisfies the entered conditions (range and value). Returns an empty list when the flag **Collect output details** of the current files is turned off.\n\n### Other (business domain–specific) functions\n\n| Function                                                                         | Description                                                                                                                                                                                                                                                        | Example                                                                                                                                                                                                                                                                                                       |\n|----------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| CONVERTCURRENCY (amount, source currency, target currency, date, company)        | Convert the specified monetary amount from the source currency to the target currency by using the settings of the specified Dynamics 365 for Operations company on the specified date.                                                                            | **CONVERTCURRENCY (1, \"EUR\", \"USD\", TODAY(), \"DEMF\")** returns the equivalent of one euro in US dollars on the current session date, based on settings for the DEMF company.                                                                                                                                  |\n| ROUNDAMOUNT (number, decimals, round rule)                                       | Round the specified amount according to the specified rounding rule and the specified number of decimal places. **Note:** The rounding rule must be specified as a value of the Dynamics 365 for Operations **RoundOffType** enumeration.                          | If the **model.RoundOff** parameter is set to ****Downward****, **ROUNDAMOUNT (1000.787, 2, model.RoundOff)** returns the value **1000.78**. If the **model.RoundOff** parameter is set to either **Normal** or **Rounding-up**, **ROUNDAMOUNT (1000.787, 2, model.RoundOff)** returns the value **1000.79**. |\n| CURCredRef (digits)                                                              | Return a creditor reference, based on the digits of the specified invoice number.                                                                                                                                                                                  | **CURCredRef (\"VEND-200002\")** returns **\"2200002\"**.                                                                                                                                                                                                                                                         |\n| MOD\\_97 (digits)                                                                 | Return a creditor reference as a MOD97 expression, based on the digits of the specified invoice number.                                                                                                                                                            | **MOD\\_97 (\"VEND-200002\")** returns **\"20000285\"**.                                                                                                                                                                                                                                                           |\n| ISOCredRef (digits)                                                              | Return an ISO creditor reference, based on the digits and alphabetic symbols of the specified invoice number. **Note:** To eliminate symbols from alphabets that aren't ISO-compliant, the input parameter must be translated before it's passed to this function. | **ISOCredRef (\"VEND-200002\")** returns **\"RF23VEND-200002\"**.                                                                                                                                                                                                                                                 |\n| CN\\_GBT\\_AdditionalDimensionID (string, number)                                  | Get the additional financial dimension ID. Dimensions are represented in this string as IDs separated by commas. Numbers define the requested dimension’s sequence code in this string.                                                                            | CN\\_GBT\\_AdditionalDimensionID (\"AA,BB,CC,DD,EE,FF,GG,HH\",3) return “CC”                                                                                                                                                                                                                                      |\n| GetCurrentCompany ()                                                             | Returns the code of the current logged company.                                                                                                                                                                                                                    |                                                                                                                                                                                                                                                                                                               |\n| CH\\_BANK\\_MOD\\_10 (digits)                                                       | Returns a creditor reference as MOD10 expression based on digits of the given invoice number.                                                                                                                                                                      | CH\\_BANK\\_MOD\\_10 (\"VEND-200002\") returns 3                                                                                                                                                                                                                                                                   |\n| FA\\_SUM (fixed asset code, value model code, start date, end date)               | Returns the prepared data container of a fixed asset amounts for a period.                                                                                                                                                                                         | FA\\_SUM (\"COMP-000001\", “Current”, Date1, Date2) returns the prepared data container of the fixed asset \"COMP-000001\" with the value model “Current” for a period from Date1 to Date2.                                                                                                                        |\n| FA\\_BALANCE (fixed asset code, value model code, reporting year, reporting date) | Returns the prepared data container of a fixed asset balances. Reporting year must be specified as a value of the Dynamics 365 for Operations enumeration **AssetYear**.                                                                                           | FA\\_SUM (\"COMP-000001\", “Current”, AxEnumAssetYear.ThisYear, SESSIONTODAY ()) returns the prepared data container of balances for the fixed asset \"COMP-000001\" with the value model “Current” on the current 365 for Operations session date.                                                                |\n\n### Functions list extension\n\nER lets you extend the list of functions that are used in ER expressions. Some engineering efforts are required. For detailed information, see [Extending the list of Electronic reporting functions](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/analytics-bi-reporting/general-electronic-reporting-ger-formulas-list-extension).\n\nSee also\n--------\n\n[Electronic Reporting overview](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/analytics-bi-reporting/general-electronic-reporting-ger)\n\n[Extend the list of Electronic reporting (ER) functions](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/analytics-bi-reporting/general-electronic-reporting-ger-formulas-list-extension)\n\n"}