{"content":"---\n# required metadata\n\ntitle: Q Classes\ndescription: System API classes that start with the letter Q.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 51831\nms.assetid: 279efb4c-e228-4ab5-be7d-c96d91064787\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# Q Classes\n\n[!include[banner](../includes/banner.md)]\n\n\nSystem API classes that start with the letter Q.\n\nClass Query\n-----------\n\n    class Query extends TreeNode\n\nThe Query class embodies the structure of a query.\n\n### Remarks\n\nObjects of this kind are not used to fetch records from the database. Instead, use a QueryRun object that can be assigned a query object. The dynamic behavior of a query is defined by the QueryRun class. The static behavior is defined by the Query class. Queries contain one or more data sources that correspond to tables in the database. The data sources are specified by using QueryBuildDataSource objects. This class lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called. Queries are used when the user wants to modify the records that are fetched by, for example, a form. One or more ranges are often added to an existing data source. Ranges are specified by using queryBuildRange objects.\n\n### Examples\n\nThe following example creates a query object that is used to create a QueryRun object.\n\n    { \n        Query q = new Query (QueryStr(Cust)); \n        // Use the query to build a queryRun object. \n        QueryRun qr = new QueryRun (q); \n        // Traverse some records. \n        while (qr.next()) \n        { \n            // ... \n        } \n    }\n\n### Methods\n\n| Method                                                                                                                                                                 | Description                                                                                                                               |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| public Query addBaseQuery(str queryName)                                                                                                                               |                                                                                                                                           |\n| public QueryBuildDataSource addDataSource(TableId table, \\[str name\\], \\[UnionType unionType\\], \\[boolean emptyFieldList\\])                                            | Adds a data source to the top level of the query.                                                                                         |\n| public QueryHavingFilter addHavingFilter(QueryBuildDataSource dataSource, str fieldName, AggregateFunction aggregateFunction, \\[int arrayIndex\\])                      |                                                                                                                                           |\n| public QueryFilter addQueryFilter(QueryBuildDataSource dataSource, str fieldName, \\[int arrayIndex\\])                                                                  |                                                                                                                                           |\n| public boolean allowCheck(\\[boolean value\\])                                                                                                                           |                                                                                                                                           |\n| public boolean allowCrossCompany(\\[boolean value\\])                                                                                                                    |                                                                                                                                           |\n| public boolean allowHavingFilters(QueryBuildDataSource dataSource, FieldName fieldName, AggregateFunction aggregateFunction)                                           |                                                                                                                                           |\n| public boolean allowQueryFilters(QueryBuildDataSource dataSource)                                                                                                      |                                                                                                                                           |\n| public str changedBy(\\[str value\\])                                                                                                                                    | Gets or sets the name of the user who last changed the Query object.                                                                      |\n| public Date changedDate(\\[Date value\\])                                                                                                                                | Gets or sets the date an application object was last changed.                                                                             |\n| public str changedTime(\\[str value\\])                                                                                                                                  | Gets or sets the time an application object was last changed.                                                                             |\n| public int childDataSourceCount()                                                                                                                                      | Counts the number of data sources that are related to the query.                                                                          |\n| public QueryBuildDataSource childDataSourceNo(int dataSourceNo)                                                                                                        | Returns the child data source that corresponds to the specified number.                                                                   |\n| public boolean containsAggregateFields()                                                                                                                               |                                                                                                                                           |\n| public str createdBy(\\[str value\\])                                                                                                                                    | Gets or sets the name of the user who created the application object.                                                                     |\n| public Date creationDate(\\[Date value\\])                                                                                                                               | Gets or sets the date an application object was created.                                                                                  |\n| public str creationTime(\\[str value\\])                                                                                                                                 |                                                                                                                                           |\n| public int dataSourceCount()                                                                                                                                           | Returns the total number of data sources for the query, including any embedded data sources.                                              |\n| public QueryBuildDataSource dataSourceName(str name)                                                                                                                   | Returns the data source that has the specified name.                                                                                      |\n| public QueryBuildDataSource dataSourceNo(int dataSourceNo)                                                                                                             | Returns the data source that is specified by the data source number.                                                                      |\n| public QueryBuildDataSource dataSourceTable(TableId table, \\[int occurrence\\])                                                                                         | Returns the data source that the specified table is assigned to.                                                                          |\n| public QueryBuildDataSource dataSourceUniqueId(int uniqueId)                                                                                                           |                                                                                                                                           |\n| public str description(\\[str value\\])                                                                                                                                  |                                                                                                                                           |\n| public boolean equal(Object record)                                                                                                                                    | Evaluates whether one query is equal to another.                                                                                          |\n| public str exportXML()                                                                                                                                                 |                                                                                                                                           |\n| public QueryHavingFilter findHavingFilterByField(QueryBuildDataSource dataSource, FieldName fieldName, \\[int occurrence\\], \\[int arrayIndex\\])                         |                                                                                                                                           |\n| public QueryFilter findQueryFilter(QueryBuildDataSource dataSource, FieldName fieldName, \\[int occurrence\\], \\[int arrayIndex\\])                                       |                                                                                                                                           |\n| public QueryBuildDataSource firstTopLevelDataSource()                                                                                                                  |                                                                                                                                           |\n| public boolean forceNestedLoop(boolean arg)                                                                                                                            |                                                                                                                                           |\n| public boolean forceSelectOrder(boolean arg)                                                                                                                           |                                                                                                                                           |\n| public str form(\\[str value\\])                                                                                                                                         |                                                                                                                                           |\n| public container getCompanyRange()                                                                                                                                     |                                                                                                                                           |\n| public int getMostRestrictedQueryFilterStatus(QueryBuildDataSource dataSource, FieldName fieldName, \\[int fieldId\\])                                                   |                                                                                                                                           |\n| public int getNextUniqueId()                                                                                                                                           |                                                                                                                                           |\n| public str getSQLStatement(\\[boolean noRuntimeOptimization\\])                                                                                                          |                                                                                                                                           |\n| public container getValidTimeStateDateRange()                                                                                                                          |                                                                                                                                           |\n| public container getValidTimeStateDateTimeRange()                                                                                                                      |                                                                                                                                           |\n| public ValidTimeStateQueryType getValidTimeStateQueryType()                                                                                                            |                                                                                                                                           |\n| public QueryGroupByField groupByField(int index, \\[QueryBuildDataSource dataSource\\])                                                                                  |                                                                                                                                           |\n| public int groupByFieldCount(\\[QueryBuildDataSource dataSource\\])                                                                                                      |                                                                                                                                           |\n| public boolean hasMultipleTopLevelDataSource()                                                                                                                         |                                                                                                                                           |\n| public boolean hasRangeOrFilter(QueryBuildDataSource dataSource)                                                                                                       |                                                                                                                                           |\n| public QueryHavingFilter havingFilter(int count, \\[QueryBuildDataSource dataSource\\])                                                                                  |                                                                                                                                           |\n| public int havingFilterCount(\\[QueryBuildDataSource dataSource\\])                                                                                                      |                                                                                                                                           |\n| public boolean inReport()                                                                                                                                              | Determines whether the query is part of a report.                                                                                         |\n| public boolean interactive(\\[boolean value\\])                                                                                                                          | Specifies whether the query is interactive.                                                                                               |\n| public boolean isCompositeQuery()                                                                                                                                      |                                                                                                                                           |\n| public boolean isExplicitlyOrdered()                                                                                                                                   |                                                                                                                                           |\n| public boolean isExplicitlyGrouped()                                                                                                                                   |                                                                                                                                           |\n| public boolean isPureUnionAll()                                                                                                                                        |                                                                                                                                           |\n| public boolean isUnionType()                                                                                                                                           |                                                                                                                                           |\n| public int levelNo(int dataSourceNo)                                                                                                                                   | Determines the level of indentation of the specified data source.                                                                         |\n| public int levelTable(TableId table, \\[int occurrence\\])                                                                                                               | Determines the tree level, in the hierarchy of data sources, of the data source that is assigned to the specified table.                  |\n| public int literals(\\[int value\\])                                                                                                                                     |                                                                                                                                           |\n| public str name(\\[str value\\])                                                                                                                                         | Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object. |\n| public Query newObject(AnyType source)                                                                                                                                 | Creates a query that exists on the same client side or server side as the source query.                                                   |\n| public int nextUniqueId(\\[int value\\])                                                                                                                                 |                                                                                                                                           |\n| public QueryOrderByField orderByField(int index, \\[QueryBuildDataSource dataSource\\])                                                                                  |                                                                                                                                           |\n| public int orderByFieldCount(\\[QueryBuildDataSource dataSource\\])                                                                                                      |                                                                                                                                           |\n| public Guid origin(\\[Guid value\\])                                                                                                                                     |                                                                                                                                           |\n| public container pack(\\[boolean doCheck\\])                                                                                                                             | Packs the query into a container and returns that container, so that it can be used when you create a query.                              |\n| public container packInternals()                                                                                                                                       |                                                                                                                                           |\n| public QueryFilter queryFilter(int count, \\[QueryBuildDataSource rootDataSource\\])                                                                                     |                                                                                                                                           |\n| public int queryFilterCount(\\[QueryBuildDataSource rootDataSource\\])                                                                                                   |                                                                                                                                           |\n| public int queryType(\\[int value\\])                                                                                                                                    |                                                                                                                                           |\n| public str quickFilterValue()                                                                                                                                          |                                                                                                                                           |\n| public int quickFilterControlId()                                                                                                                                      |                                                                                                                                           |\n| public boolean recordLevelSecurity(\\[boolean value\\])                                                                                                                  |                                                                                                                                           |\n| public Report report()                                                                                                                                                 | Returns the report in which the query is defined, if the report exists.                                                                   |\n| public boolean saved()                                                                                                                                                 | Indicates whether the query has been saved to disk.                                                                                       |\n| public boolean searchable(\\[boolean value\\])                                                                                                                           |                                                                                                                                           |\n| public Guid importSession(\\[Guid value\\])                                                                                                                              |                                                                                                                                           |\n| public str title(\\[str value\\])                                                                                                                                        |                                                                                                                                           |\n| public int topRows(\\[int value\\])                                                                                                                                      |                                                                                                                                           |\n| public str toString()                                                                                                                                                  | Returns a string that represents the current object.                                                                                      |\n| public boolean userUpdate(\\[boolean value\\])                                                                                                                           | Gets or sets a value that indicates whether the query can update the records that it fetches.                                             |\n| public Date validTimeStateAsOfDate(\\[Date asOfDate\\])                                                                                                                  |                                                                                                                                           |\n| public DateTime validTimeStateAsOfDateTime(\\[DateTime asOfDateTime\\])                                                                                                  |                                                                                                                                           |\n| public int validTimeStateFlags(\\[int value\\])                                                                                                                          |                                                                                                                                           |\n| public int version(\\[int value\\])                                                                                                                                      |                                                                                                                                           |\n| public str xml(\\[int indent\\])                                                                                                                                         | Returns an XML string that represents the current object.                                                                                 |\n| public void clearBaseQueries()                                                                                                                                         |                                                                                                                                           |\n| public void addCompanyRange(str companyName)                                                                                                                           |                                                                                                                                           |\n| public void checkRangeParsingErrors(boolean setCheckRangeParsingErrors)                                                                                                |                                                                                                                                           |\n| public void clearCompanyRange()                                                                                                                                        |                                                                                                                                           |\n| public void unpackInternals(container internalData)                                                                                                                    |                                                                                                                                           |\n| public void new(\\[AnyType source\\])                                                                                                                                    | Creates a query object.                                                                                                                   |\n| public void checkFieldAccess(boolean setCheckFieldAccess)                                                                                                              |                                                                                                                                           |\n| public void useDbCacheOnGeneratedCursors(\\[int fetchsize\\])                                                                                                            |                                                                                                                                           |\n| public void setValidTimeStateQueryType(\\[ValidTimeStateQueryType type\\])                                                                                               |                                                                                                                                           |\n| public void validTimeStateDateRange(\\[Date fromDate\\], \\[Date toDate\\])                                                                                                |                                                                                                                                           |\n| public void clearHavingFilters(\\[QueryBuildDataSource dataSource\\], \\[str fieldName\\], \\[int occurence\\], \\[int arrayIndex\\])                                          |                                                                                                                                           |\n| public void quickFilter(\\[str dataSourceName\\], \\[int tableId\\], \\[int fieldId\\], \\[str filterValue\\], \\[int controlId\\], \\[boolean useEqualityComparisonForStrings\\]) |                                                                                                                                           |\n| public void finalize()                                                                                                                                                 |                                                                                                                                           |\n| public void clearQueryFilters(\\[QueryBuildDataSource dataSource\\], \\[str fieldName\\], \\[int occurence\\], \\[int arrayIndex\\])                                           |                                                                                                                                           |\n| public void clearOrderBy()                                                                                                                                             |                                                                                                                                           |\n| public void clearAllFields()                                                                                                                                           |                                                                                                                                           |\n| public void clearGroupBy()                                                                                                                                             |                                                                                                                                           |\n| public void autoAuthzMode(AutoAuthzMode mode)                                                                                                                          |                                                                                                                                           |\n| ::public static void insert\\_recordset(Common targetCursor, Map targetToSourceMap, Query sourceQuery)                                                                  |                                                                                                                                           |\n| public void generateCursors()                                                                                                                                          |                                                                                                                                           |\n| public void checkAuthorizationOnOpenRanges(boolean setCheckAuthorizationOnOpenRanges)                                                                                  |                                                                                                                                           |\n| public void addContains(str containsValue, \\[boolean prefixSearch\\])                                                                                                   |                                                                                                                                           |\n| public void resetValidTimeStateQueryType()                                                                                                                             |                                                                                                                                           |\n| public void validTimeStateDateTimeRange(\\[DateTime fromDateTime\\], \\[DateTime toDateTime\\])                                                                            |                                                                                                                                           |\n\n### Method addBaseQuery\n\n    public Query addBaseQuery(str queryName)\n\n#### Parameters\n\nqueryName  \n\n#### Return Value\n\n### Method addDataSource\n\nAdds a data source to the top level of the query.\n\n    public QueryBuildDataSource addDataSource(TableId table, [str name], [UnionType unionType], [boolean emptyFieldList])\n\n#### Parameters\n\ntable  \n\n<!-- -->\n\nname  \n\n<!-- -->\n\nunionType  \n\n<!-- -->\n\nemptyFieldList  \n\n#### Return Value\n\nThe data source object that is created.\n\n#### Remarks\n\nA name value can be specified for documentation purposes. Yo can use the name to fetch the data source by using the dataSourceName method.\n\n### Method addHavingFilter\n\n    public QueryHavingFilter addHavingFilter(QueryBuildDataSource dataSource, str fieldName, AggregateFunction aggregateFunction, [int arrayIndex])\n\n#### Parameters\n\ndataSource  \n\n<!-- -->\n\nfieldName  \n\n<!-- -->\n\naggregateFunction  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method addQueryFilter\n\n    public QueryFilter addQueryFilter(QueryBuildDataSource dataSource, str fieldName, [int arrayIndex])\n\n#### Parameters\n\ndataSource  \n\n<!-- -->\n\nfieldName  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method allowCheck\n\n    public boolean allowCheck([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method allowCrossCompany\n\n    public boolean allowCrossCompany([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method allowHavingFilters\n\n    public boolean allowHavingFilters(QueryBuildDataSource dataSource, FieldName fieldName, AggregateFunction aggregateFunction)\n\n#### Parameters\n\ndataSource  \n\n<!-- -->\n\nfieldName  \n\n<!-- -->\n\naggregateFunction  \n\n#### Return Value\n\n### Method allowQueryFilters\n\n    public boolean allowQueryFilters(QueryBuildDataSource dataSource)\n\n#### Parameters\n\ndataSource  \n\n#### Return Value\n\n### Method changedBy\n\nGets or sets the name of the user who last changed the Query object.\n\n    public str changedBy([str value])\n\n#### Parameters\n\nvalue  \nThe name of the user who last changed the Query object; optional.\n\n#### Return Value\n\nThe name of the user who last changed the Query object.\n\n### Method changedDate\n\nGets or sets the date an application object was last changed.\n\n    public Date changedDate([Date value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe date an application object was last changed.\n\n### Method changedTime\n\nGets or sets the time an application object was last changed.\n\n    public str changedTime([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe time an application object was last changed.\n\n### Method childDataSourceCount\n\nCounts the number of data sources that are related to the query.\n\n    public int childDataSourceCount()\n\n#### Return Value\n\nThe number of data sources that are related to the query.\n\n#### Remarks\n\nThis method is used for the top-level query. To determine the number of data sources that are embedded in another data source, use the childDataSourceCount method.\n\n### Method childDataSourceNo\n\nReturns the child data source that corresponds to the specified number.\n\n    public QueryBuildDataSource childDataSourceNo(int dataSourceNo)\n\n#### Parameters\n\ndataSourceNo  \nThe number of the child data source.\n\n#### Return Value\n\nThe child data source that has the specified number.\n\n#### Remarks\n\nThe number that is specified must represent a data source that is immediately underneath the query. Typically, there is only one such data source.\n\n### Method containsAggregateFields\n\n    public boolean containsAggregateFields()\n\n#### Return Value\n\n### Method createdBy\n\nGets or sets the name of the user who created the application object.\n\n    public str createdBy([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name of the user.\n\n### Method creationDate\n\nGets or sets the date an application object was created.\n\n    public Date creationDate([Date value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe date an application object was created.\n\n### Method creationTime\n\n    public str creationTime([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataSourceCount\n\nReturns the total number of data sources for the query, including any embedded data sources.\n\n    public int dataSourceCount()\n\n#### Return Value\n\nThe number of data sources for this query.\n\n#### Remarks\n\nThe number is the transitive number of data sources and includes any embedded data sources.\n\n### Method dataSourceName\n\nReturns the data source that has the specified name.\n\n    public QueryBuildDataSource dataSourceName(str name)\n\n#### Parameters\n\nname  \nThe string that contains the name of the data source to return.\n\n#### Return Value\n\nThe data source that has the specified name; an uninitialized object if the specified data source does not exist.\n\n### Method dataSourceNo\n\nReturns the data source that is specified by the data source number.\n\n    public QueryBuildDataSource dataSourceNo(int dataSourceNo)\n\n#### Parameters\n\ndataSourceNo  \nThe number of the data source.\n\n#### Return Value\n\nThe data source that has the specified number; an uninitialized object if the specified data source does not exist.\n\n### Method dataSourceTable\n\nReturns the data source that the specified table is assigned to.\n\n    public QueryBuildDataSource dataSourceTable(TableId table, [int occurrence])\n\n#### Parameters\n\ntable  \nAn integer that is used when more than one data source uses the specified table ID; optional. The default value is 1, which specifies the first (and typically only) instance.\n\n<!-- -->\n\noccurrence  \nAn integer that is used when more than one data source uses the specified table ID; optional. The default value is 1, which specifies the first (and typically only) instance.\n\n#### Return Value\n\nThe data source that the specified table is assigned to.\n\n#### Remarks\n\nThe data source can also be retrieved by calling the dataSourceNo method or the dataSourceName method.\n\n### Method dataSourceUniqueId\n\n    public QueryBuildDataSource dataSourceUniqueId(int uniqueId)\n\n#### Parameters\n\nuniqueId  \n\n#### Return Value\n\n### Method description\n\n    public str description([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method equal\n\nEvaluates whether one query is equal to another.\n\n    public boolean equal(Object record)\n\n#### Parameters\n\nrecord  \nThe query to use as a comparison.\n\n#### Return Value\n\ntrue if the queries are equal; otherwise, false.\n\n#### Remarks\n\n\"Equal\" in this case means that the query is structurally identical to the query that it is compared to. The query has the same number of data sources assigned to the same files, and it has the same number of ranges.\n\n### Method exportXML\n\n    public str exportXML()\n\n#### Return Value\n\n### Method findHavingFilterByField\n\n    public QueryHavingFilter findHavingFilterByField(QueryBuildDataSource dataSource, FieldName fieldName, [int occurrence], [int arrayIndex])\n\n#### Parameters\n\ndataSource  \n\n<!-- -->\n\nfieldName  \n\n<!-- -->\n\noccurrence  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method findQueryFilter\n\n    public QueryFilter findQueryFilter(QueryBuildDataSource dataSource, FieldName fieldName, [int occurrence], [int arrayIndex])\n\n#### Parameters\n\ndataSource  \n\n<!-- -->\n\nfieldName  \n\n<!-- -->\n\noccurrence  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method firstTopLevelDataSource\n\n    public QueryBuildDataSource firstTopLevelDataSource()\n\n#### Return Value\n\n### Method forceNestedLoop\n\n    public boolean forceNestedLoop(boolean arg)\n\n#### Parameters\n\narg  \n\n#### Return Value\n\n### Method forceSelectOrder\n\n    public boolean forceSelectOrder(boolean arg)\n\n#### Parameters\n\narg  \n\n#### Return Value\n\n### Method form\n\n    public str form([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method getCompanyRange\n\n    public container getCompanyRange()\n\n#### Return Value\n\n### Method getMostRestrictedQueryFilterStatus\n\n    public int getMostRestrictedQueryFilterStatus(QueryBuildDataSource dataSource, FieldName fieldName, [int fieldId])\n\n#### Parameters\n\ndataSource  \n\n<!-- -->\n\nfieldName  \n\n<!-- -->\n\nfieldId  \n\n#### Return Value\n\n### Method getNextUniqueId\n\n    public int getNextUniqueId()\n\n#### Return Value\n\n### Method getSQLStatement\n\n    public str getSQLStatement([boolean noRuntimeOptimization])\n\n#### Parameters\n\nnoRuntimeOptimization  \n\n#### Return Value\n\n### Method getValidTimeStateDateRange\n\n    public container getValidTimeStateDateRange()\n\n#### Return Value\n\n### Method getValidTimeStateDateTimeRange\n\n    public container getValidTimeStateDateTimeRange()\n\n#### Return Value\n\n### Method getValidTimeStateQueryType\n\n    public ValidTimeStateQueryType getValidTimeStateQueryType()\n\n#### Return Value\n\n### Method groupByField\n\n    public QueryGroupByField groupByField(int index, [QueryBuildDataSource dataSource])\n\n#### Parameters\n\nindex  \n\n<!-- -->\n\ndataSource  \n\n#### Return Value\n\n### Method groupByFieldCount\n\n    public int groupByFieldCount([QueryBuildDataSource dataSource])\n\n#### Parameters\n\ndataSource  \n\n#### Return Value\n\n### Method hasMultipleTopLevelDataSource\n\n    public boolean hasMultipleTopLevelDataSource()\n\n#### Return Value\n\n### Method hasRangeOrFilter\n\n    public boolean hasRangeOrFilter(QueryBuildDataSource dataSource)\n\n#### Parameters\n\ndataSource  \n\n#### Return Value\n\n### Method havingFilter\n\n    public QueryHavingFilter havingFilter(int count, [QueryBuildDataSource dataSource])\n\n#### Parameters\n\ncount  \n\n<!-- -->\n\ndataSource  \n\n#### Return Value\n\n### Method havingFilterCount\n\n    public int havingFilterCount([QueryBuildDataSource dataSource])\n\n#### Parameters\n\ndataSource  \n\n#### Return Value\n\n### Method inReport\n\nDetermines whether the query is part of a report.\n\n    public boolean inReport()\n\n#### Return Value\n\ntrue if the query is part of a report (is found under a report's data sources node); otherwise, false.\n\n#### Remarks\n\nThis function is not typically used by application code. If the method returns true, the report method can be used to access the report in which the query is defined.\n\n### Method interactive\n\nSpecifies whether the query is interactive.\n\n    public boolean interactive([boolean value])\n\n#### Parameters\n\nvalue  \nA value that indicates whether the query is interactive; optional.\n\n#### Return Value\n\ntrue if the query is interactive; otherwise, false.\n\n#### Remarks\n\nIn an interactive query, the query can, for example, present the user with a dialog box when the prompt method is called. This functionality is used when code will be submitted to a batch and in other situations where code must run unattended.\n\n### Method isCompositeQuery\n\n    public boolean isCompositeQuery()\n\n#### Return Value\n\n### Method isExplicitlyOrdered\n\n    public boolean isExplicitlyOrdered()\n\n#### Return Value\n\n### Method isExplicitlyGrouped\n\n    public boolean isExplicitlyGrouped()\n\n#### Return Value\n\n### Method isPureUnionAll\n\n    public boolean isPureUnionAll()\n\n#### Return Value\n\n### Method isUnionType\n\n    public boolean isUnionType()\n\n#### Return Value\n\n### Method levelNo\n\nDetermines the level of indentation of the specified data source.\n\n    public int levelNo(int dataSourceNo)\n\n#### Parameters\n\ndataSourceNo  \nThe data source number to determine the level for.\n\n#### Return Value\n\nThe level number of the specified data source.\n\n#### Remarks\n\nThe data sources are numbered consecutively, starting at 1.\n\n### Method levelTable\n\nDetermines the tree level, in the hierarchy of data sources, of the data source that is assigned to the specified table.\n\n    public int levelTable(TableId table, [int occurrence])\n\n#### Parameters\n\ntable  \nThe integer that is used if more than one data source is assigned to the same table; optional.\n\n<!-- -->\n\noccurrence  \nThe integer that is used if more than one data source is assigned to the same table; optional.\n\n#### Return Value\n\nThe level number of the query's specified data source.\n\n### Method literals\n\n    public int literals([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   Begins with a letter.\n-   Doesn't exceed 250 characters.\n-   Can include numbers and underscore characters.\n-   Cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, classes, and so on.\n\n### Method newObject\n\nCreates a query that exists on the same client side or server side as the source query.\n\n    public Query newObject(AnyType source)\n\n#### Parameters\n\nsource  \nThe source query.\n\n#### Return Value\n\nThe new query.\n\n### Method nextUniqueId\n\n    public int nextUniqueId([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method orderByField\n\n    public QueryOrderByField orderByField(int index, [QueryBuildDataSource dataSource])\n\n#### Parameters\n\nindex  \n\n<!-- -->\n\ndataSource  \n\n#### Return Value\n\n### Method orderByFieldCount\n\n    public int orderByFieldCount([QueryBuildDataSource dataSource])\n\n#### Parameters\n\ndataSource  \n\n#### Return Value\n\n### Method origin\n\n    public Guid origin([Guid value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method pack\n\nPacks the query into a container and returns that container, so that it can be used when you create a query.\n\n    public container pack([boolean doCheck])\n\n#### Parameters\n\ndoCheck  \nA Boolean value that indicates whether to flag an error when a data source in the query references an outside cursor, such as a link to a cursor that is foreign to the query's data source; optional. The default value is true, which enforces the constraint.\n\n#### Return Value\n\nThe container that holds the query.\n\n#### Remarks\n\nThe container that is created by this method can serve as input when you instantiate a query or queryRun object by using either the new method or the newObject method. Links to cursors that are foreign to the query's data source are not packed into the container. If you must pack this kind of link, you should take a snapshot of the cursor's data and construct ranges for each field.\n\n### Method packInternals\n\n    public container packInternals()\n\n#### Return Value\n\n### Method queryFilter\n\n    public QueryFilter queryFilter(int count, [QueryBuildDataSource rootDataSource])\n\n#### Parameters\n\ncount  \n\n<!-- -->\n\nrootDataSource  \n\n#### Return Value\n\n### Method queryFilterCount\n\n    public int queryFilterCount([QueryBuildDataSource rootDataSource])\n\n#### Parameters\n\nrootDataSource  \n\n#### Return Value\n\n### Method queryType\n\n    public int queryType([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method quickFilterValue\n\n    public str quickFilterValue()\n\n#### Return Value\n\n### Method quickFilterControlId\n\n    public int quickFilterControlId()\n\n#### Return Value\n\n### Method recordLevelSecurity\n\n    public boolean recordLevelSecurity([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method report\n\nReturns the report in which the query is defined, if the report exists.\n\n    public Report report()\n\n#### Return Value\n\nThe report in which the query is defined under the data sources node.\n\n#### Remarks\n\nA query is not necessarily defined in the context of a report. To determine whether a query is defined in the context of a report, you can use the inReport method.\n\n### Method saved\n\nIndicates whether the query has been saved to disk.\n\n    public boolean saved()\n\n#### Return Value\n\ntrue if the query has been saved to disk; otherwise, false.\n\n### Method searchable\n\n    public boolean searchable([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method importSession\n\n    public Guid importSession([Guid value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method title\n\n    public str title([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method topRows\n\n    public int topRows([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method toString\n\nReturns a string that represents the current object.\n\n    public str toString()\n\n#### Return Value\n\nA string that represents the current object.\n\n#### Remarks\n\nThe default implementation returns the class name of the object. However, the method can be overridden in a derived class so that it returns values that are meaningful for that type.For example, an instance of the SysMethodInfo class returns the method name, and the type of method, such as Instance or Static.\n\n### Method userUpdate\n\nGets or sets a value that indicates whether the query can update the records that it fetches.\n\n    public boolean userUpdate([boolean value])\n\n#### Parameters\n\nvalue  \nA Boolean value that indicates whether the query can update the records that it fetches; optional.\n\n#### Return Value\n\ntrue if the query can currently update records that it fetches; otherwise false.\n\n### Method validTimeStateAsOfDate\n\n    public Date validTimeStateAsOfDate([Date asOfDate])\n\n#### Parameters\n\nasOfDate  \n\n#### Return Value\n\n### Method validTimeStateAsOfDateTime\n\n    public DateTime validTimeStateAsOfDateTime([DateTime asOfDateTime])\n\n#### Parameters\n\nasOfDateTime  \n\n#### Return Value\n\n### Method validTimeStateFlags\n\n    public int validTimeStateFlags([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method version\n\n    public int version([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method xml\n\nReturns an XML string that represents the current object.\n\n    public str xml([int indent])\n\n#### Parameters\n\nindent  \nThe amount of indentation for the returned XML string; optional.\n\n#### Return Value\n\nAn XML string that represents the current object.\n\n#### Remarks\n\nThis method can be overridden to return values that are meaningful for that type.\n\n### Method clearBaseQueries\n\n    public void clearBaseQueries()\n\n### Method addCompanyRange\n\n    public void addCompanyRange(str companyName)\n\n#### Parameters\n\ncompanyName  \n\n### Method checkRangeParsingErrors\n\n    public void checkRangeParsingErrors(boolean setCheckRangeParsingErrors)\n\n#### Parameters\n\nsetCheckRangeParsingErrors  \n\n### Method clearCompanyRange\n\n    public void clearCompanyRange()\n\n### Method unpackInternals\n\n    public void unpackInternals(container internalData)\n\n#### Parameters\n\ninternalData  \n\n### Method new\n\nCreates a query object.\n\n    public void new([AnyType source])\n\n#### Parameters\n\nsource  \nThe source to base the query object on; optional.\n\n#### Remarks\n\nIf no arguments are supplied when this method is called, a temporary query is created that is not stored in the Finance and Operations Application Object Tree (AOT) for subsequent use.\n\n### Method checkFieldAccess\n\n    public void checkFieldAccess(boolean setCheckFieldAccess)\n\n#### Parameters\n\nsetCheckFieldAccess  \n\n### Method useDbCacheOnGeneratedCursors\n\n    public void useDbCacheOnGeneratedCursors([int fetchsize])\n\n#### Parameters\n\nfetchsize  \n\n### Method setValidTimeStateQueryType\n\n    public void setValidTimeStateQueryType([ValidTimeStateQueryType type])\n\n#### Parameters\n\ntype  \n\n### Method validTimeStateDateRange\n\n    public void validTimeStateDateRange([Date fromDate], [Date toDate])\n\n#### Parameters\n\nfromDate  \n\n<!-- -->\n\ntoDate  \n\n### Method clearHavingFilters\n\n    public void clearHavingFilters([QueryBuildDataSource dataSource], [str fieldName], [int occurence], [int arrayIndex])\n\n#### Parameters\n\ndataSource  \n\n<!-- -->\n\nfieldName  \n\n<!-- -->\n\noccurence  \n\n<!-- -->\n\narrayIndex  \n\n### Method quickFilter\n\n    public void quickFilter([str dataSourceName], [int tableId], [int fieldId], [str filterValue], [int controlId], [boolean useEqualityComparisonForStrings])\n\n#### Parameters\n\ndataSourceName  \n\n<!-- -->\n\ntableId  \n\n<!-- -->\n\nfieldId  \n\n<!-- -->\n\nfilterValue  \n\n<!-- -->\n\ncontrolId  \n\n<!-- -->\n\nuseEqualityComparisonForStrings  \n\n### Method finalize\n\n    public void finalize()\n\n### Method clearQueryFilters\n\n    public void clearQueryFilters([QueryBuildDataSource dataSource], [str fieldName], [int occurence], [int arrayIndex])\n\n#### Parameters\n\ndataSource  \n\n<!-- -->\n\nfieldName  \n\n<!-- -->\n\noccurence  \n\n<!-- -->\n\narrayIndex  \n\n### Method clearOrderBy\n\n    public void clearOrderBy()\n\n### Method clearAllFields\n\n    public void clearAllFields()\n\n### Method clearGroupBy\n\n    public void clearGroupBy()\n\n### Method autoAuthzMode\n\n    public void autoAuthzMode(AutoAuthzMode mode)\n\n#### Parameters\n\nmode  \n\n### Method insert\\_recordset\n\n    public static void insert_recordset(Common targetCursor, Map targetToSourceMap, Query sourceQuery)\n\n#### Parameters\n\ntargetCursor  \n\n<!-- -->\n\ntargetToSourceMap  \n\n<!-- -->\n\nsourceQuery  \n\n### Method generateCursors\n\n    public void generateCursors()\n\n### Method checkAuthorizationOnOpenRanges\n\n    public void checkAuthorizationOnOpenRanges(boolean setCheckAuthorizationOnOpenRanges)\n\n#### Parameters\n\nsetCheckAuthorizationOnOpenRanges  \n\n### Method addContains\n\n    public void addContains(str containsValue, [boolean prefixSearch])\n\n#### Parameters\n\ncontainsValue  \n\n<!-- -->\n\nprefixSearch  \n\n### Method resetValidTimeStateQueryType\n\n    public void resetValidTimeStateQueryType()\n\n### Method validTimeStateDateTimeRange\n\n    public void validTimeStateDateTimeRange([DateTime fromDateTime], [DateTime toDateTime])\n\n#### Parameters\n\nfromDateTime  \n\n<!-- -->\n\ntoDateTime  \n\n## Class QueryBuildDataSource\n    class QueryBuildDataSource extends TreeNode\n\nThe QueryBuildDataSource class provides the building blocks that queries are made of.\n\n### Remarks\n\nData sources are arranged in hierarchies that define the sequence in which records are fetched from the tables that are assigned to the data sources. Each data source defines the order in which the records are fetched, and also the criteria that must be met by the selected records. This class lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n### Examples\n\n    {    QueryBuildDataSource ds;    Query q = new Query();        ds = q.addDataSource(        TableNum(CustTable));}\n\n### Methods\n\n| Method                                                                                                                                                       | Description                                                                                                                               |\n|--------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| public int addAllFields(TableName tableName)                                                                                                                 |                                                                                                                                           |\n| public QueryBuildDataSource addDataSource(AnyType arg, \\[str name\\], \\[boolean emptyFieldList\\])                                                             | Adds a data source that is embedded in this data source.                                                                                  |\n| public QueryBuildDynalink addDynalink(FieldId field, Common dynamicFile, FieldId dynamicField, \\[int fieldArrayIndex\\], \\[int dynamicFieldArrayIndex\\])      |                                                                                                                                           |\n| public QueryBuildLink addForeignkeyRelation(str relatedTableRole, \\[str parentDatasourceName\\])                                                              |                                                                                                                                           |\n| public QueryGroupByField addGroupByField(FieldId fieldID, \\[int arrayIndex\\])                                                                                |                                                                                                                                           |\n| public QueryBuildLink addLink(FieldId parentField, FieldId thisField, \\[str parentDatasourceName\\])                                                          |                                                                                                                                           |\n| public QueryOrderByField addOrderByAggregateField(SelectionField fieldType, FieldId fieldID, \\[SortOrder direction\\], \\[int arrayIndex\\])                    |                                                                                                                                           |\n| public QueryOrderByField addOrderByCalculationField(Microsoft.Dynamics.AX.Analytics.CalculationModel.NumericExpression calculation, \\[SortOrder direction\\]) |                                                                                                                                           |\n| public QueryOrderByField addOrderByField(FieldId fieldID, \\[SortOrder direction\\], \\[int arrayIndex\\])                                                       |                                                                                                                                           |\n| public QueryBuildRange addRange(FieldId field, \\[int arrayIndex\\], \\[QueryRangeType rangeType\\])                                                             | Adds a range to the data source.                                                                                                          |\n| public int addSortField(FieldId sortField, \\[SortOrder direction\\], \\[int arrayIndex\\])                                                                      |                                                                                                                                           |\n| public int addSortIndex(IndexId index)                                                                                                                       |                                                                                                                                           |\n| public int allowAdd(\\[int value\\])                                                                                                                           |                                                                                                                                           |\n| public boolean applyFilter(FilterValue filterValue)                                                                                                          |                                                                                                                                           |\n| public boolean autoHeader(FieldId field, \\[boolean orderNo\\])                                                                                                |                                                                                                                                           |\n| public int autoHeaderDetailLevel(FieldId field, \\[int orderNo\\])                                                                                             |                                                                                                                                           |\n| public boolean autoSum(FieldId field, \\[boolean orderNo\\])                                                                                                   |                                                                                                                                           |\n| public int autoSumDetailLevel(FieldId field, \\[int orderNo\\])                                                                                                |                                                                                                                                           |\n| public boolean changedNo()                                                                                                                                   |                                                                                                                                           |\n| public int childDataSourceCount()                                                                                                                            |                                                                                                                                           |\n| public QueryBuildDataSource childDataSourceNo(int dataSourceNo)                                                                                              |                                                                                                                                           |\n| public str company(\\[str value\\])                                                                                                                            |                                                                                                                                           |\n| public int concurrencyModel(\\[int value\\])                                                                                                                   |                                                                                                                                           |\n| public QueryBuildDynalink dynalink(int dynalinkNo)                                                                                                           |                                                                                                                                           |\n| public int dynalinkCount()                                                                                                                                   |                                                                                                                                           |\n| public boolean embedded()                                                                                                                                    |                                                                                                                                           |\n| public boolean enabled(\\[boolean value\\])                                                                                                                    | Determines whether to enable or disable the object.                                                                                       |\n| public boolean existsMeanOrExists(\\[boolean value\\])                                                                                                         |                                                                                                                                           |\n| public int fetchMode(\\[int value\\])                                                                                                                          |                                                                                                                                           |\n| public QueryBuildFieldList fields()                                                                                                                          |                                                                                                                                           |\n| public TableId file()                                                                                                                                        |                                                                                                                                           |\n| public QueryBuildRange findRange(FieldId field, \\[int occurrence\\], \\[int arrayIndex\\])                                                                      |                                                                                                                                           |\n| public boolean firstFast(\\[boolean value\\])                                                                                                                  | Determines whether to retrieve the first record from the query before the other records.                                                  |\n| public boolean firstOnly(\\[boolean value\\])                                                                                                                  |                                                                                                                                           |\n| public int getMostRestrictedQueryBuildRangeStatus(FieldId field, \\[int occurrence\\], \\[int arrayIndex\\])                                                     |                                                                                                                                           |\n| public Common getNo()                                                                                                                                        |                                                                                                                                           |\n| public int id()                                                                                                                                              |                                                                                                                                           |\n| public boolean indexIsHint(boolean arg)                                                                                                                      |                                                                                                                                           |\n| public boolean isPartOfSubQueryInBaseQuery()                                                                                                                 |                                                                                                                                           |\n| public boolean joined()                                                                                                                                      |                                                                                                                                           |\n| public container joinedDataSources()                                                                                                                         |                                                                                                                                           |\n| public int joinMode(\\[int value\\])                                                                                                                           |                                                                                                                                           |\n| public str label(\\[str value\\])                                                                                                                              | Gets or sets the label for a control.                                                                                                     |\n| public int level()                                                                                                                                           |                                                                                                                                           |\n| public QueryBuildLink link(int associationNo)                                                                                                                |                                                                                                                                           |\n| public int linkCount()                                                                                                                                       |                                                                                                                                           |\n| public str name(\\[str value\\])                                                                                                                               | Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object. |\n| public container oneToOneDataSources()                                                                                                                       |                                                                                                                                           |\n| public int orderMode(\\[int value\\])                                                                                                                          |                                                                                                                                           |\n| public QueryBuildDataSource parentDataSource()                                                                                                               |                                                                                                                                           |\n| public str policyContext(\\[str value\\])                                                                                                                      |                                                                                                                                           |\n| public QueryBuildRange range(int rangeNo)                                                                                                                    |                                                                                                                                           |\n| public int rangeCount()                                                                                                                                      |                                                                                                                                           |\n| public QueryBuildRange rangeField(FieldId field, \\[int occurrence\\])                                                                                         |                                                                                                                                           |\n| public boolean relations(\\[boolean value\\])                                                                                                                  |                                                                                                                                           |\n| public int selectionCount()                                                                                                                                  |                                                                                                                                           |\n| public boolean selectWithRepeatableRead(\\[boolean value\\])                                                                                                   |                                                                                                                                           |\n| public SortOrder sortDirection(FieldId field, \\[SortOrder direction\\])                                                                                       |                                                                                                                                           |\n| public FieldId sortField(FieldId field)                                                                                                                      |                                                                                                                                           |\n| public int sortFieldCount()                                                                                                                                  |                                                                                                                                           |\n| public IndexId sortIndex(int indexNo)                                                                                                                        |                                                                                                                                           |\n| public int sortIndexCount()                                                                                                                                  |                                                                                                                                           |\n| public QueryBuildStaticlink staticlink(int staticlinkNo)                                                                                                     | Returns a static Link object on the query’s data source.                                                                                  |\n| public int staticlinkCount()                                                                                                                                 | Gives the number of static links that are defined on the QueryBuildDataSource object.                                                     |\n| public TableId table(\\[TableId value\\])                                                                                                                      | Gets or sets the table ID that is associated with the object.                                                                             |\n| public str toString()                                                                                                                                        | Returns a string that represents the current object.                                                                                      |\n| public int unionType(\\[int value\\])                                                                                                                          |                                                                                                                                           |\n| public int uniqueId()                                                                                                                                        |                                                                                                                                           |\n| public boolean update(\\[boolean value\\])                                                                                                                     | Determines whether the records fetched by this data source can be updated.                                                                |\n| public void clearLinks()                                                                                                                                     |                                                                                                                                           |\n| public void clearDynalinks()                                                                                                                                 |                                                                                                                                           |\n| public void clearRange(FieldId field, \\[int occurrence\\])                                                                                                    |                                                                                                                                           |\n| public void sortClear()                                                                                                                                      |                                                                                                                                           |\n| public void finalize()                                                                                                                                       |                                                                                                                                           |\n| public void addSelectionFieldWithAlias(str alias, FieldId field, \\[SelectionField fieldType\\])                                                               |                                                                                                                                           |\n| public void addCalculationField(Microsoft.Dynamics.AX.Analytics.CalculationModel.NumericExpression calculation, str alias)                                   |                                                                                                                                           |\n| public void addForeignKeyDynalink(Common dynamicFile, str relatedRole)                                                                                       |                                                                                                                                           |\n| public void addRelation(DictRelation relation, \\[TableScope tableScope\\])                                                                                    |                                                                                                                                           |\n| public void clearSortIndex()                                                                                                                                 |                                                                                                                                           |\n| public void clearRanges()                                                                                                                                    | Deletes all ranges that are associated with the data source.                                                                              |\n| public void linkFields(str parentField, str thisField, \\[str parentDatasourceName\\])                                                                         |                                                                                                                                           |\n| public void addSelectionField(FieldId field, \\[SelectionField fieldType\\], \\[int arrayIndex\\])                                                               |                                                                                                                                           |\n\n### Method addAllFields\n\n    public int addAllFields(TableName tableName)\n\n#### Parameters\n\ntableName  \n\n#### Return Value\n\n### Method addDataSource\n\nAdds a data source that is embedded in this data source.\n\n    public QueryBuildDataSource addDataSource(AnyType arg, [str name], [boolean emptyFieldList])\n\n#### Parameters\n\narg  \n\n<!-- -->\n\nname  \n\n<!-- -->\n\nemptyFieldList  \n\n#### Return Value\n\nThe new data source.\n\n#### Remarks\n\nTop-level data sources are created by using the addDataSource method.\n\n### Method addDynalink\n\n    public QueryBuildDynalink addDynalink(FieldId field, Common dynamicFile, FieldId dynamicField, [int fieldArrayIndex], [int dynamicFieldArrayIndex])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\ndynamicFile  \n\n<!-- -->\n\ndynamicField  \n\n<!-- -->\n\nfieldArrayIndex  \n\n<!-- -->\n\ndynamicFieldArrayIndex  \n\n#### Return Value\n\n### Method addForeignkeyRelation\n\n    public QueryBuildLink addForeignkeyRelation(str relatedTableRole, [str parentDatasourceName])\n\n#### Parameters\n\nrelatedTableRole  \n\n<!-- -->\n\nparentDatasourceName  \n\n#### Return Value\n\n### Method addGroupByField\n\n    public QueryGroupByField addGroupByField(FieldId fieldID, [int arrayIndex])\n\n#### Parameters\n\nfieldID  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method addLink\n\n    public QueryBuildLink addLink(FieldId parentField, FieldId thisField, [str parentDatasourceName])\n\n#### Parameters\n\nparentField  \n\n<!-- -->\n\nthisField  \n\n<!-- -->\n\nparentDatasourceName  \n\n#### Return Value\n\n### Method addOrderByAggregateField\n\n    public QueryOrderByField addOrderByAggregateField(SelectionField fieldType, FieldId fieldID, [SortOrder direction], [int arrayIndex])\n\n#### Parameters\n\nfieldType  \n\n<!-- -->\n\nfieldID  \n\n<!-- -->\n\ndirection  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method addOrderByCalculationField\n\n    public QueryOrderByField addOrderByCalculationField(Microsoft.Dynamics.AX.Analytics.CalculationModel.NumericExpression calculation, [SortOrder direction])\n\n#### Parameters\n\ncalculation  \n\n<!-- -->\n\ndirection  \n\n#### Return Value\n\n### Method addOrderByField\n\n    public QueryOrderByField addOrderByField(FieldId fieldID, [SortOrder direction], [int arrayIndex])\n\n#### Parameters\n\nfieldID  \n\n<!-- -->\n\ndirection  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method addRange\n\nAdds a range to the data source.\n\n    public QueryBuildRange addRange(FieldId field, [int arrayIndex], [QueryRangeType rangeType])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\narrayIndex  \n\n<!-- -->\n\nrangeType  \n\n#### Return Value\n\nA new range for the data source.\n\n#### Remarks\n\nRanges define the values that records from the data source's table must satisfy. Several range values can exist for the same field in a particular data source. In this case, the values are included in the query if the record qualifies for any of the values that are supplied. When ranges are included for multiple fields, only records that satisfy the constraints that are supplied by both criteria are included. The constraints are specified in the value method.\n\n### Method addSortField\n\n    public int addSortField(FieldId sortField, [SortOrder direction], [int arrayIndex])\n\n#### Parameters\n\nsortField  \n\n<!-- -->\n\ndirection  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method addSortIndex\n\n    public int addSortIndex(IndexId index)\n\n#### Parameters\n\nindex  \n\n#### Return Value\n\n### Method allowAdd\n\n    public int allowAdd([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method applyFilter\n\n    public boolean applyFilter(FilterValue filterValue)\n\n#### Parameters\n\nfilterValue  \n\n#### Return Value\n\n### Method autoHeader\n\n    public boolean autoHeader(FieldId field, [boolean orderNo])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\norderNo  \n\n#### Return Value\n\n### Method autoHeaderDetailLevel\n\n    public int autoHeaderDetailLevel(FieldId field, [int orderNo])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\norderNo  \n\n#### Return Value\n\n### Method autoSum\n\n    public boolean autoSum(FieldId field, [boolean orderNo])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\norderNo  \n\n#### Return Value\n\n### Method autoSumDetailLevel\n\n    public int autoSumDetailLevel(FieldId field, [int orderNo])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\norderNo  \n\n#### Return Value\n\n### Method changedNo\n\n    public boolean changedNo()\n\n#### Return Value\n\n### Method childDataSourceCount\n\n    public int childDataSourceCount()\n\n#### Return Value\n\n### Method childDataSourceNo\n\n    public QueryBuildDataSource childDataSourceNo(int dataSourceNo)\n\n#### Parameters\n\ndataSourceNo  \n\n#### Return Value\n\n### Method company\n\n    public str company([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method concurrencyModel\n\n    public int concurrencyModel([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dynalink\n\n    public QueryBuildDynalink dynalink(int dynalinkNo)\n\n#### Parameters\n\ndynalinkNo  \n\n#### Return Value\n\n### Method dynalinkCount\n\n    public int dynalinkCount()\n\n#### Return Value\n\n### Method embedded\n\n    public boolean embedded()\n\n#### Return Value\n\n### Method enabled\n\nDetermines whether to enable or disable the object.\n\n    public boolean enabled([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the object is enabled; otherwise, false.\n\n#### Remarks\n\nThe enabled property enables controls to be enabled or disabled at run time. For example, you can disable objects that do not apply to the current state of the application. You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.\n\n### Method existsMeanOrExists\n\n    public boolean existsMeanOrExists([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method fetchMode\n\n    public int fetchMode([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method fields\n\n    public QueryBuildFieldList fields()\n\n#### Return Value\n\n### Method file\n\n    public TableId file()\n\n#### Return Value\n\n### Method findRange\n\n    public QueryBuildRange findRange(FieldId field, [int occurrence], [int arrayIndex])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\noccurrence  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method firstFast\n\nDetermines whether to retrieve the first record from the query before the other records.\n\n    public boolean firstFast([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the first record is retrieved first; otherwise, false.\n\n#### Remarks\n\nThe firstFast property enables some database systems to optimize record retrieval, which improves performance. If the database does not support this property, it is ignored.\n\n### Method firstOnly\n\n    public boolean firstOnly([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method getMostRestrictedQueryBuildRangeStatus\n\n    public int getMostRestrictedQueryBuildRangeStatus(FieldId field, [int occurrence], [int arrayIndex])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\noccurrence  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method getNo\n\n    public Common getNo()\n\n#### Return Value\n\n### Method id\n\n    public int id()\n\n#### Return Value\n\n### Method indexIsHint\n\n    public boolean indexIsHint(boolean arg)\n\n#### Parameters\n\narg  \n\n#### Return Value\n\n### Method isPartOfSubQueryInBaseQuery\n\n    public boolean isPartOfSubQueryInBaseQuery()\n\n#### Return Value\n\n### Method joined\n\n    public boolean joined()\n\n#### Return Value\n\n### Method joinedDataSources\n\n    public container joinedDataSources()\n\n#### Return Value\n\n### Method joinMode\n\n    public int joinMode([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method label\n\nGets or sets the label for a control.\n\n    public str label([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the label string.\n\n#### Remarks\n\nThe label determines which text is displayed in the control or adjacent to it. The label property value cannot exceed 250 characters.\n\n### Method level\n\n    public int level()\n\n#### Return Value\n\n### Method link\n\n    public QueryBuildLink link(int associationNo)\n\n#### Parameters\n\nassociationNo  \n\n#### Return Value\n\n### Method linkCount\n\n    public int linkCount()\n\n#### Return Value\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   Begins with a letter.\n-   Doesn't exceed 250 characters.\n-   Can include numbers and underscore characters.\n-   Cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.\n\n### Method oneToOneDataSources\n\n    public container oneToOneDataSources()\n\n#### Return Value\n\n### Method orderMode\n\n    public int orderMode([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method parentDataSource\n\n    public QueryBuildDataSource parentDataSource()\n\n#### Return Value\n\n### Method policyContext\n\n    public str policyContext([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method range\n\n    public QueryBuildRange range(int rangeNo)\n\n#### Parameters\n\nrangeNo  \n\n#### Return Value\n\n### Method rangeCount\n\n    public int rangeCount()\n\n#### Return Value\n\n### Method rangeField\n\n    public QueryBuildRange rangeField(FieldId field, [int occurrence])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\noccurrence  \n\n#### Return Value\n\n### Method relations\n\n    public boolean relations([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method selectionCount\n\n    public int selectionCount()\n\n#### Return Value\n\n### Method selectWithRepeatableRead\n\n    public boolean selectWithRepeatableRead([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method sortDirection\n\n    public SortOrder sortDirection(FieldId field, [SortOrder direction])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\ndirection  \n\n#### Return Value\n\n### Method sortField\n\n    public FieldId sortField(FieldId field)\n\n#### Parameters\n\nfield  \n\n#### Return Value\n\n### Method sortFieldCount\n\n    public int sortFieldCount()\n\n#### Return Value\n\n### Method sortIndex\n\n    public IndexId sortIndex(int indexNo)\n\n#### Parameters\n\nindexNo  \n\n#### Return Value\n\n### Method sortIndexCount\n\n    public int sortIndexCount()\n\n#### Return Value\n\n### Method staticlink\n\nReturns a static Link object on the query’s data source.\n\n    public QueryBuildStaticlink staticlink(int staticlinkNo)\n\n#### Parameters\n\nstaticlinkNo  \n\n#### Return Value\n\nThe static Link object at the \\_staticLinkNo index.\n\n### Method staticlinkCount\n\nGives the number of static links that are defined on the QueryBuildDataSource object.\n\n    public int staticlinkCount()\n\n#### Return Value\n\nThe number of static links that are defined on the QueryBuildDataSource object.\n\n### Method table\n\nGets or sets the table ID that is associated with the object.\n\n    public TableId table([TableId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the table ID that is associated with the object.\n\n### Method toString\n\nReturns a string that represents the current object.\n\n    public str toString()\n\n#### Return Value\n\nA string that represents the current object.\n\n#### Remarks\n\nThe default implementation returns the class name of the object. The method can be overridden in a derived class to return values that are meaningful for that type. For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.\n\n### Method unionType\n\n    public int unionType([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method uniqueId\n\n    public int uniqueId()\n\n#### Return Value\n\n### Method update\n\nDetermines whether the records fetched by this data source can be updated.\n\n    public boolean update([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the records can be updated; otherwise, false.\n\n#### Remarks\n\nTo update the records, start a separate transaction by using the ttsBegin and ttsCommit methods.\n\n### Method clearLinks\n\n    public void clearLinks()\n\n### Method clearDynalinks\n\n    public void clearDynalinks()\n\n### Method clearRange\n\n    public void clearRange(FieldId field, [int occurrence])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\noccurrence  \n\n### Method sortClear\n\n    public void sortClear()\n\n### Method finalize\n\n    public void finalize()\n\n### Method addSelectionFieldWithAlias\n\n    public void addSelectionFieldWithAlias(str alias, FieldId field, [SelectionField fieldType])\n\n#### Parameters\n\nalias  \n\n<!-- -->\n\nfield  \n\n<!-- -->\n\nfieldType  \n\n### Method addCalculationField\n\n    public void addCalculationField(Microsoft.Dynamics.AX.Analytics.CalculationModel.NumericExpression calculation, str alias)\n\n#### Parameters\n\ncalculation  \n\n<!-- -->\n\nalias  \n\n### Method addForeignKeyDynalink\n\n    public void addForeignKeyDynalink(Common dynamicFile, str relatedRole)\n\n#### Parameters\n\ndynamicFile  \n\n<!-- -->\n\nrelatedRole  \n\n### Method addRelation\n\n    public void addRelation(DictRelation relation, [TableScope tableScope])\n\n#### Parameters\n\nrelation  \n\n<!-- -->\n\ntableScope  \n\n### Method clearSortIndex\n\n    public void clearSortIndex()\n\n### Method clearRanges\n\nDeletes all ranges that are associated with the data source.\n\n    public void clearRanges()\n\n#### Examples\n\nThe following example adds ranges and then removes them from a data source.\n\n    Query Q = new Query(); \n    QueryBuildDataSource ds = q.addDataSource(TableNum(CustTable)); \n    QueryBuildRange r = ds.addRange(FieldNum(CustTable, recId)); \n    print ds.rangeCount(); \n    ds.clearRanges(); \n    print ds.rangeCount(); \n    pause;\n\n### Method linkFields\n\n    public void linkFields(str parentField, str thisField, [str parentDatasourceName])\n\n#### Parameters\n\nparentField  \n\n<!-- -->\n\nthisField  \n\n<!-- -->\n\nparentDatasourceName  \n\n### Method addSelectionField\n\n    public void addSelectionField(FieldId field, [SelectionField fieldType], [int arrayIndex])\n\n#### Parameters\n\nfield  \n\n<!-- -->\n\nfieldType  \n\n<!-- -->\n\narrayIndex  \n\n## Class QueryBuildDynalink\n    class QueryBuildDynalink extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                | Description |\n|-------------------------------------------------------|-------------|\n| public Common cursor(\\[Common cursor\\])               |             |\n| public QueryBuildDataSource dataSource()              |             |\n| public FieldId dynamicField(\\[FieldId dynamicField\\]) |             |\n| public FieldId field(\\[FieldId fieldId\\])             |             |\n| public int fieldArrayIndex()                          |             |\n| public FieldName fieldName()                          |             |\n| public void finalize()                                |             |\n\n### Method cursor\n\n    public Common cursor([Common cursor])\n\n#### Parameters\n\ncursor  \n\n#### Return Value\n\n### Method dataSource\n\n    public QueryBuildDataSource dataSource()\n\n#### Return Value\n\n### Method dynamicField\n\n    public FieldId dynamicField([FieldId dynamicField])\n\n#### Parameters\n\ndynamicField  \n\n#### Return Value\n\n### Method field\n\n    public FieldId field([FieldId fieldId])\n\n#### Parameters\n\nfieldId  \n\n#### Return Value\n\n### Method fieldArrayIndex\n\n    public int fieldArrayIndex()\n\n#### Return Value\n\n### Method fieldName\n\n    public FieldName fieldName()\n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n## Class QueryBuildFieldList\n    class QueryBuildFieldList extends TreeNode\n\nThe QueryBuildFieldList class lets you create, read, update, and delete X++ code and metadata.\n\n### Remarks\n\nMake sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n### Examples\n\n### Methods\n\n| Method                                                                                                 | Description |\n|--------------------------------------------------------------------------------------------------------|-------------|\n| public int addAllFields(TableName tableName)                                                           |             |\n| public QueryBuildFieldList addField(FieldId fieldId, \\[SelectionField fieldType\\], \\[int arrayIndex\\]) |             |\n| public int dynamic(\\[int value\\])                                                                      |             |\n| public FieldId field(int index)                                                                        |             |\n| public int fieldCount()                                                                                |             |\n| public SelectionField fieldKind(int index)                                                             |             |\n| public TableId tableSelector(int index)                                                                |             |\n| public void clearFieldList()                                                                           |             |\n\n### Method addAllFields\n\n    public int addAllFields(TableName tableName)\n\n#### Parameters\n\ntableName  \n\n#### Return Value\n\n### Method addField\n\n    public QueryBuildFieldList addField(FieldId fieldId, [SelectionField fieldType], [int arrayIndex])\n\n#### Parameters\n\nfieldId  \n\n<!-- -->\n\nfieldType  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method dynamic\n\n    public int dynamic([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method field\n\n    public FieldId field(int index)\n\n#### Parameters\n\nindex  \n\n#### Return Value\n\n### Method fieldCount\n\n    public int fieldCount()\n\n#### Return Value\n\n### Method fieldKind\n\n    public SelectionField fieldKind(int index)\n\n#### Parameters\n\nindex  \n\n#### Return Value\n\n### Method tableSelector\n\n    public TableId tableSelector(int index)\n\n#### Parameters\n\nindex  \n\n#### Return Value\n\n### Method clearFieldList\n\n    public void clearFieldList()\n\n## Class QueryBuildLink\n    class QueryBuildLink extends TreeNode\n\nThe QueryBuildLink class enables for the creating, reading, updating, and deleting of X++ code and metadata.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                      | Description |\n|-----------------------------|-------------|\n| public int delete()         |             |\n| public int field()          |             |\n| public boolean incomplete() |             |\n| public str joinRelation()   |             |\n| public int relatedField()   |             |\n| public int relatedTable()   |             |\n| public int table()          |             |\n| public void finalize()      |             |\n\n### Method delete\n\n    public int delete()\n\n#### Return Value\n\n### Method field\n\n    public int field()\n\n#### Return Value\n\n### Method incomplete\n\n    public boolean incomplete()\n\n#### Return Value\n\n### Method joinRelation\n\n    public str joinRelation()\n\n#### Return Value\n\n### Method relatedField\n\n    public int relatedField()\n\n#### Return Value\n\n### Method relatedTable\n\n    public int relatedTable()\n\n#### Return Value\n\n### Method table\n\n    public int table()\n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n## Class QueryBuildRange\n    class QueryBuildRange extends TreeNode\n\nThe QueryBuildRange class represents the ranges that define which records should be fetched from the data source in which the QueryBuildRange class is associated.\n\n### Remarks\n\nThe value property can be used to set the string that defines the range. This class lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called. A particular data source can have any number of ranges. Multiple ranges are valid for the same data source field.\n\n### Examples\n\nThe following basic example shows how to use the QueryBuildRange class to specify the range of interest for a specific data field.\n\n    Query                   query; \n    QueryRun                queryRun; \n    QueryBuildDataSource    queryBuildDataSource; \n    QueryBuildRange         queryBuildRange; \n    CustTable               custTable; \n    query = new Query(); \n    queryBuildDataSource = query.addDataSource( \n       TableNum(CustTable)); \n    queryBuildRange = queryBuildDataSource.addRange( \n        FieldNum(CustTable,AccountNum)); \n    queryBuildRange.value(\"4000..5000\"); \n    queryRun = new queryRun(query); \n    if (queryRun.prompt()) \n    { \n        while (queryRun.next()) \n        { \n            custTable = queryRun.get(TableNum(CustTable)); \n            print custTable.AccountNum; \n        } \n    }\n\n### Methods\n\n| Method                                                        | Description                                                                                                                               |\n|---------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| public QueryBuildDataSource dataSource()                      | Returns the data source that was used to instantiate the QueryBuildRange object.                                                          |\n| public boolean doesRangeNodeBelongToCompositeQuery()          |                                                                                                                                           |\n| public boolean enabled(\\[boolean value\\])                     | Determines whether to enable or disable the object.                                                                                       |\n| public FieldId field(\\[FieldId value\\])                       | Gets or sets the field ID associated with the object.                                                                                     |\n| public int fieldArrayIndex()                                  |                                                                                                                                           |\n| public FieldName fieldName()                                  |                                                                                                                                           |\n| public str label(\\[str value\\])                               | Gets or sets the label for a control.                                                                                                     |\n| public str name(\\[str value\\])                                | Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object. |\n| public str prompt()                                           |                                                                                                                                           |\n| public QueryRangeType rangeType(\\[QueryRangeType rangeType\\]) |                                                                                                                                           |\n| public int status(\\[int value\\])                              | Gets or sets the status of an object.                                                                                                     |\n| public TableId table(\\[TableId value\\])                       | Gets or sets the table ID that is associated with the object.                                                                             |\n| public TableId tableSelector(\\[TableId value\\])               |                                                                                                                                           |\n| public str toString()                                         | Returns a string that represents the current object.                                                                                      |\n| public int typeof()                                           |                                                                                                                                           |\n| public boolean valid()                                        |                                                                                                                                           |\n| public str value(\\[str value\\])                               | Gets or sets the value that queried records must match to be retrieved.                                                                   |\n| public void associateRangeNodeToCompositeQuery()              |                                                                                                                                           |\n| public void finalize()                                        |                                                                                                                                           |\n\n### Method dataSource\n\nReturns the data source that was used to instantiate the QueryBuildRange object.\n\n    public QueryBuildDataSource dataSource()\n\n#### Return Value\n\nThe data source that was used to instantiate the QueryBuildRange class object.\n\n### Method doesRangeNodeBelongToCompositeQuery\n\n    public boolean doesRangeNodeBelongToCompositeQuery()\n\n#### Return Value\n\n### Method enabled\n\nDetermines whether to enable or disable the object.\n\n    public boolean enabled([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the object is enabled; otherwise, false.\n\n#### Remarks\n\nThe enabled property enables controls to be enabled or disabled at run time. For example, you can disable objects that do not apply to the current state of the application. You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.\n\n### Method field\n\nGets or sets the field ID associated with the object.\n\n    public FieldId field([FieldId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the field ID associated with the object.\n\n### Method fieldArrayIndex\n\n    public int fieldArrayIndex()\n\n#### Return Value\n\n### Method fieldName\n\n    public FieldName fieldName()\n\n#### Return Value\n\n### Method label\n\nGets or sets the label for a control.\n\n    public str label([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the label string.\n\n#### Remarks\n\nThe label determines which text is displayed in the control or adjacent to it. The label property value cannot exceed 250 characters.\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   Begins with a letter.\n-   Doesn't exceed 250 characters.\n-   Can include numbers and underscore characters.\n-   Cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.\n\n### Method prompt\n\n    public str prompt()\n\n#### Return Value\n\n### Method rangeType\n\n    public QueryRangeType rangeType([QueryRangeType rangeType])\n\n#### Parameters\n\nrangeType  \n\n#### Return Value\n\n### Method status\n\nGets or sets the status of an object.\n\n    public int status([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current status of the object.\n\n#### Remarks\n\nThe following values are possible for the status:\n\n-   0 – Status Open.\n-   1 – Status Lock.\n-   2 – Status Hide.\n\n### Method table\n\nGets or sets the table ID that is associated with the object.\n\n    public TableId table([TableId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the table ID that is associated with the object.\n\n### Method tableSelector\n\n    public TableId tableSelector([TableId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method toString\n\nReturns a string that represents the current object.\n\n    public str toString()\n\n#### Return Value\n\nA string that represents the current object.\n\n#### Remarks\n\nThe default implementation returns the class name of the object. The method can be overridden in a derived class to return values that are meaningful for that type. For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.\n\n### Method typeof\n\n    public int typeof()\n\n#### Return Value\n\n### Method valid\n\n    public boolean valid()\n\n#### Return Value\n\n### Method value\n\nGets or sets the value that queried records must match to be retrieved.\n\n    public str value([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe string value for the range.\n\n### Method associateRangeNodeToCompositeQuery\n\n    public void associateRangeNodeToCompositeQuery()\n\n### Method finalize\n\n    public void finalize()\n\n## Class QueryBuildStaticlink\n    class QueryBuildStaticlink extends Object\n\nThe QueryBuildStaticLink class provides the information about the static links that are defined on a QueryBuildDataSource class.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                 | Description                                                         |\n|------------------------|---------------------------------------------------------------------|\n| public FieldId field() | Provides the field information on which the static link is defined/ |\n| public AnyType value() | Gets the value of the field on which the static link is defined.    |\n| public void finalize() |                                                                     |\n\n### Method field\n\nProvides the field information on which the static link is defined/\n\n    public FieldId field()\n\n#### Return Value\n\nThe FieldId value of the field on which the static link is defined.\n\n### Method value\n\nGets the value of the field on which the static link is defined.\n\n    public AnyType value()\n\n#### Return Value\n\nThe value of the static link.\n\n### Method finalize\n\n    public void finalize()\n\n## Class QueryFilter\n    class QueryFilter extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                        | Description                                          |\n|---------------------------------------------------------------|------------------------------------------------------|\n| public QueryBuildDataSource dataSource()                      |                                                      |\n| public FieldName field()                                      |                                                      |\n| public QueryRangeType rangeType(\\[QueryRangeType rangeType\\]) |                                                      |\n| public int status(\\[int status\\])                             |                                                      |\n| public str toString()                                         | Returns a string that represents the current object. |\n| public str value(\\[str value\\])                               |                                                      |\n| public void finalize()                                        |                                                      |\n\n### Method dataSource\n\n    public QueryBuildDataSource dataSource()\n\n#### Return Value\n\n### Method field\n\n    public FieldName field()\n\n#### Return Value\n\n### Method rangeType\n\n    public QueryRangeType rangeType([QueryRangeType rangeType])\n\n#### Parameters\n\nrangeType  \n\n#### Return Value\n\n### Method status\n\n    public int status([int status])\n\n#### Parameters\n\nstatus  \n\n#### Return Value\n\n### Method toString\n\nReturns a string that represents the current object.\n\n    public str toString()\n\n#### Return Value\n\nA string that represents the current object.\n\n#### Remarks\n\nThe default implementation returns the class name of the object. The method can be overridden in a derived class to return values that are meaningful for that type. For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.\n\n### Method value\n\n    public str value([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n## Class QueryGroupByField\n    class QueryGroupByField extends TreeNode\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                  | Description |\n|---------------------------------------------------------|-------------|\n| public boolean autoHeader(\\[boolean value\\])            |             |\n| public int autoHeaderDetailLevel(\\[int value\\])         |             |\n| public boolean autoSum(\\[boolean value\\])               |             |\n| public int autoSumDetailLevel(\\[int value\\])            |             |\n| public QueryBuildDataSource dataSource()                |             |\n| public int fieldID()                                    |             |\n| public TableId tableSelector(\\[TableId tableSelector\\]) |             |\n| public void finalize()                                  |             |\n\n### Method autoHeader\n\n    public boolean autoHeader([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method autoHeaderDetailLevel\n\n    public int autoHeaderDetailLevel([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method autoSum\n\n    public boolean autoSum([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method autoSumDetailLevel\n\n    public int autoSumDetailLevel([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataSource\n\n    public QueryBuildDataSource dataSource()\n\n#### Return Value\n\n### Method fieldID\n\n    public int fieldID()\n\n#### Return Value\n\n### Method tableSelector\n\n    public TableId tableSelector([TableId tableSelector])\n\n#### Parameters\n\ntableSelector  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n## Class QueryHavingFilter\n    class QueryHavingFilter extends TreeNode\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                          | Description                                                                                                                               |\n|-------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| public AggregateFunction aggregateFunction()    |                                                                                                                                           |\n| public QueryBuildDataSource dataSource()        |                                                                                                                                           |\n| public boolean enabled(\\[boolean value\\])       | Determines whether to enable or disable the object.                                                                                       |\n| public FieldId field(\\[FieldId value\\])         | Gets or sets the field ID associated with the object.                                                                                     |\n| public int fieldArrayIndex()                    |                                                                                                                                           |\n| public FieldName fieldName()                    |                                                                                                                                           |\n| public str label(\\[str value\\])                 | Gets or sets the label for a control.                                                                                                     |\n| public str name(\\[str value\\])                  | Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object. |\n| public str prompt()                             |                                                                                                                                           |\n| public int status(\\[int value\\])                | Gets or sets the status of an object.                                                                                                     |\n| public TableId table(\\[TableId value\\])         | Gets or sets the table ID that is associated with the object.                                                                             |\n| public TableId tableSelector(\\[TableId value\\]) |                                                                                                                                           |\n| public str toString()                           | Returns a string that represents the current object.                                                                                      |\n| public int typeof()                             |                                                                                                                                           |\n| public boolean valid()                          |                                                                                                                                           |\n| public str value(\\[str value\\])                 |                                                                                                                                           |\n| public void finalize()                          |                                                                                                                                           |\n\n### Method aggregateFunction\n\n    public AggregateFunction aggregateFunction()\n\n#### Return Value\n\n### Method dataSource\n\n    public QueryBuildDataSource dataSource()\n\n#### Return Value\n\n### Method enabled\n\nDetermines whether to enable or disable the object.\n\n    public boolean enabled([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the object is enabled; otherwise, false.\n\n#### Remarks\n\nThe enabled property enables controls to be enabled or disabled at run time. For example, you can disable objects that do not apply to the current state of the application. You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.\n\n### Method field\n\nGets or sets the field ID associated with the object.\n\n    public FieldId field([FieldId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the field ID associated with the object.\n\n### Method fieldArrayIndex\n\n    public int fieldArrayIndex()\n\n#### Return Value\n\n### Method fieldName\n\n    public FieldName fieldName()\n\n#### Return Value\n\n### Method label\n\nGets or sets the label for a control.\n\n    public str label([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the label string.\n\n#### Remarks\n\nThe label determines which text is displayed in the control or adjacent to it. The label property value cannot exceed 250 characters.\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   Begins with a letter.\n-   Doesn't exceed 250 characters.\n-   Can include numbers and underscore characters.\n-   Cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.\n\n### Method prompt\n\n    public str prompt()\n\n#### Return Value\n\n### Method status\n\nGets or sets the status of an object.\n\n    public int status([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the status of the object.\n\n### Method table\n\nGets or sets the table ID that is associated with the object.\n\n    public TableId table([TableId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the table ID that is associated with the object.\n\n### Method tableSelector\n\n    public TableId tableSelector([TableId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method toString\n\nReturns a string that represents the current object.\n\n    public str toString()\n\n#### Return Value\n\nA string that represents the current object.\n\n#### Remarks\n\nThe default implementation returns the class name of the object. The method can be overridden in a derived class to return values that are meaningful for that type. For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.\n\n### Method typeof\n\n    public int typeof()\n\n#### Return Value\n\n### Method valid\n\n    public boolean valid()\n\n#### Return Value\n\n### Method value\n\n    public str value([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n## Class QueryOrderByField\n    class QueryOrderByField extends TreeNode\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                  | Description |\n|---------------------------------------------------------|-------------|\n| public boolean autoHeader(\\[boolean value\\])            |             |\n| public int autoHeaderDetailLevel(\\[int value\\])         |             |\n| public boolean autoSum(\\[boolean value\\])               |             |\n| public int autoSumDetailLevel(\\[int value\\])            |             |\n| public QueryBuildDataSource dataSource()                |             |\n| public SortOrder direction()                            |             |\n| public int fieldID()                                    |             |\n| public TableId tableSelector(\\[TableId tableSelector\\]) |             |\n| public void finalize()                                  |             |\n\n### Method autoHeader\n\n    public boolean autoHeader([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method autoHeaderDetailLevel\n\n    public int autoHeaderDetailLevel([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method autoSum\n\n    public boolean autoSum([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method autoSumDetailLevel\n\n    public int autoSumDetailLevel([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataSource\n\n    public QueryBuildDataSource dataSource()\n\n#### Return Value\n\n### Method direction\n\n    public SortOrder direction()\n\n#### Return Value\n\n### Method fieldID\n\n    public int fieldID()\n\n#### Return Value\n\n### Method tableSelector\n\n    public TableId tableSelector([TableId tableSelector])\n\n#### Parameters\n\ntableSelector  \n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n## Class QueryRun\n    class QueryRun extends ObjectRun\n\nThe QueryRun class traverses tables in the database, fetches records that satisfy constraints that are given by the user, and helps to gather such constraints from user input.\n\n### Remarks\n\nQueryRun objects are used to traverse tables in the database and fetch records that satisfy the constraints that are given by the user. A QueryRun object may interact with the user to let the user enter such constraints. Queries are used internally by reports to delineate and fetch the data to be presented in the report. A QueryRun object relies on a Query object to define the structure of the query (for example, which tables are searched and how the records are sorted). A QueryRun object defines the dynamic behavior of the query, whereas a Query object defines the static characteristics of the query.\n\n### Examples\n\nIn the following example, it is assumed that there is a query named Customer in the Finance and Operations Application Object Tree (AOT), and that it has one data source, the CustTable table.\n\n    static void example() \n    { \n        // Create a QueryRun object from a query stored in the AOT. \n        QueryRun qr = new QueryRun (\"Customer\"); \n        CustTable customerRecord; \n        // Display a window enabling the user to choose which records to print. \n        if (qr.prompt()) \n        { \n            // The user clicked OK. \n            while (qr.next()) \n            { \n                // Get the fetched record. \n                CustomerRecord = qr.GetNo(1); \n                // Do something with it \n                print CustomerRecord.AccountNum; \n            } \n        } \n        else \n        { \n            // The user pressed Cancel, so do nothing. \n        } \n    }\n\n### Methods\n\n| Method                                                                                                         | Description                                                                                                                               |\n|----------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| public boolean allowCheck(\\[boolean value\\])                                                                   |                                                                                                                                           |\n| public boolean allowCrossCompany(\\[boolean value\\])                                                            |                                                                                                                                           |\n| public boolean canPage(\\[boolean skipOrderByCheck\\], \\[boolean throwIfNotPagable\\], \\[boolean isValuePaging\\]) |                                                                                                                                           |\n| public boolean changed(TableId table, \\[int occurrence\\])                                                      | Determines whether the specified data source has fetched a new value since the last call to the QueryRun.next method.                     |\n| public str changedBy(\\[str value\\])                                                                            | Gets or sets the name of the user who last changed the application object.                                                                |\n| public Date changedDate(\\[Date value\\])                                                                        | Gets or sets the date an application object was last changed.                                                                             |\n| public boolean changedNo(int dataSourceNo)                                                                     |                                                                                                                                           |\n| public str changedTime(\\[str value\\])                                                                          | Gets or sets the time an application object was last changed.                                                                             |\n| public str createdBy(\\[str value\\])                                                                            | Gets or sets the name of the user who created the application object.                                                                     |\n| public Date creationDate(\\[Date value\\])                                                                       | Gets or sets the date an application object was created.                                                                                  |\n| public str creationTime(\\[str value\\])                                                                         |                                                                                                                                           |\n| public str description(\\[str value\\])                                                                          |                                                                                                                                           |\n| public boolean equal(Object obj)                                                                               | Determines whether the specified object is equal to the current object.                                                                   |\n| public str form(\\[str value\\])                                                                                 |                                                                                                                                           |\n| public Common get(TableId table, \\[int occurrence\\])                                                           | Retrieves the record fetched by the previous call to next method.                                                                         |\n| public System.Type getImpExpDataContractType()                                                                 |                                                                                                                                           |\n| public Common getNo(int dataSourceNo)                                                                          | Retrieves the record fetched by the previous call to QueryRun.next Method.                                                                |\n| public boolean importable()                                                                                    |                                                                                                                                           |\n| public boolean interactive(\\[boolean value\\])                                                                  |                                                                                                                                           |\n| public boolean isPositionPagingEnabled()                                                                       |                                                                                                                                           |\n| public boolean isQueryTimedout()                                                                               |                                                                                                                                           |\n| public boolean isValueBasedPagingEnabled()                                                                     |                                                                                                                                           |\n| public int literals(\\[int value\\])                                                                             |                                                                                                                                           |\n| public Guid loadCsv(str fileName)                                                                              |                                                                                                                                           |\n| public Guid loadXml(str fileName)                                                                              |                                                                                                                                           |\n| public str name(\\[str value\\])                                                                                 | Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object. |\n| public QueryRun newObject(AnyType source)                                                                      |                                                                                                                                           |\n| public boolean next()                                                                                          | Retrieves the next record from the query.                                                                                                 |\n| public int nextUniqueId(\\[int value\\])                                                                         |                                                                                                                                           |\n| public Guid origin(\\[Guid value\\])                                                                             |                                                                                                                                           |\n| public container pack(\\[boolean doCheck\\])                                                                     |                                                                                                                                           |\n| public boolean prompt()                                                                                        | Presents, to the user, the options for defining the records to be fetched by the query.                                                   |\n| public Query query(\\[Query query\\])                                                                            |                                                                                                                                           |\n| public int queryType(\\[int value\\])                                                                            |                                                                                                                                           |\n| public boolean recordLevelSecurity(\\[boolean value\\])                                                          |                                                                                                                                           |\n| public ReportRun report()                                                                                      |                                                                                                                                           |\n| public ReportRun reportRun()                                                                                   |                                                                                                                                           |\n| public boolean saved()                                                                                         |                                                                                                                                           |\n| public boolean saveUserSetup(\\[boolean saveIt\\])                                                               | Saves the user setup.                                                                                                                     |\n| public boolean searchable(\\[boolean value\\])                                                                   |                                                                                                                                           |\n| public boolean setCursor(Common record, \\[int occurrence\\])                                                    |                                                                                                                                           |\n| public boolean setRecord(Common record, \\[int occurrence\\])                                                    |                                                                                                                                           |\n| public str title(\\[str value\\])                                                                                |                                                                                                                                           |\n| public str toString()                                                                                          | Returns a string that represents the current object.                                                                                      |\n| public boolean userUpdate(\\[boolean value\\])                                                                   |                                                                                                                                           |\n| public int version(\\[int value\\])                                                                              |                                                                                                                                           |\n| ::public static int getQueryRowCount(Query query, int maxRows)                                                 |                                                                                                                                           |\n| ::public static int runAndPopulate(Query sourceRuery, Common targetTable, Map queryAliasesAndTargetColumnsMap) |                                                                                                                                           |\n| public void run()                                                                                              | Opens a form used to obtain information about the query from the user, and fetches the matching records.                                  |\n| public void new(AnyType source)                                                                                | Initializes a new instance of the Object class.                                                                                           |\n| public void addPageRange(\\[Int64 startingPosition\\], \\[Int64 numberOfRecordsToFetch\\])                         |                                                                                                                                           |\n| public void reset()                                                                                            |                                                                                                                                           |\n| public void setImportSession(Guid importSession)                                                               |                                                                                                                                           |\n| public void setQuerytimeout(int seconds, \\[boolean raiseException\\])                                           |                                                                                                                                           |\n| public void init()                                                                                             |                                                                                                                                           |\n| public void enablePositionPaging(\\[boolean enabled\\])                                                          |                                                                                                                                           |\n| public void shred(Guid importSession)                                                                          |                                                                                                                                           |\n| public void enableValueBasedPaging(\\[boolean enable\\])                                                         |                                                                                                                                           |\n| public void bulkNext(\\[boolean fetchAllData\\])                                                                 |                                                                                                                                           |\n| public void applyValueBasedPaging(\\[Common sourceCursor\\], \\[boolean isForward\\])                              |                                                                                                                                           |\n\n### Method allowCheck\n\n    public boolean allowCheck([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method allowCrossCompany\n\n    public boolean allowCrossCompany([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method canPage\n\n    public boolean canPage([boolean skipOrderByCheck], [boolean throwIfNotPagable], [boolean isValuePaging])\n\n#### Parameters\n\nskipOrderByCheck  \n\n<!-- -->\n\nthrowIfNotPagable  \n\n<!-- -->\n\nisValuePaging  \n\n#### Return Value\n\n### Method changed\n\nDetermines whether the specified data source has fetched a new value since the last call to the QueryRun.next method.\n\n    public boolean changed(TableId table, [int occurrence])\n\n#### Parameters\n\ntable  \nThe data source to check; optional. If more than one data source is assigned to a given table, this argument can be used to determine which data source to check.\n\n<!-- -->\n\noccurrence  \nThe data source to check; optional. If more than one data source is assigned to a given table, this argument can be used to determine which data source to check.\n\n#### Return Value\n\ntrue if the specified data source has changed since the last call to QueryRun.next; otherwise, false.\n\n#### Remarks\n\nThis method is useful when data sources are hierarchically structured. A more embedded data source may change many times (such as the customer transactions). This occurs every time that a less embedded data source (such as the customer table) fetches a new record (another customer). The changedNo method can be used instead of this function.\n\n### Method changedBy\n\nGets or sets the name of the user who last changed the application object.\n\n    public str changedBy([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name of the user.\n\n### Method changedDate\n\nGets or sets the date an application object was last changed.\n\n    public Date changedDate([Date value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe date an application object was last changed.\n\n### Method changedNo\n\n    public boolean changedNo(int dataSourceNo)\n\n#### Parameters\n\ndataSourceNo  \n\n#### Return Value\n\n### Method changedTime\n\nGets or sets the time an application object was last changed.\n\n    public str changedTime([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe time an application object was last changed.\n\n### Method createdBy\n\nGets or sets the name of the user who created the application object.\n\n    public str createdBy([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name of the user.\n\n### Method creationDate\n\nGets or sets the date an application object was created.\n\n    public Date creationDate([Date value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe date an application object was created.\n\n### Method creationTime\n\n    public str creationTime([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method description\n\n    public str description([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method equal\n\nDetermines whether the specified object is equal to the current object.\n\n    public boolean equal(Object obj)\n\n#### Parameters\n\nobj  \n\n#### Return Value\n\ntrue if the specified object is equal to the current object; otherwise, false.\n\n#### Remarks\n\nThe default implementation of the Object::equal method supports only reference equality. However, derived classes can override the Object::equal method to support value equality.\n\n### Method form\n\n    public str form([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method get\n\nRetrieves the record fetched by the previous call to next method.\n\n    public Common get(TableId table, [int occurrence])\n\n#### Parameters\n\ntable  \nThe data source to be addressed; optional. The number of the data source with the given table; 1-based. If more than one data source has the same table assigned to it, this (optional) parameter can be used to specify which one is to be addressed. It specifies the number of the data source with the given table. Thus, if the CustTable table is assigned to two data sources, and the second data source is required, this argument should have the value 2.\n\n<!-- -->\n\noccurrence  \nThe data source to be addressed; optional. The number of the data source with the given table; 1-based. If more than one data source has the same table assigned to it, this (optional) parameter can be used to specify which one is to be addressed. It specifies the number of the data source with the given table. Thus, if the CustTable table is assigned to two data sources, and the second data source is required, this argument should have the value 2.\n\n#### Return Value\n\nReturns the record fetched from the data source identified by the arguments.\n\n#### Remarks\n\nThe data source from which to retrieve the record is specified by the table assigned to the data source and by an optional parameter. Instead of supplying the table (and optional parameter), you can use the getNo method, which takes the data source number as an argument.\n\n### Method getImpExpDataContractType\n\n    public System.Type getImpExpDataContractType()\n\n#### Return Value\n\n### Method getNo\n\nRetrieves the record fetched by the previous call to QueryRun.next Method.\n\n    public Common getNo(int dataSourceNo)\n\n#### Parameters\n\ndataSourceNo  \nThe number of the data source from which to get the currently selected record.\n\n#### Return Value\n\nReturns the record fetched for the data source identified by the argument.\n\n#### Remarks\n\nThe data source from which to retrieve the record is specified by the number of the data source. The data sources are counted consecutively, starting from 1. The QueryRun.get Method method can be used instead; that method is supplied with the table (and an optional parameter), that defines the data source.\n\n#### Examples\n\n    { \n        QueryRun qr; \n        // Consider a query with CustTable/CustTrans datasources. \n        // Traverse all records found in CustTable/CustTrans: \n        while (qr.next()) \n        { \n            if (qr.Changed(TableNum(CustTable)))\n            { \n                // A new CustTable record \n                CustTableRecord = qr.GetNo(1); \n            } \n            if (qr.Changed(TableNum(CustTrans))) \n            { \n                // A new CustTrans record \n                CustTransRecord = qr.GetNo(1); \n            } \n        } \n    }\n\n### Method importable\n\n    public boolean importable()\n\n#### Return Value\n\n### Method interactive\n\n    public boolean interactive([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method isPositionPagingEnabled\n\n    public boolean isPositionPagingEnabled()\n\n#### Return Value\n\n### Method isQueryTimedout\n\n    public boolean isQueryTimedout()\n\n#### Return Value\n\n### Method isValueBasedPagingEnabled\n\n    public boolean isValueBasedPagingEnabled()\n\n#### Return Value\n\n### Method literals\n\n    public int literals([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method loadCsv\n\n    public Guid loadCsv(str fileName)\n\n#### Parameters\n\nfileName  \n\n#### Return Value\n\n### Method loadXml\n\n    public Guid loadXml(str fileName)\n\n#### Parameters\n\nfileName  \n\n#### Return Value\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   Begins with a letter.\n-   Doesn't exceed 250 characters.\n-   Can include numbers and underscore characters.\n-   Cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enumerations, or classes.\n\n### Method newObject\n\n    public QueryRun newObject(AnyType source)\n\n#### Parameters\n\nsource  \n\n#### Return Value\n\n### Method next\n\nRetrieves the next record from the query.\n\n    public boolean next()\n\n#### Return Value\n\ntrue if the next record is available and can be fetched with the getNo method or get method; false if no there are no more records that satisfy the constraint set up in the query.\n\n#### Remarks\n\nThe changed method or changedNo method can be used to check whether the record from the given data source has changed since the previous call to the next method.\n\n#### Examples\n\n    { \n        queryRun qr; \n        CustTable ct; \n        // ... \n        if (qr.prompt()) \n        { \n            while (qr.next()) \n            { \n                if (qr.Changed(tableNum(CustTable))) \n                { \n                    ct = qr.Get (tableNum(CustTable)); \n                    print ct.AccountNum; \n                } \n            } \n        } \n    }\n\n### Method nextUniqueId\n\n    public int nextUniqueId([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method origin\n\n    public Guid origin([Guid value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method pack\n\n    public container pack([boolean doCheck])\n\n#### Parameters\n\ndoCheck  \n\n#### Return Value\n\n### Method prompt\n\nPresents, to the user, the options for defining the records to be fetched by the query.\n\n    public boolean prompt()\n\n#### Return Value\n\ntrue if the user clicked OK and the search is to continue; false if the user clicked Cancel to stop the search.\n\n#### Remarks\n\nThe user is presented with a form to give ranges that define constraints to be fulfilled by the fetched records. Or the user may add new fields to delimit, change the sorting, and so on. This method can be overloaded to prompt the user in an application-defined way instead of in through the predefined query form. Or this method can be overloaded to avoid giving the user control over which records are fetched. To produce these results, do not call the inherited method. In any case, the function should return true if the query is to continue, and false otherwise.\n\n#### Examples\n\n    { \n        QueryRun qr; \n        // ... \n        if (qr.prompt()) \n        { \n            // The user pressed OK. Go ahead and do whatever is required. \n        } \n        else \n        { \n            // The user pressed Cancel. \n        } \n    }\n\n### Method query\n\n    public Query query([Query query])\n\n#### Parameters\n\nquery  \n\n#### Return Value\n\n### Method queryType\n\n    public int queryType([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method recordLevelSecurity\n\n    public boolean recordLevelSecurity([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method report\n\n    public ReportRun report()\n\n#### Return Value\n\n### Method reportRun\n\n    public ReportRun reportRun()\n\n#### Return Value\n\n### Method saved\n\n    public boolean saved()\n\n#### Return Value\n\n### Method saveUserSetup\n\nSaves the user setup.\n\n    public boolean saveUserSetup([boolean saveIt])\n\n#### Parameters\n\nsaveIt  \n\n#### Return Value\n\ntrue if the setup was successfully saved; otherwise false.\n\n### Method searchable\n\n    public boolean searchable([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method setCursor\n\n    public boolean setCursor(Common record, [int occurrence])\n\n#### Parameters\n\nrecord  \n\n<!-- -->\n\noccurrence  \n\n#### Return Value\n\n### Method setRecord\n\n    public boolean setRecord(Common record, [int occurrence])\n\n#### Parameters\n\nrecord  \n\n<!-- -->\n\noccurrence  \n\n#### Return Value\n\n### Method title\n\n    public str title([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method toString\n\nReturns a string that represents the current object.\n\n    public str toString()\n\n#### Return Value\n\nA string that represents the current object.\n\n#### Remarks\n\nThe default implementation returns the class name of the object. The method can be overridden in a derived class to return values that are meaningful for that type. For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.\n\n### Method userUpdate\n\n    public boolean userUpdate([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method version\n\n    public int version([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method getQueryRowCount\n\n    public static int getQueryRowCount(Query query, int maxRows)\n\n#### Parameters\n\nquery  \n\n<!-- -->\n\nmaxRows  \n\n#### Return Value\n\n### Method runAndPopulate\n\n    public static int runAndPopulate(Query sourceRuery, Common targetTable, Map queryAliasesAndTargetColumnsMap)\n\n#### Parameters\n\nsourceRuery  \n\n<!-- -->\n\ntargetTable  \n\n<!-- -->\n\nqueryAliasesAndTargetColumnsMap  \n\n#### Return Value\n\n### Method run\n\nOpens a form used to obtain information about the query from the user, and fetches the matching records.\n\n    public void run()\n\n#### Remarks\n\nRunning the query will find the records that satisfy the constraints entered by the user. However, running the query in this manner has no side effects. In order to be useful, one or more of the inherited methods must be overloaded.\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(AnyType source)\n\n#### Parameters\n\nsource  \n\n#### Remarks\n\nWhen you pass an instance of the Query class into this constructor of the QueryRun class, a copy of the Query object is created. Changes that are made to this copy of the Query object do not affect the original Query object.\n\n### Method addPageRange\n\n    public void addPageRange([Int64 startingPosition], [Int64 numberOfRecordsToFetch])\n\n#### Parameters\n\nstartingPosition  \n\n<!-- -->\n\nnumberOfRecordsToFetch  \n\n### Method reset\n\n    public void reset()\n\n### Method setImportSession\n\n    public void setImportSession(Guid importSession)\n\n#### Parameters\n\nimportSession  \n\n### Method setQuerytimeout\n\n    public void setQuerytimeout(int seconds, [boolean raiseException])\n\n#### Parameters\n\nseconds  \n\n<!-- -->\n\nraiseException  \n\n### Method init\n\n    public void init()\n\n### Method enablePositionPaging\n\n    public void enablePositionPaging([boolean enabled])\n\n#### Parameters\n\nenabled  \n\n### Method shred\n\n    public void shred(Guid importSession)\n\n#### Parameters\n\nimportSession  \n\n### Method enableValueBasedPaging\n\n    public void enableValueBasedPaging([boolean enable])\n\n#### Parameters\n\nenable  \n\n### Method bulkNext\n\n    public void bulkNext([boolean fetchAllData])\n\n#### Parameters\n\nfetchAllData  \n\n### Method applyValueBasedPaging\n\n    public void applyValueBasedPaging([Common sourceCursor], [boolean isForward])\n\n#### Parameters\n\nsourceCursor  \n\n<!-- -->\n\nisForward  \n\n\n\n\n\n","nodes":[{"pos":[4,613],"content":"# required metadata\n\ntitle: Q Classes\ndescription: System API classes that start with the letter Q.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 51831\nms.assetid: 279efb4c-e228-4ab5-be7d-c96d91064787\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"Q Classes","nodes":[{"pos":[0,9],"content":"Q Classes","nodes":[{"content":"Q Classes","pos":[0,9]}]}],"path":["title"]},{"content":"System API classes that start with the letter Q.","nodes":[{"pos":[0,48],"content":"System API classes that start with the letter Q.","nodes":[{"content":"System API classes that start with the letter Q.","pos":[0,48]}]}],"path":["description"]}],"header":"# required metadata\n","yml":true},{"pos":[621,630],"content":"Q Classes","linkify":"Q Classes","nodes":[{"content":"Q Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter Q.","pos":[676,724]},{"pos":[726,737],"content":"Class Query","linkify":"Class Query","nodes":[{"content":"Class Query","pos":[0,11]}]},{"content":"The Query class embodies the structure of a query.","pos":[785,835]},{"pos":[841,848],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Objects of this kind are not used to fetch records from the database.","pos":[850,919]},{"content":"Instead, use a QueryRun object that can be assigned a query object.","pos":[920,987]},{"content":"The dynamic behavior of a query is defined by the QueryRun class.","pos":[988,1053]},{"content":"The static behavior is defined by the Query class.","pos":[1054,1104]},{"content":"Queries contain one or more data sources that correspond to tables in the database.","pos":[1105,1188]},{"content":"The data sources are specified by using QueryBuildDataSource objects.","pos":[1189,1258]},{"content":"This class lets you create, read, update, and delete X++ code and metadata.","pos":[1259,1334]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[1335,1445]},{"content":"Queries are used when the user wants to modify the records that are fetched by, for example, a form.","pos":[1446,1546]},{"content":"One or more ranges are often added to an existing data source.","pos":[1547,1609]},{"content":"Ranges are specified by using queryBuildRange objects.","pos":[1610,1664]},{"pos":[1670,1678],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a query object that is used to create a QueryRun object.","pos":[1680,1766]},{"pos":[2032,2039],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[2043,2049]},{"content":"Description","pos":[2212,2223]},{"content":"public Query addBaseQuery(str queryName)","pos":[2665,2705]},{"content":"public QueryBuildDataSource addDataSource(TableId table, <ph id=\"ph1\">\\[</ph>str name<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>UnionType unionType<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>boolean emptyFieldList<ph id=\"ph6\">\\]</ph>)","pos":[2976,3099],"source":"public QueryBuildDataSource addDataSource(TableId table, \\[str name\\], \\[UnionType unionType\\], \\[boolean emptyFieldList\\])"},{"content":"Adds a data source to the top level of the query.","pos":[3145,3194]},{"content":"public QueryHavingFilter addHavingFilter(QueryBuildDataSource dataSource, str fieldName, AggregateFunction aggregateFunction, <ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[3287,3432],"source":"public QueryHavingFilter addHavingFilter(QueryBuildDataSource dataSource, str fieldName, AggregateFunction aggregateFunction, \\[int arrayIndex\\])"},{"content":"public QueryFilter addQueryFilter(QueryBuildDataSource dataSource, str fieldName, <ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[3598,3699],"source":"public QueryFilter addQueryFilter(QueryBuildDataSource dataSource, str fieldName, \\[int arrayIndex\\])"},{"content":"public boolean allowCheck(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[3909,3953],"source":"public boolean allowCheck(\\[boolean value\\])"},{"content":"public boolean allowCrossCompany(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[4220,4271],"source":"public boolean allowCrossCompany(\\[boolean value\\])"},{"content":"public boolean allowHavingFilters(QueryBuildDataSource dataSource, FieldName fieldName, AggregateFunction aggregateFunction)","pos":[4531,4655]},{"content":"public boolean allowQueryFilters(QueryBuildDataSource dataSource)","pos":[4842,4907]},{"content":"public str changedBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[5153,5188],"source":"public str changedBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who last changed the Query object.","pos":[5322,5390]},{"content":"public Date changedDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[5464,5503],"source":"public Date changedDate(\\[Date value\\])"},{"content":"Gets or sets the date an application object was last changed.","pos":[5633,5694]},{"content":"public str changedTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[5775,5812],"source":"public str changedTime(\\[str value\\])"},{"content":"Gets or sets the time an application object was last changed.","pos":[5944,6005]},{"content":"public int childDataSourceCount()","pos":[6086,6119]},{"content":"Counts the number of data sources that are related to the query.","pos":[6255,6319]},{"content":"public QueryBuildDataSource childDataSourceNo(int dataSourceNo)","pos":[6397,6460]},{"content":"Returns the child data source that corresponds to the specified number.","pos":[6566,6637]},{"content":"public boolean containsAggregateFields()","pos":[6708,6748]},{"content":"public str createdBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[7019,7054],"source":"public str createdBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who created the application object.","pos":[7188,7257]},{"content":"public Date creationDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[7330,7370],"source":"public Date creationDate(\\[Date value\\])"},{"content":"Gets or sets the date an application object was created.","pos":[7499,7555]},{"content":"public str creationTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[7641,7679],"source":"public str creationTime(\\[str value\\])"},{"content":"public int dataSourceCount()","pos":[7952,7980]},{"content":"Returns the total number of data sources for the query, including any embedded data sources.","pos":[8121,8213]},{"content":"public QueryBuildDataSource dataSourceName(str name)","pos":[8263,8315]},{"content":"Returns the data source that has the specified name.","pos":[8432,8484]},{"content":"public QueryBuildDataSource dataSourceNo(int dataSourceNo)","pos":[8574,8632]},{"content":"Returns the data source that is specified by the data source number.","pos":[8743,8811]},{"content":"public QueryBuildDataSource dataSourceTable(TableId table, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>)","pos":[8885,8963],"source":"public QueryBuildDataSource dataSourceTable(TableId table, \\[int occurrence\\])"},{"content":"Returns the data source that the specified table is assigned to.","pos":[9054,9118]},{"content":"public QueryBuildDataSource dataSourceUniqueId(int uniqueId)","pos":[9196,9256]},{"content":"public str description(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[9507,9544],"source":"public str description(\\[str value\\])"},{"content":"public boolean equal(Object record)","pos":[9818,9853]},{"content":"Evaluates whether one query is equal to another.","pos":[9987,10035]},{"content":"public str exportXML()","pos":[10129,10151]},{"content":"public QueryHavingFilter findHavingFilterByField(QueryBuildDataSource dataSource, FieldName fieldName, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[10440,10582],"source":"public QueryHavingFilter findHavingFilterByField(QueryBuildDataSource dataSource, FieldName fieldName, \\[int occurrence\\], \\[int arrayIndex\\])"},{"content":"public QueryFilter findQueryFilter(QueryBuildDataSource dataSource, FieldName fieldName, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[10751,10879],"source":"public QueryFilter findQueryFilter(QueryBuildDataSource dataSource, FieldName fieldName, \\[int occurrence\\], \\[int arrayIndex\\])"},{"content":"public QueryBuildDataSource firstTopLevelDataSource()","pos":[11062,11115]},{"content":"public boolean forceNestedLoop(boolean arg)","pos":[11373,11416]},{"content":"public boolean forceSelectOrder(boolean arg)","pos":[11684,11728]},{"content":"public str form(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[11995,12025],"source":"public str form(\\[str value\\])"},{"content":"public container getCompanyRange()","pos":[12306,12340]},{"content":"public int getMostRestrictedQueryFilterStatus(QueryBuildDataSource dataSource, FieldName fieldName, <ph id=\"ph1\">\\[</ph>int fieldId<ph id=\"ph2\">\\]</ph>)","pos":[12617,12733],"source":"public int getMostRestrictedQueryFilterStatus(QueryBuildDataSource dataSource, FieldName fieldName, \\[int fieldId\\])"},{"content":"public int getNextUniqueId()","pos":[12928,12956]},{"content":"public str getSQLStatement(<ph id=\"ph1\">\\[</ph>boolean noRuntimeOptimization<ph id=\"ph2\">\\]</ph>)","pos":[13239,13300],"source":"public str getSQLStatement(\\[boolean noRuntimeOptimization\\])"},{"content":"public container getValidTimeStateDateRange()","pos":[13550,13595]},{"content":"public container getValidTimeStateDateTimeRange()","pos":[13861,13910]},{"content":"public ValidTimeStateQueryType getValidTimeStateQueryType()","pos":[14172,14231]},{"content":"public QueryGroupByField groupByField(int index, <ph id=\"ph1\">\\[</ph>QueryBuildDataSource dataSource<ph id=\"ph2\">\\]</ph>)","pos":[14483,14568],"source":"public QueryGroupByField groupByField(int index, \\[QueryBuildDataSource dataSource\\])"},{"content":"public int groupByFieldCount(<ph id=\"ph1\">\\[</ph>QueryBuildDataSource dataSource<ph id=\"ph2\">\\]</ph>)","pos":[14794,14859],"source":"public int groupByFieldCount(\\[QueryBuildDataSource dataSource\\])"},{"content":"public boolean hasMultipleTopLevelDataSource()","pos":[15105,15151]},{"content":"public boolean hasRangeOrFilter(QueryBuildDataSource dataSource)","pos":[15416,15480]},{"content":"public QueryHavingFilter havingFilter(int count, <ph id=\"ph1\">\\[</ph>QueryBuildDataSource dataSource<ph id=\"ph2\">\\]</ph>)","pos":[15727,15812],"source":"public QueryHavingFilter havingFilter(int count, \\[QueryBuildDataSource dataSource\\])"},{"content":"public int havingFilterCount(<ph id=\"ph1\">\\[</ph>QueryBuildDataSource dataSource<ph id=\"ph2\">\\]</ph>)","pos":[16038,16103],"source":"public int havingFilterCount(\\[QueryBuildDataSource dataSource\\])"},{"content":"public boolean inReport()","pos":[16349,16374]},{"content":"Determines whether the query is part of a report.","pos":[16518,16567]},{"content":"public boolean interactive(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[16660,16705],"source":"public boolean interactive(\\[boolean value\\])"},{"content":"Specifies whether the query is interactive.","pos":[16829,16872]},{"content":"public boolean isCompositeQuery()","pos":[16971,17004]},{"content":"public boolean isExplicitlyOrdered()","pos":[17282,17318]},{"content":"public boolean isExplicitlyGrouped()","pos":[17593,17629]},{"content":"public boolean isPureUnionAll()","pos":[17904,17935]},{"content":"public boolean isUnionType()","pos":[18215,18243]},{"content":"public int levelNo(int dataSourceNo)","pos":[18526,18562]},{"content":"Determines the level of indentation of the specified data source.","pos":[18695,18760]},{"content":"public int levelTable(TableId table, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>)","pos":[18837,18893],"source":"public int levelTable(TableId table, \\[int occurrence\\])"},{"content":"Determines the tree level, in the hierarchy of data sources, of the data source that is assigned to the specified table.","pos":[19006,19126]},{"content":"public int literals(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[19148,19182],"source":"public int literals(\\[int value\\])"},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[19459,19489],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[19628,19766]},{"content":"public Query newObject(AnyType source)","pos":[19771,19809]},{"content":"Creates a query that exists on the same client side or server side as the source query.","pos":[19940,20027]},{"content":"public int nextUniqueId(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[20082,20120],"source":"public int nextUniqueId(\\[int value\\])"},{"content":"public QueryOrderByField orderByField(int index, <ph id=\"ph1\">\\[</ph>QueryBuildDataSource dataSource<ph id=\"ph2\">\\]</ph>)","pos":[20393,20478],"source":"public QueryOrderByField orderByField(int index, \\[QueryBuildDataSource dataSource\\])"},{"content":"public int orderByFieldCount(<ph id=\"ph1\">\\[</ph>QueryBuildDataSource dataSource<ph id=\"ph2\">\\]</ph>)","pos":[20704,20769],"source":"public int orderByFieldCount(\\[QueryBuildDataSource dataSource\\])"},{"content":"public Guid origin(<ph id=\"ph1\">\\[</ph>Guid value<ph id=\"ph2\">\\]</ph>)","pos":[21015,21049],"source":"public Guid origin(\\[Guid value\\])"},{"content":"public container pack(<ph id=\"ph1\">\\[</ph>boolean doCheck<ph id=\"ph2\">\\]</ph>)","pos":[21326,21368],"source":"public container pack(\\[boolean doCheck\\])"},{"content":"Packs the query into a container and returns that container, so that it can be used when you create a query.","pos":[21495,21603]},{"content":"public container packInternals()","pos":[21637,21669]},{"content":"public QueryFilter queryFilter(int count, <ph id=\"ph1\">\\[</ph>QueryBuildDataSource rootDataSource<ph id=\"ph2\">\\]</ph>)","pos":[21948,22030],"source":"public QueryFilter queryFilter(int count, \\[QueryBuildDataSource rootDataSource\\])"},{"content":"public int queryFilterCount(<ph id=\"ph1\">\\[</ph>QueryBuildDataSource rootDataSource<ph id=\"ph2\">\\]</ph>)","pos":[22259,22327],"source":"public int queryFilterCount(\\[QueryBuildDataSource rootDataSource\\])"},{"content":"public int queryType(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[22570,22605],"source":"public int queryType(\\[int value\\])"},{"content":"public str quickFilterValue()","pos":[22881,22910]},{"content":"public int quickFilterControlId()","pos":[23192,23225]},{"content":"public boolean recordLevelSecurity(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[23503,23556],"source":"public boolean recordLevelSecurity(\\[boolean value\\])"},{"content":"public Report report()","pos":[23814,23836]},{"content":"Returns the report in which the query is defined, if the report exists.","pos":[23983,24054]},{"content":"public boolean saved()","pos":[24125,24147]},{"content":"Indicates whether the query has been saved to disk.","pos":[24294,24345]},{"content":"public boolean searchable(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[24436,24480],"source":"public boolean searchable(\\[boolean value\\])"},{"content":"public Guid importSession(<ph id=\"ph1\">\\[</ph>Guid value<ph id=\"ph2\">\\]</ph>)","pos":[24747,24788],"source":"public Guid importSession(\\[Guid value\\])"},{"content":"public str title(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[25058,25089],"source":"public str title(\\[str value\\])"},{"content":"public int topRows(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[25369,25402],"source":"public int topRows(\\[int value\\])"},{"content":"public str toString()","pos":[25680,25701]},{"content":"Returns a string that represents the current object.","pos":[25849,25901]},{"content":"public boolean userUpdate(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[25991,26035],"source":"public boolean userUpdate(\\[boolean value\\])"},{"content":"Gets or sets a value that indicates whether the query can update the records that it fetches.","pos":[26160,26253]},{"content":"public Date validTimeStateAsOfDate(<ph id=\"ph1\">\\[</ph>Date asOfDate<ph id=\"ph2\">\\]</ph>)","pos":[26302,26355],"source":"public Date validTimeStateAsOfDate(\\[Date asOfDate\\])"},{"content":"public DateTime validTimeStateAsOfDateTime(<ph id=\"ph1\">\\[</ph>DateTime asOfDateTime<ph id=\"ph2\">\\]</ph>)","pos":[26613,26682],"source":"public DateTime validTimeStateAsOfDateTime(\\[DateTime asOfDateTime\\])"},{"content":"public int validTimeStateFlags(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[26924,26969],"source":"public int validTimeStateFlags(\\[int value\\])"},{"content":"public int version(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[27235,27268],"source":"public int version(\\[int value\\])"},{"content":"public str xml(<ph id=\"ph1\">\\[</ph>int indent<ph id=\"ph2\">\\]</ph>)","pos":[27546,27576],"source":"public str xml(\\[int indent\\])"},{"content":"Returns an XML string that represents the current object.","pos":[27715,27772]},{"content":"public void clearBaseQueries()","pos":[27857,27887]},{"content":"public void addCompanyRange(str companyName)","pos":[28168,28212]},{"content":"public void checkRangeParsingErrors(boolean setCheckRangeParsingErrors)","pos":[28479,28550]},{"content":"public void clearCompanyRange()","pos":[28790,28821]},{"content":"public void unpackInternals(container internalData)","pos":[29101,29152]},{"content":"public void new(<ph id=\"ph1\">\\[</ph>AnyType source<ph id=\"ph2\">\\]</ph>)","pos":[29412,29447],"source":"public void new(\\[AnyType source\\])"},{"content":"Creates a query object.","pos":[29581,29604]},{"content":"public void checkFieldAccess(boolean setCheckFieldAccess)","pos":[29723,29780]},{"content":"public void useDbCacheOnGeneratedCursors(<ph id=\"ph1\">\\[</ph>int fetchsize<ph id=\"ph2\">\\]</ph>)","pos":[30034,30093],"source":"public void useDbCacheOnGeneratedCursors(\\[int fetchsize\\])"},{"content":"public void setValidTimeStateQueryType(<ph id=\"ph1\">\\[</ph>ValidTimeStateQueryType type<ph id=\"ph2\">\\]</ph>)","pos":[30345,30417],"source":"public void setValidTimeStateQueryType(\\[ValidTimeStateQueryType type\\])"},{"content":"public void validTimeStateDateRange(<ph id=\"ph1\">\\[</ph>Date fromDate<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>Date toDate<ph id=\"ph4\">\\]</ph>)","pos":[30656,30727],"source":"public void validTimeStateDateRange(\\[Date fromDate\\], \\[Date toDate\\])"},{"content":"public void clearHavingFilters(<ph id=\"ph1\">\\[</ph>QueryBuildDataSource dataSource<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>str fieldName<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>int occurence<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>int arrayIndex<ph id=\"ph8\">\\]</ph>)","pos":[30967,31092],"source":"public void clearHavingFilters(\\[QueryBuildDataSource dataSource\\], \\[str fieldName\\], \\[int occurence\\], \\[int arrayIndex\\])"},{"content":"public void quickFilter(<ph id=\"ph1\">\\[</ph>str dataSourceName<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int tableId<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>int fieldId<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str filterValue<ph id=\"ph8\">\\]</ph>, <ph id=\"ph9\">\\[</ph>int controlId<ph id=\"ph10\">\\]</ph>, <ph id=\"ph11\">\\[</ph>boolean useEqualityComparisonForStrings<ph id=\"ph12\">\\]</ph>)","pos":[31278,31444],"source":"public void quickFilter(\\[str dataSourceName\\], \\[int tableId\\], \\[int fieldId\\], \\[str filterValue\\], \\[int controlId\\], \\[boolean useEqualityComparisonForStrings\\])"},{"content":"public void finalize()","pos":[31589,31611]},{"content":"public void clearQueryFilters(<ph id=\"ph1\">\\[</ph>QueryBuildDataSource dataSource<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>str fieldName<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>int occurence<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>int arrayIndex<ph id=\"ph8\">\\]</ph>)","pos":[31900,32024],"source":"public void clearQueryFilters(\\[QueryBuildDataSource dataSource\\], \\[str fieldName\\], \\[int occurence\\], \\[int arrayIndex\\])"},{"content":"public void clearOrderBy()","pos":[32211,32237]},{"content":"public void clearAllFields()","pos":[32522,32550]},{"content":"public void clearGroupBy()","pos":[32833,32859]},{"content":"public void autoAuthzMode(AutoAuthzMode mode)","pos":[33144,33189]},{"content":"::public static void insert<ph id=\"ph1\">\\_</ph>recordset(Common targetCursor, Map targetToSourceMap, Query sourceQuery)","pos":[33455,33556],"source":"::public static void insert\\_recordset(Common targetCursor, Map targetToSourceMap, Query sourceQuery)"},{"content":"public void generateCursors()","pos":[33766,33795]},{"content":"public void checkAuthorizationOnOpenRanges(boolean setCheckAuthorizationOnOpenRanges)","pos":[34077,34162]},{"content":"public void addContains(str containsValue, <ph id=\"ph1\">\\[</ph>boolean prefixSearch<ph id=\"ph2\">\\]</ph>)","pos":[34388,34456],"source":"public void addContains(str containsValue, \\[boolean prefixSearch\\])"},{"content":"public void resetValidTimeStateQueryType()","pos":[34699,34741]},{"content":"public void validTimeStateDateTimeRange(<ph id=\"ph1\">\\[</ph>DateTime fromDateTime<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>DateTime toDateTime<ph id=\"ph4\">\\]</ph>)","pos":[35010,35101],"source":"public void validTimeStateDateTimeRange(\\[DateTime fromDateTime\\], \\[DateTime toDateTime\\])"},{"pos":[35324,35343],"content":"Method addBaseQuery","linkify":"Method addBaseQuery","nodes":[{"content":"Method addBaseQuery","pos":[0,19]}]},{"pos":[35396,35406],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"queryName","pos":[35408,35417]},{"pos":[35426,35438],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[35444,35464],"content":"Method addDataSource","linkify":"Method addDataSource","nodes":[{"content":"Method addDataSource","pos":[0,20]}]},{"content":"Adds a data source to the top level of the query.","pos":[35466,35515]},{"pos":[35645,35655],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"table","pos":[35657,35662]},{"content":"name","pos":[35676,35680]},{"content":"unionType","pos":[35694,35703]},{"content":"emptyFieldList","pos":[35717,35731]},{"pos":[35740,35752],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The data source object that is created.","pos":[35754,35793]},{"pos":[35800,35807],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A name value can be specified for documentation purposes.","pos":[35809,35866]},{"content":"Yo can use the name to fetch the data source by using the dataSourceName method.","pos":[35867,35947]},{"pos":[35953,35975],"content":"Method addHavingFilter","linkify":"Method addHavingFilter","nodes":[{"content":"Method addHavingFilter","pos":[0,22]}]},{"pos":[36131,36141],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[36143,36153]},{"content":"fieldName","pos":[36167,36176]},{"content":"aggregateFunction","pos":[36190,36207]},{"content":"arrayIndex","pos":[36221,36231]},{"pos":[36240,36252],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36258,36279],"content":"Method addQueryFilter","linkify":"Method addQueryFilter","nodes":[{"content":"Method addQueryFilter","pos":[0,21]}]},{"pos":[36391,36401],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[36403,36413]},{"content":"fieldName","pos":[36427,36436]},{"content":"arrayIndex","pos":[36450,36460]},{"pos":[36469,36481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36487,36504],"content":"Method allowCheck","linkify":"Method allowCheck","nodes":[{"content":"Method allowCheck","pos":[0,17]}]},{"pos":[36559,36569],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[36571,36576]},{"pos":[36585,36597],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36603,36627],"content":"Method allowCrossCompany","linkify":"Method allowCrossCompany","nodes":[{"content":"Method allowCrossCompany","pos":[0,24]}]},{"pos":[36689,36699],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[36701,36706]},{"pos":[36715,36727],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36733,36758],"content":"Method allowHavingFilters","linkify":"Method allowHavingFilters","nodes":[{"content":"Method allowHavingFilters","pos":[0,25]}]},{"pos":[36895,36905],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[36907,36917]},{"content":"fieldName","pos":[36931,36940]},{"content":"aggregateFunction","pos":[36954,36971]},{"pos":[36980,36992],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36998,37022],"content":"Method allowQueryFilters","linkify":"Method allowQueryFilters","nodes":[{"content":"Method allowQueryFilters","pos":[0,24]}]},{"pos":[37100,37110],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[37112,37122]},{"pos":[37131,37143],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37149,37165],"content":"Method changedBy","linkify":"Method changedBy","nodes":[{"content":"Method changedBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who last changed the Query object.","pos":[37167,37235]},{"pos":[37281,37291],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[37293,37298]},{"content":"The name of the user who last changed the Query object; optional.","pos":[37301,37366]},{"pos":[37373,37385],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user who last changed the Query object.","pos":[37387,37442]},{"pos":[37448,37466],"content":"Method changedDate","linkify":"Method changedDate","nodes":[{"content":"Method changedDate","pos":[0,18]}]},{"content":"Gets or sets the date an application object was last changed.","pos":[37468,37529]},{"pos":[37579,37589],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[37591,37596]},{"pos":[37605,37617],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date an application object was last changed.","pos":[37619,37667]},{"pos":[37673,37691],"content":"Method changedTime","linkify":"Method changedTime","nodes":[{"content":"Method changedTime","pos":[0,18]}]},{"content":"Gets or sets the time an application object was last changed.","pos":[37693,37754]},{"pos":[37802,37812],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[37814,37819]},{"pos":[37828,37840],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The time an application object was last changed.","pos":[37842,37890]},{"pos":[37896,37923],"content":"Method childDataSourceCount","linkify":"Method childDataSourceCount","nodes":[{"content":"Method childDataSourceCount","pos":[0,27]}]},{"content":"Counts the number of data sources that are related to the query.","pos":[37925,37989]},{"pos":[38035,38047],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of data sources that are related to the query.","pos":[38049,38106]},{"pos":[38113,38120],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is used for the top-level query.","pos":[38122,38166]},{"content":"To determine the number of data sources that are embedded in another data source, use the childDataSourceCount method.","pos":[38167,38285]},{"pos":[38291,38315],"content":"Method childDataSourceNo","linkify":"Method childDataSourceNo","nodes":[{"content":"Method childDataSourceNo","pos":[0,24]}]},{"content":"Returns the child data source that corresponds to the specified number.","pos":[38317,38388]},{"pos":[38464,38474],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceNo","pos":[38476,38488]},{"content":"The number of the child data source.","pos":[38491,38527]},{"pos":[38534,38546],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The child data source that has the specified number.","pos":[38548,38600]},{"pos":[38607,38614],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The number that is specified must represent a data source that is immediately underneath the query.","pos":[38616,38715]},{"content":"Typically, there is only one such data source.","pos":[38716,38762]},{"pos":[38768,38798],"content":"Method containsAggregateFields","linkify":"Method containsAggregateFields","nodes":[{"content":"Method containsAggregateFields","pos":[0,30]}]},{"pos":[38851,38863],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38869,38885],"content":"Method createdBy","linkify":"Method createdBy","nodes":[{"content":"Method createdBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who created the application object.","pos":[38887,38956]},{"pos":[39002,39012],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[39014,39019]},{"pos":[39028,39040],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user.","pos":[39042,39063]},{"pos":[39069,39088],"content":"Method creationDate","linkify":"Method creationDate","nodes":[{"content":"Method creationDate","pos":[0,19]}]},{"content":"Gets or sets the date an application object was created.","pos":[39090,39146]},{"pos":[39197,39207],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[39209,39214]},{"pos":[39223,39235],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date an application object was created.","pos":[39237,39280]},{"pos":[39286,39305],"content":"Method creationTime","linkify":"Method creationTime","nodes":[{"content":"Method creationTime","pos":[0,19]}]},{"pos":[39354,39364],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[39366,39371]},{"pos":[39380,39392],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[39398,39420],"content":"Method dataSourceCount","linkify":"Method dataSourceCount","nodes":[{"content":"Method dataSourceCount","pos":[0,22]}]},{"content":"Returns the total number of data sources for the query, including any embedded data sources.","pos":[39422,39514]},{"pos":[39555,39567],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of data sources for this query.","pos":[39569,39611]},{"pos":[39618,39625],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The number is the transitive number of data sources and includes any embedded data sources.","pos":[39627,39718]},{"pos":[39724,39745],"content":"Method dataSourceName","linkify":"Method dataSourceName","nodes":[{"content":"Method dataSourceName","pos":[0,21]}]},{"content":"Returns the data source that has the specified name.","pos":[39747,39799]},{"pos":[39864,39874],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[39876,39880]},{"content":"The string that contains the name of the data source to return.","pos":[39883,39946]},{"pos":[39953,39965],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The data source that has the specified name; an uninitialized object if the specified data source does not exist.","pos":[39967,40080]},{"pos":[40086,40105],"content":"Method dataSourceNo","linkify":"Method dataSourceNo","nodes":[{"content":"Method dataSourceNo","pos":[0,19]}]},{"content":"Returns the data source that is specified by the data source number.","pos":[40107,40175]},{"pos":[40246,40256],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceNo","pos":[40258,40270]},{"content":"The number of the data source.","pos":[40273,40303]},{"pos":[40310,40322],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The data source that has the specified number; an uninitialized object if the specified data source does not exist.","pos":[40324,40439]},{"pos":[40445,40467],"content":"Method dataSourceTable","linkify":"Method dataSourceTable","nodes":[{"content":"Method dataSourceTable","pos":[0,22]}]},{"content":"Returns the data source that the specified table is assigned to.","pos":[40469,40533]},{"pos":[40622,40632],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"table","pos":[40634,40639]},{"content":"An integer that is used when more than one data source uses the specified table ID; optional.","pos":[40642,40735]},{"content":"The default value is 1, which specifies the first (and typically only) instance.","pos":[40736,40816]},{"content":"occurrence","pos":[40828,40838]},{"content":"An integer that is used when more than one data source uses the specified table ID; optional.","pos":[40841,40934]},{"content":"The default value is 1, which specifies the first (and typically only) instance.","pos":[40935,41015]},{"pos":[41022,41034],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The data source that the specified table is assigned to.","pos":[41036,41092]},{"pos":[41099,41106],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The data source can also be retrieved by calling the dataSourceNo method or the dataSourceName method.","pos":[41108,41210]},{"pos":[41216,41241],"content":"Method dataSourceUniqueId","linkify":"Method dataSourceUniqueId","nodes":[{"content":"Method dataSourceUniqueId","pos":[0,25]}]},{"pos":[41314,41324],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"uniqueId","pos":[41326,41334]},{"pos":[41343,41355],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[41361,41379],"content":"Method description","linkify":"Method description","nodes":[{"content":"Method description","pos":[0,18]}]},{"pos":[41427,41437],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[41439,41444]},{"pos":[41453,41465],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[41471,41483],"content":"Method equal","linkify":"Method equal","nodes":[{"content":"Method equal","pos":[0,12]}]},{"content":"Evaluates whether one query is equal to another.","pos":[41485,41533]},{"pos":[41581,41591],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[41593,41599]},{"content":"The query to use as a comparison.","pos":[41602,41635]},{"pos":[41642,41654],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the queries are equal; otherwise, false.","pos":[41656,41704]},{"pos":[41711,41718],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"\"Equal\" in this case means that the query is structurally identical to the query that it is compared to.","pos":[41720,41824]},{"content":"The query has the same number of data sources assigned to the same files, and it has the same number of ranges.","pos":[41825,41936]},{"pos":[41942,41958],"content":"Method exportXML","linkify":"Method exportXML","nodes":[{"content":"Method exportXML","pos":[0,16]}]},{"pos":[41993,42005],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42011,42041],"content":"Method findHavingFilterByField","linkify":"Method findHavingFilterByField","nodes":[{"content":"Method findHavingFilterByField","pos":[0,30]}]},{"pos":[42192,42202],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[42204,42214]},{"content":"fieldName","pos":[42228,42237]},{"content":"occurrence","pos":[42251,42261]},{"content":"arrayIndex","pos":[42275,42285]},{"pos":[42294,42306],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42312,42334],"content":"Method findQueryFilter","linkify":"Method findQueryFilter","nodes":[{"content":"Method findQueryFilter","pos":[0,22]}]},{"pos":[42471,42481],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[42483,42493]},{"content":"fieldName","pos":[42507,42516]},{"content":"occurrence","pos":[42530,42540]},{"content":"arrayIndex","pos":[42554,42564]},{"pos":[42573,42585],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42591,42621],"content":"Method firstTopLevelDataSource","linkify":"Method firstTopLevelDataSource","nodes":[{"content":"Method firstTopLevelDataSource","pos":[0,30]}]},{"pos":[42687,42699],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42705,42727],"content":"Method forceNestedLoop","linkify":"Method forceNestedLoop","nodes":[{"content":"Method forceNestedLoop","pos":[0,22]}]},{"pos":[42783,42793],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arg","pos":[42795,42798]},{"pos":[42807,42819],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42825,42848],"content":"Method forceSelectOrder","linkify":"Method forceSelectOrder","nodes":[{"content":"Method forceSelectOrder","pos":[0,23]}]},{"pos":[42905,42915],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arg","pos":[42917,42920]},{"pos":[42929,42941],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42947,42958],"content":"Method form","linkify":"Method form","nodes":[{"content":"Method form","pos":[0,11]}]},{"pos":[42999,43009],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[43011,43016]},{"pos":[43025,43037],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[43043,43065],"content":"Method getCompanyRange","linkify":"Method getCompanyRange","nodes":[{"content":"Method getCompanyRange","pos":[0,22]}]},{"pos":[43112,43124],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[43130,43171],"content":"Method getMostRestrictedQueryFilterStatus","linkify":"Method getMostRestrictedQueryFilterStatus","nodes":[{"content":"Method getMostRestrictedQueryFilterStatus","pos":[0,41]}]},{"pos":[43298,43308],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[43310,43320]},{"content":"fieldName","pos":[43334,43343]},{"content":"fieldId","pos":[43357,43364]},{"pos":[43373,43385],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[43391,43413],"content":"Method getNextUniqueId","linkify":"Method getNextUniqueId","nodes":[{"content":"Method getNextUniqueId","pos":[0,22]}]},{"pos":[43454,43466],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[43472,43494],"content":"Method getSQLStatement","linkify":"Method getSQLStatement","nodes":[{"content":"Method getSQLStatement","pos":[0,22]}]},{"pos":[43566,43576],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"noRuntimeOptimization","pos":[43578,43599]},{"pos":[43608,43620],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[43626,43659],"content":"Method getValidTimeStateDateRange","linkify":"Method getValidTimeStateDateRange","nodes":[{"content":"Method getValidTimeStateDateRange","pos":[0,33]}]},{"pos":[43717,43729],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[43735,43772],"content":"Method getValidTimeStateDateTimeRange","linkify":"Method getValidTimeStateDateTimeRange","nodes":[{"content":"Method getValidTimeStateDateTimeRange","pos":[0,37]}]},{"pos":[43834,43846],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[43852,43885],"content":"Method getValidTimeStateQueryType","linkify":"Method getValidTimeStateQueryType","nodes":[{"content":"Method getValidTimeStateQueryType","pos":[0,33]}]},{"pos":[43957,43969],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[43975,43994],"content":"Method groupByField","linkify":"Method groupByField","nodes":[{"content":"Method groupByField","pos":[0,19]}]},{"pos":[44090,44100],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[44102,44107]},{"content":"dataSource","pos":[44121,44131]},{"pos":[44140,44152],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44158,44182],"content":"Method groupByFieldCount","linkify":"Method groupByFieldCount","nodes":[{"content":"Method groupByFieldCount","pos":[0,24]}]},{"pos":[44258,44268],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[44270,44280]},{"pos":[44289,44301],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44307,44343],"content":"Method hasMultipleTopLevelDataSource","linkify":"Method hasMultipleTopLevelDataSource","nodes":[{"content":"Method hasMultipleTopLevelDataSource","pos":[0,36]}]},{"pos":[44402,44414],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44420,44443],"content":"Method hasRangeOrFilter","linkify":"Method hasRangeOrFilter","nodes":[{"content":"Method hasRangeOrFilter","pos":[0,23]}]},{"pos":[44520,44530],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[44532,44542]},{"pos":[44551,44563],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44569,44588],"content":"Method havingFilter","linkify":"Method havingFilter","nodes":[{"content":"Method havingFilter","pos":[0,19]}]},{"pos":[44684,44694],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"count","pos":[44696,44701]},{"content":"dataSource","pos":[44715,44725]},{"pos":[44734,44746],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44752,44776],"content":"Method havingFilterCount","linkify":"Method havingFilterCount","nodes":[{"content":"Method havingFilterCount","pos":[0,24]}]},{"pos":[44852,44862],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[44864,44874]},{"pos":[44883,44895],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44901,44916],"content":"Method inReport","linkify":"Method inReport","nodes":[{"content":"Method inReport","pos":[0,15]}]},{"content":"Determines whether the query is part of a report.","pos":[44918,44967]},{"pos":[45005,45017],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the query is part of a report (is found under a report's data sources node); otherwise, false.","pos":[45019,45121]},{"pos":[45128,45135],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is not typically used by application code.","pos":[45137,45193]},{"content":"If the method returns true, the report method can be used to access the report in which the query is defined.","pos":[45194,45303]},{"pos":[45309,45327],"content":"Method interactive","linkify":"Method interactive","nodes":[{"content":"Method interactive","pos":[0,18]}]},{"content":"Specifies whether the query is interactive.","pos":[45329,45372]},{"pos":[45428,45438],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[45440,45445]},{"content":"A value that indicates whether the query is interactive; optional.","pos":[45448,45514]},{"pos":[45521,45533],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the query is interactive; otherwise, false.","pos":[45535,45586]},{"pos":[45593,45600],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"In an interactive query, the query can, for example, present the user with a dialog box when the prompt method is called.","pos":[45602,45723]},{"content":"This functionality is used when code will be submitted to a batch and in other situations where code must run unattended.","pos":[45724,45845]},{"pos":[45851,45874],"content":"Method isCompositeQuery","linkify":"Method isCompositeQuery","nodes":[{"content":"Method isCompositeQuery","pos":[0,23]}]},{"pos":[45920,45932],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[45938,45964],"content":"Method isExplicitlyOrdered","linkify":"Method isExplicitlyOrdered","nodes":[{"content":"Method isExplicitlyOrdered","pos":[0,26]}]},{"pos":[46013,46025],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[46031,46057],"content":"Method isExplicitlyGrouped","linkify":"Method isExplicitlyGrouped","nodes":[{"content":"Method isExplicitlyGrouped","pos":[0,26]}]},{"pos":[46106,46118],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[46124,46145],"content":"Method isPureUnionAll","linkify":"Method isPureUnionAll","nodes":[{"content":"Method isPureUnionAll","pos":[0,21]}]},{"pos":[46189,46201],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[46207,46225],"content":"Method isUnionType","linkify":"Method isUnionType","nodes":[{"content":"Method isUnionType","pos":[0,18]}]},{"pos":[46266,46278],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[46284,46298],"content":"Method levelNo","linkify":"Method levelNo","nodes":[{"content":"Method levelNo","pos":[0,14]}]},{"content":"Determines the level of indentation of the specified data source.","pos":[46300,46365]},{"pos":[46414,46424],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceNo","pos":[46426,46438]},{"content":"The data source number to determine the level for.","pos":[46441,46491]},{"pos":[46498,46510],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The level number of the specified data source.","pos":[46512,46558]},{"pos":[46565,46572],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The data sources are numbered consecutively, starting at 1.","pos":[46574,46633]},{"pos":[46639,46656],"content":"Method levelTable","linkify":"Method levelTable","nodes":[{"content":"Method levelTable","pos":[0,17]}]},{"content":"Determines the tree level, in the hierarchy of data sources, of the data source that is assigned to the specified table.","pos":[46658,46778]},{"pos":[46845,46855],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"table","pos":[46857,46862]},{"content":"The integer that is used if more than one data source is assigned to the same table; optional.","pos":[46865,46959]},{"content":"occurrence","pos":[46971,46981]},{"content":"The integer that is used if more than one data source is assigned to the same table; optional.","pos":[46984,47078]},{"pos":[47085,47097],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The level number of the query's specified data source.","pos":[47099,47153]},{"pos":[47159,47174],"content":"Method literals","linkify":"Method literals","nodes":[{"content":"Method literals","pos":[0,15]}]},{"pos":[47219,47229],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[47231,47236]},{"pos":[47245,47257],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[47263,47274],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[47276,47414]},{"pos":[47455,47465],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[47467,47472]},{"pos":[47481,47493],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[47495,47559]},{"pos":[47566,47573],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[47575,47669]},{"content":"Begins with a letter.","pos":[47675,47696]},{"content":"Doesn't exceed 250 characters.","pos":[47701,47731]},{"content":"Can include numbers and underscore characters.","pos":[47736,47782]},{"content":"Cannot include punctuation or spaces.","pos":[47787,47824]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, classes, and so on.","pos":[47829,47947]},{"pos":[47953,47969],"content":"Method newObject","linkify":"Method newObject","nodes":[{"content":"Method newObject","pos":[0,16]}]},{"content":"Creates a query that exists on the same client side or server side as the source query.","pos":[47971,48058]},{"pos":[48109,48119],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[48121,48127]},{"content":"The source query.","pos":[48130,48147]},{"pos":[48154,48166],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new query.","pos":[48168,48182]},{"pos":[48188,48207],"content":"Method nextUniqueId","linkify":"Method nextUniqueId","nodes":[{"content":"Method nextUniqueId","pos":[0,19]}]},{"pos":[48256,48266],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[48268,48273]},{"pos":[48282,48294],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[48300,48319],"content":"Method orderByField","linkify":"Method orderByField","nodes":[{"content":"Method orderByField","pos":[0,19]}]},{"pos":[48415,48425],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[48427,48432]},{"content":"dataSource","pos":[48446,48456]},{"pos":[48465,48477],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[48483,48507],"content":"Method orderByFieldCount","linkify":"Method orderByFieldCount","nodes":[{"content":"Method orderByFieldCount","pos":[0,24]}]},{"pos":[48583,48593],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[48595,48605]},{"pos":[48614,48626],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[48632,48645],"content":"Method origin","linkify":"Method origin","nodes":[{"content":"Method origin","pos":[0,13]}]},{"pos":[48690,48700],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[48702,48707]},{"pos":[48716,48728],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[48734,48745],"content":"Method pack","linkify":"Method pack","nodes":[{"content":"Method pack","pos":[0,11]}]},{"content":"Packs the query into a container and returns that container, so that it can be used when you create a query.","pos":[48747,48855]},{"pos":[48908,48918],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"doCheck","pos":[48920,48927]},{"content":"A Boolean value that indicates whether to flag an error when a data source in the query references an outside cursor, such as a link to a cursor that is foreign to the query's data source; optional.","pos":[48930,49128]},{"content":"The default value is true, which enforces the constraint.","pos":[49129,49186]},{"pos":[49193,49205],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The container that holds the query.","pos":[49207,49242]},{"pos":[49249,49256],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The container that is created by this method can serve as input when you instantiate a query or queryRun object by using either the new method or the newObject method.","pos":[49258,49425]},{"content":"Links to cursors that are foreign to the query's data source are not packed into the container.","pos":[49426,49521]},{"content":"If you must pack this kind of link, you should take a snapshot of the cursor's data and construct ranges for each field.","pos":[49522,49642]},{"pos":[49648,49668],"content":"Method packInternals","linkify":"Method packInternals","nodes":[{"content":"Method packInternals","pos":[0,20]}]},{"pos":[49713,49725],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[49731,49749],"content":"Method queryFilter","linkify":"Method queryFilter","nodes":[{"content":"Method queryFilter","pos":[0,18]}]},{"pos":[49842,49852],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"count","pos":[49854,49859]},{"content":"rootDataSource","pos":[49873,49887]},{"pos":[49896,49908],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[49914,49937],"content":"Method queryFilterCount","linkify":"Method queryFilterCount","nodes":[{"content":"Method queryFilterCount","pos":[0,23]}]},{"pos":[50016,50026],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"rootDataSource","pos":[50028,50042]},{"pos":[50051,50063],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[50069,50085],"content":"Method queryType","linkify":"Method queryType","nodes":[{"content":"Method queryType","pos":[0,16]}]},{"pos":[50131,50141],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[50143,50148]},{"pos":[50157,50169],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[50175,50198],"content":"Method quickFilterValue","linkify":"Method quickFilterValue","nodes":[{"content":"Method quickFilterValue","pos":[0,23]}]},{"pos":[50240,50252],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[50258,50285],"content":"Method quickFilterControlId","linkify":"Method quickFilterControlId","nodes":[{"content":"Method quickFilterControlId","pos":[0,27]}]},{"pos":[50331,50343],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[50349,50375],"content":"Method recordLevelSecurity","linkify":"Method recordLevelSecurity","nodes":[{"content":"Method recordLevelSecurity","pos":[0,26]}]},{"pos":[50439,50449],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[50451,50456]},{"pos":[50465,50477],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[50483,50496],"content":"Method report","linkify":"Method report","nodes":[{"content":"Method report","pos":[0,13]}]},{"content":"Returns the report in which the query is defined, if the report exists.","pos":[50498,50569]},{"pos":[50604,50616],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The report in which the query is defined under the data sources node.","pos":[50618,50687]},{"pos":[50694,50701],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A query is not necessarily defined in the context of a report.","pos":[50703,50765]},{"content":"To determine whether a query is defined in the context of a report, you can use the inReport method.","pos":[50766,50866]},{"pos":[50872,50884],"content":"Method saved","linkify":"Method saved","nodes":[{"content":"Method saved","pos":[0,12]}]},{"content":"Indicates whether the query has been saved to disk.","pos":[50886,50937]},{"pos":[50972,50984],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the query has been saved to disk; otherwise, false.","pos":[50986,51045]},{"pos":[51051,51068],"content":"Method searchable","linkify":"Method searchable","nodes":[{"content":"Method searchable","pos":[0,17]}]},{"pos":[51123,51133],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[51135,51140]},{"pos":[51149,51161],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51167,51187],"content":"Method importSession","linkify":"Method importSession","nodes":[{"content":"Method importSession","pos":[0,20]}]},{"pos":[51239,51249],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[51251,51256]},{"pos":[51265,51277],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51283,51295],"content":"Method title","linkify":"Method title","nodes":[{"content":"Method title","pos":[0,12]}]},{"pos":[51337,51347],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[51349,51354]},{"pos":[51363,51375],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51381,51395],"content":"Method topRows","linkify":"Method topRows","nodes":[{"content":"Method topRows","pos":[0,14]}]},{"pos":[51439,51449],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[51451,51456]},{"pos":[51465,51477],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51483,51498],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a string that represents the current object.","pos":[51500,51552]},{"pos":[51586,51598],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the current object.","pos":[51600,51644]},{"pos":[51651,51658],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation returns the class name of the object.","pos":[51660,51724]},{"content":"However, the method can be overridden in a derived class so that it returns values that are meaningful for that type.For example, an instance of the SysMethodInfo class returns the method name, and the type of method, such as Instance or Static.","pos":[51725,51970]},{"pos":[51976,51993],"content":"Method userUpdate","linkify":"Method userUpdate","nodes":[{"content":"Method userUpdate","pos":[0,17]}]},{"content":"Gets or sets a value that indicates whether the query can update the records that it fetches.","pos":[51995,52088]},{"pos":[52143,52153],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[52155,52160]},{"content":"A Boolean value that indicates whether the query can update the records that it fetches; optional.","pos":[52163,52261]},{"pos":[52268,52280],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the query can currently update records that it fetches; otherwise false.","pos":[52282,52362]},{"pos":[52368,52397],"content":"Method validTimeStateAsOfDate","linkify":"Method validTimeStateAsOfDate","nodes":[{"content":"Method validTimeStateAsOfDate","pos":[0,29]}]},{"pos":[52461,52471],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"asOfDate","pos":[52473,52481]},{"pos":[52490,52502],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[52508,52541],"content":"Method validTimeStateAsOfDateTime","linkify":"Method validTimeStateAsOfDateTime","nodes":[{"content":"Method validTimeStateAsOfDateTime","pos":[0,33]}]},{"pos":[52621,52631],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"asOfDateTime","pos":[52633,52645]},{"pos":[52654,52666],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[52672,52698],"content":"Method validTimeStateFlags","linkify":"Method validTimeStateFlags","nodes":[{"content":"Method validTimeStateFlags","pos":[0,26]}]},{"pos":[52754,52764],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[52766,52771]},{"pos":[52780,52792],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[52798,52812],"content":"Method version","linkify":"Method version","nodes":[{"content":"Method version","pos":[0,14]}]},{"pos":[52856,52866],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[52868,52873]},{"pos":[52882,52894],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[52900,52910],"content":"Method xml","linkify":"Method xml","nodes":[{"content":"Method xml","pos":[0,10]}]},{"content":"Returns an XML string that represents the current object.","pos":[52912,52969]},{"pos":[53010,53020],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"indent","pos":[53022,53028]},{"content":"The amount of indentation for the returned XML string; optional.","pos":[53031,53095]},{"pos":[53102,53114],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An XML string that represents the current object.","pos":[53116,53165]},{"pos":[53172,53179],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be overridden to return values that are meaningful for that type.","pos":[53181,53262]},{"pos":[53268,53291],"content":"Method clearBaseQueries","linkify":"Method clearBaseQueries","nodes":[{"content":"Method clearBaseQueries","pos":[0,23]}]},{"pos":[53333,53355],"content":"Method addCompanyRange","linkify":"Method addCompanyRange","nodes":[{"content":"Method addCompanyRange","pos":[0,22]}]},{"pos":[53412,53422],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"companyName","pos":[53424,53435]},{"pos":[53443,53473],"content":"Method checkRangeParsingErrors","linkify":"Method checkRangeParsingErrors","nodes":[{"content":"Method checkRangeParsingErrors","pos":[0,30]}]},{"pos":[53557,53567],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"setCheckRangeParsingErrors","pos":[53569,53595]},{"pos":[53603,53627],"content":"Method clearCompanyRange","linkify":"Method clearCompanyRange","nodes":[{"content":"Method clearCompanyRange","pos":[0,24]}]},{"pos":[53670,53692],"content":"Method unpackInternals","linkify":"Method unpackInternals","nodes":[{"content":"Method unpackInternals","pos":[0,22]}]},{"pos":[53756,53766],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"internalData","pos":[53768,53780]},{"pos":[53788,53798],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates a query object.","pos":[53800,53823]},{"pos":[53869,53879],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[53881,53887]},{"content":"The source to base the query object on; optional.","pos":[53890,53939]},{"pos":[53946,53953],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If no arguments are supplied when this method is called, a temporary query is created that is not stored in the Finance and Operations Application Object Tree (AOT) for subsequent use.","pos":[53955,54139]},{"pos":[54145,54168],"content":"Method checkFieldAccess","linkify":"Method checkFieldAccess","nodes":[{"content":"Method checkFieldAccess","pos":[0,23]}]},{"pos":[54238,54248],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"setCheckFieldAccess","pos":[54250,54269]},{"pos":[54277,54312],"content":"Method useDbCacheOnGeneratedCursors","linkify":"Method useDbCacheOnGeneratedCursors","nodes":[{"content":"Method useDbCacheOnGeneratedCursors","pos":[0,35]}]},{"pos":[54382,54392],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fetchsize","pos":[54394,54403]},{"pos":[54411,54444],"content":"Method setValidTimeStateQueryType","linkify":"Method setValidTimeStateQueryType","nodes":[{"content":"Method setValidTimeStateQueryType","pos":[0,33]}]},{"pos":[54527,54537],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"type","pos":[54539,54543]},{"pos":[54551,54581],"content":"Method validTimeStateDateRange","linkify":"Method validTimeStateDateRange","nodes":[{"content":"Method validTimeStateDateRange","pos":[0,30]}]},{"pos":[54661,54671],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fromDate","pos":[54673,54681]},{"content":"toDate","pos":[54695,54701]},{"pos":[54709,54734],"content":"Method clearHavingFilters","linkify":"Method clearHavingFilters","nodes":[{"content":"Method clearHavingFilters","pos":[0,25]}]},{"pos":[54864,54874],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[54876,54886]},{"content":"fieldName","pos":[54900,54909]},{"content":"occurence","pos":[54923,54932]},{"content":"arrayIndex","pos":[54946,54956]},{"pos":[54964,54982],"content":"Method quickFilter","linkify":"Method quickFilter","nodes":[{"content":"Method quickFilter","pos":[0,18]}]},{"pos":[55149,55159],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[55161,55175]},{"content":"tableId","pos":[55189,55196]},{"content":"fieldId","pos":[55210,55217]},{"content":"filterValue","pos":[55231,55242]},{"content":"controlId","pos":[55256,55265]},{"content":"useEqualityComparisonForStrings","pos":[55279,55310]},{"pos":[55318,55333],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[55367,55391],"content":"Method clearQueryFilters","linkify":"Method clearQueryFilters","nodes":[{"content":"Method clearQueryFilters","pos":[0,24]}]},{"pos":[55520,55530],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSource","pos":[55532,55542]},{"content":"fieldName","pos":[55556,55565]},{"content":"occurence","pos":[55579,55588]},{"content":"arrayIndex","pos":[55602,55612]},{"pos":[55620,55639],"content":"Method clearOrderBy","linkify":"Method clearOrderBy","nodes":[{"content":"Method clearOrderBy","pos":[0,19]}]},{"pos":[55677,55698],"content":"Method clearAllFields","linkify":"Method clearAllFields","nodes":[{"content":"Method clearAllFields","pos":[0,21]}]},{"pos":[55738,55757],"content":"Method clearGroupBy","linkify":"Method clearGroupBy","nodes":[{"content":"Method clearGroupBy","pos":[0,19]}]},{"pos":[55795,55815],"content":"Method autoAuthzMode","linkify":"Method autoAuthzMode","nodes":[{"content":"Method autoAuthzMode","pos":[0,20]}]},{"pos":[55873,55883],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[55885,55889]},{"pos":[55897,55921],"content":"Method insert\\_recordset","linkify":"Method insert\\_recordset","nodes":[{"content":"Method insert<ph id=\"ph1\">\\_</ph>recordset","pos":[0,24],"source":"Method insert\\_recordset"}]},{"pos":[56032,56042],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"targetCursor","pos":[56044,56056]},{"content":"targetToSourceMap","pos":[56070,56087]},{"content":"sourceQuery","pos":[56101,56112]},{"pos":[56120,56142],"content":"Method generateCursors","linkify":"Method generateCursors","nodes":[{"content":"Method generateCursors","pos":[0,22]}]},{"pos":[56183,56220],"content":"Method checkAuthorizationOnOpenRanges","linkify":"Method checkAuthorizationOnOpenRanges","nodes":[{"content":"Method checkAuthorizationOnOpenRanges","pos":[0,37]}]},{"pos":[56318,56328],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"setCheckAuthorizationOnOpenRanges","pos":[56330,56363]},{"pos":[56371,56389],"content":"Method addContains","linkify":"Method addContains","nodes":[{"content":"Method addContains","pos":[0,18]}]},{"pos":[56468,56478],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"containsValue","pos":[56480,56493]},{"content":"prefixSearch","pos":[56507,56519]},{"pos":[56527,56562],"content":"Method resetValidTimeStateQueryType","linkify":"Method resetValidTimeStateQueryType","nodes":[{"content":"Method resetValidTimeStateQueryType","pos":[0,35]}]},{"pos":[56616,56650],"content":"Method validTimeStateDateTimeRange","linkify":"Method validTimeStateDateTimeRange","nodes":[{"content":"Method validTimeStateDateTimeRange","pos":[0,34]}]},{"pos":[56750,56760],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fromDateTime","pos":[56762,56774]},{"content":"toDateTime","pos":[56788,56798]},{"pos":[56805,56831],"content":"Class QueryBuildDataSource","linkify":"Class QueryBuildDataSource","nodes":[{"content":"Class QueryBuildDataSource","pos":[0,26]}]},{"content":"The QueryBuildDataSource class provides the building blocks that queries are made of.","pos":[56881,56966]},{"pos":[56972,56979],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Data sources are arranged in hierarchies that define the sequence in which records are fetched from the tables that are assigned to the data sources.","pos":[56981,57130]},{"content":"Each data source defines the order in which the records are fetched, and also the criteria that must be met by the selected records.","pos":[57131,57263]},{"content":"This class lets you create, read, update, and delete X++ code and metadata.","pos":[57264,57339]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[57340,57450]},{"pos":[57456,57464],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[57590,57597],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[57601,57607]},{"content":"Description","pos":[57760,57771]},{"content":"public int addAllFields(TableName tableName)","pos":[58203,58247]},{"content":"public QueryBuildDataSource addDataSource(AnyType arg, <ph id=\"ph1\">\\[</ph>str name<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean emptyFieldList<ph id=\"ph4\">\\]</ph>)","pos":[58504,58600],"source":"public QueryBuildDataSource addDataSource(AnyType arg, \\[str name\\], \\[boolean emptyFieldList\\])"},{"content":"Adds a data source that is embedded in this data source.","pos":[58663,58719]},{"content":"public QueryBuildDynalink addDynalink(FieldId field, Common dynamicFile, FieldId dynamicField, <ph id=\"ph1\">\\[</ph>int fieldArrayIndex<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int dynamicFieldArrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[58805,58956],"source":"public QueryBuildDynalink addDynalink(FieldId field, Common dynamicFile, FieldId dynamicField, \\[int fieldArrayIndex\\], \\[int dynamicFieldArrayIndex\\])"},{"content":"public QueryBuildLink addForeignkeyRelation(str relatedTableRole, <ph id=\"ph1\">\\[</ph>str parentDatasourceName<ph id=\"ph2\">\\]</ph>)","pos":[59106,59201],"source":"public QueryBuildLink addForeignkeyRelation(str relatedTableRole, \\[str parentDatasourceName\\])"},{"content":"public QueryGroupByField addGroupByField(FieldId fieldID, <ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[59407,59484],"source":"public QueryGroupByField addGroupByField(FieldId fieldID, \\[int arrayIndex\\])"},{"content":"public QueryBuildLink addLink(FieldId parentField, FieldId thisField, <ph id=\"ph1\">\\[</ph>str parentDatasourceName<ph id=\"ph2\">\\]</ph>)","pos":[59708,59807],"source":"public QueryBuildLink addLink(FieldId parentField, FieldId thisField, \\[str parentDatasourceName\\])"},{"content":"public QueryOrderByField addOrderByAggregateField(SelectionField fieldType, FieldId fieldID, <ph id=\"ph1\">\\[</ph>SortOrder direction<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[60009,60146],"source":"public QueryOrderByField addOrderByAggregateField(SelectionField fieldType, FieldId fieldID, \\[SortOrder direction\\], \\[int arrayIndex\\])"},{"content":"public QueryOrderByField addOrderByCalculationField(Microsoft.Dynamics.AX.Analytics.CalculationModel.NumericExpression calculation, <ph id=\"ph1\">\\[</ph>SortOrder direction<ph id=\"ph2\">\\]</ph>)","pos":[60310,60466],"source":"public QueryOrderByField addOrderByCalculationField(Microsoft.Dynamics.AX.Analytics.CalculationModel.NumericExpression calculation, \\[SortOrder direction\\])"},{"content":"public QueryOrderByField addOrderByField(FieldId fieldID, <ph id=\"ph1\">\\[</ph>SortOrder direction<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[60611,60713],"source":"public QueryOrderByField addOrderByField(FieldId fieldID, \\[SortOrder direction\\], \\[int arrayIndex\\])"},{"content":"public QueryBuildRange addRange(FieldId field, <ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>QueryRangeType rangeType<ph id=\"ph4\">\\]</ph>)","pos":[60912,61008],"source":"public QueryBuildRange addRange(FieldId field, \\[int arrayIndex\\], \\[QueryRangeType rangeType\\])"},{"content":"Adds a range to the data source.","pos":[61071,61103]},{"content":"public int addSortField(FieldId sortField, <ph id=\"ph1\">\\[</ph>SortOrder direction<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[61213,61300],"source":"public int addSortField(FieldId sortField, \\[SortOrder direction\\], \\[int arrayIndex\\])"},{"content":"public int addSortIndex(IndexId index)","pos":[61514,61552]},{"content":"public int allowAdd(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[61815,61849],"source":"public int allowAdd(\\[int value\\])"},{"content":"public boolean applyFilter(FilterValue filterValue)","pos":[62116,62167]},{"content":"public boolean autoHeader(FieldId field, <ph id=\"ph1\">\\[</ph>boolean orderNo<ph id=\"ph2\">\\]</ph>)","pos":[62417,62478],"source":"public boolean autoHeader(FieldId field, \\[boolean orderNo\\])"},{"content":"public int autoHeaderDetailLevel(FieldId field, <ph id=\"ph1\">\\[</ph>int orderNo<ph id=\"ph2\">\\]</ph>)","pos":[62718,62782],"source":"public int autoHeaderDetailLevel(FieldId field, \\[int orderNo\\])"},{"content":"public boolean autoSum(FieldId field, <ph id=\"ph1\">\\[</ph>boolean orderNo<ph id=\"ph2\">\\]</ph>)","pos":[63019,63077],"source":"public boolean autoSum(FieldId field, \\[boolean orderNo\\])"},{"content":"public int autoSumDetailLevel(FieldId field, <ph id=\"ph1\">\\[</ph>int orderNo<ph id=\"ph2\">\\]</ph>)","pos":[63320,63381],"source":"public int autoSumDetailLevel(FieldId field, \\[int orderNo\\])"},{"content":"public boolean changedNo()","pos":[63621,63647]},{"content":"public int childDataSourceCount()","pos":[63922,63955]},{"content":"public QueryBuildDataSource childDataSourceNo(int dataSourceNo)","pos":[64223,64286]},{"content":"public str company(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[64524,64557],"source":"public str company(\\[str value\\])"},{"content":"public int concurrencyModel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[64825,64867],"source":"public int concurrencyModel(\\[int value\\])"},{"content":"public QueryBuildDynalink dynalink(int dynalinkNo)","pos":[65126,65176]},{"content":"public int dynalinkCount()","pos":[65427,65453]},{"content":"public boolean embedded()","pos":[65728,65753]},{"content":"public boolean enabled(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[66029,66070],"source":"public boolean enabled(\\[boolean value\\])"},{"content":"Determines whether to enable or disable the object.","pos":[66188,66239]},{"content":"public boolean existsMeanOrExists(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[66330,66382],"source":"public boolean existsMeanOrExists(\\[boolean value\\])"},{"content":"public int fetchMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[66631,66666],"source":"public int fetchMode(\\[int value\\])"},{"content":"public QueryBuildFieldList fields()","pos":[66932,66967]},{"content":"public TableId file()","pos":[67233,67254]},{"content":"public QueryBuildRange findRange(FieldId field, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[67534,67621],"source":"public QueryBuildRange findRange(FieldId field, \\[int occurrence\\], \\[int arrayIndex\\])"},{"content":"public boolean firstFast(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[67835,67878],"source":"public boolean firstFast(\\[boolean value\\])"},{"content":"Determines whether to retrieve the first record from the query before the other records.","pos":[67994,68082]},{"content":"public boolean firstOnly(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[68136,68179],"source":"public boolean firstOnly(\\[boolean value\\])"},{"content":"public int getMostRestrictedQueryBuildRangeStatus(FieldId field, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[68437,68541],"source":"public int getMostRestrictedQueryBuildRangeStatus(FieldId field, \\[int occurrence\\], \\[int arrayIndex\\])"},{"content":"public Common getNo()","pos":[68738,68759]},{"content":"public int id()","pos":[69039,69054]},{"content":"public boolean indexIsHint(boolean arg)","pos":[69340,69379]},{"content":"public boolean isPartOfSubQueryInBaseQuery()","pos":[69641,69685]},{"content":"public boolean joined()","pos":[69942,69965]},{"content":"public container joinedDataSources()","pos":[70243,70279]},{"content":"public int joinMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[70544,70578],"source":"public int joinMode(\\[int value\\])"},{"content":"public str label(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[70845,70876],"source":"public str label(\\[str value\\])"},{"content":"Gets or sets the label for a control.","pos":[71004,71041]},{"content":"public int level()","pos":[71146,71164]},{"content":"public QueryBuildLink link(int associationNo)","pos":[71447,71492]},{"content":"public int linkCount()","pos":[71748,71770]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[72049,72079],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[72208,72346]},{"content":"public container oneToOneDataSources()","pos":[72351,72389]},{"content":"public int orderMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[72652,72687],"source":"public int orderMode(\\[int value\\])"},{"content":"public QueryBuildDataSource parentDataSource()","pos":[72953,72999]},{"content":"public str policyContext(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[73254,73293],"source":"public str policyContext(\\[str value\\])"},{"content":"public QueryBuildRange range(int rangeNo)","pos":[73555,73596]},{"content":"public int rangeCount()","pos":[73856,73879]},{"content":"public QueryBuildRange rangeField(FieldId field, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>)","pos":[74157,74225],"source":"public QueryBuildRange rangeField(FieldId field, \\[int occurrence\\])"},{"content":"public boolean relations(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[74458,74501],"source":"public boolean relations(\\[boolean value\\])"},{"content":"public int selectionCount()","pos":[74759,74786]},{"content":"public boolean selectWithRepeatableRead(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[75060,75118],"source":"public boolean selectWithRepeatableRead(\\[boolean value\\])"},{"content":"public SortOrder sortDirection(FieldId field, <ph id=\"ph1\">\\[</ph>SortOrder direction<ph id=\"ph2\">\\]</ph>)","pos":[75361,75431],"source":"public SortOrder sortDirection(FieldId field, \\[SortOrder direction\\])"},{"content":"public FieldId sortField(FieldId field)","pos":[75662,75701]},{"content":"public int sortFieldCount()","pos":[75963,75990]},{"content":"public IndexId sortIndex(int indexNo)","pos":[76264,76301]},{"content":"public int sortIndexCount()","pos":[76565,76592]},{"content":"public QueryBuildStaticlink staticlink(int staticlinkNo)","pos":[76866,76922]},{"content":"Returns a static Link object on the query’s data source.","pos":[77025,77081]},{"content":"public int staticlinkCount()","pos":[77167,77195]},{"content":"Gives the number of static links that are defined on the QueryBuildDataSource object.","pos":[77326,77411]},{"content":"public TableId table(<ph id=\"ph1\">\\[</ph>TableId value<ph id=\"ph2\">\\]</ph>)","pos":[77468,77507],"source":"public TableId table(\\[TableId value\\])"},{"content":"Gets or sets the table ID that is associated with the object.","pos":[77627,77688]},{"content":"public str toString()","pos":[77769,77790]},{"content":"Returns a string that represents the current object.","pos":[77928,77980]},{"content":"public int unionType(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[78070,78105],"source":"public int unionType(\\[int value\\])"},{"content":"public int uniqueId()","pos":[78371,78392]},{"content":"public boolean update(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[78672,78712],"source":"public boolean update(\\[boolean value\\])"},{"content":"Determines whether the records fetched by this data source can be updated.","pos":[78831,78905]},{"content":"public void clearLinks()","pos":[78973,78997]},{"content":"public void clearDynalinks()","pos":[79274,79302]},{"content":"public void clearRange(FieldId field, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>)","pos":[79575,79632],"source":"public void clearRange(FieldId field, \\[int occurrence\\])"},{"content":"public void sortClear()","pos":[79876,79899]},{"content":"public void finalize()","pos":[80177,80199]},{"content":"public void addSelectionFieldWithAlias(str alias, FieldId field, <ph id=\"ph1\">\\[</ph>SelectionField fieldType<ph id=\"ph2\">\\]</ph>)","pos":[80478,80572],"source":"public void addSelectionFieldWithAlias(str alias, FieldId field, \\[SelectionField fieldType\\])"},{"content":"public void addCalculationField(Microsoft.Dynamics.AX.Analytics.CalculationModel.NumericExpression calculation, str alias)","pos":[80779,80901]},{"content":"public void addForeignKeyDynalink(Common dynamicFile, str relatedRole)","pos":[81080,81150]},{"content":"public void addRelation(DictRelation relation, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[81381,81454],"source":"public void addRelation(DictRelation relation, \\[TableScope tableScope\\])"},{"content":"public void clearSortIndex()","pos":[81682,81710]},{"content":"public void clearRanges()","pos":[81983,82008]},{"content":"Deletes all ranges that are associated with the data source.","pos":[82142,82202]},{"content":"public void linkFields(str parentField, str thisField, <ph id=\"ph1\">\\[</ph>str parentDatasourceName<ph id=\"ph2\">\\]</ph>)","pos":[82284,82368],"source":"public void linkFields(str parentField, str thisField, \\[str parentDatasourceName\\])"},{"content":"public void addSelectionField(FieldId field, <ph id=\"ph1\">\\[</ph>SelectionField fieldType<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[82585,82679],"source":"public void addSelectionField(FieldId field, \\[SelectionField fieldType\\], \\[int arrayIndex\\])"},{"pos":[82889,82908],"content":"Method addAllFields","linkify":"Method addAllFields","nodes":[{"content":"Method addAllFields","pos":[0,19]}]},{"pos":[82965,82975],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableName","pos":[82977,82986]},{"pos":[82995,83007],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[83013,83033],"content":"Method addDataSource","linkify":"Method addDataSource","nodes":[{"content":"Method addDataSource","pos":[0,20]}]},{"content":"Adds a data source that is embedded in this data source.","pos":[83035,83091]},{"pos":[83196,83206],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arg","pos":[83208,83211]},{"content":"name","pos":[83225,83229]},{"content":"emptyFieldList","pos":[83243,83257]},{"pos":[83266,83278],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new data source.","pos":[83280,83300]},{"pos":[83307,83314],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Top-level data sources are created by using the addDataSource method.","pos":[83316,83385]},{"pos":[83391,83409],"content":"Method addDynalink","linkify":"Method addDynalink","nodes":[{"content":"Method addDynalink","pos":[0,18]}]},{"pos":[83569,83579],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[83581,83586]},{"content":"dynamicFile","pos":[83600,83611]},{"content":"dynamicField","pos":[83625,83637]},{"content":"fieldArrayIndex","pos":[83651,83666]},{"content":"dynamicFieldArrayIndex","pos":[83680,83702]},{"pos":[83711,83723],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[83729,83757],"content":"Method addForeignkeyRelation","linkify":"Method addForeignkeyRelation","nodes":[{"content":"Method addForeignkeyRelation","pos":[0,28]}]},{"pos":[83863,83873],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"relatedTableRole","pos":[83875,83891]},{"content":"parentDatasourceName","pos":[83905,83925]},{"pos":[83934,83946],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[83952,83974],"content":"Method addGroupByField","linkify":"Method addGroupByField","nodes":[{"content":"Method addGroupByField","pos":[0,22]}]},{"pos":[84062,84072],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldID","pos":[84074,84081]},{"content":"arrayIndex","pos":[84095,84105]},{"pos":[84114,84126],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[84132,84146],"content":"Method addLink","linkify":"Method addLink","nodes":[{"content":"Method addLink","pos":[0,14]}]},{"pos":[84256,84266],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"parentField","pos":[84268,84279]},{"content":"thisField","pos":[84293,84302]},{"content":"parentDatasourceName","pos":[84316,84336]},{"pos":[84345,84357],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[84363,84394],"content":"Method addOrderByAggregateField","linkify":"Method addOrderByAggregateField","nodes":[{"content":"Method addOrderByAggregateField","pos":[0,31]}]},{"pos":[84540,84550],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldType","pos":[84552,84561]},{"content":"fieldID","pos":[84575,84582]},{"content":"direction","pos":[84596,84605]},{"content":"arrayIndex","pos":[84619,84629]},{"pos":[84638,84650],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[84656,84689],"content":"Method addOrderByCalculationField","linkify":"Method addOrderByCalculationField","nodes":[{"content":"Method addOrderByCalculationField","pos":[0,33]}]},{"pos":[84856,84866],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"calculation","pos":[84868,84879]},{"content":"direction","pos":[84893,84902]},{"pos":[84911,84923],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[84929,84951],"content":"Method addOrderByField","linkify":"Method addOrderByField","nodes":[{"content":"Method addOrderByField","pos":[0,22]}]},{"pos":[85062,85072],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldID","pos":[85074,85081]},{"content":"direction","pos":[85095,85104]},{"content":"arrayIndex","pos":[85118,85128]},{"pos":[85137,85149],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[85155,85170],"content":"Method addRange","linkify":"Method addRange","nodes":[{"content":"Method addRange","pos":[0,15]}]},{"content":"Adds a range to the data source.","pos":[85172,85204]},{"pos":[85309,85319],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[85321,85326]},{"content":"arrayIndex","pos":[85340,85350]},{"content":"rangeType","pos":[85364,85373]},{"pos":[85382,85394],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new range for the data source.","pos":[85396,85428]},{"pos":[85435,85442],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Ranges define the values that records from the data source's table must satisfy.","pos":[85444,85524]},{"content":"Several range values can exist for the same field in a particular data source.","pos":[85525,85603]},{"content":"In this case, the values are included in the query if the record qualifies for any of the values that are supplied.","pos":[85604,85719]},{"content":"When ranges are included for multiple fields, only records that satisfy the constraints that are supplied by both criteria are included.","pos":[85720,85856]},{"content":"The constraints are specified in the value method.","pos":[85857,85907]},{"pos":[85913,85932],"content":"Method addSortField","linkify":"Method addSortField","nodes":[{"content":"Method addSortField","pos":[0,19]}]},{"pos":[86028,86038],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sortField","pos":[86040,86049]},{"content":"direction","pos":[86063,86072]},{"content":"arrayIndex","pos":[86086,86096]},{"pos":[86105,86117],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[86123,86142],"content":"Method addSortIndex","linkify":"Method addSortIndex","nodes":[{"content":"Method addSortIndex","pos":[0,19]}]},{"pos":[86193,86203],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[86205,86210]},{"pos":[86219,86231],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[86237,86252],"content":"Method allowAdd","linkify":"Method allowAdd","nodes":[{"content":"Method allowAdd","pos":[0,15]}]},{"pos":[86297,86307],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[86309,86314]},{"pos":[86323,86335],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[86341,86359],"content":"Method applyFilter","linkify":"Method applyFilter","nodes":[{"content":"Method applyFilter","pos":[0,18]}]},{"pos":[86423,86433],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filterValue","pos":[86435,86446]},{"pos":[86455,86467],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[86473,86490],"content":"Method autoHeader","linkify":"Method autoHeader","nodes":[{"content":"Method autoHeader","pos":[0,17]}]},{"pos":[86562,86572],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[86574,86579]},{"content":"orderNo","pos":[86593,86600]},{"pos":[86609,86621],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[86627,86655],"content":"Method autoHeaderDetailLevel","linkify":"Method autoHeaderDetailLevel","nodes":[{"content":"Method autoHeaderDetailLevel","pos":[0,28]}]},{"pos":[86730,86740],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[86742,86747]},{"content":"orderNo","pos":[86761,86768]},{"pos":[86777,86789],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[86795,86809],"content":"Method autoSum","linkify":"Method autoSum","nodes":[{"content":"Method autoSum","pos":[0,14]}]},{"pos":[86878,86888],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[86890,86895]},{"content":"orderNo","pos":[86909,86916]},{"pos":[86925,86937],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[86943,86968],"content":"Method autoSumDetailLevel","linkify":"Method autoSumDetailLevel","nodes":[{"content":"Method autoSumDetailLevel","pos":[0,25]}]},{"pos":[87040,87050],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[87052,87057]},{"content":"orderNo","pos":[87071,87078]},{"pos":[87087,87099],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[87105,87121],"content":"Method changedNo","linkify":"Method changedNo","nodes":[{"content":"Method changedNo","pos":[0,16]}]},{"pos":[87160,87172],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[87178,87205],"content":"Method childDataSourceCount","linkify":"Method childDataSourceCount","nodes":[{"content":"Method childDataSourceCount","pos":[0,27]}]},{"pos":[87251,87263],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[87269,87293],"content":"Method childDataSourceNo","linkify":"Method childDataSourceNo","nodes":[{"content":"Method childDataSourceNo","pos":[0,24]}]},{"pos":[87369,87379],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceNo","pos":[87381,87393]},{"pos":[87402,87414],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[87420,87434],"content":"Method company","linkify":"Method company","nodes":[{"content":"Method company","pos":[0,14]}]},{"pos":[87478,87488],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[87490,87495]},{"pos":[87504,87516],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[87522,87545],"content":"Method concurrencyModel","linkify":"Method concurrencyModel","nodes":[{"content":"Method concurrencyModel","pos":[0,23]}]},{"pos":[87598,87608],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[87610,87615]},{"pos":[87624,87636],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[87642,87657],"content":"Method dynalink","linkify":"Method dynalink","nodes":[{"content":"Method dynalink","pos":[0,15]}]},{"pos":[87720,87730],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dynalinkNo","pos":[87732,87742]},{"pos":[87751,87763],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[87769,87789],"content":"Method dynalinkCount","linkify":"Method dynalinkCount","nodes":[{"content":"Method dynalinkCount","pos":[0,20]}]},{"pos":[87828,87840],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[87846,87861],"content":"Method embedded","linkify":"Method embedded","nodes":[{"content":"Method embedded","pos":[0,15]}]},{"pos":[87899,87911],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[87917,87931],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Determines whether to enable or disable the object.","pos":[87933,87984]},{"pos":[88036,88046],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[88048,88053]},{"pos":[88062,88074],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the object is enabled; otherwise, false.","pos":[88076,88124]},{"pos":[88131,88138],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The enabled property enables controls to be enabled or disabled at run time.","pos":[88140,88216]},{"content":"For example, you can disable objects that do not apply to the current state of the application.","pos":[88217,88312]},{"content":"You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.","pos":[88313,88447]},{"pos":[88453,88478],"content":"Method existsMeanOrExists","linkify":"Method existsMeanOrExists","nodes":[{"content":"Method existsMeanOrExists","pos":[0,25]}]},{"pos":[88541,88551],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[88553,88558]},{"pos":[88567,88579],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[88585,88601],"content":"Method fetchMode","linkify":"Method fetchMode","nodes":[{"content":"Method fetchMode","pos":[0,16]}]},{"pos":[88647,88657],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[88659,88664]},{"pos":[88673,88685],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[88691,88704],"content":"Method fields","linkify":"Method fields","nodes":[{"content":"Method fields","pos":[0,13]}]},{"pos":[88752,88764],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[88770,88781],"content":"Method file","linkify":"Method file","nodes":[{"content":"Method file","pos":[0,11]}]},{"pos":[88815,88827],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[88833,88849],"content":"Method findRange","linkify":"Method findRange","nodes":[{"content":"Method findRange","pos":[0,16]}]},{"pos":[88945,88955],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[88957,88962]},{"content":"occurrence","pos":[88976,88986]},{"content":"arrayIndex","pos":[89000,89010]},{"pos":[89019,89031],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[89037,89053],"content":"Method firstFast","linkify":"Method firstFast","nodes":[{"content":"Method firstFast","pos":[0,16]}]},{"content":"Determines whether to retrieve the first record from the query before the other records.","pos":[89055,89143]},{"pos":[89197,89207],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[89209,89214]},{"pos":[89223,89235],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the first record is retrieved first; otherwise, false.","pos":[89237,89299]},{"pos":[89306,89313],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The firstFast property enables some database systems to optimize record retrieval, which improves performance.","pos":[89315,89425]},{"content":"If the database does not support this property, it is ignored.","pos":[89426,89488]},{"pos":[89494,89510],"content":"Method firstOnly","linkify":"Method firstOnly","nodes":[{"content":"Method firstOnly","pos":[0,16]}]},{"pos":[89564,89574],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[89576,89581]},{"pos":[89590,89602],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[89608,89653],"content":"Method getMostRestrictedQueryBuildRangeStatus","linkify":"Method getMostRestrictedQueryBuildRangeStatus","nodes":[{"content":"Method getMostRestrictedQueryBuildRangeStatus","pos":[0,45]}]},{"pos":[89766,89776],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[89778,89783]},{"content":"occurrence","pos":[89797,89807]},{"content":"arrayIndex","pos":[89821,89831]},{"pos":[89840,89852],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[89858,89870],"content":"Method getNo","linkify":"Method getNo","nodes":[{"content":"Method getNo","pos":[0,12]}]},{"pos":[89904,89916],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[89922,89931],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"pos":[89959,89971],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[89977,89995],"content":"Method indexIsHint","linkify":"Method indexIsHint","nodes":[{"content":"Method indexIsHint","pos":[0,18]}]},{"pos":[90047,90057],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arg","pos":[90059,90062]},{"pos":[90071,90083],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[90089,90123],"content":"Method isPartOfSubQueryInBaseQuery","linkify":"Method isPartOfSubQueryInBaseQuery","nodes":[{"content":"Method isPartOfSubQueryInBaseQuery","pos":[0,34]}]},{"pos":[90180,90192],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[90198,90211],"content":"Method joined","linkify":"Method joined","nodes":[{"content":"Method joined","pos":[0,13]}]},{"pos":[90247,90259],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[90265,90289],"content":"Method joinedDataSources","linkify":"Method joinedDataSources","nodes":[{"content":"Method joinedDataSources","pos":[0,24]}]},{"pos":[90338,90350],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[90356,90371],"content":"Method joinMode","linkify":"Method joinMode","nodes":[{"content":"Method joinMode","pos":[0,15]}]},{"pos":[90416,90426],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[90428,90433]},{"pos":[90442,90454],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[90460,90472],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Gets or sets the label for a control.","pos":[90474,90511]},{"pos":[90553,90563],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[90565,90570]},{"pos":[90579,90591],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the label string.","pos":[90593,90631]},{"pos":[90638,90645],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The label determines which text is displayed in the control or adjacent to it.","pos":[90647,90725]},{"content":"The label property value cannot exceed 250 characters.","pos":[90726,90780]},{"pos":[90786,90798],"content":"Method level","linkify":"Method level","nodes":[{"content":"Method level","pos":[0,12]}]},{"pos":[90829,90841],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[90847,90858],"content":"Method link","linkify":"Method link","nodes":[{"content":"Method link","pos":[0,11]}]},{"pos":[90916,90926],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"associationNo","pos":[90928,90941]},{"pos":[90950,90962],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[90968,90984],"content":"Method linkCount","linkify":"Method linkCount","nodes":[{"content":"Method linkCount","pos":[0,16]}]},{"pos":[91019,91031],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[91037,91048],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[91050,91188]},{"pos":[91229,91239],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[91241,91246]},{"pos":[91255,91267],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[91269,91333]},{"pos":[91340,91347],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[91349,91443]},{"content":"Begins with a letter.","pos":[91449,91470]},{"content":"Doesn't exceed 250 characters.","pos":[91475,91505]},{"content":"Can include numbers and underscore characters.","pos":[91510,91556]},{"content":"Cannot include punctuation or spaces.","pos":[91561,91598]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.","pos":[91603,91713]},{"pos":[91719,91745],"content":"Method oneToOneDataSources","linkify":"Method oneToOneDataSources","nodes":[{"content":"Method oneToOneDataSources","pos":[0,26]}]},{"pos":[91796,91808],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[91814,91830],"content":"Method orderMode","linkify":"Method orderMode","nodes":[{"content":"Method orderMode","pos":[0,16]}]},{"pos":[91876,91886],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[91888,91893]},{"pos":[91902,91914],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[91920,91943],"content":"Method parentDataSource","linkify":"Method parentDataSource","nodes":[{"content":"Method parentDataSource","pos":[0,23]}]},{"pos":[92002,92014],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92020,92040],"content":"Method policyContext","linkify":"Method policyContext","nodes":[{"content":"Method policyContext","pos":[0,20]}]},{"pos":[92090,92100],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[92102,92107]},{"pos":[92116,92128],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92134,92146],"content":"Method range","linkify":"Method range","nodes":[{"content":"Method range","pos":[0,12]}]},{"pos":[92200,92210],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"rangeNo","pos":[92212,92219]},{"pos":[92228,92240],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92246,92263],"content":"Method rangeCount","linkify":"Method rangeCount","nodes":[{"content":"Method rangeCount","pos":[0,17]}]},{"pos":[92299,92311],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92317,92334],"content":"Method rangeField","linkify":"Method rangeField","nodes":[{"content":"Method rangeField","pos":[0,17]}]},{"pos":[92413,92423],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[92425,92430]},{"content":"occurrence","pos":[92444,92454]},{"pos":[92463,92475],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92481,92497],"content":"Method relations","linkify":"Method relations","nodes":[{"content":"Method relations","pos":[0,16]}]},{"pos":[92551,92561],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[92563,92568]},{"pos":[92577,92589],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92595,92616],"content":"Method selectionCount","linkify":"Method selectionCount","nodes":[{"content":"Method selectionCount","pos":[0,21]}]},{"pos":[92656,92668],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92674,92705],"content":"Method selectWithRepeatableRead","linkify":"Method selectWithRepeatableRead","nodes":[{"content":"Method selectWithRepeatableRead","pos":[0,31]}]},{"pos":[92774,92784],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[92786,92791]},{"pos":[92800,92812],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92818,92838],"content":"Method sortDirection","linkify":"Method sortDirection","nodes":[{"content":"Method sortDirection","pos":[0,20]}]},{"pos":[92919,92929],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[92931,92936]},{"content":"direction","pos":[92950,92959]},{"pos":[92968,92980],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[92986,93002],"content":"Method sortField","linkify":"Method sortField","nodes":[{"content":"Method sortField","pos":[0,16]}]},{"pos":[93054,93064],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[93066,93071]},{"pos":[93080,93092],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[93098,93119],"content":"Method sortFieldCount","linkify":"Method sortFieldCount","nodes":[{"content":"Method sortFieldCount","pos":[0,21]}]},{"pos":[93159,93171],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[93177,93193],"content":"Method sortIndex","linkify":"Method sortIndex","nodes":[{"content":"Method sortIndex","pos":[0,16]}]},{"pos":[93243,93253],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"indexNo","pos":[93255,93262]},{"pos":[93271,93283],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[93289,93310],"content":"Method sortIndexCount","linkify":"Method sortIndexCount","nodes":[{"content":"Method sortIndexCount","pos":[0,21]}]},{"pos":[93350,93362],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[93368,93385],"content":"Method staticlink","linkify":"Method staticlink","nodes":[{"content":"Method staticlink","pos":[0,17]}]},{"content":"Returns a static Link object on the query’s data source.","pos":[93387,93443]},{"pos":[93512,93522],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"staticlinkNo","pos":[93524,93536]},{"pos":[93545,93557],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The static Link object at the <ph id=\"ph1\">\\_</ph>staticLinkNo index.","pos":[93559,93610],"source":"The static Link object at the \\_staticLinkNo index."},{"pos":[93616,93638],"content":"Method staticlinkCount","linkify":"Method staticlinkCount","nodes":[{"content":"Method staticlinkCount","pos":[0,22]}]},{"content":"Gives the number of static links that are defined on the QueryBuildDataSource object.","pos":[93640,93725]},{"pos":[93766,93778],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of static links that are defined on the QueryBuildDataSource object.","pos":[93780,93859]},{"pos":[93865,93877],"content":"Method table","linkify":"Method table","nodes":[{"content":"Method table","pos":[0,12]}]},{"content":"Gets or sets the table ID that is associated with the object.","pos":[93879,93940]},{"pos":[93990,94000],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[94002,94007]},{"pos":[94016,94028],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the table ID that is associated with the object.","pos":[94030,94099]},{"pos":[94105,94120],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a string that represents the current object.","pos":[94122,94174]},{"pos":[94208,94220],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the current object.","pos":[94222,94266]},{"pos":[94273,94280],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation returns the class name of the object.","pos":[94282,94346]},{"content":"The method can be overridden in a derived class to return values that are meaningful for that type.","pos":[94347,94446]},{"content":"For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.","pos":[94447,94574]},{"pos":[94580,94596],"content":"Method unionType","linkify":"Method unionType","nodes":[{"content":"Method unionType","pos":[0,16]}]},{"pos":[94642,94652],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[94654,94659]},{"pos":[94668,94680],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[94686,94701],"content":"Method uniqueId","linkify":"Method uniqueId","nodes":[{"content":"Method uniqueId","pos":[0,15]}]},{"pos":[94735,94747],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[94753,94766],"content":"Method update","linkify":"Method update","nodes":[{"content":"Method update","pos":[0,13]}]},{"content":"Determines whether the records fetched by this data source can be updated.","pos":[94768,94842]},{"pos":[94893,94903],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[94905,94910]},{"pos":[94919,94931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the records can be updated; otherwise, false.","pos":[94933,94986]},{"pos":[94993,95000],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To update the records, start a separate transaction by using the ttsBegin and ttsCommit methods.","pos":[95002,95098]},{"pos":[95104,95121],"content":"Method clearLinks","linkify":"Method clearLinks","nodes":[{"content":"Method clearLinks","pos":[0,17]}]},{"pos":[95157,95178],"content":"Method clearDynalinks","linkify":"Method clearDynalinks","nodes":[{"content":"Method clearDynalinks","pos":[0,21]}]},{"pos":[95218,95235],"content":"Method clearRange","linkify":"Method clearRange","nodes":[{"content":"Method clearRange","pos":[0,17]}]},{"pos":[95303,95313],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[95315,95320]},{"content":"occurrence","pos":[95334,95344]},{"pos":[95352,95368],"content":"Method sortClear","linkify":"Method sortClear","nodes":[{"content":"Method sortClear","pos":[0,16]}]},{"pos":[95403,95418],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[95452,95485],"content":"Method addSelectionFieldWithAlias","linkify":"Method addSelectionFieldWithAlias","nodes":[{"content":"Method addSelectionFieldWithAlias","pos":[0,33]}]},{"pos":[95590,95600],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"alias","pos":[95602,95607]},{"content":"field","pos":[95621,95626]},{"content":"fieldType","pos":[95640,95649]},{"pos":[95657,95683],"content":"Method addCalculationField","linkify":"Method addCalculationField","nodes":[{"content":"Method addCalculationField","pos":[0,26]}]},{"pos":[95818,95828],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"calculation","pos":[95830,95841]},{"content":"alias","pos":[95855,95860]},{"pos":[95868,95896],"content":"Method addForeignKeyDynalink","linkify":"Method addForeignKeyDynalink","nodes":[{"content":"Method addForeignKeyDynalink","pos":[0,28]}]},{"pos":[95979,95989],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dynamicFile","pos":[95991,96002]},{"content":"relatedRole","pos":[96016,96027]},{"pos":[96035,96053],"content":"Method addRelation","linkify":"Method addRelation","nodes":[{"content":"Method addRelation","pos":[0,18]}]},{"pos":[96137,96147],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"relation","pos":[96149,96157]},{"content":"tableScope","pos":[96171,96181]},{"pos":[96189,96210],"content":"Method clearSortIndex","linkify":"Method clearSortIndex","nodes":[{"content":"Method clearSortIndex","pos":[0,21]}]},{"pos":[96250,96268],"content":"Method clearRanges","linkify":"Method clearRanges","nodes":[{"content":"Method clearRanges","pos":[0,18]}]},{"content":"Deletes all ranges that are associated with the data source.","pos":[96270,96330]},{"pos":[96368,96376],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example adds ranges and then removes them from a data source.","pos":[96378,96453]},{"pos":[96713,96730],"content":"Method linkFields","linkify":"Method linkFields","nodes":[{"content":"Method linkFields","pos":[0,17]}]},{"pos":[96825,96835],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"parentField","pos":[96837,96848]},{"content":"thisField","pos":[96862,96871]},{"content":"parentDatasourceName","pos":[96885,96905]},{"pos":[96913,96937],"content":"Method addSelectionField","linkify":"Method addSelectionField","nodes":[{"content":"Method addSelectionField","pos":[0,24]}]},{"pos":[97040,97050],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"field","pos":[97052,97057]},{"content":"fieldType","pos":[97071,97080]},{"content":"arrayIndex","pos":[97094,97104]},{"pos":[97111,97135],"content":"Class QueryBuildDynalink","linkify":"Class QueryBuildDynalink","nodes":[{"content":"Class QueryBuildDynalink","pos":[0,24]}]},{"pos":[97185,97192],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[97198,97206],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[97212,97219],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[97223,97229]},{"content":"Description","pos":[97279,97290]},{"content":"public Common cursor(<ph id=\"ph1\">\\[</ph>Common cursor<ph id=\"ph2\">\\]</ph>)","pos":[97367,97406],"source":"public Common cursor(\\[Common cursor\\])"},{"content":"public QueryBuildDataSource dataSource()","pos":[97439,97479]},{"content":"public FieldId dynamicField(<ph id=\"ph1\">\\[</ph>FieldId dynamicField<ph id=\"ph2\">\\]</ph>)","pos":[97511,97564],"source":"public FieldId dynamicField(\\[FieldId dynamicField\\])"},{"content":"public FieldId field(<ph id=\"ph1\">\\[</ph>FieldId fieldId<ph id=\"ph2\">\\]</ph>)","pos":[97583,97624],"source":"public FieldId field(\\[FieldId fieldId\\])"},{"content":"public int fieldArrayIndex()","pos":[97655,97683]},{"content":"public FieldName fieldName()","pos":[97727,97755]},{"content":"public void finalize()","pos":[97799,97821]},{"pos":[97874,97887],"content":"Method cursor","linkify":"Method cursor","nodes":[{"content":"Method cursor","pos":[0,13]}]},{"pos":[97937,97947],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[97949,97955]},{"pos":[97964,97976],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[97982,97999],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"pos":[98052,98064],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98070,98089],"content":"Method dynamicField","linkify":"Method dynamicField","nodes":[{"content":"Method dynamicField","pos":[0,19]}]},{"pos":[98153,98163],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dynamicField","pos":[98165,98177]},{"pos":[98186,98198],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98204,98216],"content":"Method field","linkify":"Method field","nodes":[{"content":"Method field","pos":[0,12]}]},{"pos":[98268,98278],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[98280,98287]},{"pos":[98296,98308],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98314,98336],"content":"Method fieldArrayIndex","linkify":"Method fieldArrayIndex","nodes":[{"content":"Method fieldArrayIndex","pos":[0,22]}]},{"pos":[98377,98389],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98395,98411],"content":"Method fieldName","linkify":"Method fieldName","nodes":[{"content":"Method fieldName","pos":[0,16]}]},{"pos":[98452,98464],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98470,98485],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[98518,98543],"content":"Class QueryBuildFieldList","linkify":"Class QueryBuildFieldList","nodes":[{"content":"Class QueryBuildFieldList","pos":[0,25]}]},{"content":"The QueryBuildFieldList class lets you create, read, update, and delete X++ code and metadata.","pos":[98592,98686]},{"pos":[98692,98699],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[98701,98811]},{"pos":[98817,98825],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[98831,98838],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[98842,98848]},{"content":"Description","pos":[98947,98958]},{"content":"public int addAllFields(TableName tableName)","pos":[99084,99128]},{"content":"public QueryBuildFieldList addField(FieldId fieldId, <ph id=\"ph1\">\\[</ph>SelectionField fieldType<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[99205,99307],"source":"public QueryBuildFieldList addField(FieldId fieldId, \\[SelectionField fieldType\\], \\[int arrayIndex\\])"},{"content":"public int dynamic(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[99326,99359],"source":"public int dynamic(\\[int value\\])"},{"content":"public FieldId field(int index)","pos":[99447,99478]},{"content":"public int fieldCount()","pos":[99568,99591]},{"content":"public SelectionField fieldKind(int index)","pos":[99689,99731]},{"content":"public TableId tableSelector(int index)","pos":[99810,99849]},{"content":"public void clearFieldList()","pos":[99931,99959]},{"pos":[100055,100074],"content":"Method addAllFields","linkify":"Method addAllFields","nodes":[{"content":"Method addAllFields","pos":[0,19]}]},{"pos":[100131,100141],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableName","pos":[100143,100152]},{"pos":[100161,100173],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100179,100194],"content":"Method addField","linkify":"Method addField","nodes":[{"content":"Method addField","pos":[0,15]}]},{"pos":[100305,100315],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[100317,100324]},{"content":"fieldType","pos":[100338,100347]},{"content":"arrayIndex","pos":[100361,100371]},{"pos":[100380,100392],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100398,100412],"content":"Method dynamic","linkify":"Method dynamic","nodes":[{"content":"Method dynamic","pos":[0,14]}]},{"pos":[100456,100466],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[100468,100473]},{"pos":[100482,100494],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100500,100512],"content":"Method field","linkify":"Method field","nodes":[{"content":"Method field","pos":[0,12]}]},{"pos":[100556,100566],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[100568,100573]},{"pos":[100582,100594],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100600,100617],"content":"Method fieldCount","linkify":"Method fieldCount","nodes":[{"content":"Method fieldCount","pos":[0,17]}]},{"pos":[100653,100665],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100671,100687],"content":"Method fieldKind","linkify":"Method fieldKind","nodes":[{"content":"Method fieldKind","pos":[0,16]}]},{"pos":[100742,100752],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[100754,100759]},{"pos":[100768,100780],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100786,100806],"content":"Method tableSelector","linkify":"Method tableSelector","nodes":[{"content":"Method tableSelector","pos":[0,20]}]},{"pos":[100858,100868],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[100870,100875]},{"pos":[100884,100896],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100902,100923],"content":"Method clearFieldList","linkify":"Method clearFieldList","nodes":[{"content":"Method clearFieldList","pos":[0,21]}]},{"pos":[100962,100982],"content":"Class QueryBuildLink","linkify":"Class QueryBuildLink","nodes":[{"content":"Class QueryBuildLink","pos":[0,20]}]},{"content":"The QueryBuildLink class enables for the creating, reading, updating, and deleting of X++ code and metadata.","pos":[101026,101134]},{"pos":[101140,101147],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[101153,101161],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[101167,101174],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[101178,101184]},{"content":"Description","pos":[101208,101219]},{"content":"public int delete()","pos":[101270,101289]},{"content":"public int field()","pos":[101316,101334]},{"content":"public boolean incomplete()","pos":[101362,101389]},{"content":"public str joinRelation()","pos":[101408,101433]},{"content":"public int relatedField()","pos":[101454,101479]},{"content":"public int relatedTable()","pos":[101500,101525]},{"content":"public int table()","pos":[101546,101564]},{"content":"public void finalize()","pos":[101592,101614]},{"pos":[101641,101654],"content":"Method delete","linkify":"Method delete","nodes":[{"content":"Method delete","pos":[0,13]}]},{"pos":[101686,101698],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101704,101716],"content":"Method field","linkify":"Method field","nodes":[{"content":"Method field","pos":[0,12]}]},{"pos":[101747,101759],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101765,101782],"content":"Method incomplete","linkify":"Method incomplete","nodes":[{"content":"Method incomplete","pos":[0,17]}]},{"pos":[101822,101834],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101840,101859],"content":"Method joinRelation","linkify":"Method joinRelation","nodes":[{"content":"Method joinRelation","pos":[0,19]}]},{"pos":[101897,101909],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101915,101934],"content":"Method relatedField","linkify":"Method relatedField","nodes":[{"content":"Method relatedField","pos":[0,19]}]},{"pos":[101972,101984],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101990,102009],"content":"Method relatedTable","linkify":"Method relatedTable","nodes":[{"content":"Method relatedTable","pos":[0,19]}]},{"pos":[102047,102059],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[102065,102077],"content":"Method table","linkify":"Method table","nodes":[{"content":"Method table","pos":[0,12]}]},{"pos":[102108,102120],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[102126,102141],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[102174,102195],"content":"Class QueryBuildRange","linkify":"Class QueryBuildRange","nodes":[{"content":"Class QueryBuildRange","pos":[0,21]}]},{"content":"The QueryBuildRange class represents the ranges that define which records should be fetched from the data source in which the QueryBuildRange class is associated.","pos":[102240,102402]},{"pos":[102408,102415],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value property can be used to set the string that defines the range.","pos":[102417,102489]},{"content":"This class lets you create, read, update, and delete X++ code and metadata.","pos":[102490,102565]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[102566,102676]},{"content":"A particular data source can have any number of ranges.","pos":[102677,102732]},{"content":"Multiple ranges are valid for the same data source field.","pos":[102733,102790]},{"pos":[102796,102804],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following basic example shows how to use the QueryBuildRange class to specify the range of interest for a specific data field.","pos":[102806,102936]},{"pos":[103632,103639],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[103643,103649]},{"content":"Description","pos":[103707,103718]},{"content":"public QueryBuildDataSource dataSource()","pos":[104055,104095]},{"content":"Returns the data source that was used to instantiate the QueryBuildRange object.","pos":[104119,104199]},{"content":"public boolean doesRangeNodeBelongToCompositeQuery()","pos":[104261,104313]},{"content":"public boolean enabled(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[104467,104508],"source":"public boolean enabled(\\[boolean value\\])"},{"content":"Determines whether to enable or disable the object.","pos":[104531,104582]},{"content":"public FieldId field(<ph id=\"ph1\">\\[</ph>FieldId value<ph id=\"ph2\">\\]</ph>)","pos":[104673,104712],"source":"public FieldId field(\\[FieldId value\\])"},{"content":"Gets or sets the field ID associated with the object.","pos":[104737,104790]},{"content":"public int fieldArrayIndex()","pos":[104879,104907]},{"content":"public FieldName fieldName()","pos":[105085,105113]},{"content":"public str label(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[105291,105322],"source":"public str label(\\[str value\\])"},{"content":"Gets or sets the label for a control.","pos":[105355,105392]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[105497,105527],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[105561,105699]},{"content":"public str prompt()","pos":[105704,105723]},{"content":"public QueryRangeType rangeType(<ph id=\"ph1\">\\[</ph>QueryRangeType rangeType<ph id=\"ph2\">\\]</ph>)","pos":[105910,105971],"source":"public QueryRangeType rangeType(\\[QueryRangeType rangeType\\])"},{"content":"public int status(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[106116,106148],"source":"public int status(\\[int value\\])"},{"content":"Gets or sets the status of an object.","pos":[106180,106217]},{"content":"public TableId table(<ph id=\"ph1\">\\[</ph>TableId value<ph id=\"ph2\">\\]</ph>)","pos":[106322,106361],"source":"public TableId table(\\[TableId value\\])"},{"content":"Gets or sets the table ID that is associated with the object.","pos":[106386,106447]},{"content":"public TableId tableSelector(<ph id=\"ph1\">\\[</ph>TableId value<ph id=\"ph2\">\\]</ph>)","pos":[106528,106575],"source":"public TableId tableSelector(\\[TableId value\\])"},{"content":"public str toString()","pos":[106734,106755]},{"content":"Returns a string that represents the current object.","pos":[106798,106850]},{"content":"public int typeof()","pos":[106940,106959]},{"content":"public boolean valid()","pos":[107146,107168]},{"content":"public str value(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[107352,107383],"source":"public str value(\\[str value\\])"},{"content":"Gets or sets the value that queried records must match to be retrieved.","pos":[107416,107487]},{"content":"public void associateRangeNodeToCompositeQuery()","pos":[107558,107606]},{"content":"public void finalize()","pos":[107764,107786]},{"pos":[107973,107990],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"content":"Returns the data source that was used to instantiate the QueryBuildRange object.","pos":[107992,108072]},{"pos":[108125,108137],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The data source that was used to instantiate the QueryBuildRange class object.","pos":[108139,108217]},{"pos":[108223,108265],"content":"Method doesRangeNodeBelongToCompositeQuery","linkify":"Method doesRangeNodeBelongToCompositeQuery","nodes":[{"content":"Method doesRangeNodeBelongToCompositeQuery","pos":[0,42]}]},{"pos":[108330,108342],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108348,108362],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Determines whether to enable or disable the object.","pos":[108364,108415]},{"pos":[108467,108477],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[108479,108484]},{"pos":[108493,108505],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the object is enabled; otherwise, false.","pos":[108507,108555]},{"pos":[108562,108569],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The enabled property enables controls to be enabled or disabled at run time.","pos":[108571,108647]},{"content":"For example, you can disable objects that do not apply to the current state of the application.","pos":[108648,108743]},{"content":"You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.","pos":[108744,108878]},{"pos":[108884,108896],"content":"Method field","linkify":"Method field","nodes":[{"content":"Method field","pos":[0,12]}]},{"content":"Gets or sets the field ID associated with the object.","pos":[108898,108951]},{"pos":[109001,109011],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[109013,109018]},{"pos":[109027,109039],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the field ID associated with the object.","pos":[109041,109102]},{"pos":[109108,109130],"content":"Method fieldArrayIndex","linkify":"Method fieldArrayIndex","nodes":[{"content":"Method fieldArrayIndex","pos":[0,22]}]},{"pos":[109171,109183],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109189,109205],"content":"Method fieldName","linkify":"Method fieldName","nodes":[{"content":"Method fieldName","pos":[0,16]}]},{"pos":[109246,109258],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109264,109276],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Gets or sets the label for a control.","pos":[109278,109315]},{"pos":[109357,109367],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[109369,109374]},{"pos":[109383,109395],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the label string.","pos":[109397,109435]},{"pos":[109442,109449],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The label determines which text is displayed in the control or adjacent to it.","pos":[109451,109529]},{"content":"The label property value cannot exceed 250 characters.","pos":[109530,109584]},{"pos":[109590,109601],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[109603,109741]},{"pos":[109782,109792],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[109794,109799]},{"pos":[109808,109820],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[109822,109886]},{"pos":[109893,109900],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[109902,109996]},{"content":"Begins with a letter.","pos":[110002,110023]},{"content":"Doesn't exceed 250 characters.","pos":[110028,110058]},{"content":"Can include numbers and underscore characters.","pos":[110063,110109]},{"content":"Cannot include punctuation or spaces.","pos":[110114,110151]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.","pos":[110156,110266]},{"pos":[110272,110285],"content":"Method prompt","linkify":"Method prompt","nodes":[{"content":"Method prompt","pos":[0,13]}]},{"pos":[110317,110329],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[110335,110351],"content":"Method rangeType","linkify":"Method rangeType","nodes":[{"content":"Method rangeType","pos":[0,16]}]},{"pos":[110423,110433],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"rangeType","pos":[110435,110444]},{"pos":[110453,110465],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[110471,110484],"content":"Method status","linkify":"Method status","nodes":[{"content":"Method status","pos":[0,13]}]},{"content":"Gets or sets the status of an object.","pos":[110486,110523]},{"pos":[110566,110576],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[110578,110583]},{"pos":[110592,110604],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current status of the object.","pos":[110606,110639]},{"pos":[110646,110653],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following values are possible for the status:","pos":[110655,110704]},{"content":"0 – Status Open.","pos":[110710,110726]},{"content":"1 – Status Lock.","pos":[110731,110747]},{"content":"2 – Status Hide.","pos":[110752,110768]},{"pos":[110774,110786],"content":"Method table","linkify":"Method table","nodes":[{"content":"Method table","pos":[0,12]}]},{"content":"Gets or sets the table ID that is associated with the object.","pos":[110788,110849]},{"pos":[110899,110909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[110911,110916]},{"pos":[110925,110937],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the table ID that is associated with the object.","pos":[110939,111008]},{"pos":[111014,111034],"content":"Method tableSelector","linkify":"Method tableSelector","nodes":[{"content":"Method tableSelector","pos":[0,20]}]},{"pos":[111092,111102],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[111104,111109]},{"pos":[111118,111130],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111136,111151],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a string that represents the current object.","pos":[111153,111205]},{"pos":[111239,111251],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the current object.","pos":[111253,111297]},{"pos":[111304,111311],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation returns the class name of the object.","pos":[111313,111377]},{"content":"The method can be overridden in a derived class to return values that are meaningful for that type.","pos":[111378,111477]},{"content":"For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.","pos":[111478,111605]},{"pos":[111611,111624],"content":"Method typeof","linkify":"Method typeof","nodes":[{"content":"Method typeof","pos":[0,13]}]},{"pos":[111656,111668],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111674,111686],"content":"Method valid","linkify":"Method valid","nodes":[{"content":"Method valid","pos":[0,12]}]},{"pos":[111721,111733],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111739,111751],"content":"Method value","linkify":"Method value","nodes":[{"content":"Method value","pos":[0,12]}]},{"content":"Gets or sets the value that queried records must match to be retrieved.","pos":[111753,111824]},{"pos":[111866,111876],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[111878,111883]},{"pos":[111892,111904],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string value for the range.","pos":[111906,111937]},{"pos":[111943,111984],"content":"Method associateRangeNodeToCompositeQuery","linkify":"Method associateRangeNodeToCompositeQuery","nodes":[{"content":"Method associateRangeNodeToCompositeQuery","pos":[0,41]}]},{"pos":[112044,112059],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[112092,112118],"content":"Class QueryBuildStaticlink","linkify":"Class QueryBuildStaticlink","nodes":[{"content":"Class QueryBuildStaticlink","pos":[0,26]}]},{"content":"The QueryBuildStaticLink class provides the information about the static links that are defined on a QueryBuildDataSource class.","pos":[112166,112294]},{"pos":[112300,112307],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[112313,112321],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[112327,112334],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[112338,112344]},{"content":"Description","pos":[112363,112374]},{"content":"public FieldId field()","pos":[112532,112554]},{"content":"Provides the field information on which the static link is defined/","pos":[112557,112624]},{"content":"public AnyType value()","pos":[112629,112651]},{"content":"Gets the value of the field on which the static link is defined.","pos":[112654,112718]},{"content":"public void finalize()","pos":[112726,112748]},{"pos":[112826,112838],"content":"Method field","linkify":"Method field","nodes":[{"content":"Method field","pos":[0,12]}]},{"content":"Provides the field information on which the static link is defined/","pos":[112840,112907]},{"pos":[112942,112954],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The FieldId value of the field on which the static link is defined.","pos":[112956,113023]},{"pos":[113029,113041],"content":"Method value","linkify":"Method value","nodes":[{"content":"Method value","pos":[0,12]}]},{"content":"Gets the value of the field on which the static link is defined.","pos":[113043,113107]},{"pos":[113142,113154],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the static link.","pos":[113156,113185]},{"pos":[113191,113206],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[113239,113256],"content":"Class QueryFilter","linkify":"Class QueryFilter","nodes":[{"content":"Class QueryFilter","pos":[0,17]}]},{"pos":[113299,113306],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[113312,113320],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[113326,113333],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[113337,113343]},{"content":"Description","pos":[113401,113412]},{"content":"public QueryBuildDataSource dataSource()","pos":[113579,113619]},{"content":"public FieldName field()","pos":[113700,113724]},{"content":"public QueryRangeType rangeType(<ph id=\"ph1\">\\[</ph>QueryRangeType rangeType<ph id=\"ph2\">\\]</ph>)","pos":[113821,113882],"source":"public QueryRangeType rangeType(\\[QueryRangeType rangeType\\])"},{"content":"public int status(<ph id=\"ph1\">\\[</ph>int status<ph id=\"ph2\">\\]</ph>)","pos":[113942,113975],"source":"public int status(\\[int status\\])"},{"content":"public str toString()","pos":[114063,114084]},{"content":"Returns a string that represents the current object.","pos":[114127,114179]},{"content":"public str value(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[114184,114215],"source":"public str value(\\[str value\\])"},{"content":"public void finalize()","pos":[114305,114327]},{"pos":[114429,114446],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"pos":[114499,114511],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[114517,114529],"content":"Method field","linkify":"Method field","nodes":[{"content":"Method field","pos":[0,12]}]},{"pos":[114566,114578],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[114584,114600],"content":"Method rangeType","linkify":"Method rangeType","nodes":[{"content":"Method rangeType","pos":[0,16]}]},{"pos":[114672,114682],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"rangeType","pos":[114684,114693]},{"pos":[114702,114714],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[114720,114733],"content":"Method status","linkify":"Method status","nodes":[{"content":"Method status","pos":[0,13]}]},{"pos":[114777,114787],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"status","pos":[114789,114795]},{"pos":[114804,114816],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[114822,114837],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a string that represents the current object.","pos":[114839,114891]},{"pos":[114925,114937],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the current object.","pos":[114939,114983]},{"pos":[114990,114997],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation returns the class name of the object.","pos":[114999,115063]},{"content":"The method can be overridden in a derived class to return values that are meaningful for that type.","pos":[115064,115163]},{"content":"For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.","pos":[115164,115291]},{"pos":[115297,115309],"content":"Method value","linkify":"Method value","nodes":[{"content":"Method value","pos":[0,12]}]},{"pos":[115351,115361],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[115363,115368]},{"pos":[115377,115389],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[115395,115410],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[115443,115466],"content":"Class QueryGroupByField","linkify":"Class QueryGroupByField","nodes":[{"content":"Class QueryGroupByField","pos":[0,23]}]},{"pos":[115517,115524],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[115530,115538],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[115544,115551],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[115555,115561]},{"content":"Description","pos":[115613,115624]},{"content":"public boolean autoHeader(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[115703,115747],"source":"public boolean autoHeader(\\[boolean value\\])"},{"content":"public int autoHeaderDetailLevel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[115777,115824],"source":"public int autoHeaderDetailLevel(\\[int value\\])"},{"content":"public boolean autoSum(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[115851,115892],"source":"public boolean autoSum(\\[boolean value\\])"},{"content":"public int autoSumDetailLevel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[115925,115969],"source":"public int autoSumDetailLevel(\\[int value\\])"},{"content":"public QueryBuildDataSource dataSource()","pos":[115999,116039]},{"content":"public int fieldID()","pos":[116073,116093]},{"content":"public TableId tableSelector(<ph id=\"ph1\">\\[</ph>TableId tableSelector<ph id=\"ph2\">\\]</ph>)","pos":[116147,116202],"source":"public TableId tableSelector(\\[TableId tableSelector\\])"},{"content":"public void finalize()","pos":[116221,116243]},{"pos":[116298,116315],"content":"Method autoHeader","linkify":"Method autoHeader","nodes":[{"content":"Method autoHeader","pos":[0,17]}]},{"pos":[116370,116380],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[116382,116387]},{"pos":[116396,116408],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[116414,116442],"content":"Method autoHeaderDetailLevel","linkify":"Method autoHeaderDetailLevel","nodes":[{"content":"Method autoHeaderDetailLevel","pos":[0,28]}]},{"pos":[116500,116510],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[116512,116517]},{"pos":[116526,116538],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[116544,116558],"content":"Method autoSum","linkify":"Method autoSum","nodes":[{"content":"Method autoSum","pos":[0,14]}]},{"pos":[116610,116620],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[116622,116627]},{"pos":[116636,116648],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[116654,116679],"content":"Method autoSumDetailLevel","linkify":"Method autoSumDetailLevel","nodes":[{"content":"Method autoSumDetailLevel","pos":[0,25]}]},{"pos":[116734,116744],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[116746,116751]},{"pos":[116760,116772],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[116778,116795],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"pos":[116848,116860],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[116866,116880],"content":"Method fieldID","linkify":"Method fieldID","nodes":[{"content":"Method fieldID","pos":[0,14]}]},{"pos":[116913,116925],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[116931,116951],"content":"Method tableSelector","linkify":"Method tableSelector","nodes":[{"content":"Method tableSelector","pos":[0,20]}]},{"pos":[117017,117027],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableSelector","pos":[117029,117042]},{"pos":[117051,117063],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[117069,117084],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[117117,117140],"content":"Class QueryHavingFilter","linkify":"Class QueryHavingFilter","nodes":[{"content":"Class QueryHavingFilter","pos":[0,23]}]},{"pos":[117191,117198],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[117204,117212],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[117218,117225],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[117229,117235]},{"content":"Description","pos":[117279,117290]},{"content":"public AggregateFunction aggregateFunction()","pos":[117613,117657]},{"content":"public QueryBuildDataSource dataSource()","pos":[117805,117845]},{"content":"public boolean enabled(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[117997,118038],"source":"public boolean enabled(\\[boolean value\\])"},{"content":"Determines whether to enable or disable the object.","pos":[118047,118098]},{"content":"public FieldId field(<ph id=\"ph1\">\\[</ph>FieldId value<ph id=\"ph2\">\\]</ph>)","pos":[118189,118228],"source":"public FieldId field(\\[FieldId value\\])"},{"content":"Gets or sets the field ID associated with the object.","pos":[118239,118292]},{"content":"public int fieldArrayIndex()","pos":[118381,118409]},{"content":"public FieldName fieldName()","pos":[118573,118601]},{"content":"public str label(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[118765,118796],"source":"public str label(\\[str value\\])"},{"content":"Gets or sets the label for a control.","pos":[118815,118852]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[118957,118987],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[119007,119145]},{"content":"public str prompt()","pos":[119150,119169]},{"content":"public int status(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[119342,119374],"source":"public int status(\\[int value\\])"},{"content":"Gets or sets the status of an object.","pos":[119392,119429]},{"content":"public TableId table(<ph id=\"ph1\">\\[</ph>TableId value<ph id=\"ph2\">\\]</ph>)","pos":[119534,119573],"source":"public TableId table(\\[TableId value\\])"},{"content":"Gets or sets the table ID that is associated with the object.","pos":[119584,119645]},{"content":"public TableId tableSelector(<ph id=\"ph1\">\\[</ph>TableId value<ph id=\"ph2\">\\]</ph>)","pos":[119726,119773],"source":"public TableId tableSelector(\\[TableId value\\])"},{"content":"public str toString()","pos":[119918,119939]},{"content":"Returns a string that represents the current object.","pos":[119968,120020]},{"content":"public int typeof()","pos":[120110,120129]},{"content":"public boolean valid()","pos":[120302,120324]},{"content":"public str value(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[120494,120525],"source":"public str value(\\[str value\\])"},{"content":"public void finalize()","pos":[120686,120708]},{"pos":[120881,120905],"content":"Method aggregateFunction","linkify":"Method aggregateFunction","nodes":[{"content":"Method aggregateFunction","pos":[0,24]}]},{"pos":[120962,120974],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[120980,120997],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"pos":[121050,121062],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[121068,121082],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Determines whether to enable or disable the object.","pos":[121084,121135]},{"pos":[121187,121197],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[121199,121204]},{"pos":[121213,121225],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the object is enabled; otherwise, false.","pos":[121227,121275]},{"pos":[121282,121289],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The enabled property enables controls to be enabled or disabled at run time.","pos":[121291,121367]},{"content":"For example, you can disable objects that do not apply to the current state of the application.","pos":[121368,121463]},{"content":"You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.","pos":[121464,121598]},{"pos":[121604,121616],"content":"Method field","linkify":"Method field","nodes":[{"content":"Method field","pos":[0,12]}]},{"content":"Gets or sets the field ID associated with the object.","pos":[121618,121671]},{"pos":[121721,121731],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[121733,121738]},{"pos":[121747,121759],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the field ID associated with the object.","pos":[121761,121822]},{"pos":[121828,121850],"content":"Method fieldArrayIndex","linkify":"Method fieldArrayIndex","nodes":[{"content":"Method fieldArrayIndex","pos":[0,22]}]},{"pos":[121891,121903],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[121909,121925],"content":"Method fieldName","linkify":"Method fieldName","nodes":[{"content":"Method fieldName","pos":[0,16]}]},{"pos":[121966,121978],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[121984,121996],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Gets or sets the label for a control.","pos":[121998,122035]},{"pos":[122077,122087],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[122089,122094]},{"pos":[122103,122115],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the label string.","pos":[122117,122155]},{"pos":[122162,122169],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The label determines which text is displayed in the control or adjacent to it.","pos":[122171,122249]},{"content":"The label property value cannot exceed 250 characters.","pos":[122250,122304]},{"pos":[122310,122321],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[122323,122461]},{"pos":[122502,122512],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[122514,122519]},{"pos":[122528,122540],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[122542,122606]},{"pos":[122613,122620],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[122622,122716]},{"content":"Begins with a letter.","pos":[122722,122743]},{"content":"Doesn't exceed 250 characters.","pos":[122748,122778]},{"content":"Can include numbers and underscore characters.","pos":[122783,122829]},{"content":"Cannot include punctuation or spaces.","pos":[122834,122871]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.","pos":[122876,122986]},{"pos":[122992,123005],"content":"Method prompt","linkify":"Method prompt","nodes":[{"content":"Method prompt","pos":[0,13]}]},{"pos":[123037,123049],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[123055,123068],"content":"Method status","linkify":"Method status","nodes":[{"content":"Method status","pos":[0,13]}]},{"content":"Gets or sets the status of an object.","pos":[123070,123107]},{"pos":[123150,123160],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[123162,123167]},{"pos":[123176,123188],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the status of the object.","pos":[123190,123236]},{"pos":[123242,123254],"content":"Method table","linkify":"Method table","nodes":[{"content":"Method table","pos":[0,12]}]},{"content":"Gets or sets the table ID that is associated with the object.","pos":[123256,123317]},{"pos":[123367,123377],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[123379,123384]},{"pos":[123393,123405],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the table ID that is associated with the object.","pos":[123407,123476]},{"pos":[123482,123502],"content":"Method tableSelector","linkify":"Method tableSelector","nodes":[{"content":"Method tableSelector","pos":[0,20]}]},{"pos":[123560,123570],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[123572,123577]},{"pos":[123586,123598],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[123604,123619],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a string that represents the current object.","pos":[123621,123673]},{"pos":[123707,123719],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the current object.","pos":[123721,123765]},{"pos":[123772,123779],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation returns the class name of the object.","pos":[123781,123845]},{"content":"The method can be overridden in a derived class to return values that are meaningful for that type.","pos":[123846,123945]},{"content":"For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.","pos":[123946,124073]},{"pos":[124079,124092],"content":"Method typeof","linkify":"Method typeof","nodes":[{"content":"Method typeof","pos":[0,13]}]},{"pos":[124124,124136],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[124142,124154],"content":"Method valid","linkify":"Method valid","nodes":[{"content":"Method valid","pos":[0,12]}]},{"pos":[124189,124201],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[124207,124219],"content":"Method value","linkify":"Method value","nodes":[{"content":"Method value","pos":[0,12]}]},{"pos":[124261,124271],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[124273,124278]},{"pos":[124287,124299],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[124305,124320],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[124353,124376],"content":"Class QueryOrderByField","linkify":"Class QueryOrderByField","nodes":[{"content":"Class QueryOrderByField","pos":[0,23]}]},{"pos":[124427,124434],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[124440,124448],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[124454,124461],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[124465,124471]},{"content":"Description","pos":[124523,124534]},{"content":"public boolean autoHeader(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[124613,124657],"source":"public boolean autoHeader(\\[boolean value\\])"},{"content":"public int autoHeaderDetailLevel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[124687,124734],"source":"public int autoHeaderDetailLevel(\\[int value\\])"},{"content":"public boolean autoSum(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[124761,124802],"source":"public boolean autoSum(\\[boolean value\\])"},{"content":"public int autoSumDetailLevel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[124835,124879],"source":"public int autoSumDetailLevel(\\[int value\\])"},{"content":"public QueryBuildDataSource dataSource()","pos":[124909,124949]},{"content":"public SortOrder direction()","pos":[124983,125011]},{"content":"public int fieldID()","pos":[125057,125077]},{"content":"public TableId tableSelector(<ph id=\"ph1\">\\[</ph>TableId tableSelector<ph id=\"ph2\">\\]</ph>)","pos":[125131,125186],"source":"public TableId tableSelector(\\[TableId tableSelector\\])"},{"content":"public void finalize()","pos":[125205,125227]},{"pos":[125282,125299],"content":"Method autoHeader","linkify":"Method autoHeader","nodes":[{"content":"Method autoHeader","pos":[0,17]}]},{"pos":[125354,125364],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[125366,125371]},{"pos":[125380,125392],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[125398,125426],"content":"Method autoHeaderDetailLevel","linkify":"Method autoHeaderDetailLevel","nodes":[{"content":"Method autoHeaderDetailLevel","pos":[0,28]}]},{"pos":[125484,125494],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[125496,125501]},{"pos":[125510,125522],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[125528,125542],"content":"Method autoSum","linkify":"Method autoSum","nodes":[{"content":"Method autoSum","pos":[0,14]}]},{"pos":[125594,125604],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[125606,125611]},{"pos":[125620,125632],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[125638,125663],"content":"Method autoSumDetailLevel","linkify":"Method autoSumDetailLevel","nodes":[{"content":"Method autoSumDetailLevel","pos":[0,25]}]},{"pos":[125718,125728],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[125730,125735]},{"pos":[125744,125756],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[125762,125779],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"pos":[125832,125844],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[125850,125866],"content":"Method direction","linkify":"Method direction","nodes":[{"content":"Method direction","pos":[0,16]}]},{"pos":[125907,125919],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[125925,125939],"content":"Method fieldID","linkify":"Method fieldID","nodes":[{"content":"Method fieldID","pos":[0,14]}]},{"pos":[125972,125984],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[125990,126010],"content":"Method tableSelector","linkify":"Method tableSelector","nodes":[{"content":"Method tableSelector","pos":[0,20]}]},{"pos":[126076,126086],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableSelector","pos":[126088,126101]},{"pos":[126110,126122],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[126128,126143],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[126176,126190],"content":"Class QueryRun","linkify":"Class QueryRun","nodes":[{"content":"Class QueryRun","pos":[0,14]}]},{"content":"The QueryRun class traverses tables in the database, fetches records that satisfy constraints that are given by the user, and helps to gather such constraints from user input.","pos":[126229,126404]},{"pos":[126410,126417],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"QueryRun objects are used to traverse tables in the database and fetch records that satisfy the constraints that are given by the user.","pos":[126419,126554]},{"content":"A QueryRun object may interact with the user to let the user enter such constraints.","pos":[126555,126639]},{"content":"Queries are used internally by reports to delineate and fetch the data to be presented in the report.","pos":[126640,126741]},{"content":"A QueryRun object relies on a Query object to define the structure of the query (for example, which tables are searched and how the records are sorted).","pos":[126742,126894]},{"content":"A QueryRun object defines the dynamic behavior of the query, whereas a Query object defines the static characteristics of the query.","pos":[126895,127027]},{"pos":[127033,127041],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"In the following example, it is assumed that there is a query named Customer in the Finance and Operations Application Object Tree (AOT), and that it has one data source, the CustTable table.","pos":[127043,127234]},{"pos":[127936,127943],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[127947,127953]},{"content":"Description","pos":[128060,128071]},{"content":"public boolean allowCheck(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[128457,128501],"source":"public boolean allowCheck(\\[boolean value\\])"},{"content":"public boolean allowCrossCompany(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[128712,128763],"source":"public boolean allowCrossCompany(\\[boolean value\\])"},{"content":"public boolean canPage(<ph id=\"ph1\">\\[</ph>boolean skipOrderByCheck<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean throwIfNotPagable<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>boolean isValuePaging<ph id=\"ph6\">\\]</ph>)","pos":[128967,129077],"source":"public boolean canPage(\\[boolean skipOrderByCheck\\], \\[boolean throwIfNotPagable\\], \\[boolean isValuePaging\\])"},{"content":"public boolean changed(TableId table, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>)","pos":[129222,129279],"source":"public boolean changed(TableId table, \\[int occurrence\\])"},{"content":"Determines whether the specified data source has fetched a new value since the last call to the QueryRun.next method.","pos":[129335,129452]},{"content":"public str changedBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[129477,129512],"source":"public str changedBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who last changed the application object.","pos":[129590,129664]},{"content":"public Date changedDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[129732,129771],"source":"public Date changedDate(\\[Date value\\])"},{"content":"Gets or sets the date an application object was last changed.","pos":[129845,129906]},{"content":"public boolean changedNo(int dataSourceNo)","pos":[129987,130029]},{"content":"public str changedTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[130242,130279],"source":"public str changedTime(\\[str value\\])"},{"content":"Gets or sets the time an application object was last changed.","pos":[130355,130416]},{"content":"public str createdBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[130497,130532],"source":"public str createdBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who created the application object.","pos":[130610,130679]},{"content":"public Date creationDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[130752,130792],"source":"public Date creationDate(\\[Date value\\])"},{"content":"Gets or sets the date an application object was created.","pos":[130865,130921]},{"content":"public str creationTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[131007,131045],"source":"public str creationTime(\\[str value\\])"},{"content":"public str description(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[131262,131299],"source":"public str description(\\[str value\\])"},{"content":"public boolean equal(Object obj)","pos":[131517,131549]},{"content":"Determines whether the specified object is equal to the current object.","pos":[131630,131701]},{"content":"public str form(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[131772,131802],"source":"public str form(\\[str value\\])"},{"content":"public Common get(TableId table, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>)","pos":[132027,132079],"source":"public Common get(TableId table, \\[int occurrence\\])"},{"content":"Retrieves the record fetched by the previous call to next method.","pos":[132140,132205]},{"content":"public System.Type getImpExpDataContractType()","pos":[132282,132328]},{"content":"public Common getNo(int dataSourceNo)","pos":[132537,132574]},{"content":"Retrieves the record fetched by the previous call to QueryRun.next Method.","pos":[132650,132724]},{"content":"public boolean importable()","pos":[132792,132819]},{"content":"public boolean interactive(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[133047,133092],"source":"public boolean interactive(\\[boolean value\\])"},{"content":"public boolean isPositionPagingEnabled()","pos":[133302,133342]},{"content":"public boolean isQueryTimedout()","pos":[133557,133589]},{"content":"public boolean isValueBasedPagingEnabled()","pos":[133812,133854]},{"content":"public int literals(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[134067,134101],"source":"public int literals(\\[int value\\])"},{"content":"public Guid loadCsv(str fileName)","pos":[134322,134355]},{"content":"public Guid loadXml(str fileName)","pos":[134577,134610]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[134832,134862],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[134945,135083]},{"content":"public QueryRun newObject(AnyType source)","pos":[135088,135129]},{"content":"public boolean next()","pos":[135343,135364]},{"content":"Retrieves the next record from the query.","pos":[135456,135497]},{"content":"public int nextUniqueId(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[135598,135636],"source":"public int nextUniqueId(\\[int value\\])"},{"content":"public Guid origin(<ph id=\"ph1\">\\[</ph>Guid value<ph id=\"ph2\">\\]</ph>)","pos":[135853,135887],"source":"public Guid origin(\\[Guid value\\])"},{"content":"public container pack(<ph id=\"ph1\">\\[</ph>boolean doCheck<ph id=\"ph2\">\\]</ph>)","pos":[136108,136150],"source":"public container pack(\\[boolean doCheck\\])"},{"content":"public boolean prompt()","pos":[136363,136386]},{"content":"Presents, to the user, the options for defining the records to be fetched by the query.","pos":[136476,136563]},{"content":"public Query query(<ph id=\"ph1\">\\[</ph>Query query<ph id=\"ph2\">\\]</ph>)","pos":[136618,136653],"source":"public Query query(\\[Query query\\])"},{"content":"public int queryType(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[136873,136908],"source":"public int queryType(\\[int value\\])"},{"content":"public boolean recordLevelSecurity(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[137128,137181],"source":"public boolean recordLevelSecurity(\\[boolean value\\])"},{"content":"public ReportRun report()","pos":[137383,137408]},{"content":"public ReportRun reportRun()","pos":[137638,137666]},{"content":"public boolean saved()","pos":[137893,137915]},{"content":"public boolean saveUserSetup(<ph id=\"ph1\">\\[</ph>boolean saveIt<ph id=\"ph2\">\\]</ph>)","pos":[138148,138196],"source":"public boolean saveUserSetup(\\[boolean saveIt\\])"},{"content":"Saves the user setup.","pos":[138261,138282]},{"content":"public boolean searchable(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[138403,138447],"source":"public boolean searchable(\\[boolean value\\])"},{"content":"public boolean setCursor(Common record, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>)","pos":[138658,138717],"source":"public boolean setCursor(Common record, \\[int occurrence\\])"},{"content":"public boolean setRecord(Common record, <ph id=\"ph1\">\\[</ph>int occurrence<ph id=\"ph2\">\\]</ph>)","pos":[138913,138972],"source":"public boolean setRecord(Common record, \\[int occurrence\\])"},{"content":"public str title(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[139168,139199],"source":"public str title(\\[str value\\])"},{"content":"public str toString()","pos":[139423,139444]},{"content":"Returns a string that represents the current object.","pos":[139536,139588]},{"content":"public boolean userUpdate(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[139678,139722],"source":"public boolean userUpdate(\\[boolean value\\])"},{"content":"public int version(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[139933,139966],"source":"public int version(\\[int value\\])"},{"content":"::public static int getQueryRowCount(Query query, int maxRows)","pos":[140188,140250]},{"content":"::public static int runAndPopulate(Query sourceRuery, Common targetTable, Map queryAliasesAndTargetColumnsMap)","pos":[140443,140553]},{"content":"public void run()","pos":[140698,140715]},{"content":"Opens a form used to obtain information about the query from the user, and fetches the matching records.","pos":[140811,140915]},{"content":"public void new(AnyType source)","pos":[140953,140984]},{"content":"Initializes a new instance of the Object class.","pos":[141066,141113]},{"content":"public void addPageRange(<ph id=\"ph1\">\\[</ph>Int64 startingPosition<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>Int64 numberOfRecordsToFetch<ph id=\"ph4\">\\]</ph>)","pos":[141208,141294],"source":"public void addPageRange(\\[Int64 startingPosition\\], \\[Int64 numberOfRecordsToFetch\\])"},{"content":"public void reset()","pos":[141463,141482]},{"content":"public void setImportSession(Guid importSession)","pos":[141718,141766]},{"content":"public void setQuerytimeout(int seconds, <ph id=\"ph1\">\\[</ph>boolean raiseException<ph id=\"ph2\">\\]</ph>)","pos":[141973,142041],"source":"public void setQuerytimeout(int seconds, \\[boolean raiseException\\])"},{"content":"public void init()","pos":[142228,142246]},{"content":"public void enablePositionPaging(<ph id=\"ph1\">\\[</ph>boolean enabled<ph id=\"ph2\">\\]</ph>)","pos":[142483,142536],"source":"public void enablePositionPaging(\\[boolean enabled\\])"},{"content":"public void shred(Guid importSession)","pos":[142738,142775]},{"content":"public void enableValueBasedPaging(<ph id=\"ph1\">\\[</ph>boolean enable<ph id=\"ph2\">\\]</ph>)","pos":[142993,143047],"source":"public void enableValueBasedPaging(\\[boolean enable\\])"},{"content":"public void bulkNext(<ph id=\"ph1\">\\[</ph>boolean fetchAllData<ph id=\"ph2\">\\]</ph>)","pos":[143248,143294],"source":"public void bulkNext(\\[boolean fetchAllData\\])"},{"content":"public void applyValueBasedPaging(<ph id=\"ph1\">\\[</ph>Common sourceCursor<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean isForward<ph id=\"ph4\">\\]</ph>)","pos":[143503,143584],"source":"public void applyValueBasedPaging(\\[Common sourceCursor\\], \\[boolean isForward\\])"},{"pos":[143761,143778],"content":"Method allowCheck","linkify":"Method allowCheck","nodes":[{"content":"Method allowCheck","pos":[0,17]}]},{"pos":[143833,143843],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[143845,143850]},{"pos":[143859,143871],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[143877,143901],"content":"Method allowCrossCompany","linkify":"Method allowCrossCompany","nodes":[{"content":"Method allowCrossCompany","pos":[0,24]}]},{"pos":[143963,143973],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[143975,143980]},{"pos":[143989,144001],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[144007,144021],"content":"Method canPage","linkify":"Method canPage","nodes":[{"content":"Method canPage","pos":[0,14]}]},{"pos":[144138,144148],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"skipOrderByCheck","pos":[144150,144166]},{"content":"throwIfNotPagable","pos":[144180,144197]},{"content":"isValuePaging","pos":[144211,144224]},{"pos":[144233,144245],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[144251,144265],"content":"Method changed","linkify":"Method changed","nodes":[{"content":"Method changed","pos":[0,14]}]},{"content":"Determines whether the specified data source has fetched a new value since the last call to the QueryRun.next method.","pos":[144267,144384]},{"pos":[144452,144462],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"table","pos":[144464,144469]},{"content":"The data source to check; optional.","pos":[144472,144507]},{"content":"If more than one data source is assigned to a given table, this argument can be used to determine which data source to check.","pos":[144508,144633]},{"content":"occurrence","pos":[144645,144655]},{"content":"The data source to check; optional.","pos":[144658,144693]},{"content":"If more than one data source is assigned to a given table, this argument can be used to determine which data source to check.","pos":[144694,144819]},{"pos":[144826,144838],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the specified data source has changed since the last call to QueryRun.next; otherwise, false.","pos":[144840,144941]},{"pos":[144948,144955],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is useful when data sources are hierarchically structured.","pos":[144957,145027]},{"content":"A more embedded data source may change many times (such as the customer transactions).","pos":[145028,145114]},{"content":"This occurs every time that a less embedded data source (such as the customer table) fetches a new record (another customer).","pos":[145115,145240]},{"content":"The changedNo method can be used instead of this function.","pos":[145241,145299]},{"pos":[145305,145321],"content":"Method changedBy","linkify":"Method changedBy","nodes":[{"content":"Method changedBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who last changed the application object.","pos":[145323,145397]},{"pos":[145443,145453],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[145455,145460]},{"pos":[145469,145481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user.","pos":[145483,145504]},{"pos":[145510,145528],"content":"Method changedDate","linkify":"Method changedDate","nodes":[{"content":"Method changedDate","pos":[0,18]}]},{"content":"Gets or sets the date an application object was last changed.","pos":[145530,145591]},{"pos":[145641,145651],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[145653,145658]},{"pos":[145667,145679],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date an application object was last changed.","pos":[145681,145729]},{"pos":[145735,145751],"content":"Method changedNo","linkify":"Method changedNo","nodes":[{"content":"Method changedNo","pos":[0,16]}]},{"pos":[145806,145816],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceNo","pos":[145818,145830]},{"pos":[145839,145851],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[145857,145875],"content":"Method changedTime","linkify":"Method changedTime","nodes":[{"content":"Method changedTime","pos":[0,18]}]},{"content":"Gets or sets the time an application object was last changed.","pos":[145877,145938]},{"pos":[145986,145996],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[145998,146003]},{"pos":[146012,146024],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The time an application object was last changed.","pos":[146026,146074]},{"pos":[146080,146096],"content":"Method createdBy","linkify":"Method createdBy","nodes":[{"content":"Method createdBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who created the application object.","pos":[146098,146167]},{"pos":[146213,146223],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[146225,146230]},{"pos":[146239,146251],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user.","pos":[146253,146274]},{"pos":[146280,146299],"content":"Method creationDate","linkify":"Method creationDate","nodes":[{"content":"Method creationDate","pos":[0,19]}]},{"content":"Gets or sets the date an application object was created.","pos":[146301,146357]},{"pos":[146408,146418],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[146420,146425]},{"pos":[146434,146446],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date an application object was created.","pos":[146448,146491]},{"pos":[146497,146516],"content":"Method creationTime","linkify":"Method creationTime","nodes":[{"content":"Method creationTime","pos":[0,19]}]},{"pos":[146565,146575],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[146577,146582]},{"pos":[146591,146603],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[146609,146627],"content":"Method description","linkify":"Method description","nodes":[{"content":"Method description","pos":[0,18]}]},{"pos":[146675,146685],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[146687,146692]},{"pos":[146701,146713],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[146719,146731],"content":"Method equal","linkify":"Method equal","nodes":[{"content":"Method equal","pos":[0,12]}]},{"content":"Determines whether the specified object is equal to the current object.","pos":[146733,146804]},{"pos":[146849,146859],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"obj","pos":[146861,146864]},{"pos":[146873,146885],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the specified object is equal to the current object; otherwise, false.","pos":[146887,146965]},{"pos":[146972,146979],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation of the Object::equal method supports only reference equality.","pos":[146981,147069]},{"content":"However, derived classes can override the Object::equal method to support value equality.","pos":[147070,147159]},{"pos":[147165,147176],"content":"Method form","linkify":"Method form","nodes":[{"content":"Method form","pos":[0,11]}]},{"pos":[147217,147227],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[147229,147234]},{"pos":[147243,147255],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[147261,147271],"content":"Method get","linkify":"Method get","nodes":[{"content":"Method get","pos":[0,10]}]},{"content":"Retrieves the record fetched by the previous call to next method.","pos":[147273,147338]},{"pos":[147401,147411],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"table","pos":[147413,147418]},{"content":"The data source to be addressed; optional.","pos":[147421,147463]},{"content":"The number of the data source with the given table; 1-based.","pos":[147464,147524]},{"content":"If more than one data source has the same table assigned to it, this (optional) parameter can be used to specify which one is to be addressed.","pos":[147525,147667]},{"content":"It specifies the number of the data source with the given table.","pos":[147668,147732]},{"content":"Thus, if the CustTable table is assigned to two data sources, and the second data source is required, this argument should have the value 2.","pos":[147733,147873]},{"content":"occurrence","pos":[147885,147895]},{"content":"The data source to be addressed; optional.","pos":[147898,147940]},{"content":"The number of the data source with the given table; 1-based.","pos":[147941,148001]},{"content":"If more than one data source has the same table assigned to it, this (optional) parameter can be used to specify which one is to be addressed.","pos":[148002,148144]},{"content":"It specifies the number of the data source with the given table.","pos":[148145,148209]},{"content":"Thus, if the CustTable table is assigned to two data sources, and the second data source is required, this argument should have the value 2.","pos":[148210,148350]},{"pos":[148357,148369],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the record fetched from the data source identified by the arguments.","pos":[148371,148447]},{"pos":[148454,148461],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The data source from which to retrieve the record is specified by the table assigned to the data source and by an optional parameter.","pos":[148463,148596]},{"content":"Instead of supplying the table (and optional parameter), you can use the getNo method, which takes the data source number as an argument.","pos":[148597,148734]},{"pos":[148740,148772],"content":"Method getImpExpDataContractType","linkify":"Method getImpExpDataContractType","nodes":[{"content":"Method getImpExpDataContractType","pos":[0,32]}]},{"pos":[148831,148843],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[148849,148861],"content":"Method getNo","linkify":"Method getNo","nodes":[{"content":"Method getNo","pos":[0,12]}]},{"content":"Retrieves the record fetched by the previous call to QueryRun.next Method.","pos":[148863,148937]},{"pos":[148987,148997],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceNo","pos":[148999,149011]},{"content":"The number of the data source from which to get the currently selected record.","pos":[149014,149092]},{"pos":[149099,149111],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the record fetched for the data source identified by the argument.","pos":[149113,149187]},{"pos":[149194,149201],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The data source from which to retrieve the record is specified by the number of the data source.","pos":[149203,149299]},{"content":"The data sources are counted consecutively, starting from 1.","pos":[149300,149360]},{"content":"The QueryRun.get Method method can be used instead; that method is supplied with the table (and an optional parameter), that defines the data source.","pos":[149361,149510]},{"pos":[149517,149525],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[150087,150104],"content":"Method importable","linkify":"Method importable","nodes":[{"content":"Method importable","pos":[0,17]}]},{"pos":[150144,150156],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[150162,150180],"content":"Method interactive","linkify":"Method interactive","nodes":[{"content":"Method interactive","pos":[0,18]}]},{"pos":[150236,150246],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[150248,150253]},{"pos":[150262,150274],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[150280,150310],"content":"Method isPositionPagingEnabled","linkify":"Method isPositionPagingEnabled","nodes":[{"content":"Method isPositionPagingEnabled","pos":[0,30]}]},{"pos":[150363,150375],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[150381,150403],"content":"Method isQueryTimedout","linkify":"Method isQueryTimedout","nodes":[{"content":"Method isQueryTimedout","pos":[0,22]}]},{"pos":[150448,150460],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[150466,150498],"content":"Method isValueBasedPagingEnabled","linkify":"Method isValueBasedPagingEnabled","nodes":[{"content":"Method isValueBasedPagingEnabled","pos":[0,32]}]},{"pos":[150553,150565],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[150571,150586],"content":"Method literals","linkify":"Method literals","nodes":[{"content":"Method literals","pos":[0,15]}]},{"pos":[150631,150641],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[150643,150648]},{"pos":[150657,150669],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[150675,150689],"content":"Method loadCsv","linkify":"Method loadCsv","nodes":[{"content":"Method loadCsv","pos":[0,14]}]},{"pos":[150735,150745],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[150747,150755]},{"pos":[150764,150776],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[150782,150796],"content":"Method loadXml","linkify":"Method loadXml","nodes":[{"content":"Method loadXml","pos":[0,14]}]},{"pos":[150842,150852],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[150854,150862]},{"pos":[150871,150883],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[150889,150900],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or another Finance and Operations application object.","pos":[150902,151040]},{"pos":[151081,151091],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[151093,151098]},{"pos":[151107,151119],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[151121,151185]},{"pos":[151192,151199],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[151201,151295]},{"content":"Begins with a letter.","pos":[151301,151322]},{"content":"Doesn't exceed 250 characters.","pos":[151327,151357]},{"content":"Can include numbers and underscore characters.","pos":[151362,151408]},{"content":"Cannot include punctuation or spaces.","pos":[151413,151450]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enumerations, or classes.","pos":[151455,151572]},{"pos":[151578,151594],"content":"Method newObject","linkify":"Method newObject","nodes":[{"content":"Method newObject","pos":[0,16]}]},{"pos":[151648,151658],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[151660,151666]},{"pos":[151675,151687],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[151693,151704],"content":"Method next","linkify":"Method next","nodes":[{"content":"Method next","pos":[0,11]}]},{"content":"Retrieves the next record from the query.","pos":[151706,151747]},{"pos":[151781,151793],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the next record is available and can be fetched with the getNo method or get method; false if no there are no more records that satisfy the constraint set up in the query.","pos":[151795,151974]},{"pos":[151981,151988],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The changed method or changedNo method can be used to check whether the record from the given data source has changed since the previous call to the next method.","pos":[151990,152151]},{"pos":[152158,152166],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[152546,152565],"content":"Method nextUniqueId","linkify":"Method nextUniqueId","nodes":[{"content":"Method nextUniqueId","pos":[0,19]}]},{"pos":[152614,152624],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[152626,152631]},{"pos":[152640,152652],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[152658,152671],"content":"Method origin","linkify":"Method origin","nodes":[{"content":"Method origin","pos":[0,13]}]},{"pos":[152716,152726],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[152728,152733]},{"pos":[152742,152754],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[152760,152771],"content":"Method pack","linkify":"Method pack","nodes":[{"content":"Method pack","pos":[0,11]}]},{"pos":[152824,152834],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"doCheck","pos":[152836,152843]},{"pos":[152852,152864],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[152870,152883],"content":"Method prompt","linkify":"Method prompt","nodes":[{"content":"Method prompt","pos":[0,13]}]},{"content":"Presents, to the user, the options for defining the records to be fetched by the query.","pos":[152885,152972]},{"pos":[153008,153020],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the user clicked OK and the search is to continue; false if the user clicked Cancel to stop the search.","pos":[153022,153133]},{"pos":[153140,153147],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The user is presented with a form to give ranges that define constraints to be fulfilled by the fetched records.","pos":[153149,153261]},{"content":"Or the user may add new fields to delimit, change the sorting, and so on.","pos":[153262,153335]},{"content":"This method can be overloaded to prompt the user in an application-defined way instead of in through the predefined query form.","pos":[153336,153463]},{"content":"Or this method can be overloaded to avoid giving the user control over which records are fetched.","pos":[153464,153561]},{"content":"To produce these results, do not call the inherited method.","pos":[153562,153621]},{"content":"In any case, the function should return true if the query is to continue, and false otherwise.","pos":[153622,153716]},{"pos":[153723,153731],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[153989,154001],"content":"Method query","linkify":"Method query","nodes":[{"content":"Method query","pos":[0,12]}]},{"pos":[154047,154057],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"query","pos":[154059,154064]},{"pos":[154073,154085],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154091,154107],"content":"Method queryType","linkify":"Method queryType","nodes":[{"content":"Method queryType","pos":[0,16]}]},{"pos":[154153,154163],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[154165,154170]},{"pos":[154179,154191],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154197,154223],"content":"Method recordLevelSecurity","linkify":"Method recordLevelSecurity","nodes":[{"content":"Method recordLevelSecurity","pos":[0,26]}]},{"pos":[154287,154297],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[154299,154304]},{"pos":[154313,154325],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154331,154344],"content":"Method report","linkify":"Method report","nodes":[{"content":"Method report","pos":[0,13]}]},{"pos":[154382,154394],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154400,154416],"content":"Method reportRun","linkify":"Method reportRun","nodes":[{"content":"Method reportRun","pos":[0,16]}]},{"pos":[154457,154469],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154475,154487],"content":"Method saved","linkify":"Method saved","nodes":[{"content":"Method saved","pos":[0,12]}]},{"pos":[154522,154534],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154540,154560],"content":"Method saveUserSetup","linkify":"Method saveUserSetup","nodes":[{"content":"Method saveUserSetup","pos":[0,20]}]},{"content":"Saves the user setup.","pos":[154562,154583]},{"pos":[154642,154652],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"saveIt","pos":[154654,154660]},{"pos":[154669,154681],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the setup was successfully saved; otherwise false.","pos":[154683,154741]},{"pos":[154747,154764],"content":"Method searchable","linkify":"Method searchable","nodes":[{"content":"Method searchable","pos":[0,17]}]},{"pos":[154819,154829],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[154831,154836]},{"pos":[154845,154857],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154863,154879],"content":"Method setCursor","linkify":"Method setCursor","nodes":[{"content":"Method setCursor","pos":[0,16]}]},{"pos":[154949,154959],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[154961,154967]},{"content":"occurrence","pos":[154981,154991]},{"pos":[155000,155012],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[155018,155034],"content":"Method setRecord","linkify":"Method setRecord","nodes":[{"content":"Method setRecord","pos":[0,16]}]},{"pos":[155104,155114],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[155116,155122]},{"content":"occurrence","pos":[155136,155146]},{"pos":[155155,155167],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[155173,155185],"content":"Method title","linkify":"Method title","nodes":[{"content":"Method title","pos":[0,12]}]},{"pos":[155227,155237],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[155239,155244]},{"pos":[155253,155265],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[155271,155286],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a string that represents the current object.","pos":[155288,155340]},{"pos":[155374,155386],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the current object.","pos":[155388,155432]},{"pos":[155439,155446],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation returns the class name of the object.","pos":[155448,155512]},{"content":"The method can be overridden in a derived class to return values that are meaningful for that type.","pos":[155513,155612]},{"content":"For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.","pos":[155613,155740]},{"pos":[155746,155763],"content":"Method userUpdate","linkify":"Method userUpdate","nodes":[{"content":"Method userUpdate","pos":[0,17]}]},{"pos":[155818,155828],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[155830,155835]},{"pos":[155844,155856],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[155862,155876],"content":"Method version","linkify":"Method version","nodes":[{"content":"Method version","pos":[0,14]}]},{"pos":[155920,155930],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[155932,155937]},{"pos":[155946,155958],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[155964,155987],"content":"Method getQueryRowCount","linkify":"Method getQueryRowCount","nodes":[{"content":"Method getQueryRowCount","pos":[0,23]}]},{"pos":[156060,156070],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"query","pos":[156072,156077]},{"content":"maxRows","pos":[156091,156098]},{"pos":[156107,156119],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[156125,156146],"content":"Method runAndPopulate","linkify":"Method runAndPopulate","nodes":[{"content":"Method runAndPopulate","pos":[0,21]}]},{"pos":[156267,156277],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sourceRuery","pos":[156279,156290]},{"content":"targetTable","pos":[156304,156315]},{"content":"queryAliasesAndTargetColumnsMap","pos":[156329,156360]},{"pos":[156369,156381],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[156387,156397],"content":"Method run","linkify":"Method run","nodes":[{"content":"Method run","pos":[0,10]}]},{"content":"Opens a form used to obtain information about the query from the user, and fetches the matching records.","pos":[156399,156503]},{"pos":[156533,156540],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Running the query will find the records that satisfy the constraints entered by the user.","pos":[156542,156631]},{"content":"However, running the query in this manner has no side effects.","pos":[156632,156694]},{"content":"In order to be useful, one or more of the inherited methods must be overloaded.","pos":[156695,156774]},{"pos":[156780,156790],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[156792,156839]},{"pos":[156883,156893],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[156895,156901]},{"pos":[156910,156917],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When you pass an instance of the Query class into this constructor of the QueryRun class, a copy of the Query object is created.","pos":[156919,157047]},{"content":"Changes that are made to this copy of the Query object do not affect the original Query object.","pos":[157048,157143]},{"pos":[157149,157168],"content":"Method addPageRange","linkify":"Method addPageRange","nodes":[{"content":"Method addPageRange","pos":[0,19]}]},{"pos":[157263,157273],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"startingPosition","pos":[157275,157291]},{"content":"numberOfRecordsToFetch","pos":[157305,157327]},{"pos":[157335,157347],"content":"Method reset","linkify":"Method reset","nodes":[{"content":"Method reset","pos":[0,12]}]},{"pos":[157378,157401],"content":"Method setImportSession","linkify":"Method setImportSession","nodes":[{"content":"Method setImportSession","pos":[0,23]}]},{"pos":[157462,157472],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"importSession","pos":[157474,157487]},{"pos":[157495,157517],"content":"Method setQuerytimeout","linkify":"Method setQuerytimeout","nodes":[{"content":"Method setQuerytimeout","pos":[0,22]}]},{"pos":[157596,157606],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"seconds","pos":[157608,157615]},{"content":"raiseException","pos":[157629,157643]},{"pos":[157651,157662],"content":"Method init","linkify":"Method init","nodes":[{"content":"Method init","pos":[0,11]}]},{"pos":[157692,157719],"content":"Method enablePositionPaging","linkify":"Method enablePositionPaging","nodes":[{"content":"Method enablePositionPaging","pos":[0,27]}]},{"pos":[157783,157793],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"enabled","pos":[157795,157802]},{"pos":[157810,157822],"content":"Method shred","linkify":"Method shred","nodes":[{"content":"Method shred","pos":[0,12]}]},{"pos":[157872,157882],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"importSession","pos":[157884,157897]},{"pos":[157905,157934],"content":"Method enableValueBasedPaging","linkify":"Method enableValueBasedPaging","nodes":[{"content":"Method enableValueBasedPaging","pos":[0,29]}]},{"pos":[157999,158009],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"enable","pos":[158011,158017]},{"pos":[158025,158040],"content":"Method bulkNext","linkify":"Method bulkNext","nodes":[{"content":"Method bulkNext","pos":[0,15]}]},{"pos":[158097,158107],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fetchAllData","pos":[158109,158121]},{"pos":[158129,158157],"content":"Method applyValueBasedPaging","linkify":"Method applyValueBasedPaging","nodes":[{"content":"Method applyValueBasedPaging","pos":[0,28]}]},{"pos":[158247,158257],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sourceCursor","pos":[158259,158271]},{"content":"isForward","pos":[158285,158294]}]}