{"nodes":[{"pos":[6,23],"content":"required metadata","linkify":"required metadata","nodes":[{"content":"required metadata","pos":[0,17]}]},{"content":"title: Extending the list of Electronic reporting functions | Microsoft Docs description: Various types of functions are supported in Electronic reporting expressions for data transformation: text, date and time, mathematical logical, information, data type conversion, and other (business domain–specific functions).","pos":[25,342],"source":"title: Extending the list of Electronic reporting functions | Microsoft Docs\ndescription: Various types of functions are supported in Electronic reporting expressions for data transformation: text, date and time, mathematical logical, information, data type conversion, and other (business domain–specific functions)."},{"content":"In addition to built-in functions, Electronic reporting lets you extend the list of available functions.","pos":[343,447]},{"content":"This article includes an overview of key tasks that you must complete to introduce a new function.","pos":[448,546]},{"content":"author: annbe manager: AnnBe ms.date: 2016-03-07 16:10:11 ms.topic: article ms.prod: ms.service: Dynamics365Operations ms.technology:","pos":[547,681],"source":"\nauthor: annbe\nmanager: AnnBe\nms.date: 2016-03-07 16:10:11\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology:"},{"pos":[686,703],"content":"optional metadata","linkify":"optional metadata","nodes":[{"content":"optional metadata","pos":[0,17]}]},{"content":"keywords: ERExpressionDesignerFormula","pos":[705,742]},{"pos":[745,752],"content":"ROBOTS:","linkify":"ROBOTS:","nodes":[{"content":"ROBOTS:","pos":[0,7]}]},{"content":"audience: Developer, IT Pro","pos":[754,781]},{"pos":[784,795],"content":"ms.devlang:","linkify":"ms.devlang:","nodes":[{"content":"ms.devlang:","pos":[0,11]}]},{"pos":[797,850],"content":"ms.reviewer: 71 ms.suite: Released- Dynamics AX 7.0.0","source":"ms.reviewer: 71\nms.suite: Released- Dynamics AX 7.0.0"},{"pos":[853,867],"content":"ms.tgt_pltfrm:","linkify":"ms.tgt_pltfrm:","nodes":[{"content":"ms.tgt_pltfrm:","pos":[0,14]}]},{"pos":[869,934],"content":"ms.custom: 58911 ms.assetid: 55f2e388-3a18-4e2f-ae8c-83c41e202f0a","source":"ms.custom: 58911\nms.assetid: 55f2e388-3a18-4e2f-ae8c-83c41e202f0a"},{"pos":[937,947],"content":"ms.region:","linkify":"ms.region:","nodes":[{"content":"ms.region:","pos":[0,10]}]},{"pos":[951,963],"content":"ms.industry:","linkify":"ms.industry:","nodes":[{"content":"ms.industry:","pos":[0,12]}]},{"content":"ms.author: kfend","pos":[965,981]},{"pos":[990,1042],"content":"Extending the list of Electronic reporting functions","linkify":"Extending the list of Electronic reporting functions","nodes":[{"content":"Extending the list of Electronic reporting functions","pos":[0,52]}]},{"content":"All Electronic reporting functions in Microsoft Dynamics 365 for Operations code are represented as classes that extend the <bpt id=\"p1\">**</bpt>ERExpression<ept id=\"p1\">**</ept> class.","pos":[1044,1191],"source":"All Electronic reporting functions in Microsoft Dynamics 365 for Operations code are represented as classes that extend the **ERExpression** class."},{"content":"Two types of functions are recognized:","pos":[1192,1230]},{"content":"<bpt id=\"p1\">**</bpt>Fixed number of arguments<ept id=\"p1\">**</ept> – These functions are represented by classes that include methods that have the prefix <bpt id=\"p2\">**</bpt>parm<ept id=\"p2\">**</ept> (see <bpt id=\"p3\">**</bpt>parmInput<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>parmStartNum<ept id=\"p4\">**</ept> in the sample code the follows).","pos":[1236,1431],"source":"**Fixed number of arguments** – These functions are represented by classes that include methods that have the prefix **parm** (see **parmInput**, **parmStartNum** in the sample code the follows)."},{"content":"The order of arguments is set by the <bpt id=\"p1\">**</bpt>SysOperationDisplayOrderAttribute<ept id=\"p1\">**</ept> attribute.","pos":[1432,1517],"source":" The order of arguments is set by the **SysOperationDisplayOrderAttribute** attribute."},{"content":"<bpt id=\"p1\">**</bpt>Variable number of arguments<ept id=\"p1\">**</ept> – These functions (see the <bpt id=\"p2\">**</bpt>ERExpressionGenericCase<ept id=\"p2\">**</ept> class) are represented by classes that implement the <bpt id=\"p3\">**</bpt>ERIObjectContainer<ept id=\"p3\">**</ept> interface.","pos":[1522,1696],"source":"**Variable number of arguments** – These functions (see the **ERExpressionGenericCase** class) are represented by classes that implement the **ERIObjectContainer** interface."},{"content":"An additional <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> method is used to declare the types that a function accepts.","pos":[1697,1779],"source":" An additional **Add** method is used to declare the types that a function accepts."},{"content":"Here are the recommended steps for introducing a new function for Electronic reporting expressions:","pos":[1781,1880]},{"pos":[1886,2017],"content":"Select a base class for your function, based on the return value type (see <bpt id=\"p1\">**</bpt>ERExpressionString<ept id=\"p1\">**</ept> in the sample code that follows).","source":"Select a base class for your function, based on the return value type (see **ERExpressionString** in the sample code that follows)."},{"pos":[2026,2140],"content":"Create a new class that extends the selected class (see <bpt id=\"p1\">**</bpt>ERExpressionStringMid<ept id=\"p1\">**</ept> in the sample code the follows).","source":"Create a new class that extends the selected class (see **ERExpressionStringMid** in the sample code the follows)."},{"content":"Provide required attributes:","pos":[2153,2181]},{"pos":[2198,2274],"content":"<bpt id=\"p1\">**</bpt>SysOperationLabelAttribute<ept id=\"p1\">**</ept> – This attribute defines the function’s name.","source":"**SysOperationLabelAttribute** – This attribute defines the function’s name."},{"pos":[2291,2375],"content":"<bpt id=\"p1\">**</bpt>SysOperationHelpTextAttribute<ept id=\"p1\">**</ept> – This attribute defines the function’s Help text.","source":"**SysOperationHelpTextAttribute** – This attribute defines the function’s Help text."},{"content":"<bpt id=\"p1\">**</bpt>ERComponentGroupAttribute<ept id=\"p1\">**</ept> – This attribute defines the group that the function belongs to.","pos":[2392,2486],"source":"**ERComponentGroupAttribute** – This attribute defines the group that the function belongs to."},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>Formula designer in Electronic reporting<ept id=\"p1\">](http://ax.help.dynamics.com/en/wiki/general-electronic-reporting-ger-formula-designer/)</ept>.)","pos":[2487,2646],"source":" (For more information, see [Formula designer in Electronic reporting](http://ax.help.dynamics.com/en/wiki/general-electronic-reporting-ger-formula-designer/).)"},{"content":"Provide arguments:","pos":[2659,2677]},{"pos":[2694,2877],"content":"For a fixed number of arguments function, provide methods that have the prefix <bpt id=\"p1\">**</bpt>parm<ept id=\"p1\">**</ept>, and use the <bpt id=\"p2\">**</bpt>SysOperationDisplayOrderAttribute<ept id=\"p2\">**</ept> attribute to set the order of the arguments.","source":"For a fixed number of arguments function, provide methods that have the prefix **parm**, and use the **SysOperationDisplayOrderAttribute** attribute to set the order of the arguments."},{"pos":[2894,2985],"content":"For a variable number of argument function, implement the <bpt id=\"p1\">**</bpt>ERIObjectContainer<ept id=\"p1\">**</ept> interface.","source":"For a variable number of argument function, implement the **ERIObjectContainer** interface."},{"content":"Provide an evaluation method.","pos":[2998,3027]},{"content":"Here is an example.","pos":[3029,3048]},{"pos":[4872,4890],"content":"Suggested guidance","linkify":"Suggested guidance","nodes":[{"content":"Suggested guidance","pos":[0,18]}]},{"content":"The following guidance is intended to help you design your custom Electronic reporting functions:","pos":[4891,4988]},{"content":"Reuse the names of Microsoft Excel functions whenever you can, so that Electronic reporting formulas remain Excel-like.","pos":[4994,5113]},{"content":"In this way, you will keep Electronic reporting formulas intelligible for end users.","pos":[5114,5198]},{"content":"Electronic reporting doesn't support list types for primitive data types.","pos":[5203,5276]},{"content":"Therefore, we have decided to use a data container list that has a single <bpt id=\"p1\">**</bpt>Value<ept id=\"p1\">**</ept> item in it.","pos":[5277,5372],"source":" Therefore, we have decided to use a data container list that has a single **Value** item in it."},{"content":"Release a new function's list extension as a new Dynamics 365 for Operations hotfix.","pos":[5377,5461]},{"content":"Electronic reporting designers will refer to the hotfix number in Electronic reporting configurations that use that new custom function.","pos":[5462,5598]},{"content":"Whenever a configuration of this type is imported into a new instance of Dynamics 365 for Operations, Electronic reporting will evaluate whether the required hotfix has been installed, to maintain compliance between the Electronic reporting configuration and the Dynamics 365 for Operations version that configuration is imported into.","pos":[5599,5934]},{"pos":[5937,5945],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5956,6058],"content":"<bpt id=\"p1\">[</bpt>Electronic reporting overview<ept id=\"p1\">](http://ax.help.dynamics.com/en/wiki/general-electronic-reporting-ger/)</ept>","source":"[Electronic reporting overview](http://ax.help.dynamics.com/en/wiki/general-electronic-reporting-ger/)"},{"pos":[6060,6190],"content":"<bpt id=\"p1\">[</bpt>Formula designer in Electronic reporting<ept id=\"p1\">](http://ax.help.dynamics.com/en/wiki/general-electronic-reporting-ger-formula-designer/)</ept>","source":"[Formula designer in Electronic reporting](http://ax.help.dynamics.com/en/wiki/general-electronic-reporting-ger-formula-designer/)"}],"content":"---\n# required metadata\n\ntitle: Extending the list of Electronic reporting functions | Microsoft Docs\ndescription: Various types of functions are supported in Electronic reporting expressions for data transformation: text, date and time, mathematical logical, information, data type conversion, and other (business domain–specific functions). In addition to built-in functions, Electronic reporting lets you extend the list of available functions. This article includes an overview of key tasks that you must complete to introduce a new function.\nauthor: annbe\nmanager: AnnBe\nms.date: 2016-03-07 16:10:11\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\nkeywords: ERExpressionDesignerFormula\n# ROBOTS: \naudience: Developer, IT Pro\n# ms.devlang: \nms.reviewer: 71\nms.suite: Released- Dynamics AX 7.0.0\n# ms.tgt_pltfrm: \nms.custom: 58911\nms.assetid: 55f2e388-3a18-4e2f-ae8c-83c41e202f0a\n# ms.region: \n# ms.industry: \nms.author: kfend\n\n---\n\n# Extending the list of Electronic reporting functions\n\nAll Electronic reporting functions in Microsoft Dynamics 365 for Operations code are represented as classes that extend the **ERExpression** class. Two types of functions are recognized:\n\n-   **Fixed number of arguments** – These functions are represented by classes that include methods that have the prefix **parm** (see **parmInput**, **parmStartNum** in the sample code the follows). The order of arguments is set by the **SysOperationDisplayOrderAttribute** attribute.\n-   **Variable number of arguments** – These functions (see the **ERExpressionGenericCase** class) are represented by classes that implement the **ERIObjectContainer** interface. An additional **Add** method is used to declare the types that a function accepts.\n\nHere are the recommended steps for introducing a new function for Electronic reporting expressions:\n\n-   Select a base class for your function, based on the return value type (see **ERExpressionString** in the sample code that follows).\n    -   Create a new class that extends the selected class (see **ERExpressionStringMid** in the sample code the follows).\n        -   Provide required attributes:\n            -   **SysOperationLabelAttribute** – This attribute defines the function’s name.\n            -   **SysOperationHelpTextAttribute** – This attribute defines the function’s Help text.\n            -   **ERComponentGroupAttribute** – This attribute defines the group that the function belongs to. (For more information, see [Formula designer in Electronic reporting](http://ax.help.dynamics.com/en/wiki/general-electronic-reporting-ger-formula-designer/).)\n        -   Provide arguments:\n            -   For a fixed number of arguments function, provide methods that have the prefix **parm**, and use the **SysOperationDisplayOrderAttribute** attribute to set the order of the arguments.\n            -   For a variable number of argument function, implement the **ERIObjectContainer** interface.\n        -   Provide an evaluation method.\n\nHere is an example.\n\n    /// <summary>\n    /// Returns the characters from the middle of a text string, given a starting position and length.\n    /// </summary>\n    [\n        SysOperationLabelAttribute ('MID'),\n        SysOperationHelpTextAttribute (\"@ElectronicReporting:ExpressionStringMidHelpText\"),\n        ERComponentGroupAttribute (\"@ElectronicReporting:String\")\n    ]\n    class ERExpressionStringMid extends ERExpressionString\n    {\n        ERExpressionString input;\n        ERExpressionInt startNum;\n        ERExpressionInt numChars;\n        public str evaluateString(ERIDataContext _dataContext)\n        {\n            return subStr(\n            this.parmInput().evaluateString(_dataContext),\n            this.parmStartNum().evaluateInt(_dataContext),\n            this.parmNumChars().evaluateInt(_dataContext));\n        }\n        [DataMemberAttribute, SysOperationLabelAttribute (\"@ElectronicReporting:Input\"), SysOperationDisplayOrderAttribute (\"1\")]\n        public ERExpressionString parmInput(ERExpressionString _input = input)\n        {\n            input = _input;\n            return input;\n        }\n        [DataMemberAttribute, SysOperationLabelAttribute (\"@ElectronicReporting:NumChars\"), SysOperationDisplayOrderAttribute (\"3\")]\n        public ERExpressionInt parmNumChars(ERExpressionInt _numChars = numChars)\n        {\n            numChars = _numChars;\n            return numChars;\n        }\n        [DataMemberAttribute, SysOperationLabelAttribute (\"@ElectronicReporting:StartNum\"), SysOperationDisplayOrderAttribute (\"2\")]\n        public ERExpressionInt parmStartNum(ERExpressionInt _startNum = startNum)\n        {\n            startNum = _startNum;\n            return startNum;\n        }\n        public str toString()\n        {\n            return ERExpressionStringPresenter::namedFunctionToStr(this);\n        }\n    }\n\n## Suggested guidance\nThe following guidance is intended to help you design your custom Electronic reporting functions:\n\n-   Reuse the names of Microsoft Excel functions whenever you can, so that Electronic reporting formulas remain Excel-like. In this way, you will keep Electronic reporting formulas intelligible for end users.\n-   Electronic reporting doesn't support list types for primitive data types. Therefore, we have decided to use a data container list that has a single **Value** item in it.\n-   Release a new function's list extension as a new Dynamics 365 for Operations hotfix. Electronic reporting designers will refer to the hotfix number in Electronic reporting configurations that use that new custom function. Whenever a configuration of this type is imported into a new instance of Dynamics 365 for Operations, Electronic reporting will evaluate whether the required hotfix has been installed, to maintain compliance between the Electronic reporting configuration and the Dynamics 365 for Operations version that configuration is imported into.\n\n\nSee also\n--------\n\n[Electronic reporting overview](http://ax.help.dynamics.com/en/wiki/general-electronic-reporting-ger/)\n\n[Formula designer in Electronic reporting](http://ax.help.dynamics.com/en/wiki/general-electronic-reporting-ger-formula-designer/)\n\n"}