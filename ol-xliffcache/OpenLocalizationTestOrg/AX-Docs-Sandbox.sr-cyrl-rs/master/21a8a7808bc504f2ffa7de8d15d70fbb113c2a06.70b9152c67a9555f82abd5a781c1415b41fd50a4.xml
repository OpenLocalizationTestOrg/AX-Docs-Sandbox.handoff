{"content":"---\n# required metadata\n\ntitle: U Classes\ndescription: System API classes that start with the letter U.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 51691\nms.assetid: 92bfbb9c-4f45-464a-8ccb-71fb227780fe\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# U Classes\n\n[!include[banner](../includes/banner.md)]\n\n\nSystem API classes that start with the letter U.\n\nClass UnitofWork\n----------------\n\n    class UnitofWork extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                       | Description                                         |\n|--------------------------------------------------------------|-----------------------------------------------------|\n| public boolean getByKey(Common record)                       |                                                     |\n| public void updateonSaveChanges(Common record)               |                                                     |\n| public void saveChanges(\\[UserConnection user\\_connection\\]) |                                                     |\n| public void deleteonSaveChanges(Common record)               |                                                     |\n| public void insertonSaveChanges(Common record)               |                                                     |\n| public void finalize()                                       |                                                     |\n| public void new()                                            | Initializes a new instance of the UnitofWork class. |\n| public void clear()                                          |                                                     |\n\n### Method getByKey\n\n    public boolean getByKey(Common record)\n\n#### Parameters\n\nrecord  \n\n#### Return Value\n\n### Method updateonSaveChanges\n\n    public void updateonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method saveChanges\n\n    public void saveChanges([UserConnection user_connection])\n\n#### Parameters\n\nuser\\_connection  \n\n### Method deleteonSaveChanges\n\n    public void deleteonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method insertonSaveChanges\n\n    public void insertonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the UnitofWork class.\n\n    public void new()\n\n### Method clear\n\n    public void clear()\n\n## Class UserConnection\n    class UserConnection extends Connection\n\nThe UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.\n\n### Remarks\n\nSQL statements are executed, and results are returned in the context of a UserConnection class. The UserConnection class can be used to obtain a separate transaction scope.\n\n### Examples\n\n    static void example()  \n    { \n        UserConnection Con; \n        Statement Stmt; \n        Str sql; \n        ResultSet R; \n        SqlStatementExecutePermission perm; \n        Con = new UserConnection(); \n        sql = 'SELECT VALUE FROM SQLSYSTEMVARIABLES'; \n        Stmt = Con.createStatement(); \n        perm = new SqlStatementExecutePermission(sql); \n        // Check for permission to use the statement. \n        perm.assert(); \n        R = Stmt.executeQuery(sql); \n        while ( R.next() ) \n        { \n            print R.getString(1); \n        } \n    }\n\n### Methods\n\n| Method                                                | Description                                         |\n|-------------------------------------------------------|-----------------------------------------------------|\n| public void new(\\[boolean generateNewTransactionID\\]) | Initializes a new instance of the Connection class. |\n\n### Method new\n\nInitializes a new instance of the Connection class.\n\n    public void new([boolean generateNewTransactionID])\n\n#### Parameters\n\ngenerateNewTransactionID  \n\n## Class UserMenuList\n    class UserMenuList extends TreeNode\n\nThe UserMenuList class enables you to create, read, update, and delete X++ code and metadata.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                               | Description |\n|--------------------------------------|-------------|\n| public void createMenu(\\[str name\\]) |             |\n\n### Method createMenu\n\n    public void createMenu([str name])\n\n#### Parameters\n\nname  \n\n## Class UserSetup\n    class UserSetup extends TreeNode\n\nThe UserSetup class provides an interface for setting user parameters.\n\n### Remarks\n\nThis class is used mainly in the SysUserSetup form. This class lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n### Examples\n\n### Methods\n\n| Method                                  | Description |\n|-----------------------------------------|-------------|\n| public boolean xRef(\\[boolean enable\\]) |             |\n| public void setUserSetup(Common cursor) |             |\n| public void setDefaults(Common cursor)  |             |\n\n### Method xRef\n\n    public boolean xRef([boolean enable])\n\n#### Parameters\n\nenable  \n\n#### Return Value\n\n### Method setUserSetup\n\n    public void setUserSetup(Common cursor)\n\n#### Parameters\n\ncursor  \n\n### Method setDefaults\n\n    public void setDefaults(Common cursor)\n\n#### Parameters\n\ncursor  \n\n## Class UtilFile\n    class UtilFile extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                      | Description                                                      |\n|-------------------------------------------------------------|------------------------------------------------------------------|\n| public boolean aodFileExist(UtilEntryLevel layer)           |                                                                  |\n| public int importAODFile(UtilEntryLevel layer, int modelId) |                                                                  |\n| public str layers()                                         |                                                                  |\n| public boolean needReindex()                                |                                                                  |\n| public void check(str layer, str action)                    |                                                                  |\n| public void new(str fileType)                               | Initializes a new instance of the Object class.                  |\n| public void reindex()                                       | Lets you create, read, update, and delete X++ code and metadata. |\n| public void flushCache()                                    |                                                                  |\n\n### Method aodFileExist\n\n    public boolean aodFileExist(UtilEntryLevel layer)\n\n#### Parameters\n\nlayer  \n\n#### Return Value\n\n### Method importAODFile\n\n    public int importAODFile(UtilEntryLevel layer, int modelId)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\nmodelId  \n\n#### Return Value\n\n### Method layers\n\n    public str layers()\n\n#### Return Value\n\n### Method needReindex\n\n    public boolean needReindex()\n\n#### Return Value\n\n### Method check\n\n    public void check(str layer, str action)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\naction  \n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(str fileType)\n\n#### Parameters\n\nfileType  \n\n### Method reindex\n\nLets you create, read, update, and delete X++ code and metadata.\n\n    public void reindex()\n\n#### Remarks\n\nMake sure that the user has access to the development security key (SysDevelopment) before you call this API.\n\n#### Examples\n\nThe following example calls the UtilFile.reindex method. It checks whether the user has the required security key before you perform a modification.\n\n    server static public void Main(Args _args) \n    { \n        UtilFile u; \n        u = new UtilFile(\"util\"); \n        if (u) \n        { \n            u.reindex(); \n        } \n    }\n\n### Method flushCache\n\n    public void flushCache()\n\n\n\n","nodes":[{"pos":[4,613],"embed":true,"content":"# required metadata\n\ntitle: U Classes\ndescription: System API classes that start with the letter U.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 51691\nms.assetid: 92bfbb9c-4f45-464a-8ccb-71fb227780fe\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"U Classes","nodes":[{"pos":[0,9],"content":"U Classes","nodes":[{"content":"U Classes","pos":[0,9]}]}],"path":["title"]},{"content":"System API classes that start with the letter U.","nodes":[{"pos":[0,48],"content":"System API classes that start with the letter U.","nodes":[{"content":"System API classes that start with the letter U.","pos":[0,48]}]}],"path":["description"]}],"header":"# required metadata\n","yml":true},{"pos":[621,630],"content":"U Classes","linkify":"U Classes","nodes":[{"content":"U Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter U.","pos":[676,724]},{"pos":[726,742],"content":"Class UnitofWork","linkify":"Class UnitofWork","nodes":[{"content":"Class UnitofWork","pos":[0,16]}]},{"pos":[802,809],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[815,823],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[829,836],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[840,846]},{"content":"Description","pos":[903,914]},{"content":"public boolean getByKey(Common record)","pos":[1078,1116]},{"content":"public void updateonSaveChanges(Common record)","pos":[1197,1243]},{"content":"public void saveChanges(<ph id=\"ph1\">\\[</ph>UserConnection user<ph id=\"ph2\">\\_</ph>connection<ph id=\"ph3\">\\]</ph>)","pos":[1316,1376],"source":"public void saveChanges(\\[UserConnection user\\_connection\\])"},{"content":"public void deleteonSaveChanges(Common record)","pos":[1435,1481]},{"content":"public void insertonSaveChanges(Common record)","pos":[1554,1600]},{"content":"public void finalize()","pos":[1673,1695]},{"content":"public void new()","pos":[1792,1809]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[1855,1906]},{"content":"public void clear()","pos":[1911,1930]},{"pos":[2033,2048],"content":"Method getByKey","linkify":"Method getByKey","nodes":[{"content":"Method getByKey","pos":[0,15]}]},{"pos":[2099,2109],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2111,2117]},{"pos":[2126,2138],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2144,2170],"content":"Method updateonSaveChanges","linkify":"Method updateonSaveChanges","nodes":[{"content":"Method updateonSaveChanges","pos":[0,26]}]},{"pos":[2229,2239],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2241,2247]},{"pos":[2255,2273],"content":"Method saveChanges","linkify":"Method saveChanges","nodes":[{"content":"Method saveChanges","pos":[0,18]}]},{"pos":[2343,2353],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"user<ph id=\"ph1\">\\_</ph>connection","pos":[2355,2371],"source":"user\\_connection"},{"pos":[2379,2405],"content":"Method deleteonSaveChanges","linkify":"Method deleteonSaveChanges","nodes":[{"content":"Method deleteonSaveChanges","pos":[0,26]}]},{"pos":[2464,2474],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2476,2482]},{"pos":[2490,2516],"content":"Method insertonSaveChanges","linkify":"Method insertonSaveChanges","nodes":[{"content":"Method insertonSaveChanges","pos":[0,26]}]},{"pos":[2575,2585],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2587,2593]},{"pos":[2601,2616],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[2650,2660],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[2662,2713]},{"pos":[2742,2754],"content":"Method clear","linkify":"Method clear","nodes":[{"content":"Method clear","pos":[0,12]}]},{"pos":[2784,2804],"content":"Class UserConnection","linkify":"Class UserConnection","nodes":[{"content":"Class UserConnection","pos":[0,20]}]},{"content":"The UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.","pos":[2850,2989]},{"pos":[2995,3002],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"SQL statements are executed, and results are returned in the context of a UserConnection class.","pos":[3004,3099]},{"content":"The UserConnection class can be used to obtain a separate transaction scope.","pos":[3100,3176]},{"pos":[3182,3190],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[3765,3772],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[3776,3782]},{"content":"Description","pos":[3832,3843]},{"content":"public void new(<ph id=\"ph1\">\\[</ph>boolean generateNewTransactionID<ph id=\"ph2\">\\]</ph>)","pos":[4000,4053],"source":"public void new(\\[boolean generateNewTransactionID\\])"},{"content":"Initializes a new instance of the Connection class.","pos":[4056,4107]},{"pos":[4115,4125],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Connection class.","pos":[4127,4178]},{"pos":[4242,4252],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"generateNewTransactionID","pos":[4254,4278]},{"pos":[4285,4303],"content":"Class UserMenuList","linkify":"Class UserMenuList","nodes":[{"content":"Class UserMenuList","pos":[0,18]}]},{"content":"The UserMenuList class enables you to create, read, update, and delete X++ code and metadata.","pos":[4345,4438]},{"pos":[4444,4451],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4457,4465],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[4471,4478],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[4482,4488]},{"content":"Description","pos":[4521,4532]},{"content":"public void createMenu(<ph id=\"ph1\">\\[</ph>str name<ph id=\"ph2\">\\]</ph>)","pos":[4592,4628],"source":"public void createMenu(\\[str name\\])"},{"pos":[4650,4667],"content":"Method createMenu","linkify":"Method createMenu","nodes":[{"content":"Method createMenu","pos":[0,17]}]},{"pos":[4714,4724],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[4726,4730]},{"pos":[4737,4752],"content":"Class UserSetup","linkify":"Class UserSetup","nodes":[{"content":"Class UserSetup","pos":[0,15]}]},{"content":"The UserSetup class provides an interface for setting user parameters.","pos":[4791,4861]},{"pos":[4867,4874],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class is used mainly in the SysUserSetup form.","pos":[4876,4927]},{"content":"This class lets you create, read, update, and delete X++ code and metadata.","pos":[4928,5003]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[5004,5114]},{"pos":[5120,5128],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5134,5141],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5145,5151]},{"content":"Description","pos":[5187,5198]},{"content":"public boolean xRef(<ph id=\"ph1\">\\[</ph>boolean enable<ph id=\"ph2\">\\]</ph>)","pos":[5261,5300],"source":"public boolean xRef(\\[boolean enable\\])"},{"content":"public void setUserSetup(Common cursor)","pos":[5319,5358]},{"content":"public void setDefaults(Common cursor)","pos":[5377,5415]},{"pos":[5438,5449],"content":"Method xRef","linkify":"Method xRef","nodes":[{"content":"Method xRef","pos":[0,11]}]},{"pos":[5499,5509],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"enable","pos":[5511,5517]},{"pos":[5526,5538],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5544,5563],"content":"Method setUserSetup","linkify":"Method setUserSetup","nodes":[{"content":"Method setUserSetup","pos":[0,19]}]},{"pos":[5615,5625],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5627,5633]},{"pos":[5641,5659],"content":"Method setDefaults","linkify":"Method setDefaults","nodes":[{"content":"Method setDefaults","pos":[0,18]}]},{"pos":[5710,5720],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5722,5728]},{"pos":[5735,5749],"content":"Class UtilFile","linkify":"Class UtilFile","nodes":[{"content":"Class UtilFile","pos":[0,14]}]},{"pos":[5789,5796],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5802,5810],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5816,5823],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5827,5833]},{"content":"Description","pos":[5889,5900]},{"content":"public boolean aodFileExist(UtilEntryLevel layer)","pos":[6089,6138]},{"content":"public int importAODFile(UtilEntryLevel layer, int modelId)","pos":[6220,6279]},{"content":"public str layers()","pos":[6351,6370]},{"content":"public boolean needReindex()","pos":[6482,6510]},{"content":"public void check(str layer, str action)","pos":[6613,6653]},{"content":"public void new(str fileType)","pos":[6744,6773]},{"content":"Initializes a new instance of the Object class.","pos":[6806,6853]},{"content":"public void reindex()","pos":[6875,6896]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[6937,7001]},{"content":"public void flushCache()","pos":[7006,7030]},{"pos":[7140,7159],"content":"Method aodFileExist","linkify":"Method aodFileExist","nodes":[{"content":"Method aodFileExist","pos":[0,19]}]},{"pos":[7221,7231],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7233,7238]},{"pos":[7247,7259],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7265,7285],"content":"Method importAODFile","linkify":"Method importAODFile","nodes":[{"content":"Method importAODFile","pos":[0,20]}]},{"pos":[7357,7367],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7369,7374]},{"content":"modelId","pos":[7388,7395]},{"pos":[7404,7416],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7422,7435],"content":"Method layers","linkify":"Method layers","nodes":[{"content":"Method layers","pos":[0,13]}]},{"pos":[7467,7479],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7485,7503],"content":"Method needReindex","linkify":"Method needReindex","nodes":[{"content":"Method needReindex","pos":[0,18]}]},{"pos":[7544,7556],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7562,7574],"content":"Method check","linkify":"Method check","nodes":[{"content":"Method check","pos":[0,12]}]},{"pos":[7627,7637],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7639,7644]},{"content":"action","pos":[7658,7664]},{"pos":[7672,7682],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[7684,7731]},{"pos":[7773,7783],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileType","pos":[7785,7793]},{"pos":[7801,7815],"content":"Method reindex","linkify":"Method reindex","nodes":[{"content":"Method reindex","pos":[0,14]}]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[7817,7881]},{"pos":[7915,7922],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before you call this API.","pos":[7924,8033]},{"pos":[8040,8048],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example calls the UtilFile.reindex method.","pos":[8050,8106]},{"content":"It checks whether the user has the required security key before you perform a modification.","pos":[8107,8198]},{"pos":[8386,8403],"content":"Method flushCache","linkify":"Method flushCache","nodes":[{"content":"Method flushCache","pos":[0,17]}]}]}