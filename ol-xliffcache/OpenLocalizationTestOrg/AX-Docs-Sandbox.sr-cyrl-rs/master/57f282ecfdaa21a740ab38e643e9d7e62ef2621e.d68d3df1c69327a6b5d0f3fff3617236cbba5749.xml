{"content":"---\n# required metadata\n\ntitle: Data upgrade in a sandbox environment\ndescription: This topic explains how to perform a data upgrade from AX 2012 to Dynamics 365 for Finance and Operations in a sandbox environment. \nauthor: tariqbell\nmanager: AnnBe\nms.date: 06/16/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \naudience: Developer, IT Pro\n# ms.devlang: \nms.reviewer: margoc\nms.search.scope: Operations Platform\n# ms.tgt_pltfrm: \n# ms.custom: \nms.search.region: Global\n# ms.search.industry: \nms.author: tabell\nms.search.validFrom: 2017-06-16\nms.dyn365.ops.version: Platform update 8\n---\n\n# Data upgrade in a sandbox environment\n\n[!include[banner](../includes/banner.md)]\n\nThe output of this task is an upgraded database that you can use in a sandbox environment. A sandbox environment is an environment where business users and functional team members can validate application functionality. This functionality includes customizations and the data that was brought forward from Microsoft Dynamics AX 2012.\n\nWe strongly recommend that you run the data upgrade process in a development environment before you run it in a shared sandbox environment, because this approach will help reduce the overall time that is required for a successful data upgrade. For more information, see [Data upgrade in a development environment](prepare-data-upgrade.md).\n\n## Overview of the sandbox data upgrade process\n\nBefore you start to upgrade data in a sandbox environment, you will have already upgraded data in a development environment, as explained in [Data upgrade in a development environment](prepare-data-upgrade.md). The two processes are very similar. The main difference is that a sandbox environment uses Microsoft Azure SQL Database for data storage, whereas a development environment uses Microsoft SQL Server. This technical difference in the database layer requires that you  modify the data upgrade procedure slightly in a sandbox environment, because a backup from the AX 2012 database instance can't just be restored to SQL Database.\n\n![Sandbox data upgrade process](./media/data-upgrade-sandbox.png)\n\nHere are the high-level steps in the upgrade process.\n\n1. Create a copy of the AX 2012 database. We strongly recommend that you use a copy, because you must delete some objects in the copy that will be exported.\n2. Export the copied database to a bacpac file by using a free SQL Server tool that is named SQLPackage.exe. This tool provides a special type of database backup that can be imported into SQL Database.\n3. Upload the bacpac file to Azure storage.\n4. Download the bacpac file to the Application Object Server (AOS) machine in the sandbox environment, and then import it by using SQLPackage.exe. You must then run a script against the imported database to reset the SQL database users.\n5. Run the MajorVersionDataUpgrade.zip package to run the data upgrade against the imported database.\n\n## Create a copy of the AX 2012 database\n\nYou must create a copy of the AX 2012 database that you're upgrading, because you must delete some objects from the database. These objects include any Microsoft Windows authentication users. These changes make the modified database unusable for AX 2012. During this step, you will create a copy of the database and delete these objects.\n\nThis step must be done by the database administrator (DBA) or a person who has similar knowledge and experience.\n\nTo create a database copy, make a backup of the original database, and restore it under a new name. Make sure that enough space is available for both databases. You can create the copy on a different server. The version of the SQL Server instance that runs the database isn't important.\n\nHere is an example of the code that creates a database copy. You must modify this example to reflect your specific database names.\n\n    BACKUP DATABASE [AxDB] TO  DISK = N'D:\\Backups\\axdb_copyForUpgrade.bak' WITH NOFORMAT, NOINIT,  \n    NAME = N'AxDB_copyForUpgrade-Full Database Backup', SKIP, NOREWIND, NOUNLOAD, COMPRESSION,  STATS = 10\n    GO\n\n    RESTORE DATABASE [AxDB_copyForUpgrade] FROM  DISK = N'D:\\Backups\\axdb_copyForUpgrade.bak'   WITH  FILE = 1,  \n    MOVE N'AXDBBuild_Data' TO N'F:\\MSSQL_DATA\\AxDB_copyForUpgrade.mdf',  \n    MOVE N'AXDBBuild_Log' TO N'G:\\MSSQL_LOGS\\AxDB_CopyForUpgrade.ldf',  \n    NOUNLOAD,  STATS = 5\n\nAfter the copy is created, run the following Transact-SQL (T-SQL) script against it.\n    TODO \n\n### Export the copied database to a bacpac file\n\nExport the copied database to a bacpac file by using the SQLPackage.exe tool. This step should be done by the DBA or a team member who has equivalent knowledge.\n\nIt's very important that you install the latest version of SQL Server Management Studio before you start this step. Although SQLPackage is present in earlier versions of Management Studio, it won't work correctly for this step unless you first install the latest version.\n\nThis step is important, because the export will have to be done again during the downtime before go-live. Here are some tips:\n\n- The bacpac process is very I/O and CPU intensive. Therefore, run the export on a high-powered machine.\n- SQLPackage should be run locally on the machine that hosts the database. Don't run SQLPackage on a local laptop that you connect to the database machine, because this process is also network intensive.\n\nNext, open a **Command Prompt** window as an administrator, and run the following commands.\n\n    cd C:\\Program Files (x86)\\Microsoft SQL Server\\130\\DAC\\bin\\\n\n    SqlPackage.exe /a:export /ssn:localhost /sdn:<database to export> /tf:D:\\Exportedbacpac\\my.bacpac /p:CommandTimeout=1200 /p:VerifyFullTextDocumentTypesSupported=false\n\nHere is an explanation of the parameters:\n\n- **ssn** (source server name) – The name of the SQL Server to export from. For our process, this parameter should always be set to **localhost**.\n- **sdn** (source database name) – The name of the database to export.\n- **tf** (target file) – The path and name of the file to export to. The folder should already exist, but the file will be created by the process.\n- **/p:CommandTimeout** – The per-query timeout value. This parameter enables larger tables to be exported without hitting a timeout.\n\n### Upload the bacpac file to Azure storage\n\nUpload your bacpac file to Azure storage. See UsingStorageExplorer.docx TODO\n\n### Import the bacpac file into SQL Database\n\nDuring this step, you will import the exported bacpac file to the SQL Database instance that your sandbox environment uses. You must first install the latest version of Management Studio on your sandbox AOS machine. You will then import the file by using the SQLPackage.exe tool.\n\nYou will perform these tasks directly on the AOS machine in your sandbox environment, because there are firewall rules that restrict access to the SQL Database instance. However, by using the AOS machine, you can gain access.\n\nAs for the export step, you must have the latest version of Management Studio before you start the import. This step won't work if you have an older version.\n\nFor performance reasons, we recommend that you put the bacpac file on drive D on the AOS machine. On Azure virtual machines (VMs), drive D is a physical disk that typically has higher performance than other available disks.\n\nOpen a **Command Prompt** window as an administrator, and run the following commands.\n\n    cd C:\\Program Files (x86)\\Microsoft SQL Server\\130\\DAC\\bin\\\n\n    SqlPackage.exe /a:import /sf:D:\\Exportedbacpac\\my.bacpac /tsn:<azure sql database server name>.database.windows.net /tu:sqladmin /tp:<password from LCS> /tdn:<New database name> /p:CommandTimeout=1200 /p:DatabaseEdition=Premium /p:DatabaseServiceObjective=P1\n\nHere is an explanation of the parameters:\n\n- **tsn** (target server name) – The name of the SQL Azure server to import to. The name can be found in LCS. Suffix it with **.database.windows.net**.\n- **tdn** (target database name) – The name of the database to import to. The database should not already exist. The import process will create it.\n- **sf** (source file) – The path and name of the file to import from.\n- **tp** (target password) – The SQL password for the target SQL Database instance.\n- **tu** (target user) – The SQL user name for the target SQL Database instance. We recommend that you use **sqladmin**. You can retrieve the password for this user from your LCS project.\n- **/p:CommandTimeout** – The per-query timeout value. This parameter enables larger tables to be exported without hitting a timeout.\n- **/p:DatabaseServiceObjective** – The service tier level of the database that is created. You can check the value for the existing database by using Management Studio. Right-click the database, and then select **Properties**.\n\nAfter you run the commands, you will receive the following warning. You can safely ignore it.\n\n![Sandbox error](./media/sandbox-2.png)\n \n### Run the MajorVersionDataUpgrade.zip package\n\nRun the data upgrade deployable package as described in [Upgrade data in development, demo, or sandbox environments](upgrade-data-to-latest-update.md).\n\n### Upgrade a copy of the database in a development environment\n\nIt's useful to upgrade the same database in a development environment. If you have a copy of the database available for development environments, it will be much easier to investigate bugs that are found in the upgraded sandbox environment.\n","nodes":[{"content":"Data upgrade in a sandbox environment","nodes":[{"pos":[0,37],"content":"Data upgrade in a sandbox environment","nodes":[{"content":"Data upgrade in a sandbox environment","pos":[0,37]}]}],"pos":[31,69],"yaml":true},{"content":"This topic explains how to perform a data upgrade from AX 2012 to Dynamics 365 for Finance and Operations in a sandbox environment.","nodes":[{"pos":[0,131],"content":"This topic explains how to perform a data upgrade from AX 2012 to Dynamics 365 for Finance and Operations in a sandbox environment.","nodes":[{"content":"This topic explains how to perform a data upgrade from AX 2012 to Dynamics 365 for Finance and Operations in a sandbox environment.","pos":[0,131]}]}],"pos":[82,214],"yaml":true},{"pos":[665,702],"content":"Data upgrade in a sandbox environment","linkify":"Data upgrade in a sandbox environment","nodes":[{"content":"Data upgrade in a sandbox environment","pos":[0,37]}]},{"content":"The output of this task is an upgraded database that you can use in a sandbox environment.","pos":[747,837]},{"content":"A sandbox environment is an environment where business users and functional team members can validate application functionality.","pos":[838,966]},{"content":"This functionality includes customizations and the data that was brought forward from Microsoft Dynamics AX 2012.","pos":[967,1080]},{"content":"We strongly recommend that you run the data upgrade process in a development environment before you run it in a shared sandbox environment, because this approach will help reduce the overall time that is required for a successful data upgrade.","pos":[1082,1325]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Data upgrade in a development environment<ept id=\"p1\">](prepare-data-upgrade.md)</ept>.","pos":[1326,1421],"source":" For more information, see [Data upgrade in a development environment](prepare-data-upgrade.md)."},{"pos":[1426,1470],"content":"Overview of the sandbox data upgrade process","linkify":"Overview of the sandbox data upgrade process","nodes":[{"content":"Overview of the sandbox data upgrade process","pos":[0,44]}]},{"content":"Before you start to upgrade data in a sandbox environment, you will have already upgraded data in a development environment, as explained in <bpt id=\"p1\">[</bpt>Data upgrade in a development environment<ept id=\"p1\">](prepare-data-upgrade.md)</ept>.","pos":[1472,1682],"source":"Before you start to upgrade data in a sandbox environment, you will have already upgraded data in a development environment, as explained in [Data upgrade in a development environment](prepare-data-upgrade.md)."},{"content":"The two processes are very similar.","pos":[1683,1718]},{"content":"The main difference is that a sandbox environment uses Microsoft Azure SQL Database for data storage, whereas a development environment uses Microsoft SQL Server.","pos":[1719,1881]},{"content":"This technical difference in the database layer requires that you  modify the data upgrade procedure slightly in a sandbox environment, because a backup from the AX 2012 database instance can't just be restored to SQL Database.","pos":[1882,2109]},{"content":"Sandbox data upgrade process","pos":[2113,2141]},{"content":"Here are the high-level steps in the upgrade process.","pos":[2178,2231]},{"content":"Create a copy of the AX 2012 database.","pos":[2236,2274]},{"content":"We strongly recommend that you use a copy, because you must delete some objects in the copy that will be exported.","pos":[2275,2389]},{"content":"Export the copied database to a bacpac file by using a free SQL Server tool that is named SQLPackage.exe.","pos":[2393,2498]},{"content":"This tool provides a special type of database backup that can be imported into SQL Database.","pos":[2499,2591]},{"content":"Upload the bacpac file to Azure storage.","pos":[2595,2635]},{"content":"Download the bacpac file to the Application Object Server (AOS) machine in the sandbox environment, and then import it by using SQLPackage.exe.","pos":[2639,2782]},{"content":"You must then run a script against the imported database to reset the SQL database users.","pos":[2783,2872]},{"content":"Run the MajorVersionDataUpgrade.zip package to run the data upgrade against the imported database.","pos":[2876,2974]},{"pos":[2979,3016],"content":"Create a copy of the AX 2012 database","linkify":"Create a copy of the AX 2012 database","nodes":[{"content":"Create a copy of the AX 2012 database","pos":[0,37]}]},{"content":"You must create a copy of the AX 2012 database that you're upgrading, because you must delete some objects from the database.","pos":[3018,3143]},{"content":"These objects include any Microsoft Windows authentication users.","pos":[3144,3209]},{"content":"These changes make the modified database unusable for AX 2012.","pos":[3210,3272]},{"content":"During this step, you will create a copy of the database and delete these objects.","pos":[3273,3355]},{"content":"This step must be done by the database administrator (DBA) or a person who has similar knowledge and experience.","pos":[3357,3469]},{"content":"To create a database copy, make a backup of the original database, and restore it under a new name.","pos":[3471,3570]},{"content":"Make sure that enough space is available for both databases.","pos":[3571,3631]},{"content":"You can create the copy on a different server.","pos":[3632,3678]},{"content":"The version of the SQL Server instance that runs the database isn't important.","pos":[3679,3757]},{"content":"Here is an example of the code that creates a database copy.","pos":[3759,3819]},{"content":"You must modify this example to reflect your specific database names.","pos":[3820,3889]},{"content":"After the copy is created, run the following Transact-SQL (T-SQL) script against it.","pos":[4394,4478]},{"content":"TODO","pos":[4479,4487],"source":"\n    TODO"},{"pos":[4494,4537],"content":"Export the copied database to a bacpac file","linkify":"Export the copied database to a bacpac file","nodes":[{"content":"Export the copied database to a bacpac file","pos":[0,43]}]},{"content":"Export the copied database to a bacpac file by using the SQLPackage.exe tool.","pos":[4539,4616]},{"content":"This step should be done by the DBA or a team member who has equivalent knowledge.","pos":[4617,4699]},{"content":"It's very important that you install the latest version of SQL Server Management Studio before you start this step.","pos":[4701,4816]},{"content":"Although SQLPackage is present in earlier versions of Management Studio, it won't work correctly for this step unless you first install the latest version.","pos":[4817,4972]},{"content":"This step is important, because the export will have to be done again during the downtime before go-live.","pos":[4974,5079]},{"content":"Here are some tips:","pos":[5080,5099]},{"content":"The bacpac process is very I/O and CPU intensive.","pos":[5103,5152]},{"content":"Therefore, run the export on a high-powered machine.","pos":[5153,5205]},{"content":"SQLPackage should be run locally on the machine that hosts the database.","pos":[5208,5280]},{"content":"Don't run SQLPackage on a local laptop that you connect to the database machine, because this process is also network intensive.","pos":[5281,5409]},{"pos":[5411,5502],"content":"Next, open a <bpt id=\"p1\">**</bpt>Command Prompt<ept id=\"p1\">**</ept> window as an administrator, and run the following commands.","source":"Next, open a **Command Prompt** window as an administrator, and run the following commands."},{"content":"Here is an explanation of the parameters:","pos":[5741,5782]},{"content":"<bpt id=\"p1\">**</bpt>ssn<ept id=\"p1\">**</ept> (source server name) – The name of the SQL Server to export from.","pos":[5786,5859],"source":"**ssn** (source server name) – The name of the SQL Server to export from."},{"content":"For our process, this parameter should always be set to <bpt id=\"p1\">**</bpt>localhost<ept id=\"p1\">**</ept>.","pos":[5860,5930],"source":" For our process, this parameter should always be set to **localhost**."},{"pos":[5933,6001],"content":"<bpt id=\"p1\">**</bpt>sdn<ept id=\"p1\">**</ept> (source database name) – The name of the database to export.","source":"**sdn** (source database name) – The name of the database to export."},{"content":"<bpt id=\"p1\">**</bpt>tf<ept id=\"p1\">**</ept> (target file) – The path and name of the file to export to.","pos":[6004,6070],"source":"**tf** (target file) – The path and name of the file to export to."},{"content":"The folder should already exist, but the file will be created by the process.","pos":[6071,6148]},{"content":"<bpt id=\"p1\">**</bpt>/p:CommandTimeout<ept id=\"p1\">**</ept> – The per-query timeout value.","pos":[6151,6203],"source":"**/p:CommandTimeout** – The per-query timeout value."},{"content":"This parameter enables larger tables to be exported without hitting a timeout.","pos":[6204,6282]},{"pos":[6288,6327],"content":"Upload the bacpac file to Azure storage","linkify":"Upload the bacpac file to Azure storage","nodes":[{"content":"Upload the bacpac file to Azure storage","pos":[0,39]}]},{"content":"Upload your bacpac file to Azure storage.","pos":[6329,6370]},{"content":"See UsingStorageExplorer.docx TODO","pos":[6371,6405]},{"pos":[6411,6451],"content":"Import the bacpac file into SQL Database","linkify":"Import the bacpac file into SQL Database","nodes":[{"content":"Import the bacpac file into SQL Database","pos":[0,40]}]},{"content":"During this step, you will import the exported bacpac file to the SQL Database instance that your sandbox environment uses.","pos":[6453,6576]},{"content":"You must first install the latest version of Management Studio on your sandbox AOS machine.","pos":[6577,6668]},{"content":"You will then import the file by using the SQLPackage.exe tool.","pos":[6669,6732]},{"content":"You will perform these tasks directly on the AOS machine in your sandbox environment, because there are firewall rules that restrict access to the SQL Database instance.","pos":[6734,6903]},{"content":"However, by using the AOS machine, you can gain access.","pos":[6904,6959]},{"content":"As for the export step, you must have the latest version of Management Studio before you start the import.","pos":[6961,7067]},{"content":"This step won't work if you have an older version.","pos":[7068,7118]},{"content":"For performance reasons, we recommend that you put the bacpac file on drive D on the AOS machine.","pos":[7120,7217]},{"content":"On Azure virtual machines (VMs), drive D is a physical disk that typically has higher performance than other available disks.","pos":[7218,7343]},{"pos":[7345,7430],"content":"Open a <bpt id=\"p1\">**</bpt>Command Prompt<ept id=\"p1\">**</ept> window as an administrator, and run the following commands.","source":"Open a **Command Prompt** window as an administrator, and run the following commands."},{"content":"Here is an explanation of the parameters:","pos":[7761,7802]},{"content":"<bpt id=\"p1\">**</bpt>tsn<ept id=\"p1\">**</ept> (target server name) – The name of the SQL Azure server to import to.","pos":[7806,7883],"source":"**tsn** (target server name) – The name of the SQL Azure server to import to."},{"content":"The name can be found in LCS.","pos":[7884,7913]},{"content":"Suffix it with <bpt id=\"p1\">**</bpt>.database.windows.net<ept id=\"p1\">**</ept>.","pos":[7914,7955],"source":" Suffix it with **.database.windows.net**."},{"content":"<bpt id=\"p1\">**</bpt>tdn<ept id=\"p1\">**</ept> (target database name) – The name of the database to import to.","pos":[7958,8029],"source":"**tdn** (target database name) – The name of the database to import to."},{"content":"The database should not already exist.","pos":[8030,8068]},{"content":"The import process will create it.","pos":[8069,8103]},{"pos":[8106,8174],"content":"<bpt id=\"p1\">**</bpt>sf<ept id=\"p1\">**</ept> (source file) – The path and name of the file to import from.","source":"**sf** (source file) – The path and name of the file to import from."},{"pos":[8177,8258],"content":"<bpt id=\"p1\">**</bpt>tp<ept id=\"p1\">**</ept> (target password) – The SQL password for the target SQL Database instance.","source":"**tp** (target password) – The SQL password for the target SQL Database instance."},{"content":"<bpt id=\"p1\">**</bpt>tu<ept id=\"p1\">**</ept> (target user) – The SQL user name for the target SQL Database instance.","pos":[8261,8339],"source":"**tu** (target user) – The SQL user name for the target SQL Database instance."},{"content":"We recommend that you use <bpt id=\"p1\">**</bpt>sqladmin<ept id=\"p1\">**</ept>.","pos":[8340,8379],"source":" We recommend that you use **sqladmin**."},{"content":"You can retrieve the password for this user from your LCS project.","pos":[8380,8446]},{"content":"<bpt id=\"p1\">**</bpt>/p:CommandTimeout<ept id=\"p1\">**</ept> – The per-query timeout value.","pos":[8449,8501],"source":"**/p:CommandTimeout** – The per-query timeout value."},{"content":"This parameter enables larger tables to be exported without hitting a timeout.","pos":[8502,8580]},{"content":"<bpt id=\"p1\">**</bpt>/p:DatabaseServiceObjective<ept id=\"p1\">**</ept> – The service tier level of the database that is created.","pos":[8583,8672],"source":"**/p:DatabaseServiceObjective** – The service tier level of the database that is created."},{"content":"You can check the value for the existing database by using Management Studio.","pos":[8673,8750]},{"content":"Right-click the database, and then select <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept>.","pos":[8751,8808],"source":" Right-click the database, and then select **Properties**."},{"content":"After you run the commands, you will receive the following warning.","pos":[8810,8877]},{"content":"You can safely ignore it.","pos":[8878,8903]},{"content":"Sandbox error","pos":[8907,8920]},{"pos":[8951,8994],"content":"Run the MajorVersionDataUpgrade.zip package","linkify":"Run the MajorVersionDataUpgrade.zip package","nodes":[{"content":"Run the MajorVersionDataUpgrade.zip package","pos":[0,43]}]},{"pos":[8996,9147],"content":"Run the data upgrade deployable package as described in <bpt id=\"p1\">[</bpt>Upgrade data in development, demo, or sandbox environments<ept id=\"p1\">](upgrade-data-to-latest-update.md)</ept>.","source":"Run the data upgrade deployable package as described in [Upgrade data in development, demo, or sandbox environments](upgrade-data-to-latest-update.md)."},{"pos":[9153,9212],"content":"Upgrade a copy of the database in a development environment","linkify":"Upgrade a copy of the database in a development environment","nodes":[{"content":"Upgrade a copy of the database in a development environment","pos":[0,59]}]},{"content":"It's useful to upgrade the same database in a development environment.","pos":[9214,9284]},{"content":"If you have a copy of the database available for development environments, it will be much easier to investigate bugs that are found in the upgraded sandbox environment.","pos":[9285,9454]}]}