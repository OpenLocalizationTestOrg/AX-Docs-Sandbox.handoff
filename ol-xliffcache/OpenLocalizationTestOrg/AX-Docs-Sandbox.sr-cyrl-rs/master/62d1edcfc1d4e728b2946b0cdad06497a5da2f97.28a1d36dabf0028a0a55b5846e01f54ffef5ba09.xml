{"content":"---\n# required metadata\n\ntitle: X++ math run-time functions\ndescription: This topic describes the math run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 31361\nms.assetid: 8982f158-f638-46d7-b3f7-ba8cfd356d57\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# X++ math run-time functions\n\n[!include[banner](../includes/banner.md)]\n\n\nThis topic describes the math run-time functions.\n\nThese functions perform mathematical calculations.\n\nabs\n---\n\nRetrieves the absolute value of a real number. Examples:\n\n-   **abs(-100.0)** returns the value **100.0**.\n-   **abs(30.56)** returns the value **30.56**.\n\n### Syntax\n\n    real abs(real arg)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| arg       | The number to get the absolute value of. |\n\n### Return value\n\nThe absolute value of *arg*.\n\n### Example\n\n    static void absExample(Args _args)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = abs(-3.14);\n        r2 = abs(3.14);\n        if (r1 == r2)\n        {\n            print \"abs of values are the same\";\n            pause;\n        }\n    }\n\n## acos\nRetrieves the arc cosine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real acos(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to retrieve the arc cosine of. |\n\n### Return value\n\nThe arc cosine of *arg*.\n\n### Example\n\n    static void acosExample(Args _args)\n    {\n        real r;\n        str  s;\n        ;\n        r = acos(0.0);\n        s = strFmt(\"The arc cosine of 0.0 is %1 \", r);\n        print s;\n        pause;\n    }\n\n## asin\nRetrieves the arc sine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real asin(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to calculate the arc sine for. |\n\n### Return value\n\nThe arc sine of the specified number.\n\n### Remarks\n\n**aSin(0.36)** returns **0.37**.\n\n## atan\nRetrieves the arc tangent of a real number.\n\n### Syntax\n\n    real atan(real arg)\n\n### Parameters\n\n| Parameter | Description                                  |\n|-----------|----------------------------------------------|\n| arg       | The number to calculate the arc tangent for. |\n\n### Return value\n\nThe arc tangent of the specified number.\n\n### Remarks\n\n**aTan(0.36)** returns **0.35**.\n\n### Example\n\n    static void atanExample(Args _args)\n    {\n        real r;\n        ;\n        r = atan(1.0);\n        print strFmt(\"The Arc Tangent of 1.0 is %1\", r);\n        pause;\n    }\n\n## corrFlagGet\nRetrieves the state of the correction flag for a real number.\n\n### Syntax\n\n    int corrFlagGet(real arg)\n\n### Parameters\n\n| Parameter | Description                         |\n|-----------|-------------------------------------|\n| arg       | The flag to retrieve the state for. |\n\n### Return value\n\nA non-zero value if the flag is set; **0** (zero) if the flag is cleared.\n\n### Example\n\nThe following example displays **1**.\n\n    static void corrFlagGetExample(Args _args)\n    {\n        real rr;\n        rr = corrFlagSet(0.36,2);\n        print(corrFlagGet(rr));\n    }\n\n## corrFlagSet\nControls the correction flag for a real number.\n\n### Syntax\n\n    real corrFlagSet(real real, int arg)\n\n### Parameters\n\n| Parameter | Description                                                       |\n|-----------|-------------------------------------------------------------------|\n| real      | The number in which to turn the correction flag on or off.        |\n| arg       | **0** to turn the flag off; a non-zero value to turn the flag on. |\n\n### Return value\n\n**0** if the flag is now off; a non-zero value if the flag is now on.\n\ncos\n---\n\nRetrieves the cosine of a real number.\n\n### Syntax\n\n    real cos(real arg)\n\n### Parameters\n\n| Parameter | Description                        |\n|-----------|------------------------------------|\n| arg       | The number to find the cosine for. |\n\n### Return value\n\nThe cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\nThe following code example displays **0.76**.\n\n    static void cosExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cos(15);\n        print strFmt(\"Cos of 15 is %1\", r);\n        pause;\n    }\n\n## cosh\nRetrieves the hyperbolic cosine of a real number. **Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real cosh(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The hyperbolic number to calculate the cosine for. |\n\n### Return value\n\nThe hyperbolic cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\n    static void coshExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cosh(0.1);\n        print \"The hyperbolic cosine of 0.1 is \" + num2Str(r, 2, 2, 1, 1);\n        pause;\n    }\n\n## decRound\nRounds a number to the specified number of decimal places.\n\n### Syntax\n\n    real decRound(real figure, int decimals)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| figure    | The number to round.                      |\n| decimals  | The number of decimal places to round to. |\n\n### Return value\n\nThe value of the specified number, rounded to the specified number of decimal places.\n\n### Remarks\n\nThe value of the *decimals* parameter can be positive, 0 (zero), or negative.\n\n-   **decRound(1234.6574,2)** returns the value **1234.66**.\n-   **decRound(1234.6574,0)** returns the value **1235**.\n-   **decRound(1234.6574,-2)** returns the value **1200**.\n-   **decRound(12345.6789,1)** returns the value **12345.70**.\n-   **decRound(12345.6789,-1)** returns the value **12350.00**.\n\nexp\n---\n\nRetrieves the natural antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp(real arg)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| arg       | The real number to calculate the natural antilogarithm for. |\n\n### Return value\n\nThe natural antilogarithm of the specified real number.\n\n### Remarks\n\nThe calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter.\n\n### Example\n\n    static void expExample(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## exp10\nRetrieves the base-10 antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp10(real decimal)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| decimal   | The real number to calculate the base-10 antilogarithm for. |\n\n### Return value\n\nThe 10-based antilogarithm of the value of the *decimal* parameter.\n\n### Example\n\n    static void exp10Example(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## frac\nRetrieves the decimal part of a real number.\n\n### Syntax\n\n    real frac(real decimal)\n\n### Parameters\n\n| Parameter | Description                                       |\n|-----------|---------------------------------------------------|\n| decimal   | The real number to retrieve the decimal part for. |\n\n### Return value\n\nThe decimal part of the specified number.\n\n### Remarks\n\n**frac(12.345)** returns the value **0.345**.\n\n## log10\nRetrieves the 10-digit logarithm of a real number.\n\n### Syntax\n\n    real log10(real arg)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| arg       | The number to calculate the logarithm for. |\n\n### Return value\n\nThe base-10 logarithm of the specified number.\n\n### Remarks\n\n**log10(200)** returns the value **2.30**.\n\n## logN\nRetrieves the natural logarithm of the specified real number.\n\n### Syntax\n\n    real logN(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The number to calculate the natural logarithm for. |\n\n### Return value\n\nThe natural logarithm of the specified number.\n\n### Remarks\n\n**logN(45)** returns the value **3.81**.\n\nmax\n---\n\nRetrieves the larger of two specified values.\n\n    anytype max(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe larger of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n-   **max(12.0,12.1)** returns the value **12.1**.\n-   **max(2,33)** returns the value **33**.\n\nmin\n---\n\nRetrieves the smaller of two specified values.\n\n    anytype min(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe smaller of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n**min(2,33**) returns the value **2**.\n\n### Example\n\n    static void minExample(Args _arg)\n    {\n            anytype a;\n            real r = 3.0;\n            real s = 2.0;\n\n            a = min(r, s);\n            print num2Str(a, 1, 2, 1, 1) + \" is less than the other number.\";\n    }\n\n## power\nRaises a real number to the power of another real number.\n\n### Syntax\n\n    real power(real arg, real exponent)\n\n### Parameters\n\n| Parameter | Description                                                                 |\n|-----------|-----------------------------------------------------------------------------|\n| arg       | The number to calculate the power of.                                       |\n| exponent  | The number to raise the number that is specified by the *arg* parameter to. |\n\n### Return value\n\nThe real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter.\n\n### Remarks\n\n-   **power(5.0,2.0)** returns the value **25.0**.\n-   **power(4.0,0.5)** returns the value **2.0**.\n\n## round\nRounds a real number to the nearest multiple of another real number.\n\n### Syntax\n\n    real round(real _arg, real _decimals)\n\n### Parameters\n\n| Parameter  | Description                                                                          |\n|------------|--------------------------------------------------------------------------------------|\n| \\_arg      | The original number.                                                                 |\n| \\_decimals | The number that the value of the *\\_arg* parameter must be rounded to a multiple of. |\n\n### Return value\n\nThe number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter.\n\n### Remarks\n\nTo round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx).\n\n### Remarks\n\n-   **round(123.45,5.00)** returns the value **125.00**.\n-   **round(7.45,1.05)** returns the value **7.35**.\n-   **round(23.9,5.0)** returns the value **25.00**.\n-   **round(26.1,5.0)** returns the value **25.00**.\n\nsin\n---\n\nRetrieves the sine of a real number.\n\n### Syntax\n\n    real sin(real _arg)\n\n### Parameters\n\n| Parameter | Description                           |\n|-----------|---------------------------------------|\n| \\_arg     | The number to calculate the sine for. |\n\n### Return value\n\nThe sine of the specified real number.\n\n### Remarks\n\nThe value of the *\\_arg* parameter must be in radians.\n\n### Example\n\n    static void sinExample(Args _arg)\n    {\n        real angleDegrees = 15.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sin(angleRadians);\n        print \"sin of a \"\n            + num2Str(angleDegrees, 2, 2, 1, 1)\n            + \" degree angle is \"\n            + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## sinh\nRetrieves the hyperbolic sine of a real number.\n\n### Syntax\n\n    real sinh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                      |\n|-----------|--------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic sine for. |\n\n### Return value\n\nThe hyperbolic sine of the specified real number.\n\n### Remarks\n\nValues for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **sinh** function.\n\n    static void sinhExample(Args _arg)\n    {\n        real angleDegrees = 45.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sinh(angleRadians);\n        print \"sinh of a \"\n        + num2Str(angleDegrees, 2, 2, 1, 1)\n        + \" degree angle is \"\n        + num2Str(r, 2, 15, 1, 1);\n        pause;\n    }\n\ntan\n---\n\nRetrieves the tangent of a real number.\n\n### Syntax\n\n    real tan(real arg)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| arg       | The real number to calculate the tangent for. |\n\n### Return value\n\nThe tangent of the specified real number.\n\n### Remarks\n\nValues for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **tan** function.\n\n    static void tanExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tan(250);\n        print strFmt(\"Tan of 250 is %1\", r);\n        pause;\n    }\n\n## tanh\nRetrieves the hyperbolic tangent of a real number.\n\n### Syntax\n\n    real tanh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                         |\n|-----------|-----------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic tangent for. |\n\n### Return value\n\nThe hyperbolic tangent of the specified real number.\n\n### Example\n\nThe following example illustrates the **tanh** function.\n\n    static void tanhExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tanh(0.1);\n        print \"The hyperbolic tangent of angle 0.1 is \"\n        + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## trunc\nTruncates a real number by removing any decimal places.\n\n### Syntax\n\n    real trunc(real _decimal)\n\n### Parameters\n\n| Parameter | Description             |\n|-----------|-------------------------|\n| \\_decimal | The number to truncate. |\n\n### Return value\n\nA number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed.\n\n### Remarks\n\nThis function always rounds numbers down to a complete integer.\n\n### Example\n\nThe following example truncates 2.7147 to 2.00.\n\n    static void truncExample(Args _arg)\n    {\n        real r;\n        ;\n        r = trunc(2.7147);\n        print strFmt(\"r = %1\",  r);\n        pause;\n    }\n\n\n\n","nodes":[{"pos":[4,632],"embed":true,"content":"# required metadata\n\ntitle: X++ math run-time functions\ndescription: This topic describes the math run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 31361\nms.assetid: 8982f158-f638-46d7-b3f7-ba8cfd356d57\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"X++ math run-time functions","nodes":[{"pos":[0,27],"content":"X++ math run-time functions","nodes":[{"content":"X++ math run-time functions","pos":[0,27]}]}],"path":["title"]},{"content":"This topic describes the math run-time functions.","nodes":[{"pos":[0,49],"content":"This topic describes the math run-time functions.","nodes":[{"content":"This topic describes the math run-time functions.","pos":[0,49]}]}],"path":["description"]}],"header":"# required metadata\n","yml":true},{"pos":[640,667],"content":"X++ math run-time functions","linkify":"X++ math run-time functions","nodes":[{"content":"X++ math run-time functions","pos":[0,27]}]},{"content":"This topic describes the math run-time functions.","pos":[713,762]},{"content":"These functions perform mathematical calculations.","pos":[764,814]},{"pos":[816,819],"content":"abs","linkify":"abs","nodes":[{"content":"abs","pos":[0,3]}]},{"content":"Retrieves the absolute value of a real number.","pos":[825,871]},{"content":"Examples:","pos":[872,881]},{"pos":[887,931],"content":"<bpt id=\"p1\">**</bpt>abs(-100.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>100.0<ept id=\"p2\">**</ept>.","source":"**abs(-100.0)** returns the value **100.0**."},{"pos":[936,979],"content":"<bpt id=\"p1\">**</bpt>abs(30.56)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>30.56<ept id=\"p2\">**</ept>.","source":"**abs(30.56)** returns the value **30.56**."},{"pos":[985,991],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1021,1031],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1035,1044]},{"content":"Description","pos":[1047,1058]},{"content":"arg","pos":[1149,1152]},{"content":"The number to get the absolute value of.","pos":[1161,1201]},{"pos":[1209,1221],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1223,1251],"content":"The absolute value of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The absolute value of *arg*."},{"pos":[1257,1264],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1523,1527],"content":"acos","linkify":"acos","nodes":[{"content":"acos","pos":[0,4]}]},{"content":"Retrieves the arc cosine of a real number.","pos":[1528,1570]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[1571,1719],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[1725,1731],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1762,1772],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1776,1785]},{"content":"Description","pos":[1788,1799]},{"content":"arg","pos":[1892,1895]},{"content":"The number to retrieve the arc cosine of.","pos":[1904,1945]},{"pos":[1953,1965],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1967,1991],"content":"The arc cosine of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The arc cosine of *arg*."},{"pos":[1997,2004],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2214,2218],"content":"asin","linkify":"asin","nodes":[{"content":"asin","pos":[0,4]}]},{"content":"Retrieves the arc sine of a real number.","pos":[2219,2259]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[2260,2408],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[2414,2420],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2451,2461],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2465,2474]},{"content":"Description","pos":[2477,2488]},{"content":"arg","pos":[2581,2584]},{"content":"The number to calculate the arc sine for.","pos":[2593,2634]},{"pos":[2642,2654],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc sine of the specified number.","pos":[2656,2693]},{"pos":[2699,2706],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2708,2740],"content":"<bpt id=\"p1\">**</bpt>aSin(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.37<ept id=\"p2\">**</ept>.","source":"**aSin(0.36)** returns **0.37**."},{"pos":[2745,2749],"content":"atan","linkify":"atan","nodes":[{"content":"atan","pos":[0,4]}]},{"content":"Retrieves the arc tangent of a real number.","pos":[2750,2793]},{"pos":[2799,2805],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2836,2846],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2850,2859]},{"content":"Description","pos":[2862,2873]},{"content":"arg","pos":[2972,2975]},{"content":"The number to calculate the arc tangent for.","pos":[2984,3028]},{"pos":[3036,3048],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc tangent of the specified number.","pos":[3050,3090]},{"pos":[3096,3103],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3105,3137],"content":"<bpt id=\"p1\">**</bpt>aTan(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.35<ept id=\"p2\">**</ept>.","source":"**aTan(0.36)** returns **0.35**."},{"pos":[3143,3150],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3329,3340],"content":"corrFlagGet","linkify":"corrFlagGet","nodes":[{"content":"corrFlagGet","pos":[0,11]}]},{"content":"Retrieves the state of the correction flag for a real number.","pos":[3341,3402]},{"pos":[3408,3414],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3451,3461],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3465,3474]},{"content":"Description","pos":[3477,3488]},{"content":"arg","pos":[3569,3572]},{"content":"The flag to retrieve the state for.","pos":[3581,3616]},{"pos":[3624,3636],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[3638,3711],"content":"A non-zero value if the flag is set; <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero) if the flag is cleared.","source":"A non-zero value if the flag is set; **0** (zero) if the flag is cleared."},{"pos":[3717,3724],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3726,3763],"content":"The following example displays <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>.","source":"The following example displays **1**."},{"pos":[3911,3922],"content":"corrFlagSet","linkify":"corrFlagSet","nodes":[{"content":"corrFlagSet","pos":[0,11]}]},{"content":"Controls the correction flag for a real number.","pos":[3923,3970]},{"pos":[3976,3982],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4030,4040],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4044,4053]},{"content":"Description","pos":[4056,4067]},{"content":"real","pos":[4208,4212]},{"content":"The number in which to turn the correction flag on or off.","pos":[4220,4278]},{"content":"arg","pos":[4290,4293]},{"pos":[4302,4367],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> to turn the flag off; a non-zero value to turn the flag on.","source":"**0** to turn the flag off; a non-zero value to turn the flag on."},{"pos":[4375,4387],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[4389,4458],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> if the flag is now off; a non-zero value if the flag is now on.","source":"**0** if the flag is now off; a non-zero value if the flag is now on."},{"pos":[4460,4463],"content":"cos","linkify":"cos","nodes":[{"content":"cos","pos":[0,3]}]},{"content":"Retrieves the cosine of a real number.","pos":[4469,4507]},{"pos":[4513,4519],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4549,4559],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4563,4572]},{"content":"Description","pos":[4575,4586]},{"content":"arg","pos":[4665,4668]},{"content":"The number to find the cosine for.","pos":[4677,4711]},{"pos":[4719,4731],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The cosine of the specified number.","pos":[4733,4768]},{"pos":[4774,4781],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4783,4835],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[4841,4848],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4850,4895],"content":"The following code example displays <bpt id=\"p1\">**</bpt>0.76<ept id=\"p1\">**</ept>.","source":"The following code example displays **0.76**."},{"pos":[5057,5061],"content":"cosh","linkify":"cosh","nodes":[{"content":"cosh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic cosine of a real number.","pos":[5062,5111]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[5112,5264],"source":"**Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[5270,5276],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5307,5317],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5321,5330]},{"content":"Description","pos":[5333,5344]},{"content":"arg","pos":[5455,5458]},{"content":"The hyperbolic number to calculate the cosine for.","pos":[5467,5517]},{"pos":[5525,5537],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic cosine of the specified number.","pos":[5539,5585]},{"pos":[5591,5598],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5600,5652],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[5658,5665],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5861,5869],"content":"decRound","linkify":"decRound","nodes":[{"content":"decRound","pos":[0,8]}]},{"content":"Rounds a number to the specified number of decimal places.","pos":[5870,5928]},{"pos":[5934,5940],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5992,6002],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6006,6015]},{"content":"Description","pos":[6018,6029]},{"content":"figure","pos":[6122,6128]},{"content":"The number to round.","pos":[6134,6154]},{"content":"decimals","pos":[6180,6188]},{"content":"The number of decimal places to round to.","pos":[6192,6233]},{"pos":[6241,6253],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The value of the specified number, rounded to the specified number of decimal places.","pos":[6255,6340]},{"pos":[6346,6353],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6355,6432],"content":"The value of the <bpt id=\"p1\">*</bpt>decimals<ept id=\"p1\">*</ept> parameter can be positive, 0 (zero), or negative.","source":"The value of the *decimals* parameter can be positive, 0 (zero), or negative."},{"pos":[6438,6494],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1234.66<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,2)** returns the value **1234.66**."},{"pos":[6499,6552],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1235<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,0)** returns the value **1235**."},{"pos":[6557,6611],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,-2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1200<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,-2)** returns the value **1200**."},{"pos":[6616,6674],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12345.70<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,1)** returns the value **12345.70**."},{"pos":[6679,6738],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,-1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12350.00<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,-1)** returns the value **12350.00**."},{"pos":[6740,6743],"content":"exp","linkify":"exp","nodes":[{"content":"exp","pos":[0,3]}]},{"content":"Retrieves the natural antilogarithm of the specified real number.","pos":[6749,6814]},{"pos":[6820,6826],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[6856,6866],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6870,6879]},{"content":"Description","pos":[6882,6893]},{"content":"arg","pos":[7022,7025]},{"content":"The real number to calculate the natural antilogarithm for.","pos":[7034,7093]},{"pos":[7101,7113],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural antilogarithm of the specified real number.","pos":[7115,7170]},{"pos":[7176,7183],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7185,7310],"content":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter.","source":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter."},{"pos":[7316,7323],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7607,7612],"content":"exp10","linkify":"exp10","nodes":[{"content":"exp10","pos":[0,5]}]},{"content":"Retrieves the base-10 antilogarithm of the specified real number.","pos":[7613,7678]},{"pos":[7684,7690],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[7726,7736],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7740,7749]},{"content":"Description","pos":[7752,7763]},{"content":"decimal","pos":[7892,7899]},{"content":"The real number to calculate the base-10 antilogarithm for.","pos":[7904,7963]},{"pos":[7971,7983],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[7985,8052],"content":"The 10-based antilogarithm of the value of the <bpt id=\"p1\">*</bpt>decimal<ept id=\"p1\">*</ept> parameter.","source":"The 10-based antilogarithm of the value of the *decimal* parameter."},{"pos":[8058,8065],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8351,8355],"content":"frac","linkify":"frac","nodes":[{"content":"frac","pos":[0,4]}]},{"content":"Retrieves the decimal part of a real number.","pos":[8356,8400]},{"pos":[8406,8412],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8447,8457],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8461,8470]},{"content":"Description","pos":[8473,8484]},{"content":"decimal","pos":[8593,8600]},{"content":"The real number to retrieve the decimal part for.","pos":[8605,8654]},{"pos":[8662,8674],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The decimal part of the specified number.","pos":[8676,8717]},{"pos":[8723,8730],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8732,8777],"content":"<bpt id=\"p1\">**</bpt>frac(12.345)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>0.345<ept id=\"p2\">**</ept>.","source":"**frac(12.345)** returns the value **0.345**."},{"pos":[8782,8787],"content":"log10","linkify":"log10","nodes":[{"content":"log10","pos":[0,5]}]},{"content":"Retrieves the 10-digit logarithm of a real number.","pos":[8788,8838]},{"pos":[8844,8850],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8882,8892],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8896,8905]},{"content":"Description","pos":[8908,8919]},{"content":"arg","pos":[9014,9017]},{"content":"The number to calculate the logarithm for.","pos":[9026,9068]},{"pos":[9076,9088],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The base-10 logarithm of the specified number.","pos":[9090,9136]},{"pos":[9142,9149],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9151,9193],"content":"<bpt id=\"p1\">**</bpt>log10(200)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.30<ept id=\"p2\">**</ept>.","source":"**log10(200)** returns the value **2.30**."},{"pos":[9198,9202],"content":"logN","linkify":"logN","nodes":[{"content":"logN","pos":[0,4]}]},{"content":"Retrieves the natural logarithm of the specified real number.","pos":[9203,9264]},{"pos":[9270,9276],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[9307,9317],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9321,9330]},{"content":"Description","pos":[9333,9344]},{"content":"arg","pos":[9455,9458]},{"content":"The number to calculate the natural logarithm for.","pos":[9467,9517]},{"pos":[9525,9537],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural logarithm of the specified number.","pos":[9539,9585]},{"pos":[9591,9598],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9600,9640],"content":"<bpt id=\"p1\">**</bpt>logN(45)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>3.81<ept id=\"p2\">**</ept>.","source":"**logN(45)** returns the value **3.81**."},{"pos":[9642,9645],"content":"max","linkify":"max","nodes":[{"content":"max","pos":[0,3]}]},{"content":"Retrieves the larger of two specified values.","pos":[9651,9696]},{"pos":[9753,9763],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9767,9776]},{"content":"Description","pos":[9779,9790]},{"content":"object1","pos":[9835,9842]},{"content":"The first value.","pos":[9847,9863]},{"content":"object2","pos":[9869,9876]},{"content":"The second value.","pos":[9881,9898]},{"pos":[9906,9918],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[9920,10010],"content":"The larger of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The larger of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[10016,10023],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10029,10075],"content":"<bpt id=\"p1\">**</bpt>max(12.0,12.1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12.1<ept id=\"p2\">**</ept>.","source":"**max(12.0,12.1)** returns the value **12.1**."},{"pos":[10080,10119],"content":"<bpt id=\"p1\">**</bpt>max(2,33)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>33<ept id=\"p2\">**</ept>.","source":"**max(2,33)** returns the value **33**."},{"pos":[10121,10124],"content":"min","linkify":"min","nodes":[{"content":"min","pos":[0,3]}]},{"content":"Retrieves the smaller of two specified values.","pos":[10130,10176]},{"pos":[10233,10243],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10247,10256]},{"content":"Description","pos":[10259,10270]},{"content":"object1","pos":[10315,10322]},{"content":"The first value.","pos":[10327,10343]},{"content":"object2","pos":[10349,10356]},{"content":"The second value.","pos":[10361,10378]},{"pos":[10386,10398],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[10400,10491],"content":"The smaller of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The smaller of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[10497,10504],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10506,10544],"content":"<bpt id=\"p1\">**</bpt>min(2,33<ept id=\"p1\">**</ept>) returns the value <bpt id=\"p2\">**</bpt>2<ept id=\"p2\">**</ept>.","source":"**min(2,33**) returns the value **2**."},{"pos":[10550,10557],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10794,10799],"content":"power","linkify":"power","nodes":[{"content":"power","pos":[0,5]}]},{"content":"Raises a real number to the power of another real number.","pos":[10800,10857]},{"pos":[10863,10869],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[10916,10926],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10930,10939]},{"content":"Description","pos":[10942,10953]},{"content":"arg","pos":[11114,11117]},{"content":"The number to calculate the power of.","pos":[11126,11163]},{"content":"exponent","pos":[11206,11214]},{"pos":[11218,11293],"content":"The number to raise the number that is specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to.","source":"The number to raise the number that is specified by the *arg* parameter to."},{"pos":[11301,11313],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[11315,11448],"content":"The real number that is the number specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to the power of the number specified by the <bpt id=\"p2\">*</bpt>exponent<ept id=\"p2\">*</ept> parameter.","source":"The real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter."},{"pos":[11454,11461],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11467,11513],"content":"<bpt id=\"p1\">**</bpt>power(5.0,2.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.0<ept id=\"p2\">**</ept>.","source":"**power(5.0,2.0)** returns the value **25.0**."},{"pos":[11518,11563],"content":"<bpt id=\"p1\">**</bpt>power(4.0,0.5)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.0<ept id=\"p2\">**</ept>.","source":"**power(4.0,0.5)** returns the value **2.0**."},{"pos":[11568,11573],"content":"round","linkify":"round","nodes":[{"content":"round","pos":[0,5]}]},{"content":"Rounds a real number to the nearest multiple of another real number.","pos":[11574,11642]},{"pos":[11648,11654],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11703,11713],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11717,11726]},{"content":"Description","pos":[11730,11741]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[11921,11926],"source":"\\_arg"},{"content":"The original number.","pos":[11934,11954]},{"content":"<ph id=\"ph1\">\\_</ph>decimals","pos":[12023,12033],"source":"\\_decimals"},{"pos":[12036,12120],"content":"The number that the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be rounded to a multiple of.","source":"The number that the value of the *\\_arg* parameter must be rounded to a multiple of."},{"pos":[12128,12140],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[12142,12288],"content":"The number that is a multiple of the value specified by the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimals<ept id=\"p1\">*</ept> parameter and is closest to the value specified by the <bpt id=\"p2\">*</bpt><ph id=\"ph2\">\\_</ph>arg<ept id=\"p2\">*</ept> parameter.","source":"The number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter."},{"pos":[12294,12301],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12303,12479],"content":"To round a real number to a specified number of decimal places, use the <bpt id=\"p1\">[</bpt>decround function<ept id=\"p1\">](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)</ept>.","source":"To round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)."},{"pos":[12485,12492],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12498,12550],"content":"<bpt id=\"p1\">**</bpt>round(123.45,5.00)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>125.00<ept id=\"p2\">**</ept>.","source":"**round(123.45,5.00)** returns the value **125.00**."},{"pos":[12555,12603],"content":"<bpt id=\"p1\">**</bpt>round(7.45,1.05)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>7.35<ept id=\"p2\">**</ept>.","source":"**round(7.45,1.05)** returns the value **7.35**."},{"pos":[12608,12656],"content":"<bpt id=\"p1\">**</bpt>round(23.9,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(23.9,5.0)** returns the value **25.00**."},{"pos":[12661,12709],"content":"<bpt id=\"p1\">**</bpt>round(26.1,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(26.1,5.0)** returns the value **25.00**."},{"pos":[12711,12714],"content":"sin","linkify":"sin","nodes":[{"content":"sin","pos":[0,3]}]},{"content":"Retrieves the sine of a real number.","pos":[12720,12756]},{"pos":[12762,12768],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[12799,12809],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[12813,12822]},{"content":"Description","pos":[12825,12836]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[12921,12926],"source":"\\_arg"},{"content":"The number to calculate the sine for.","pos":[12933,12970]},{"pos":[12978,12990],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The sine of the specified real number.","pos":[12992,13030]},{"pos":[13036,13043],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13045,13099],"content":"The value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *\\_arg* parameter must be in radians."},{"pos":[13105,13112],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13520,13524],"content":"sinh","linkify":"sinh","nodes":[{"content":"sinh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic sine of a real number.","pos":[13525,13572]},{"pos":[13578,13584],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[13616,13626],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13630,13639]},{"content":"Description","pos":[13642,13653]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[13760,13765],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic sine for.","pos":[13772,13820]},{"pos":[13828,13840],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic sine of the specified real number.","pos":[13842,13891]},{"pos":[13897,13904],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13906,14065],"content":"Values for the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[14071,14078],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14080,14136],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>sinh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **sinh** function."},{"pos":[14532,14535],"content":"tan","linkify":"tan","nodes":[{"content":"tan","pos":[0,3]}]},{"content":"Retrieves the tangent of a real number.","pos":[14541,14580]},{"pos":[14586,14592],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[14622,14632],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[14636,14645]},{"content":"Description","pos":[14648,14659]},{"content":"arg","pos":[14760,14763]},{"content":"The real number to calculate the tangent for.","pos":[14772,14817]},{"pos":[14825,14837],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The tangent of the specified real number.","pos":[14839,14880]},{"pos":[14886,14893],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14895,15052],"content":"Values for the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[15058,15065],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15067,15122],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tan<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tan** function."},{"pos":[15286,15290],"content":"tanh","linkify":"tanh","nodes":[{"content":"tanh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic tangent of a real number.","pos":[15291,15341]},{"pos":[15347,15353],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[15385,15395],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15399,15408]},{"content":"Description","pos":[15411,15422]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[15535,15540],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic tangent for.","pos":[15547,15598]},{"pos":[15606,15618],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic tangent of the specified real number.","pos":[15620,15672]},{"pos":[15678,15685],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15687,15743],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tanh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tanh** function."},{"pos":[15955,15960],"content":"trunc","linkify":"trunc","nodes":[{"content":"trunc","pos":[0,5]}]},{"content":"Truncates a real number by removing any decimal places.","pos":[15961,16016]},{"pos":[16022,16028],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[16065,16075],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[16079,16088]},{"content":"Description","pos":[16091,16102]},{"content":"<ph id=\"ph1\">\\_</ph>decimal","pos":[16159,16168],"source":"\\_decimal"},{"content":"The number to truncate.","pos":[16171,16194]},{"pos":[16202,16214],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[16216,16329],"content":"A number that is equivalent to the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimal<ept id=\"p1\">*</ept> parameter after the decimal places have been removed.","source":"A number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed."},{"pos":[16335,16342],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function always rounds numbers down to a complete integer.","pos":[16344,16407]},{"pos":[16413,16420],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example truncates 2.7147 to 2.00.","pos":[16422,16469]}]}