{"content":"---\n# required metadata\n\ntitle: V Classes\ndescription: System API classes that start with the letter V.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 55841\nms.assetid: fd3859a7-c0e5-41b3-9bd3-fc68099e727f\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# V Classes\n\n[!include[banner](../includes/banner.md)]\n\n\nSystem API classes that start with the letter V.\n\nClass ValidateEventArgs\n-----------------------\n\n    class ValidateEventArgs extends DataEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                | Description |\n|-------------------------------------------------------|-------------|\n| public boolean parmValidateResult(\\[boolean result\\]) |             |\n| public void new(boolean result)                       |             |\n\n### Method parmValidateResult\n\n    public boolean parmValidateResult([boolean result])\n\n#### Parameters\n\nresult  \n\n#### Return Value\n\n### Method new\n\n    public void new(boolean result)\n\n#### Parameters\n\nresult  \n\n## Class ValidateFieldEventArgs\n    class ValidateFieldEventArgs extends ValidateEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                       | Description |\n|----------------------------------------------|-------------|\n| public int parmFieldId()                     |             |\n| public void new(int fieldId, boolean result) |             |\n\n### Method parmFieldId\n\n    public int parmFieldId()\n\n#### Return Value\n\n### Method new\n\n    public void new(int fieldId, boolean result)\n\n#### Parameters\n\nfieldId  \n\n<!-- -->\n\nresult  \n\n## Class ValidateFieldValueEventArgs\n    class ValidateFieldValueEventArgs extends ValidateEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                         | Description |\n|----------------------------------------------------------------|-------------|\n| public str parmFieldName()                                     |             |\n| public int parmArrayIndex()                                    |             |\n| public void new(str fieldName, int arrayIndex, boolean result) |             |\n\n### Method parmFieldName\n\n    public str parmFieldName()\n\n#### Return Value\n\n### Method parmArrayIndex\n\n    public int parmArrayIndex()\n\n#### Return Value\n\n### Method new\n\n    public void new(str fieldName, int arrayIndex, boolean result)\n\n#### Parameters\n\nfieldName  \n\n<!-- -->\n\narrayIndex  \n\n<!-- -->\n\nresult  \n\n## Class VirtualChannelManager\n    class VirtualChannelManager extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                         | Description                                                    |\n|------------------------------------------------|----------------------------------------------------------------|\n| public void finalize()                         |                                                                |\n| public void new()                              | Initializes a new instance of the VirtualChannelManager class. |\n| public void sendData(int listenerId, str data) |                                                                |\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the VirtualChannelManager class.\n\n    public void new()\n\n### Method sendData\n\n    public void sendData(int listenerId, str data)\n\n#### Parameters\n\nlistenerId  \n\n<!-- -->\n\ndata  \n\n## Class VSItemNode\n    class VSItemNode extends TreeNode\n\nThe VSItemNode class is a base class for Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                                          |\n|--------------------------------------------------------------------|------------------------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node.                |\n| public BinData getFileData()                                       |                                                      |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) | Notifies listeners that a file has been deleted.     |\n| ::public static void notifyFileUpdated(TreeNode node)              | Notifies listeners that a file has been updated.     |\n| public void setFileData(BinData data)                              |                                                      |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.                   |\n| public void getFile(str fileName)                                  |                                                      |\n| ::public static void notifyFileCreated(TreeNode node)              | Notifies listeners that a new file has been created. |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) | Notifies listeners that a file has been renamed.     |\n| public void setFile(str fileName)                                  |                                                      |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains the source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileDeleted\n\nNotifies listeners that a file has been deleted.\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \nThe AOT path of the file.\n\n<!-- -->\n\naotPath  \nThe AOT path of the file.\n\n### Method notifyFileUpdated\n\nNotifies listeners that a file has been updated.\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \nThe node that has been updated.\n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileCreated\n\nNotifies listeners that a new file has been created.\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \nThe node that has been created.\n\n### Method notifyFileRenamed\n\nNotifies listeners that a file has been renamed.\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \nThe old name of the file.\n\n<!-- -->\n\noldName  \nThe old name of the file.\n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n## Class VSProjectFileNode\n    class VSProjectFileNode extends VSItemNode\n\nThe VSProjectFileNode class represents files in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                           |\n|--------------------------------------------------------------------|---------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node. |\n| public BinData getFileData()                                       |                                       |\n| ::public static void notifyFileCreated(TreeNode node)              |                                       |\n| public void setFileData(BinData data)                              |                                       |\n| public void getFile(str fileName)                                  |                                       |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) |                                       |\n| ::public static void notifyFileUpdated(TreeNode node)              |                                       |\n| public void setFile(str fileName)                                  |                                       |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) |                                       |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.    |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n## Class VSProjectFolderNode\n    class VSProjectFolderNode extends TreeNode\n\nThe VSProjectFolderNode class represents folders in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                       | Description                                                                                              |\n|----------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|\n| public str AOTgetSource()                                                                    | Returns the source code of this node.                                                                    |\n| public VSProjectFileNode createFileNode(str name)                                            | Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.   |\n| public VSProjectFolderNode createFolderNode(str name)                                        | Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance. |\n| public VSProjectLinkNode createLinkNode(str name, str aotPath, \\[boolean createLinkedNode\\]) | Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.   |\n| public BinData getFileData()                                                                 |                                                                                                          |\n| ::public static void notifyFileUpdated(TreeNode node)                                        |                                                                                                          |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath)                           |                                                                                                          |\n| public void setFileData(BinData data)                                                        |                                                                                                          |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])                                   | Sets the source code of this node.                                                                       |\n| public void getFile(str fileName)                                                            |                                                                                                          |\n| ::public static void notifyFileCreated(TreeNode node)                                        |                                                                                                          |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName)                           |                                                                                                          |\n| public void setFile(str fileName)                                                            |                                                                                                          |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method createFileNode\n\nCreates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectFileNode createFileNode(str name)\n\n#### Parameters\n\nname  \nThe name of the file node.\n\n#### Return Value\n\nThe new instance of the VSProjectFileNode class.\n\n### Method createFolderNode\n\nCreates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectFolderNode createFolderNode(str name)\n\n#### Parameters\n\nname  \nThe name of the folder node.\n\n#### Return Value\n\nThe new instance of the VSProjectFolderNode class.\n\n### Method createLinkNode\n\nCreates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectLinkNode createLinkNode(str name, str aotPath, [boolean createLinkedNode])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\naotPath  \n\n<!-- -->\n\ncreateLinkedNode  \n\n#### Return Value\n\nThe new instance of the VSProjectLinkNode class.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n## Class VSProjectLinkNode\n    class VSProjectLinkNode extends VSItemNode\n\nThe VSProjectLinkNode class represents links to other Finance and Operations Application Object Tree (AOT) nodes in the Microsoft Visual Studio project nodes in the AOT.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                           |\n|--------------------------------------------------------------------|---------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node. |\n| public str getAOTPath()                                            |                                       |\n| public BinData getFileData()                                       |                                       |\n| ::public static void notifyFileCreated(TreeNode node)              |                                       |\n| public void setFile(str fileName)                                  |                                       |\n| public void setFileData(BinData data)                              |                                       |\n| public void getFile(str fileName)                                  |                                       |\n| ::public static void notifyFileUpdated(TreeNode node)              |                                       |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.    |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) |                                       |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) |                                       |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getAOTPath\n\n    public str getAOTPath()\n\n#### Return Value\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n## Class VSProjectNode\n    class VSProjectNode extends xResourceNode\n\nThe VSProjectNode class represents projects in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                | Description                                                                                       |\n|-----------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|\n| public container extract(\\[str path\\], \\[boolean extractReferenced\\]) | Extracts the whole project to disk.                                                               |\n| public VSProjectFolderNode getContentNode()                           | Gets the content VSProjectFolderNode object that contains the Visual Studio project files.        |\n| public DeployTo getDeployTo()                                         | Gets value of the deployTo property.                                                              |\n| public VSProjectFolderNode getOutputNode()                            | Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.  |\n| public VSProjectFileNode getPrimaryOutputNode()                       | Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project. |\n| public str getPrimaryTargetFileName()                                 | Gets the primary target file name of the Visual Studio project.                                   |\n| public Map getProxies()                                               | Gets the proxies in this project.                                                                 |\n| public container getProxiesContainer()                                | Gets the proxies in this project.                                                                 |\n| public str getReferencedProjectsInAOT()                               | Gets the AOT paths of the projects that are referenced by this Visual Studio project.             |\n| public str referencedProjects(\\[str value\\])                          |                                                                                                   |\n| public void setPrimaryTargetFileName(str targetFileName)              | Sets the primary target file name of the Visual Studio project.                                   |\n| public void extractToSpecificDir(str directory)                       |                                                                                                   |\n| public void setDeployTo(DeployTo deployTo)                            | Sets the value of the deployTo property.                                                          |\n\n### Method extract\n\nExtracts the whole project to disk.\n\n    public container extract([str path], [boolean extractReferenced])\n\n#### Parameters\n\npath  \nA Boolean value that determines whether to extract the referenced projects.\n\n<!-- -->\n\nextractReferenced  \nA Boolean value that determines whether to extract the referenced projects.\n\n#### Return Value\n\nA list of paths where the project was extracted.\n\n### Method getContentNode\n\nGets the content VSProjectFolderNode object that contains the Visual Studio project files.\n\n    public VSProjectFolderNode getContentNode()\n\n#### Return Value\n\nThe content VSProjectFolderNode object that contains the Visual Studio project files.\n\n### Method getDeployTo\n\nGets value of the deployTo property.\n\n    public DeployTo getDeployTo()\n\n#### Return Value\n\nThe deployTo property value.\n\n### Method getOutputNode\n\nGets the output VSProjectFolderNode object that contains the Visual Studio project output files.\n\n    public VSProjectFolderNode getOutputNode()\n\n#### Return Value\n\nThe output VSProjectFolderNode object that contains the Visual Studio project output files.\n\n### Method getPrimaryOutputNode\n\nGets the VSProjectFileNode object that represent the primary output of the Visual Studio project.\n\n    public VSProjectFileNode getPrimaryOutputNode()\n\n#### Return Value\n\nA VSProjectFileNode object that represent the primary output of the Visual Studio project.\n\n### Method getPrimaryTargetFileName\n\nGets the primary target file name of the Visual Studio project.\n\n    public str getPrimaryTargetFileName()\n\n#### Return Value\n\nThe primary target file name of the Visual Studio project.\n\n### Method getProxies\n\nGets the proxies in this project.\n\n    public Map getProxies()\n\n#### Return Value\n\nA map that contains the Class, Enum, and Table keys. Each key contains a list of proxies.\n\n### Method getProxiesContainer\n\nGets the proxies in this project.\n\n    public container getProxiesContainer()\n\n#### Return Value\n\nA container that holds the packed representation of a map that contains the Class, Enum, and Table keys. Each key contains a list of proxies.\n\n### Method getReferencedProjectsInAOT\n\nGets the AOT paths of the projects that are referenced by this Visual Studio project.\n\n    public str getReferencedProjectsInAOT()\n\n#### Return Value\n\nA list of AOT paths of the projects that are referenced by this Visual Studio project.\n\n### Method referencedProjects\n\n    public str referencedProjects([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method setPrimaryTargetFileName\n\nSets the primary target file name of the Visual Studio project.\n\n    public void setPrimaryTargetFileName(str targetFileName)\n\n#### Parameters\n\ntargetFileName  \nThe primary target file name of the Visual Studio project.\n\n### Method extractToSpecificDir\n\n    public void extractToSpecificDir(str directory)\n\n#### Parameters\n\ndirectory  \n\n### Method setDeployTo\n\nSets the value of the deployTo property.\n\n    public void setDeployTo(DeployTo deployTo)\n\n#### Parameters\n\ndeployTo  \nThe deployTo property value.\n\n## Class VSProjectsNode\n    class VSProjectsNode extends xResourceNode\n\nThe VSProjectNode class is the root of the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                            | Description                                                                                |\n|---------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|\n| public TreeNode AOTfindChild(str name, \\[int nodeType\\])                                          | Finds the specified child node of this node.                                               |\n| public VSProjectNode createProjectNode(str name, str projectTypesString, \\[boolean virtualNode\\]) | Creates a new instance of the VSProjectNode class.                                         |\n| public container getProjectsDeployingTo(DeployTo deployTo)                                        | Gets a list of VSProjectNode objects that have the specified deployTo property.            |\n| public container getProjectsModifiedAfter(DateTime timestamp)                                     | Gets a list of VSProjectNode objects that were modified after the specified date and time. |\n| public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)                              |                                                                                            |\n| public Object getVSProjectNodeObservable()                                                        | Gets the VSProjectNodeObservable object.                                                   |\n| public void AOTrefresh()                                                                          | Updates the node with the latest changes to the .aod file.                                 |\n\n### Method AOTfindChild\n\nFinds the specified child node of this node.\n\n    public TreeNode AOTfindChild(str name, [int nodeType])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nnodeType  \n\n#### Return Value\n\nThe specified tree node.\n\n### Method createProjectNode\n\nCreates a new instance of the VSProjectNode class.\n\n    public VSProjectNode createProjectNode(str name, str projectTypesString, [boolean virtualNode])\n\n#### Parameters\n\nname  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Finance and Operations Store.\n\n<!-- -->\n\nprojectTypesString  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Finance and Operations Store.\n\n<!-- -->\n\nvirtualNode  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Finance and Operations Store.\n\n#### Return Value\n\nThe VSProjectNode object that is created.\n\n### Method getProjectsDeployingTo\n\nGets a list of VSProjectNode objects that have the specified deployTo property.\n\n    public container getProjectsDeployingTo(DeployTo deployTo)\n\n#### Parameters\n\ndeployTo  \nThe value of the deployTo property.\n\n#### Return Value\n\nA list of VSProjectNode objects.\n\n### Method getProjectsModifiedAfter\n\nGets a list of VSProjectNode objects that were modified after the specified date and time.\n\n    public container getProjectsModifiedAfter(DateTime timestamp)\n\n#### Parameters\n\ntimestamp  \nThe date and time as a DB\\_DATETIME\\_TYPE value.\n\n#### Return Value\n\nA list of VSProjectNode objects.\n\n### Method getTypeNodeFromGuid\n\n    public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)\n\n#### Parameters\n\nprojectTypesString  \n\n#### Return Value\n\n### Method getVSProjectNodeObservable\n\nGets the VSProjectNodeObservable object.\n\n    public Object getVSProjectNodeObservable()\n\n#### Return Value\n\nThe VSProjectNodeObservable object.\n\n#### Remarks\n\nObservers can register with this and get notified of CRUD operations on Visual Studio projects.\n\n### Method AOTrefresh\n\nUpdates the node with the latest changes to the .aod file.\n\n    public void AOTrefresh()\n\n## Class VSProjectTypeNode\n    class VSProjectTypeNode extends TreeNode\n\nThe VSProjectTypeNode class represents project types in the Visual Studio Project nodes in the AOT.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method | Description |\n|--------|-------------|\n\n## Class VSS\n    class VSS extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                        | Description                               |\n|---------------------------------------------------------------------------------------------------------------|-------------------------------------------|\n| public boolean connect()                                                                                      |                                           |\n| public boolean connected()                                                                                    |                                           |\n| public boolean disconnect()                                                                                   |                                           |\n| public container getCheckedoutFiles()                                                                         |                                           |\n| public container getConnectionInfo()                                                                          |                                           |\n| public VSSItem getVSSItem(str vssItemPath, str localFilePath, \\[boolean completePath\\], \\[int version\\])      |                                           |\n| public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)                |                                           |\n| public VSSItem newSubProject(str name, str localPath)                                                         |                                           |\n| public Map synchronizeProjects(\\[Set projects\\], \\[boolean force\\], \\[boolean delLocalFiles\\], \\[str label\\]) |                                           |\n| public void new()                                                                                             | Initializes an instance of the VSS class. |\n\n### Method connect\n\n    public boolean connect()\n\n#### Return Value\n\n### Method connected\n\n    public boolean connected()\n\n#### Return Value\n\n### Method disconnect\n\n    public boolean disconnect()\n\n#### Return Value\n\n### Method getCheckedoutFiles\n\n    public container getCheckedoutFiles()\n\n#### Return Value\n\n### Method getConnectionInfo\n\n    public container getConnectionInfo()\n\n#### Return Value\n\n### Method getVSSItem\n\n    public VSSItem getVSSItem(str vssItemPath, str localFilePath, [boolean completePath], [int version])\n\n#### Parameters\n\nvssItemPath  \n\n<!-- -->\n\nlocalFilePath  \n\n<!-- -->\n\ncompletePath  \n\n<!-- -->\n\nversion  \n\n#### Return Value\n\n### Method init\n\n    public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)\n\n#### Parameters\n\nvssIni  \n\n<!-- -->\n\nvssPrjRoot  \n\n<!-- -->\n\nvssWorkingFolder  \n\n<!-- -->\n\nvssUser  \n\n<!-- -->\n\nvssPwd  \n\n#### Return Value\n\n### Method newSubProject\n\n    public VSSItem newSubProject(str name, str localPath)\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nlocalPath  \n\n#### Return Value\n\n### Method synchronizeProjects\n\n    public Map synchronizeProjects([Set projects], [boolean force], [boolean delLocalFiles], [str label])\n\n#### Parameters\n\nprojects  \n\n<!-- -->\n\nforce  \n\n<!-- -->\n\ndelLocalFiles  \n\n<!-- -->\n\nlabel  \n\n#### Return Value\n\n### Method new\n\nInitializes an instance of the VSS class.\n\n    public void new()\n\n## Class VSSItem\n    class VSSItem extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                               | Description                                      |\n|--------------------------------------------------------------------------------------|--------------------------------------------------|\n| public boolean add(\\[boolean keepCheckedout\\], \\[str comment\\])                      |                                                  |\n| public boolean checkin(\\[str comment\\])                                              |                                                  |\n| public boolean checkout(\\[boolean allowMultipleCheckout\\], \\[boolean replaceLocal\\]) |                                                  |\n| public boolean delete()                                                              |                                                  |\n| public boolean destroy()                                                             |                                                  |\n| public Map get(\\[boolean force\\], \\[int version\\], \\[str label\\], \\[str localFile\\]) |                                                  |\n| public str getActionText()                                                           |                                                  |\n| public container getCheckedOutTo()                                                   |                                                  |\n| public int getCheckoutVersion()                                                      |                                                  |\n| public container getHistory()                                                        |                                                  |\n| public ComInterface getIUnknown()                                                    |                                                  |\n| public int getVersionNo()                                                            |                                                  |\n| public str getVSSPath()                                                              |                                                  |\n| public boolean isCheckedOut()                                                        |                                                  |\n| public boolean isRenamed()                                                           |                                                  |\n| public str name(str newName)                                                         |                                                  |\n| public boolean rename(str newName)                                                   |                                                  |\n| public boolean undoCheckout()                                                        |                                                  |\n| private void new()                                                                   | Initializes a new instance of the VSSItem class. |\n\n### Method add\n\n    public boolean add([boolean keepCheckedout], [str comment])\n\n#### Parameters\n\nkeepCheckedout  \n\n<!-- -->\n\ncomment  \n\n#### Return Value\n\n### Method checkin\n\n    public boolean checkin([str comment])\n\n#### Parameters\n\ncomment  \n\n#### Return Value\n\n### Method checkout\n\n    public boolean checkout([boolean allowMultipleCheckout], [boolean replaceLocal])\n\n#### Parameters\n\nallowMultipleCheckout  \n\n<!-- -->\n\nreplaceLocal  \n\n#### Return Value\n\n### Method delete\n\n    public boolean delete()\n\n#### Return Value\n\n### Method destroy\n\n    public boolean destroy()\n\n#### Return Value\n\n### Method get\n\n    public Map get([boolean force], [int version], [str label], [str localFile])\n\n#### Parameters\n\nforce  \n\n<!-- -->\n\nversion  \n\n<!-- -->\n\nlabel  \n\n<!-- -->\n\nlocalFile  \n\n#### Return Value\n\n### Method getActionText\n\n    public str getActionText()\n\n#### Return Value\n\n### Method getCheckedOutTo\n\n    public container getCheckedOutTo()\n\n#### Return Value\n\n### Method getCheckoutVersion\n\n    public int getCheckoutVersion()\n\n#### Return Value\n\n### Method getHistory\n\n    public container getHistory()\n\n#### Return Value\n\n### Method getIUnknown\n\n    public ComInterface getIUnknown()\n\n#### Return Value\n\n### Method getVersionNo\n\n    public int getVersionNo()\n\n#### Return Value\n\n### Method getVSSPath\n\n    public str getVSSPath()\n\n#### Return Value\n\n### Method isCheckedOut\n\n    public boolean isCheckedOut()\n\n#### Return Value\n\n### Method isRenamed\n\n    public boolean isRenamed()\n\n#### Return Value\n\n### Method name\n\n    public str name(str newName)\n\n#### Parameters\n\nnewName  \n\n#### Return Value\n\n### Method rename\n\n    public boolean rename(str newName)\n\n#### Parameters\n\nnewName  \n\n#### Return Value\n\n### Method undoCheckout\n\n    public boolean undoCheckout()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the VSSItem class.\n\n    private void new()\n\n\n\n","nodes":[{"pos":[4,613],"embed":true,"content":"# required metadata\n\ntitle: V Classes\ndescription: System API classes that start with the letter V.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 55841\nms.assetid: fd3859a7-c0e5-41b3-9bd3-fc68099e727f\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"V Classes","nodes":[{"pos":[0,9],"content":"V Classes","nodes":[{"content":"V Classes","pos":[0,9]}]}],"path":["title"]},{"content":"System API classes that start with the letter V.","nodes":[{"pos":[0,48],"content":"System API classes that start with the letter V.","nodes":[{"content":"System API classes that start with the letter V.","pos":[0,48]}]}],"path":["description"]}],"header":"# required metadata\n","yml":true},{"pos":[621,630],"content":"V Classes","linkify":"V Classes","nodes":[{"content":"V Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter V.","pos":[676,724]},{"pos":[726,749],"content":"Class ValidateEventArgs","linkify":"Class ValidateEventArgs","nodes":[{"content":"Class ValidateEventArgs","pos":[0,23]}]},{"pos":[830,837],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[843,851],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[857,864],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[868,874]},{"content":"Description","pos":[924,935]},{"content":"public boolean parmValidateResult(<ph id=\"ph1\">\\[</ph>boolean result<ph id=\"ph2\">\\]</ph>)","pos":[1012,1065],"source":"public boolean parmValidateResult(\\[boolean result\\])"},{"content":"public void new(boolean result)","pos":[1084,1115]},{"pos":[1159,1184],"content":"Method parmValidateResult","linkify":"Method parmValidateResult","nodes":[{"content":"Method parmValidateResult","pos":[0,25]}]},{"pos":[1248,1258],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"result","pos":[1260,1266]},{"pos":[1275,1287],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1293,1303],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[1347,1357],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"result","pos":[1359,1365]},{"pos":[1372,1400],"content":"Class ValidateFieldEventArgs","linkify":"Class ValidateFieldEventArgs","nodes":[{"content":"Class ValidateFieldEventArgs","pos":[0,28]}]},{"pos":[1465,1472],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1478,1486],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[1492,1499],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[1503,1509]},{"content":"Description","pos":[1550,1561]},{"content":"public int parmFieldId()","pos":[1629,1653]},{"content":"public void new(int fieldId, boolean result)","pos":[1692,1736]},{"pos":[1758,1776],"content":"Method parmFieldId","linkify":"Method parmFieldId","nodes":[{"content":"Method parmFieldId","pos":[0,18]}]},{"pos":[1813,1825],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1831,1841],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[1898,1908],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[1910,1917]},{"content":"result","pos":[1931,1937]},{"pos":[1944,1977],"content":"Class ValidateFieldValueEventArgs","linkify":"Class ValidateFieldValueEventArgs","nodes":[{"content":"Class ValidateFieldValueEventArgs","pos":[0,33]}]},{"pos":[2047,2054],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2060,2068],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[2074,2081],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[2085,2091]},{"content":"Description","pos":[2150,2161]},{"content":"public str parmFieldName()","pos":[2247,2273]},{"content":"public int parmArrayIndex()","pos":[2328,2355]},{"content":"public void new(str fieldName, int arrayIndex, boolean result)","pos":[2409,2471]},{"pos":[2493,2513],"content":"Method parmFieldName","linkify":"Method parmFieldName","nodes":[{"content":"Method parmFieldName","pos":[0,20]}]},{"pos":[2552,2564],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2570,2591],"content":"Method parmArrayIndex","linkify":"Method parmArrayIndex","nodes":[{"content":"Method parmArrayIndex","pos":[0,21]}]},{"pos":[2631,2643],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2649,2659],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[2734,2744],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldName","pos":[2746,2755]},{"content":"arrayIndex","pos":[2769,2779]},{"content":"result","pos":[2793,2799]},{"pos":[2806,2833],"content":"Class VirtualChannelManager","linkify":"Class VirtualChannelManager","nodes":[{"content":"Class VirtualChannelManager","pos":[0,27]}]},{"pos":[2886,2893],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2899,2907],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[2913,2920],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[2924,2930]},{"content":"Description","pos":[2973,2984]},{"content":"public void finalize()","pos":[3156,3178]},{"content":"public void new()","pos":[3272,3289]},{"content":"Initializes a new instance of the VirtualChannelManager class.","pos":[3321,3383]},{"content":"public void sendData(int listenerId, str data)","pos":[3388,3434]},{"pos":[3507,3522],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[3556,3566],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the VirtualChannelManager class.","pos":[3568,3630]},{"pos":[3659,3674],"content":"Method sendData","linkify":"Method sendData","nodes":[{"content":"Method sendData","pos":[0,15]}]},{"pos":[3733,3743],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"listenerId","pos":[3745,3755]},{"content":"data","pos":[3769,3773]},{"pos":[3780,3796],"content":"Class VSItemNode","linkify":"Class VSItemNode","nodes":[{"content":"Class VSItemNode","pos":[0,16]}]},{"content":"The VSItemNode class is a base class for Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[3836,3975]},{"pos":[3981,3988],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3994,4002],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[4008,4015],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[4019,4025]},{"content":"Description","pos":[4088,4099]},{"content":"public str AOTgetSource()","pos":[4271,4296]},{"content":"Returns the source code of this node.","pos":[4340,4377]},{"content":"public BinData getFileData()","pos":[4397,4425]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[4523,4589]},{"content":"Notifies listeners that a file has been deleted.","pos":[4592,4640]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[4649,4702]},{"content":"Notifies listeners that a file has been updated.","pos":[4718,4766]},{"content":"public void setFileData(BinData data)","pos":[4775,4812]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[4901,4959],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[4970,5004]},{"content":"public void getFile(str fileName)","pos":[5027,5060]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[5153,5206]},{"content":"Notifies listeners that a new file has been created.","pos":[5222,5274]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[5279,5345]},{"content":"Notifies listeners that a file has been renamed.","pos":[5348,5396]},{"content":"public void setFile(str fileName)","pos":[5405,5438]},{"pos":[5534,5553],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[5555,5592]},{"pos":[5630,5642],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains the source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[5644,5779]},{"pos":[5786,5793],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[5795,5854]},{"pos":[5860,5878],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[5919,5931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5937,5961],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"content":"Notifies listeners that a file has been deleted.","pos":[5963,6011]},{"pos":[6088,6098],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[6100,6104]},{"content":"The AOT path of the file.","pos":[6107,6132]},{"content":"aotPath","pos":[6144,6151]},{"content":"The AOT path of the file.","pos":[6154,6179]},{"pos":[6185,6209],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"content":"Notifies listeners that a file has been updated.","pos":[6211,6259]},{"pos":[6323,6333],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[6335,6339]},{"content":"The node that has been updated.","pos":[6342,6373]},{"pos":[6379,6397],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[6447,6457],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[6459,6463]},{"pos":[6471,6490],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[6492,6526]},{"pos":[6595,6605],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[6607,6613]},{"content":"The value that specifies whether the method is static; optional.","pos":[6616,6680]},{"content":"isStatic","pos":[6692,6700]},{"content":"The value that specifies whether the method is static; optional.","pos":[6703,6767]},{"pos":[6774,6781],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[6783,6840]},{"pos":[6846,6860],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[6906,6916],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[6918,6926]},{"pos":[6934,6958],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"content":"Notifies listeners that a new file has been created.","pos":[6960,7012]},{"pos":[7076,7086],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[7088,7092]},{"content":"The node that has been created.","pos":[7095,7126]},{"pos":[7132,7156],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"content":"Notifies listeners that a file has been renamed.","pos":[7158,7206]},{"pos":[7283,7293],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[7295,7299]},{"content":"The old name of the file.","pos":[7302,7327]},{"content":"oldName","pos":[7339,7346]},{"content":"The old name of the file.","pos":[7349,7374]},{"pos":[7380,7394],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[7440,7450],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[7452,7460]},{"pos":[7467,7490],"content":"Class VSProjectFileNode","linkify":"Class VSProjectFileNode","nodes":[{"content":"Class VSProjectFileNode","pos":[0,23]}]},{"content":"The VSProjectFileNode class represents files in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[7539,7689]},{"pos":[7695,7702],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7708,7716],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[7722,7729],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[7733,7739]},{"content":"Description","pos":[7802,7813]},{"content":"public str AOTgetSource()","pos":[7955,7980]},{"content":"Returns the source code of this node.","pos":[8024,8061]},{"content":"public BinData getFileData()","pos":[8066,8094]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[8177,8230]},{"content":"public void setFileData(BinData data)","pos":[8288,8325]},{"content":"public void getFile(str fileName)","pos":[8399,8432]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[8510,8576]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[8621,8674]},{"content":"public void setFile(str fileName)","pos":[8732,8765]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[8843,8909]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[8954,9012],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[9023,9057]},{"pos":[9068,9087],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[9089,9126]},{"pos":[9164,9176],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[9178,9309]},{"pos":[9316,9323],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[9325,9384]},{"pos":[9390,9408],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[9449,9461],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9467,9491],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[9555,9565],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9567,9571]},{"pos":[9579,9597],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[9647,9657],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[9659,9663]},{"pos":[9671,9685],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[9731,9741],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[9743,9751]},{"pos":[9759,9783],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[9860,9870],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9872,9876]},{"content":"aotPath","pos":[9890,9897]},{"pos":[9905,9929],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[9993,10003],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[10005,10009]},{"pos":[10017,10031],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[10077,10087],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[10089,10097]},{"pos":[10105,10129],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[10206,10216],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[10218,10222]},{"content":"oldName","pos":[10236,10243]},{"pos":[10251,10270],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[10272,10306]},{"pos":[10375,10385],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[10387,10393]},{"content":"The value that specifies whether the method is static; optional.","pos":[10396,10460]},{"content":"isStatic","pos":[10472,10480]},{"content":"The value that specifies whether the method is static; optional.","pos":[10483,10547]},{"pos":[10554,10561],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[10563,10620]},{"pos":[10625,10650],"content":"Class VSProjectFolderNode","linkify":"Class VSProjectFolderNode","nodes":[{"content":"Class VSProjectFolderNode","pos":[0,25]}]},{"content":"The VSProjectFolderNode class represents folders in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[10699,10853]},{"pos":[10859,10866],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10872,10880],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[10886,10893],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[10897,10903]},{"content":"Description","pos":[10992,11003]},{"content":"public str AOTgetSource()","pos":[11305,11330]},{"content":"Returns the source code of this node.","pos":[11400,11437]},{"content":"public VSProjectFileNode createFileNode(str name)","pos":[11509,11558]},{"content":"Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.","pos":[11604,11706]},{"content":"public VSProjectFolderNode createFolderNode(str name)","pos":[11713,11766]},{"content":"Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.","pos":[11808,11912]},{"content":"public VSProjectLinkNode createLinkNode(str name, str aotPath, <ph id=\"ph1\">\\[</ph>boolean createLinkedNode<ph id=\"ph2\">\\]</ph>)","pos":[11917,12009],"source":"public VSProjectLinkNode createLinkNode(str name, str aotPath, \\[boolean createLinkedNode\\])"},{"content":"Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.","pos":[12012,12114]},{"content":"public BinData getFileData()","pos":[12121,12149]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[12325,12378]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[12529,12595]},{"content":"public void setFileData(BinData data)","pos":[12733,12770]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[12937,12995],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[13032,13066]},{"content":"public void getFile(str fileName)","pos":[13141,13174]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[13345,13398]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[13549,13615]},{"content":"public void setFile(str fileName)","pos":[13753,13786]},{"pos":[13960,13979],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[13981,14018]},{"pos":[14056,14068],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[14070,14201]},{"pos":[14208,14215],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[14217,14276]},{"pos":[14282,14303],"content":"Method createFileNode","linkify":"Method createFileNode","nodes":[{"content":"Method createFileNode","pos":[0,21]}]},{"content":"Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.","pos":[14305,14407]},{"pos":[14469,14479],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[14481,14485]},{"content":"The name of the file node.","pos":[14488,14514]},{"pos":[14521,14533],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectFileNode class.","pos":[14535,14583]},{"pos":[14589,14612],"content":"Method createFolderNode","linkify":"Method createFolderNode","nodes":[{"content":"Method createFolderNode","pos":[0,23]}]},{"content":"Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.","pos":[14614,14718]},{"pos":[14784,14794],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[14796,14800]},{"content":"The name of the folder node.","pos":[14803,14831]},{"pos":[14838,14850],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectFolderNode class.","pos":[14852,14902]},{"pos":[14908,14929],"content":"Method createLinkNode","linkify":"Method createLinkNode","nodes":[{"content":"Method createLinkNode","pos":[0,21]}]},{"content":"Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.","pos":[14931,15033]},{"pos":[15136,15146],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[15148,15152]},{"content":"aotPath","pos":[15166,15173]},{"content":"createLinkedNode","pos":[15187,15203]},{"pos":[15212,15224],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectLinkNode class.","pos":[15226,15274]},{"pos":[15280,15298],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[15339,15351],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15357,15381],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[15445,15455],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[15457,15461]},{"pos":[15469,15493],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[15570,15580],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[15582,15586]},{"content":"aotPath","pos":[15600,15607]},{"pos":[15615,15633],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[15683,15693],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[15695,15699]},{"pos":[15707,15726],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[15728,15762]},{"pos":[15831,15841],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[15843,15849]},{"content":"The value that specifies whether the method is static; optional.","pos":[15852,15916]},{"content":"isStatic","pos":[15928,15936]},{"content":"The value that specifies whether the method is static; optional.","pos":[15939,16003]},{"pos":[16010,16017],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[16019,16076]},{"pos":[16082,16096],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[16142,16152],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[16154,16162]},{"pos":[16170,16194],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[16258,16268],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[16270,16274]},{"pos":[16282,16306],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[16383,16393],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[16395,16399]},{"content":"oldName","pos":[16413,16420]},{"pos":[16428,16442],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[16488,16498],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[16500,16508]},{"pos":[16515,16538],"content":"Class VSProjectLinkNode","linkify":"Class VSProjectLinkNode","nodes":[{"content":"Class VSProjectLinkNode","pos":[0,23]}]},{"content":"The VSProjectLinkNode class represents links to other Finance and Operations Application Object Tree (AOT) nodes in the Microsoft Visual Studio project nodes in the AOT.","pos":[16587,16756]},{"pos":[16762,16769],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16775,16783],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[16789,16796],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[16800,16806]},{"content":"Description","pos":[16869,16880]},{"content":"public str AOTgetSource()","pos":[17022,17047]},{"content":"Returns the source code of this node.","pos":[17091,17128]},{"content":"public str getAOTPath()","pos":[17133,17156]},{"content":"public BinData getFileData()","pos":[17244,17272]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[17355,17408]},{"content":"public void setFile(str fileName)","pos":[17466,17499]},{"content":"public void setFileData(BinData data)","pos":[17577,17614]},{"content":"public void getFile(str fileName)","pos":[17688,17721]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[17799,17852]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[17910,17968],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[17979,18013]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[18021,18087]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[18132,18198]},{"pos":[18246,18265],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[18267,18304]},{"pos":[18342,18354],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[18356,18487]},{"pos":[18494,18501],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[18503,18562]},{"pos":[18568,18585],"content":"Method getAOTPath","linkify":"Method getAOTPath","nodes":[{"content":"Method getAOTPath","pos":[0,17]}]},{"pos":[18621,18633],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18639,18657],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[18698,18710],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18716,18740],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[18804,18814],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[18816,18820]},{"pos":[18828,18842],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[18888,18898],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[18900,18908]},{"pos":[18916,18934],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[18984,18994],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[18996,19000]},{"pos":[19008,19022],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[19068,19078],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[19080,19088]},{"pos":[19096,19120],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[19184,19194],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19196,19200]},{"pos":[19208,19227],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[19229,19263]},{"pos":[19332,19342],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[19344,19350]},{"content":"The value that specifies whether the method is static; optional.","pos":[19353,19417]},{"content":"isStatic","pos":[19429,19437]},{"content":"The value that specifies whether the method is static; optional.","pos":[19440,19504]},{"pos":[19511,19518],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[19520,19577]},{"pos":[19583,19607],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[19684,19694],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19696,19700]},{"content":"oldName","pos":[19714,19721]},{"pos":[19729,19753],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[19830,19840],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19842,19846]},{"content":"aotPath","pos":[19860,19867]},{"pos":[19874,19893],"content":"Class VSProjectNode","linkify":"Class VSProjectNode","nodes":[{"content":"Class VSProjectNode","pos":[0,19]}]},{"content":"The VSProjectNode class represents projects in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[19941,20090]},{"pos":[20096,20103],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20109,20117],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[20123,20130],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[20134,20140]},{"content":"Description","pos":[20206,20217]},{"content":"public container extract(<ph id=\"ph1\">\\[</ph>str path<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean extractReferenced<ph id=\"ph4\">\\]</ph>)","pos":[20482,20551],"source":"public container extract(\\[str path\\], \\[boolean extractReferenced\\])"},{"content":"Extracts the whole project to disk.","pos":[20554,20589]},{"content":"public VSProjectFolderNode getContentNode()","pos":[20656,20699]},{"content":"Gets the content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[20728,20818]},{"content":"public DeployTo getDeployTo()","pos":[20830,20859]},{"content":"Gets value of the deployTo property.","pos":[20902,20938]},{"content":"public VSProjectFolderNode getOutputNode()","pos":[21004,21046]},{"content":"Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[21076,21172]},{"content":"public VSProjectFileNode getPrimaryOutputNode()","pos":[21178,21225]},{"content":"Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[21250,21347]},{"content":"public str getPrimaryTargetFileName()","pos":[21352,21389]},{"content":"Gets the primary target file name of the Visual Studio project.","pos":[21424,21487]},{"content":"public Map getProxies()","pos":[21526,21549]},{"content":"Gets the proxies in this project.","pos":[21598,21631]},{"content":"public container getProxiesContainer()","pos":[21700,21738]},{"content":"Gets the proxies in this project.","pos":[21772,21805]},{"content":"public str getReferencedProjectsInAOT()","pos":[21874,21913]},{"content":"Gets the AOT paths of the projects that are referenced by this Visual Studio project.","pos":[21946,22031]},{"content":"public str referencedProjects(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[22048,22092],"source":"public str referencedProjects(\\[str value\\])"},{"content":"public void setPrimaryTargetFileName(str targetFileName)","pos":[22222,22278]},{"content":"Sets the primary target file name of the Visual Studio project.","pos":[22294,22357]},{"content":"public void extractToSpecificDir(str directory)","pos":[22396,22443]},{"content":"public void setDeployTo(DeployTo deployTo)","pos":[22570,22612]},{"content":"Sets the value of the deployTo property.","pos":[22642,22682]},{"pos":[22747,22761],"content":"Method extract","linkify":"Method extract","nodes":[{"content":"Method extract","pos":[0,14]}]},{"content":"Extracts the whole project to disk.","pos":[22763,22798]},{"pos":[22876,22886],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"path","pos":[22888,22892]},{"content":"A Boolean value that determines whether to extract the referenced projects.","pos":[22895,22970]},{"content":"extractReferenced","pos":[22982,22999]},{"content":"A Boolean value that determines whether to extract the referenced projects.","pos":[23002,23077]},{"pos":[23084,23096],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of paths where the project was extracted.","pos":[23098,23146]},{"pos":[23152,23173],"content":"Method getContentNode","linkify":"Method getContentNode","nodes":[{"content":"Method getContentNode","pos":[0,21]}]},{"content":"Gets the content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[23175,23265]},{"pos":[23321,23333],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[23335,23420]},{"pos":[23426,23444],"content":"Method getDeployTo","linkify":"Method getDeployTo","nodes":[{"content":"Method getDeployTo","pos":[0,18]}]},{"content":"Gets value of the deployTo property.","pos":[23446,23482]},{"pos":[23524,23536],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The deployTo property value.","pos":[23538,23566]},{"pos":[23572,23592],"content":"Method getOutputNode","linkify":"Method getOutputNode","nodes":[{"content":"Method getOutputNode","pos":[0,20]}]},{"content":"Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[23594,23690]},{"pos":[23745,23757],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[23759,23850]},{"pos":[23856,23883],"content":"Method getPrimaryOutputNode","linkify":"Method getPrimaryOutputNode","nodes":[{"content":"Method getPrimaryOutputNode","pos":[0,27]}]},{"content":"Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[23885,23982]},{"pos":[24042,24054],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[24056,24146]},{"pos":[24152,24183],"content":"Method getPrimaryTargetFileName","linkify":"Method getPrimaryTargetFileName","nodes":[{"content":"Method getPrimaryTargetFileName","pos":[0,31]}]},{"content":"Gets the primary target file name of the Visual Studio project.","pos":[24185,24248]},{"pos":[24298,24310],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The primary target file name of the Visual Studio project.","pos":[24312,24370]},{"pos":[24376,24393],"content":"Method getProxies","linkify":"Method getProxies","nodes":[{"content":"Method getProxies","pos":[0,17]}]},{"content":"Gets the proxies in this project.","pos":[24395,24428]},{"pos":[24464,24476],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A map that contains the Class, Enum, and Table keys.","pos":[24478,24530]},{"content":"Each key contains a list of proxies.","pos":[24531,24567]},{"pos":[24573,24599],"content":"Method getProxiesContainer","linkify":"Method getProxiesContainer","nodes":[{"content":"Method getProxiesContainer","pos":[0,26]}]},{"content":"Gets the proxies in this project.","pos":[24601,24634]},{"pos":[24685,24697],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that holds the packed representation of a map that contains the Class, Enum, and Table keys.","pos":[24699,24803]},{"content":"Each key contains a list of proxies.","pos":[24804,24840]},{"pos":[24846,24879],"content":"Method getReferencedProjectsInAOT","linkify":"Method getReferencedProjectsInAOT","nodes":[{"content":"Method getReferencedProjectsInAOT","pos":[0,33]}]},{"content":"Gets the AOT paths of the projects that are referenced by this Visual Studio project.","pos":[24881,24966]},{"pos":[25018,25030],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of AOT paths of the projects that are referenced by this Visual Studio project.","pos":[25032,25118]},{"pos":[25124,25149],"content":"Method referencedProjects","linkify":"Method referencedProjects","nodes":[{"content":"Method referencedProjects","pos":[0,25]}]},{"pos":[25204,25214],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[25216,25221]},{"pos":[25230,25242],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25248,25279],"content":"Method setPrimaryTargetFileName","linkify":"Method setPrimaryTargetFileName","nodes":[{"content":"Method setPrimaryTargetFileName","pos":[0,31]}]},{"content":"Sets the primary target file name of the Visual Studio project.","pos":[25281,25344]},{"pos":[25413,25423],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"targetFileName","pos":[25425,25439]},{"content":"The primary target file name of the Visual Studio project.","pos":[25442,25500]},{"pos":[25506,25533],"content":"Method extractToSpecificDir","linkify":"Method extractToSpecificDir","nodes":[{"content":"Method extractToSpecificDir","pos":[0,27]}]},{"pos":[25593,25603],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"directory","pos":[25605,25614]},{"pos":[25622,25640],"content":"Method setDeployTo","linkify":"Method setDeployTo","nodes":[{"content":"Method setDeployTo","pos":[0,18]}]},{"content":"Sets the value of the deployTo property.","pos":[25642,25682]},{"pos":[25737,25747],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"deployTo","pos":[25749,25757]},{"content":"The deployTo property value.","pos":[25760,25788]},{"pos":[25793,25813],"content":"Class VSProjectsNode","linkify":"Class VSProjectsNode","nodes":[{"content":"Class VSProjectsNode","pos":[0,20]}]},{"content":"The VSProjectNode class is the root of the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[25862,26003]},{"pos":[26009,26016],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26022,26030],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[26036,26043],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[26047,26053]},{"content":"Description","pos":[26147,26158]},{"content":"public TreeNode AOTfindChild(str name, <ph id=\"ph1\">\\[</ph>int nodeType<ph id=\"ph2\">\\]</ph>)","pos":[26437,26493],"source":"public TreeNode AOTfindChild(str name, \\[int nodeType\\])"},{"content":"Finds the specified child node of this node.","pos":[26537,26581]},{"content":"public VSProjectNode createProjectNode(str name, str projectTypesString, <ph id=\"ph1\">\\[</ph>boolean virtualNode<ph id=\"ph2\">\\]</ph>)","pos":[26632,26729],"source":"public VSProjectNode createProjectNode(str name, str projectTypesString, \\[boolean virtualNode\\])"},{"content":"Creates a new instance of the VSProjectNode class.","pos":[26732,26782]},{"content":"public container getProjectsDeployingTo(DeployTo deployTo)","pos":[26827,26885]},{"content":"Gets a list of VSProjectNode objects that have the specified deployTo property.","pos":[26927,27006]},{"content":"public container getProjectsModifiedAfter(DateTime timestamp)","pos":[27022,27083]},{"content":"Gets a list of VSProjectNode objects that were modified after the specified date and time.","pos":[27122,27212]},{"content":"public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)","pos":[27217,27285]},{"content":"public Object getVSProjectNodeObservable()","pos":[27412,27454]},{"content":"Gets the VSProjectNodeObservable object.","pos":[27512,27552]},{"content":"public void AOTrefresh()","pos":[27607,27631]},{"content":"Updates the node with the latest changes to the .aod file.","pos":[27707,27765]},{"pos":[27805,27824],"content":"Method AOTfindChild","linkify":"Method AOTfindChild","nodes":[{"content":"Method AOTfindChild","pos":[0,19]}]},{"content":"Finds the specified child node of this node.","pos":[27826,27870]},{"pos":[27937,27947],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[27949,27953]},{"content":"nodeType","pos":[27967,27975]},{"pos":[27984,27996],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The specified tree node.","pos":[27998,28022]},{"pos":[28028,28052],"content":"Method createProjectNode","linkify":"Method createProjectNode","nodes":[{"content":"Method createProjectNode","pos":[0,24]}]},{"content":"Creates a new instance of the VSProjectNode class.","pos":[28054,28104]},{"pos":[28212,28222],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[28224,28228]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28231,28305]},{"content":"In this case, the node will not be persisted in the Finance and Operations Store.","pos":[28306,28387]},{"content":"projectTypesString","pos":[28399,28417]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28420,28494]},{"content":"In this case, the node will not be persisted in the Finance and Operations Store.","pos":[28495,28576]},{"content":"virtualNode","pos":[28588,28599]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28602,28676]},{"content":"In this case, the node will not be persisted in the Finance and Operations Store.","pos":[28677,28758]},{"pos":[28765,28777],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The VSProjectNode object that is created.","pos":[28779,28820]},{"pos":[28826,28855],"content":"Method getProjectsDeployingTo","linkify":"Method getProjectsDeployingTo","nodes":[{"content":"Method getProjectsDeployingTo","pos":[0,29]}]},{"content":"Gets a list of VSProjectNode objects that have the specified deployTo property.","pos":[28857,28936]},{"pos":[29007,29017],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"deployTo","pos":[29019,29027]},{"content":"The value of the deployTo property.","pos":[29030,29065]},{"pos":[29072,29084],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of VSProjectNode objects.","pos":[29086,29118]},{"pos":[29124,29155],"content":"Method getProjectsModifiedAfter","linkify":"Method getProjectsModifiedAfter","nodes":[{"content":"Method getProjectsModifiedAfter","pos":[0,31]}]},{"content":"Gets a list of VSProjectNode objects that were modified after the specified date and time.","pos":[29157,29247]},{"pos":[29321,29331],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"timestamp","pos":[29333,29342]},{"content":"The date and time as a DB<ph id=\"ph1\">\\_</ph>DATETIME<ph id=\"ph2\">\\_</ph>TYPE value.","pos":[29345,29393],"source":"The date and time as a DB\\_DATETIME\\_TYPE value."},{"pos":[29400,29412],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of VSProjectNode objects.","pos":[29414,29446]},{"pos":[29452,29478],"content":"Method getTypeNodeFromGuid","linkify":"Method getTypeNodeFromGuid","nodes":[{"content":"Method getTypeNodeFromGuid","pos":[0,26]}]},{"pos":[29559,29569],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"projectTypesString","pos":[29571,29589]},{"pos":[29598,29610],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29616,29649],"content":"Method getVSProjectNodeObservable","linkify":"Method getVSProjectNodeObservable","nodes":[{"content":"Method getVSProjectNodeObservable","pos":[0,33]}]},{"content":"Gets the VSProjectNodeObservable object.","pos":[29651,29691]},{"pos":[29746,29758],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The VSProjectNodeObservable object.","pos":[29760,29795]},{"pos":[29802,29809],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Observers can register with this and get notified of CRUD operations on Visual Studio projects.","pos":[29811,29906]},{"pos":[29912,29929],"content":"Method AOTrefresh","linkify":"Method AOTrefresh","nodes":[{"content":"Method AOTrefresh","pos":[0,17]}]},{"content":"Updates the node with the latest changes to the .aod file.","pos":[29931,29989]},{"pos":[30024,30047],"content":"Class VSProjectTypeNode","linkify":"Class VSProjectTypeNode","nodes":[{"content":"Class VSProjectTypeNode","pos":[0,23]}]},{"content":"The VSProjectTypeNode class represents project types in the Visual Studio Project nodes in the AOT.","pos":[30094,30193]},{"pos":[30199,30206],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30212,30220],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[30226,30233],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[30237,30243]},{"content":"Description","pos":[30246,30257]},{"pos":[30289,30298],"content":"Class VSS","linkify":"Class VSS","nodes":[{"content":"Class VSS","pos":[0,9]}]},{"pos":[30333,30340],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30346,30354],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[30360,30367],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[30371,30377]},{"content":"Description","pos":[30483,30494]},{"content":"public boolean connect()","pos":[30687,30711]},{"content":"public boolean connected()","pos":[30845,30871]},{"content":"public boolean disconnect()","pos":[31003,31030]},{"content":"public container getCheckedoutFiles()","pos":[31161,31198]},{"content":"public container getConnectionInfo()","pos":[31319,31355]},{"content":"public VSSItem getVSSItem(str vssItemPath, str localFilePath, <ph id=\"ph1\">\\[</ph>boolean completePath<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int version<ph id=\"ph4\">\\]</ph>)","pos":[31477,31581],"source":"public VSSItem getVSSItem(str vssItemPath, str localFilePath, \\[boolean completePath\\], \\[int version\\])"},{"content":"public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)","pos":[31635,31729]},{"content":"public VSSItem newSubProject(str name, str localPath)","pos":[31793,31846]},{"content":"public Map synchronizeProjects(<ph id=\"ph1\">\\[</ph>Set projects<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean force<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>boolean delLocalFiles<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str label<ph id=\"ph8\">\\]</ph>)","pos":[31951,32060],"source":"public Map synchronizeProjects(\\[Set projects\\], \\[boolean force\\], \\[boolean delLocalFiles\\], \\[str label\\])"},{"content":"public void new()","pos":[32109,32126]},{"content":"Initializes an instance of the VSS class.","pos":[32221,32262]},{"pos":[32270,32284],"content":"Method connect","linkify":"Method connect","nodes":[{"content":"Method connect","pos":[0,14]}]},{"pos":[32321,32333],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32339,32355],"content":"Method connected","linkify":"Method connected","nodes":[{"content":"Method connected","pos":[0,16]}]},{"pos":[32394,32406],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32412,32429],"content":"Method disconnect","linkify":"Method disconnect","nodes":[{"content":"Method disconnect","pos":[0,17]}]},{"pos":[32469,32481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32487,32512],"content":"Method getCheckedoutFiles","linkify":"Method getCheckedoutFiles","nodes":[{"content":"Method getCheckedoutFiles","pos":[0,25]}]},{"pos":[32562,32574],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32580,32604],"content":"Method getConnectionInfo","linkify":"Method getConnectionInfo","nodes":[{"content":"Method getConnectionInfo","pos":[0,24]}]},{"pos":[32653,32665],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32671,32688],"content":"Method getVSSItem","linkify":"Method getVSSItem","nodes":[{"content":"Method getVSSItem","pos":[0,17]}]},{"pos":[32801,32811],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"vssItemPath","pos":[32813,32824]},{"content":"localFilePath","pos":[32838,32851]},{"content":"completePath","pos":[32865,32877]},{"content":"version","pos":[32891,32898]},{"pos":[32907,32919],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32925,32936],"content":"Method init","linkify":"Method init","nodes":[{"content":"Method init","pos":[0,11]}]},{"pos":[33043,33053],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"vssIni","pos":[33055,33061]},{"content":"vssPrjRoot","pos":[33075,33085]},{"content":"vssWorkingFolder","pos":[33099,33115]},{"content":"vssUser","pos":[33129,33136]},{"content":"vssPwd","pos":[33150,33156]},{"pos":[33165,33177],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33183,33203],"content":"Method newSubProject","linkify":"Method newSubProject","nodes":[{"content":"Method newSubProject","pos":[0,20]}]},{"pos":[33269,33279],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[33281,33285]},{"content":"localPath","pos":[33299,33308]},{"pos":[33317,33329],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33335,33361],"content":"Method synchronizeProjects","linkify":"Method synchronizeProjects","nodes":[{"content":"Method synchronizeProjects","pos":[0,26]}]},{"pos":[33475,33485],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"projects","pos":[33487,33495]},{"content":"force","pos":[33509,33514]},{"content":"delLocalFiles","pos":[33528,33541]},{"content":"label","pos":[33555,33560]},{"pos":[33569,33581],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33587,33597],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes an instance of the VSS class.","pos":[33599,33640]},{"pos":[33668,33681],"content":"Class VSSItem","linkify":"Class VSSItem","nodes":[{"content":"Class VSSItem","pos":[0,13]}]},{"pos":[33720,33727],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33733,33741],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[33747,33754],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[33758,33764]},{"content":"Description","pos":[33845,33856]},{"content":"public boolean add(<ph id=\"ph1\">\\[</ph>boolean keepCheckedout<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>str comment<ph id=\"ph4\">\\]</ph>)","pos":[34038,34101],"source":"public boolean add(\\[boolean keepCheckedout\\], \\[str comment\\])"},{"content":"public boolean checkin(<ph id=\"ph1\">\\[</ph>str comment<ph id=\"ph2\">\\]</ph>)","pos":[34178,34217],"source":"public boolean checkin(\\[str comment\\])"},{"content":"public boolean checkout(<ph id=\"ph1\">\\[</ph>boolean allowMultipleCheckout<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean replaceLocal<ph id=\"ph4\">\\]</ph>)","pos":[34318,34402],"source":"public boolean checkout(\\[boolean allowMultipleCheckout\\], \\[boolean replaceLocal\\])"},{"content":"public boolean delete()","pos":[34458,34481]},{"content":"public boolean destroy()","pos":[34598,34622]},{"content":"public Map get(<ph id=\"ph1\">\\[</ph>boolean force<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int version<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>str label<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str localFile<ph id=\"ph8\">\\]</ph>)","pos":[34738,34822],"source":"public Map get(\\[boolean force\\], \\[int version\\], \\[str label\\], \\[str localFile\\])"},{"content":"public str getActionText()","pos":[34878,34904]},{"content":"public container getCheckedOutTo()","pos":[35018,35052]},{"content":"public int getCheckoutVersion()","pos":[35158,35189]},{"content":"public container getHistory()","pos":[35298,35327]},{"content":"public ComInterface getIUnknown()","pos":[35438,35471]},{"content":"public int getVersionNo()","pos":[35578,35603]},{"content":"public str getVSSPath()","pos":[35718,35741]},{"content":"public boolean isCheckedOut()","pos":[35858,35887]},{"content":"public boolean isRenamed()","pos":[35998,36024]},{"content":"public str name(str newName)","pos":[36138,36166]},{"content":"public boolean rename(str newName)","pos":[36278,36312]},{"content":"public boolean undoCheckout()","pos":[36418,36447]},{"content":"private void new()","pos":[36558,36576]},{"content":"Initializes a new instance of the VSSItem class.","pos":[36645,36693]},{"pos":[36701,36711],"content":"Method add","linkify":"Method add","nodes":[{"content":"Method add","pos":[0,10]}]},{"pos":[36783,36793],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"keepCheckedout","pos":[36795,36809]},{"content":"comment","pos":[36823,36830]},{"pos":[36839,36851],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36857,36871],"content":"Method checkin","linkify":"Method checkin","nodes":[{"content":"Method checkin","pos":[0,14]}]},{"pos":[36921,36931],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"comment","pos":[36933,36940]},{"pos":[36949,36961],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36967,36982],"content":"Method checkout","linkify":"Method checkout","nodes":[{"content":"Method checkout","pos":[0,15]}]},{"pos":[37075,37085],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"allowMultipleCheckout","pos":[37087,37108]},{"content":"replaceLocal","pos":[37122,37134]},{"pos":[37143,37155],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37161,37174],"content":"Method delete","linkify":"Method delete","nodes":[{"content":"Method delete","pos":[0,13]}]},{"pos":[37210,37222],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37228,37242],"content":"Method destroy","linkify":"Method destroy","nodes":[{"content":"Method destroy","pos":[0,14]}]},{"pos":[37279,37291],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37297,37307],"content":"Method get","linkify":"Method get","nodes":[{"content":"Method get","pos":[0,10]}]},{"pos":[37396,37406],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"force","pos":[37408,37413]},{"content":"version","pos":[37427,37434]},{"content":"label","pos":[37448,37453]},{"content":"localFile","pos":[37467,37476]},{"pos":[37485,37497],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37503,37523],"content":"Method getActionText","linkify":"Method getActionText","nodes":[{"content":"Method getActionText","pos":[0,20]}]},{"pos":[37562,37574],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37580,37602],"content":"Method getCheckedOutTo","linkify":"Method getCheckedOutTo","nodes":[{"content":"Method getCheckedOutTo","pos":[0,22]}]},{"pos":[37649,37661],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37667,37692],"content":"Method getCheckoutVersion","linkify":"Method getCheckoutVersion","nodes":[{"content":"Method getCheckoutVersion","pos":[0,25]}]},{"pos":[37736,37748],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37754,37771],"content":"Method getHistory","linkify":"Method getHistory","nodes":[{"content":"Method getHistory","pos":[0,17]}]},{"pos":[37813,37825],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37831,37849],"content":"Method getIUnknown","linkify":"Method getIUnknown","nodes":[{"content":"Method getIUnknown","pos":[0,18]}]},{"pos":[37895,37907],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37913,37932],"content":"Method getVersionNo","linkify":"Method getVersionNo","nodes":[{"content":"Method getVersionNo","pos":[0,19]}]},{"pos":[37970,37982],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37988,38005],"content":"Method getVSSPath","linkify":"Method getVSSPath","nodes":[{"content":"Method getVSSPath","pos":[0,17]}]},{"pos":[38041,38053],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38059,38078],"content":"Method isCheckedOut","linkify":"Method isCheckedOut","nodes":[{"content":"Method isCheckedOut","pos":[0,19]}]},{"pos":[38120,38132],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38138,38154],"content":"Method isRenamed","linkify":"Method isRenamed","nodes":[{"content":"Method isRenamed","pos":[0,16]}]},{"pos":[38193,38205],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38211,38222],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"pos":[38263,38273],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newName","pos":[38275,38282]},{"pos":[38291,38303],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38309,38322],"content":"Method rename","linkify":"Method rename","nodes":[{"content":"Method rename","pos":[0,13]}]},{"pos":[38369,38379],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newName","pos":[38381,38388]},{"pos":[38397,38409],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38415,38434],"content":"Method undoCheckout","linkify":"Method undoCheckout","nodes":[{"content":"Method undoCheckout","pos":[0,19]}]},{"pos":[38476,38488],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38494,38504],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the VSSItem class.","pos":[38506,38554]}]}