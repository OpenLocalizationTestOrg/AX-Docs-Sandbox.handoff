{"content":"---\n# required metadata\n\ntitle: X++ business run-time functions\ndescription: This topic describes the business run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 04/04/2017\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 31281\nms.assetid: 7107cd00-ecb0-46d2-91d6-c342e4314345\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# X++ business run-time functions\n\n[!include[banner](../includes/banner.md)]\n\n\nThis topic describes the business run-time functions.\n\nThese functions enter financial data and calculate formulas.\n\n## cTerm\nCalculates the number of periods that are required for the current investment value to yield a target value.\n\n### Syntax\n\n    real cTerm(real interest, real future_value, real current_value)\n\n### Parameters\n\n| Parameter      | Description                   |\n|----------------|-------------------------------|\n| interest       | The interest rate.            |\n| future\\_value  | The target value.             |\n| current\\_value | The current investment value. |\n\n### Return value\n\nThe number of periods that are required in order to reach *future\\_value*.\n\n### Remarks\n\nThe *current\\_value* and *future\\_value* parameters must have the same prefixed sign (plus or minus).\n\n### Example\n\n    static void cTermExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cTerm(10.0, 500.00, 100.00);\n        print \"The cTerm is \" + num2Str(r, 2, 2, 1, 1);\n        pause;\n    }\n\nddb\n---\n\nCalculates the accelerated depreciation of an asset.\n\n### Syntax\n\n    real ddb(real price, real scrap, real life, int period)\n\n### Parameters\n\n| Parameter | Description                                                |\n|-----------|------------------------------------------------------------|\n| price     | The purchase price of the asset.                           |\n| scrap     | The residual value of the asset that has been written off. |\n| life      | The expected lifetime of the asset.                        |\n| period    | The period to calculate depreciation over.                 |\n\n### Return value\n\nThe depreciation of the asset.\n\n### Remarks\n\nThe book value for a specific period is equal to the purchase price minus the accumulated depreciation for previous periods:\n\n-   Book value for Period 1 = Price\n-   Book value for Period 2 = Book value for Period 1 – Depreciation for Period 1\n-   Book value for Period n = Book value for Period (n–1) – Depreciation for Period (n–1)\n\nThere are three variations for the calculation of depreciation: If Period &gt; Life:\n\n-   Depreciation = 0\n\nIf (Book value for Period n) – ((Book value for Period n) × 2 ÷ Life) &lt; Residual value:\n\n-   Depreciation = (Book value for Period n) – Residual value\n\nIn all other cases: Depreciation = (Book value for Period n) × 2 ÷ Life The **syd** and **sln** functions also calculate the depreciation of an asset. The **syd** and **ddb** functions enables higher depreciation for the earlier years, whereas **sln** calculates a linear depreciation.\n\n    ddb(12000,2000,10,1); //Returns the value 2400.\n    ddb(12000,2000,10,3); //Returns the value 1536.\n\ndg\n--\n\nCalculates the contribution ratio, which is based on the sales price and the purchase price. If the value of the *sale* parameter is **0.0**, the calculation can't be done.\n\n### Syntax\n\n    real dg(real sale, real purchase)\n\n### Parameters\n\n| Parameter | Description         |\n|-----------|---------------------|\n| sale      | The sale price.     |\n| purchase  | The purchase price. |\n\n### Return value\n\nThe contribution ratio.\n\n### Remarks\n\n    dg(1000,300); //Returns the value 0.7.\n    dg(100,30); //Returns the value 0.7.\n    dg(20000, 11000); //Returns the value 0.45.\n\nfV\n--\n\nCalculates the future value of an investment.\n\n### Syntax\n\n    real fV(real amount, real interest, real life)\n\n### Parameters\n\n| Parameter | Description                                     |\n|-----------|-------------------------------------------------|\n| amount    | The amount that was paid in during each period. |\n| interest  | The interest rate.                              |\n| life      | The number of investment periods.               |\n\n### Return value\n\nThe future value of the investment.\n\n### Remarks\n\n    fV(100,0.14,10); //Returns the value 1933.73.\n    fV(400,0.10,5); //Returns the value 2442.04.\n\nidg\n---\n\nCalculates the sale price, based on the purchase price and the contribution ratio.\n\n    real idg(real purchase, real contribution_ratio)\n\n### Parameters\n\n| Parameter           | Description             |\n|---------------------|-------------------------|\n| purchase            | The purchase price.     |\n| contribution\\_ratio | The contribution ratio. |\n\n### Return value\n\nThe sale price.\n\n### Remarks\n\nIf the contribution ratio is equal to **1.0**, the calculation can't be done. The **idg** function is the inverse of the **dg** function.\n\n    idg(300,0.7); //Returns the value 1000.\n    idg(11000,0.45); //Returns the value 20000.\n\n## intvMax\nRetrieves the number of intervals for the specified period when the period is divided into parts as specified by the *func* parameter.\n\n    int intvMax(date input_date, date ref_date, int func)\n\n### Parameters\n\n| Parameter   | Description                                                                |\n|-------------|----------------------------------------------------------------------------|\n| input\\_date | The end of the period, which must be later than the *ref\\_date* parameter. |\n| ref\\_date   | The start of the period.                                                   |\n| func        | A **IntvScale** system enumeration value that indicates the division unit. |\n\n### Remarks\n\nHere are the possible values for the *func* parameter:\n\n-   None\n-   YearMonthDay\n-   YearMonth\n-   Year\n-   MonthDay\n-   Month\n-   Day\n-   YearQuarter\n-   Quarter\n-   YearWeek\n-   Week\n-   WeekDay\n\n### Example\n\n    static void intvMaxExample()\n    {\n        date refDate = str2Date(\"4/9/2007\", 213);\n        date inputDate = str2Date(\"10/5/2007\", 213);\n        int numberOfIntervals;\n        ;\n        numberOfIntervals = intvMax(inputDate, refDate, intvScale::YearMonth);\n        print numberOfIntervals;\n        pause;\n    }\n\n## intvName\nReturns the name of the interval that is the specified number of intervals ahead of the specified date.\n\n    str intvName(date input_date, int col, enum func)\n\n### Parameters\n\n| Parameter   | Description                                                                                 |\n|-------------|---------------------------------------------------------------------------------------------|\n| input\\_date | A date in the first interval.                                                               |\n| col         | The number of intervals ahead of the date that is specified by the *input\\_date* parameter. |\n| func        | An **intvScale** enumeration value.                                                         |\n\n### Return value\n\nThe name of the interval.\n\n### Remarks\n\nFor example, if the *func* parameter is the **IntvScale::WeekDay** enumeration value, this method returns the name of the weekday. If the *func* parameter is the **IntvScale::Week** enumeration value, this method returns a string that contains the number of the week.\n\n### Example\n\n    static void intvNameExample(Args _args)\n    {\n        date refDate = 2672010;\n        str name;\n        ;\n        name = intvName(refDate, 3,  intvScale::WeekDay);\n        Global::info(strfmt(\"%1 is the output, which indicates the day of the week 3 days after 26\\7\\2010.\", name));\n    }\n    /**** Infolog display.\n    Message (09:56:55 am)\n    Thu is the output, which indicates the day of the week 3 days after 2672010.\n    ****/\n\n## intvNo\nCalculates the number of intervals between two dates when you divide the time into the specified intervals.\n\n### Syntax\n\n    int intvNo(date input_date, date ref_date, int func)\n\n### Parameters\n\n| Parameter   | Description                                    |\n|-------------|------------------------------------------------|\n| input\\_date | A date that indicates the end of the period    |\n| ref\\_date   | A date that indicates the start of the period. |\n| func        | An **intvScale** enumeration value.            |\n\n### Return value\n\nThe number of intervals between the dates that are specified by the *ref\\_date* and *input\\_date* parameters.\n\n### Example\n\n    static void intvNoExample(Args _args)\n    {\n        date inputDate = str2Date(\"1/1/2007\", 213);\n        date refDate = str2Date(\"3/1/2007\", 213);\n        int noOfIntervals;\n        ;\n        noOfIntervals = intvNo(refDate, inputDate, intvScale::Month);\n        print noOfIntervals;\n        pause;\n        //noOfIntervals now holds the difference in months between March and January (2).\n    }\n\n## intvNorm\nReturns the normalized date for the period.\n\n### Syntax\n\n    date intvNorm(date input_date, date ref_date, int func)\n\n### Parameters\n\n| Parameter   | Description                                                                                              |\n|-------------|----------------------------------------------------------------------------------------------------------|\n| input\\_date | The end of the period, which must be later than the date that is specified by the *ref\\_date* parameter. |\n| ref\\_date   | The start of the period.                                                                                 |\n| func        | An **intvScale** enumeration value that indicates the interval division unit.                            |\n\n### Return value\n\nThe normalized date for the period.\n\n### Remarks\n\nThe returned date will equal the date of the first day in the interval in which the date that is specified by the *ref\\_date* parameter exists.\n\n### Example\n\n    static void example()\n    {\n        print intvNorm(today(), today()-1, IntVScale::WeekDay);\n        pause;\n    }\n\npmt\n---\n\nCalculates the amount that must be paid every period to repay a loan.\n\n### Syntax\n\n    real pmt(real principal, real interest, real life)\n\n### Parameters\n\n| Parameter | Description                                                               |\n|-----------|---------------------------------------------------------------------------|\n| principal | The amount that was originally borrowed.                                  |\n| interest  | The interest that is applied each period to the amount that was borrowed. |\n| life      | The number of periods that the loan is repaid over.                       |\n\n### Return value\n\nThe amount that must be paid every period.\n\n### Remarks\n\nThe *life* and *interest* parameters must be expressed in the same time units. The value of the *life* parameter must be more than **0.0**.\n\n### Example\n\n    pmt(4000,0.14,4); //Returns the value 1372.82.\n    pmt(10000,0.10,20); //Returns the value 1174.60.\n\npt\n--\n\nRetrieves the sum of a number plus a specified percentage of that number.\n\n### Syntax\n\n    real pt(real amount, real percentage)\n\n### Parameters\n\n| Parameter  | Description                |\n|------------|----------------------------|\n| amount     | The original number.       |\n| percentage | The percentage supplement. |\n\n### Return value\n\nThe number that is equal to ((*amount *× *percentage*) + *amount*).\n\n### Remarks\n\n    pt(2000.0,0.10); //Returns the value 2200.0.\n    pt(20.0,0.10); //Returns the value 22.0.\n\npv\n--\n\nCalculates the present value of an annuity, where an amount is received over multiple periods and the interest rate is deducted for each period.\n\n### Syntax\n\n    real pv(real amount, real interest, real life)\n\n### Parameters\n\n| Parameter | Description                                                                             |\n|-----------|-----------------------------------------------------------------------------------------|\n| amount    | The amount that is paid during each period.                                             |\n| interest  | The interest rate.                                                                      |\n| life      | The number of times that the value that is specified by the *amount* parameter is paid. |\n\n### Return value\n\nThe current value of an annuity.\n\n### Remarks\n\n    pv(300,0.14,4); //Returns the value 874.11.\n\n## rate\nCalculates the interest that is required for the current investment value to attain the future value over the specified number of periods.\n\n### Syntax\n\n    real rate(real _future_value, real _current_value, real _terms)\n\n### Parameters\n\n| Parameter        | Description                                      |\n|------------------|--------------------------------------------------|\n| \\_future\\_value  | The future value of the investment.              |\n| \\_current\\_value | The current value of the investment.             |\n| \\_terms          | The number of periods that the investment spans. |\n\n### Return value\n\nThe calculated interest rate.\n\n### Remarks\n\n    rate(10000,1000,20); //Returns the value 0.12.\n\nsln\n---\n\nRetrieves the constant depreciation amount for the specified asset for each depreciation period.\n\n### Syntax\n\n    real sln(real price, real scrap, real life)\n\n### Parameters\n\n| Parameter | Description                                              |\n|-----------|----------------------------------------------------------|\n| price     | The purchase price of the asset.                         |\n| scrap     | The scrap value of the asset.                            |\n| life      | The number of periods in the expected life of the asset. |\n\n### Return value\n\nThe depreciation amount.\n\n### Example\n\n    static void slnExample(Args _arg)\n    {\n        real r;\n        ;\n        r = sln(100.00, 50.00, 50.00);\n        print r;\n        pause;\n    }\n\nsyd\n---\n\nCalculates the depreciation of an asset over a specified period.\n\n### Syntax\n\n    real syd(real _price, real _scrap, real _life, int _period)\n\n### Parameters\n\n| Parameter | Description                                             |\n|-----------|---------------------------------------------------------|\n| \\_price   | The purchase price of the asset.                        |\n| \\_scrap   | The scrap value of the asset.                           |\n| \\_life    | The expected life of the asset (the number of periods). |\n| \\_period  | The period to calculate depreciation for.               |\n\n### Return value\n\nThe amount of depreciation over the specified period.\n\n### Remarks\n\nIn contrast to the **sln** function, the **syd** function can allow for an accelerated depreciation of the asset. As with the **ddb** function, this enables higher depreciation during the early periods of the life of an asset.\n\n### Example\n\nIn the following examples, the periodic depreciation is calculated for an asset that has a purchase price of 10,000, a scrap value of 2,000, and a life of 5. In comparison, **sln(10000,2000,5)** would calculate 1600.00 for each period.\n\n    // Returns the value 2666.67 (for the 1st period).\n    syd(10000,2000,5,1);\n    // Returns the value 2133.33 (for the 2nd period).\n    syd(10000,2000,5,2);\n    // Returns the value 1600.00 (for the 3rd period).\n    syd(10000,2000,5,3);\n    // Returns the value 1066.67 (for the 4th period).\n    syd(10000,2000,5,4);\n    // Returns the value 533.33 (for 5th - and final- period).\n    syd(10000,2000,5,5);\n\n## term\nCalculates the number of periods that an investment must run for.\n\n### Syntax\n\n    real term(real amount, real interest, real future_value)\n\n### Parameters\n\n| Parameter     | Description                                             |\n|---------------|---------------------------------------------------------|\n| amount        | The amount of the periodic investment.                  |\n| interest      | The interest rate for each period.                      |\n| future\\_value | The future value that is anticipated for the investment |\n\n### Return value\n\nThe number of periods that the investment must run for.\n\n### Example\n\n    static void termExample(Args _args)\n    {\n        print term(400,0.08,5000);  //returns the value '9.01'.\n        print term(100,0.14,3000);  //returns the value '12.58'.\n        pause;\n    }\n\n\n\n","nodes":[{"pos":[4,622],"content":"# required metadata\n\ntitle: X++ business run-time functions\ndescription: This topic describes the business run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 04/04/2017\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 31281\nms.assetid: 7107cd00-ecb0-46d2-91d6-c342e4314345\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"X++ business run-time functions","nodes":[{"pos":[0,31],"content":"X++ business run-time functions","nodes":[{"content":"X++ business run-time functions","pos":[0,31]}]}],"path":["title"]},{"content":"This topic describes the business run-time functions.","nodes":[{"pos":[0,53],"content":"This topic describes the business run-time functions.","nodes":[{"content":"This topic describes the business run-time functions.","pos":[0,53]}]}],"path":["description"]}],"header":"# required metadata\n","yml":true},{"pos":[630,661],"content":"X++ business run-time functions","linkify":"X++ business run-time functions","nodes":[{"content":"X++ business run-time functions","pos":[0,31]}]},{"content":"This topic describes the business run-time functions.","pos":[707,760]},{"content":"These functions enter financial data and calculate formulas.","pos":[762,822]},{"pos":[827,832],"content":"cTerm","linkify":"cTerm","nodes":[{"content":"cTerm","pos":[0,5]}]},{"content":"Calculates the number of periods that are required for the current investment value to yield a target value.","pos":[833,941]},{"pos":[947,953],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1029,1039],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1043,1052]},{"content":"Description","pos":[1060,1071]},{"content":"interest","pos":[1145,1153]},{"content":"The interest rate.","pos":[1162,1180]},{"content":"future<ph id=\"ph1\">\\_</ph>value","pos":[1196,1209],"source":"future\\_value"},{"content":"The target value.","pos":[1213,1230]},{"content":"current<ph id=\"ph1\">\\_</ph>value","pos":[1247,1261],"source":"current\\_value"},{"content":"The current investment value.","pos":[1264,1293]},{"pos":[1301,1313],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1315,1389],"content":"The number of periods that are required in order to reach <bpt id=\"p1\">*</bpt>future<ph id=\"ph1\">\\_</ph>value<ept id=\"p1\">*</ept>.","source":"The number of periods that are required in order to reach *future\\_value*."},{"pos":[1395,1402],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1404,1505],"content":"The <bpt id=\"p1\">*</bpt>current<ph id=\"ph1\">\\_</ph>value<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>future<ph id=\"ph2\">\\_</ph>value<ept id=\"p2\">*</ept> parameters must have the same prefixed sign (plus or minus).","source":"The *current\\_value* and *future\\_value* parameters must have the same prefixed sign (plus or minus)."},{"pos":[1511,1518],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1711,1714],"content":"ddb","linkify":"ddb","nodes":[{"content":"ddb","pos":[0,3]}]},{"content":"Calculates the accelerated depreciation of an asset.","pos":[1720,1772]},{"pos":[1778,1784],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1851,1861],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1865,1874]},{"content":"Description","pos":[1877,1888]},{"content":"price","pos":[2015,2020]},{"content":"The purchase price of the asset.","pos":[2027,2059]},{"content":"scrap","pos":[2090,2095]},{"content":"The residual value of the asset that has been written off.","pos":[2102,2160]},{"content":"life","pos":[2165,2169]},{"content":"The expected lifetime of the asset.","pos":[2177,2212]},{"content":"period","pos":[2240,2246]},{"content":"The period to calculate depreciation over.","pos":[2252,2294]},{"pos":[2318,2330],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The depreciation of the asset.","pos":[2332,2362]},{"pos":[2368,2375],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The book value for a specific period is equal to the purchase price minus the accumulated depreciation for previous periods:","pos":[2377,2501]},{"content":"Book value for Period 1 = Price","pos":[2507,2538]},{"content":"Book value for Period 2 = Book value for Period 1 – Depreciation for Period 1","pos":[2543,2620]},{"content":"Book value for Period n = Book value for Period (n–1) – Depreciation for Period (n–1)","pos":[2625,2710]},{"content":"There are three variations for the calculation of depreciation: If Period <ph id=\"ph1\">&amp;gt;</ph> Life:","pos":[2712,2796],"source":"There are three variations for the calculation of depreciation: If Period &gt; Life:"},{"content":"Depreciation = 0","pos":[2802,2818]},{"content":"If (Book value for Period n) – ((Book value for Period n) × 2 ÷ Life) <ph id=\"ph1\">&amp;lt;</ph> Residual value:","pos":[2820,2910],"source":"If (Book value for Period n) – ((Book value for Period n) × 2 ÷ Life) &lt; Residual value:"},{"content":"Depreciation = (Book value for Period n) – Residual value","pos":[2916,2973]},{"content":"In all other cases: Depreciation = (Book value for Period n) × 2 ÷ Life The <bpt id=\"p1\">**</bpt>syd<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>sln<ept id=\"p2\">**</ept> functions also calculate the depreciation of an asset.","pos":[2975,3125],"source":"In all other cases: Depreciation = (Book value for Period n) × 2 ÷ Life The **syd** and **sln** functions also calculate the depreciation of an asset."},{"content":"The <bpt id=\"p1\">**</bpt>syd<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>ddb<ept id=\"p2\">**</ept> functions enables higher depreciation for the earlier years, whereas <bpt id=\"p3\">**</bpt>sln<ept id=\"p3\">**</ept> calculates a linear depreciation.","pos":[3126,3260],"source":" The **syd** and **ddb** functions enables higher depreciation for the earlier years, whereas **sln** calculates a linear depreciation."},{"pos":[3367,3369],"content":"dg","linkify":"dg","nodes":[{"content":"dg","pos":[0,2]}]},{"content":"Calculates the contribution ratio, which is based on the sales price and the purchase price.","pos":[3374,3466]},{"content":"If the value of the <bpt id=\"p1\">*</bpt>sale<ept id=\"p1\">*</ept> parameter is <bpt id=\"p2\">**</bpt>0.0<ept id=\"p2\">**</ept>, the calculation can't be done.","pos":[3467,3546],"source":" If the value of the *sale* parameter is **0.0**, the calculation can't be done."},{"pos":[3552,3558],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3603,3613],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3617,3626]},{"content":"Description","pos":[3629,3640]},{"content":"sale","pos":[3689,3693]},{"content":"The sale price.","pos":[3701,3716]},{"content":"purchase","pos":[3725,3733]},{"content":"The purchase price.","pos":[3737,3756]},{"pos":[3764,3776],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The contribution ratio.","pos":[3778,3801]},{"pos":[3807,3814],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3949,3951],"content":"fV","linkify":"fV","nodes":[{"content":"fV","pos":[0,2]}]},{"content":"Calculates the future value of an investment.","pos":[3956,4001]},{"pos":[4007,4013],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4071,4081],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4085,4094]},{"content":"Description","pos":[4097,4108]},{"content":"amount","pos":[4213,4219]},{"content":"The amount that was paid in during each period.","pos":[4225,4272]},{"content":"interest","pos":[4277,4285]},{"content":"The interest rate.","pos":[4289,4307]},{"content":"life","pos":[4341,4345]},{"content":"The number of investment periods.","pos":[4353,4386]},{"pos":[4408,4420],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The future value of the investment.","pos":[4422,4457]},{"pos":[4463,4470],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4572,4575],"content":"idg","linkify":"idg","nodes":[{"content":"idg","pos":[0,3]}]},{"content":"Calculates the sale price, based on the purchase price and the contribution ratio.","pos":[4581,4663]},{"pos":[4723,4733],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4737,4746]},{"content":"Description","pos":[4759,4770]},{"content":"purchase","pos":[4837,4845]},{"content":"The purchase price.","pos":[4859,4878]},{"content":"contribution<ph id=\"ph1\">\\_</ph>ratio","pos":[4887,4906],"source":"contribution\\_ratio"},{"content":"The contribution ratio.","pos":[4909,4932]},{"pos":[4940,4952],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The sale price.","pos":[4954,4969]},{"pos":[4975,4982],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the contribution ratio is equal to <bpt id=\"p1\">**</bpt>1.0<ept id=\"p1\">**</ept>, the calculation can't be done.","pos":[4984,5061],"source":"If the contribution ratio is equal to **1.0**, the calculation can't be done."},{"content":"The <bpt id=\"p1\">**</bpt>idg<ept id=\"p1\">**</ept> function is the inverse of the <bpt id=\"p2\">**</bpt>dg<ept id=\"p2\">**</ept> function.","pos":[5062,5121],"source":" The **idg** function is the inverse of the **dg** function."},{"pos":[5219,5226],"content":"intvMax","linkify":"intvMax","nodes":[{"content":"intvMax","pos":[0,7]}]},{"pos":[5227,5361],"content":"Retrieves the number of intervals for the specified period when the period is divided into parts as specified by the <bpt id=\"p1\">*</bpt>func<ept id=\"p1\">*</ept> parameter.","source":"Retrieves the number of intervals for the specified period when the period is divided into parts as specified by the *func* parameter."},{"pos":[5426,5436],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5440,5449]},{"content":"Description","pos":[5454,5465]},{"content":"input<ph id=\"ph1\">\\_</ph>date","pos":[5626,5637],"source":"input\\_date"},{"pos":[5640,5714],"content":"The end of the period, which must be later than the <bpt id=\"p1\">*</bpt>ref<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter.","source":"The end of the period, which must be later than the *ref\\_date* parameter."},{"content":"ref<ph id=\"ph1\">\\_</ph>date","pos":[5719,5728],"source":"ref\\_date"},{"content":"The start of the period.","pos":[5733,5757]},{"content":"func","pos":[5812,5816]},{"pos":[5826,5900],"content":"A <bpt id=\"p1\">**</bpt>IntvScale<ept id=\"p1\">**</ept> system enumeration value that indicates the division unit.","source":"A **IntvScale** system enumeration value that indicates the division unit."},{"pos":[5908,5915],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5917,5971],"content":"Here are the possible values for the <bpt id=\"p1\">*</bpt>func<ept id=\"p1\">*</ept> parameter:","source":"Here are the possible values for the *func* parameter:"},{"content":"None","pos":[5977,5981]},{"content":"YearMonthDay","pos":[5986,5998]},{"content":"YearMonth","pos":[6003,6012]},{"content":"Year","pos":[6017,6021]},{"content":"MonthDay","pos":[6026,6034]},{"content":"Month","pos":[6039,6044]},{"content":"Day","pos":[6049,6052]},{"content":"YearQuarter","pos":[6057,6068]},{"content":"Quarter","pos":[6073,6080]},{"content":"YearWeek","pos":[6085,6093]},{"content":"Week","pos":[6098,6102]},{"content":"WeekDay","pos":[6107,6114]},{"pos":[6120,6127],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6449,6457],"content":"intvName","linkify":"intvName","nodes":[{"content":"intvName","pos":[0,8]}]},{"content":"Returns the name of the interval that is the specified number of intervals ahead of the specified date.","pos":[6458,6561]},{"pos":[6622,6632],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6636,6645]},{"content":"Description","pos":[6650,6661]},{"content":"input<ph id=\"ph1\">\\_</ph>date","pos":[6856,6867],"source":"input\\_date"},{"content":"A date in the first interval.","pos":[6870,6899]},{"content":"col","pos":[6966,6969]},{"pos":[6980,7071],"content":"The number of intervals ahead of the date that is specified by the <bpt id=\"p1\">*</bpt>input<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter.","source":"The number of intervals ahead of the date that is specified by the *input\\_date* parameter."},{"content":"func","pos":[7076,7080]},{"pos":[7090,7125],"content":"An <bpt id=\"p1\">**</bpt>intvScale<ept id=\"p1\">**</ept> enumeration value.","source":"An **intvScale** enumeration value."},{"pos":[7189,7201],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The name of the interval.","pos":[7203,7228]},{"pos":[7234,7241],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For example, if the <bpt id=\"p1\">*</bpt>func<ept id=\"p1\">*</ept> parameter is the <bpt id=\"p2\">**</bpt>IntvScale::WeekDay<ept id=\"p2\">**</ept> enumeration value, this method returns the name of the weekday.","pos":[7243,7373],"source":"For example, if the *func* parameter is the **IntvScale::WeekDay** enumeration value, this method returns the name of the weekday."},{"content":"If the <bpt id=\"p1\">*</bpt>func<ept id=\"p1\">*</ept> parameter is the <bpt id=\"p2\">**</bpt>IntvScale::Week<ept id=\"p2\">**</ept> enumeration value, this method returns a string that contains the number of the week.","pos":[7374,7510],"source":" If the *func* parameter is the **IntvScale::Week** enumeration value, this method returns a string that contains the number of the week."},{"pos":[7516,7523],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7964,7970],"content":"intvNo","linkify":"intvNo","nodes":[{"content":"intvNo","pos":[0,6]}]},{"content":"Calculates the number of intervals between two dates when you divide the time into the specified intervals.","pos":[7971,8078]},{"pos":[8084,8090],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8154,8164],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8168,8177]},{"content":"Description","pos":[8182,8193]},{"content":"input<ph id=\"ph1\">\\_</ph>date","pos":[8298,8309],"source":"input\\_date"},{"content":"A date that indicates the end of the period","pos":[8312,8355]},{"content":"ref<ph id=\"ph1\">\\_</ph>date","pos":[8363,8372],"source":"ref\\_date"},{"content":"A date that indicates the start of the period.","pos":[8377,8423]},{"content":"func","pos":[8428,8432]},{"pos":[8442,8477],"content":"An <bpt id=\"p1\">**</bpt>intvScale<ept id=\"p1\">**</ept> enumeration value.","source":"An **intvScale** enumeration value."},{"pos":[8496,8508],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[8510,8619],"content":"The number of intervals between the dates that are specified by the <bpt id=\"p1\">*</bpt>ref<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>input<ph id=\"ph2\">\\_</ph>date<ept id=\"p2\">*</ept> parameters.","source":"The number of intervals between the dates that are specified by the *ref\\_date* and *input\\_date* parameters."},{"pos":[8625,8632],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9035,9043],"content":"intvNorm","linkify":"intvNorm","nodes":[{"content":"intvNorm","pos":[0,8]}]},{"content":"Returns the normalized date for the period.","pos":[9044,9087]},{"pos":[9093,9099],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[9166,9176],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9180,9189]},{"content":"Description","pos":[9194,9205]},{"content":"input<ph id=\"ph1\">\\_</ph>date","pos":[9426,9437],"source":"input\\_date"},{"pos":[9440,9544],"content":"The end of the period, which must be later than the date that is specified by the <bpt id=\"p1\">*</bpt>ref<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter.","source":"The end of the period, which must be later than the date that is specified by the *ref\\_date* parameter."},{"content":"ref<ph id=\"ph1\">\\_</ph>date","pos":[9549,9558],"source":"ref\\_date"},{"content":"The start of the period.","pos":[9563,9587]},{"content":"func","pos":[9672,9676]},{"pos":[9686,9763],"content":"An <bpt id=\"p1\">**</bpt>intvScale<ept id=\"p1\">**</ept> enumeration value that indicates the interval division unit.","source":"An **intvScale** enumeration value that indicates the interval division unit."},{"pos":[9798,9810],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The normalized date for the period.","pos":[9812,9847]},{"pos":[9853,9860],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9862,10005],"content":"The returned date will equal the date of the first day in the interval in which the date that is specified by the <bpt id=\"p1\">*</bpt>ref<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter exists.","source":"The returned date will equal the date of the first day in the interval in which the date that is specified by the *ref\\_date* parameter exists."},{"pos":[10011,10018],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10138,10141],"content":"pmt","linkify":"pmt","nodes":[{"content":"pmt","pos":[0,3]}]},{"content":"Calculates the amount that must be paid every period to repay a loan.","pos":[10147,10216]},{"pos":[10222,10228],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[10290,10300],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10304,10313]},{"content":"Description","pos":[10316,10327]},{"content":"principal","pos":[10484,10493]},{"content":"The amount that was originally borrowed.","pos":[10496,10536]},{"content":"interest","pos":[10574,10582]},{"content":"The interest that is applied each period to the amount that was borrowed.","pos":[10586,10659]},{"content":"life","pos":[10664,10668]},{"content":"The number of periods that the loan is repaid over.","pos":[10676,10727]},{"pos":[10757,10769],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The amount that must be paid every period.","pos":[10771,10813]},{"pos":[10819,10826],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <bpt id=\"p1\">*</bpt>life<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>interest<ept id=\"p2\">*</ept> parameters must be expressed in the same time units.","pos":[10828,10906],"source":"The *life* and *interest* parameters must be expressed in the same time units."},{"content":"The value of the <bpt id=\"p1\">*</bpt>life<ept id=\"p1\">*</ept> parameter must be more than <bpt id=\"p2\">**</bpt>0.0<ept id=\"p2\">**</ept>.","pos":[10907,10967],"source":" The value of the *life* parameter must be more than **0.0**."},{"pos":[10973,10980],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11087,11089],"content":"pt","linkify":"pt","nodes":[{"content":"pt","pos":[0,2]}]},{"content":"Retrieves the sum of a number plus a specified percentage of that number.","pos":[11094,11167]},{"pos":[11173,11179],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11228,11238],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11242,11251]},{"content":"Description","pos":[11255,11266]},{"content":"amount","pos":[11330,11336]},{"content":"The original number.","pos":[11343,11363]},{"content":"percentage","pos":[11374,11384]},{"content":"The percentage supplement.","pos":[11387,11413]},{"pos":[11421,11433],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[11435,11502],"content":"The number that is equal to ((*amount *× <bpt id=\"p1\">*</bpt>percentage<ept id=\"p1\">*</ept>) + <bpt id=\"p2\">*</bpt>amount<ept id=\"p2\">*</ept>).","source":"The number that is equal to ((*amount *× *percentage*) + *amount*)."},{"pos":[11508,11515],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11612,11614],"content":"pv","linkify":"pv","nodes":[{"content":"pv","pos":[0,2]}]},{"content":"Calculates the present value of an annuity, where an amount is received over multiple periods and the interest rate is deducted for each period.","pos":[11619,11763]},{"pos":[11769,11775],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11833,11843],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11847,11856]},{"content":"Description","pos":[11859,11870]},{"content":"amount","pos":[12055,12061]},{"content":"The amount that is paid during each period.","pos":[12067,12110]},{"content":"interest","pos":[12159,12167]},{"content":"The interest rate.","pos":[12171,12189]},{"content":"life","pos":[12263,12267]},{"pos":[12275,12362],"content":"The number of times that the value that is specified by the <bpt id=\"p1\">*</bpt>amount<ept id=\"p1\">*</ept> parameter is paid.","source":"The number of times that the value that is specified by the *amount* parameter is paid."},{"pos":[12370,12382],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The current value of an annuity.","pos":[12384,12416]},{"pos":[12422,12429],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12483,12487],"content":"rate","linkify":"rate","nodes":[{"content":"rate","pos":[0,4]}]},{"content":"Calculates the interest that is required for the current investment value to attain the future value over the specified number of periods.","pos":[12488,12626]},{"pos":[12632,12638],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[12713,12723],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[12727,12736]},{"content":"Description","pos":[12746,12757]},{"content":"<ph id=\"ph1\">\\_</ph>future<ph id=\"ph2\">\\_</ph>value","pos":[12871,12886],"source":"\\_future\\_value"},{"content":"The future value of the investment.","pos":[12890,12925]},{"content":"<ph id=\"ph1\">\\_</ph>current<ph id=\"ph2\">\\_</ph>value","pos":[12943,12959],"source":"\\_current\\_value"},{"content":"The current value of the investment.","pos":[12962,12998]},{"content":"<ph id=\"ph1\">\\_</ph>terms","pos":[13015,13022],"source":"\\_terms"},{"content":"The number of periods that the investment spans.","pos":[13034,13082]},{"pos":[13090,13102],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The calculated interest rate.","pos":[13104,13133]},{"pos":[13139,13146],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13200,13203],"content":"sln","linkify":"sln","nodes":[{"content":"sln","pos":[0,3]}]},{"content":"Retrieves the constant depreciation amount for the specified asset for each depreciation period.","pos":[13209,13305]},{"pos":[13311,13317],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[13372,13382],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13386,13395]},{"content":"Description","pos":[13398,13409]},{"content":"price","pos":[13532,13537]},{"content":"The purchase price of the asset.","pos":[13544,13576]},{"content":"scrap","pos":[13605,13610]},{"content":"The scrap value of the asset.","pos":[13617,13646]},{"content":"life","pos":[13678,13682]},{"content":"The number of periods in the expected life of the asset.","pos":[13690,13746]},{"pos":[13754,13766],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The depreciation amount.","pos":[13768,13792]},{"pos":[13798,13805],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13955,13958],"content":"syd","linkify":"syd","nodes":[{"content":"syd","pos":[0,3]}]},{"content":"Calculates the depreciation of an asset over a specified period.","pos":[13964,14028]},{"pos":[14034,14040],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[14111,14121],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[14125,14134]},{"content":"Description","pos":[14137,14148]},{"content":"<ph id=\"ph1\">\\_</ph>price","pos":[14269,14276],"source":"\\_price"},{"content":"The purchase price of the asset.","pos":[14281,14313]},{"content":"<ph id=\"ph1\">\\_</ph>scrap","pos":[14341,14348],"source":"\\_scrap"},{"content":"The scrap value of the asset.","pos":[14353,14382]},{"content":"<ph id=\"ph1\">\\_</ph>life","pos":[14413,14419],"source":"\\_life"},{"content":"The expected life of the asset (the number of periods).","pos":[14425,14480]},{"content":"<ph id=\"ph1\">\\_</ph>period","pos":[14485,14493],"source":"\\_period"},{"content":"The period to calculate depreciation for.","pos":[14497,14538]},{"pos":[14560,14572],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The amount of depreciation over the specified period.","pos":[14574,14627]},{"pos":[14633,14640],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"In contrast to the <bpt id=\"p1\">**</bpt>sln<ept id=\"p1\">**</ept> function, the <bpt id=\"p2\">**</bpt>syd<ept id=\"p2\">**</ept> function can allow for an accelerated depreciation of the asset.","pos":[14642,14755],"source":"In contrast to the **sln** function, the **syd** function can allow for an accelerated depreciation of the asset."},{"content":"As with the <bpt id=\"p1\">**</bpt>ddb<ept id=\"p1\">**</ept> function, this enables higher depreciation during the early periods of the life of an asset.","pos":[14756,14868],"source":" As with the **ddb** function, this enables higher depreciation during the early periods of the life of an asset."},{"pos":[14874,14881],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In the following examples, the periodic depreciation is calculated for an asset that has a purchase price of 10,000, a scrap value of 2,000, and a life of 5.","pos":[14883,15040]},{"content":"In comparison, <bpt id=\"p1\">**</bpt>sln(10000,2000,5)<ept id=\"p1\">**</ept> would calculate 1600.00 for each period.","pos":[15041,15118],"source":" In comparison, **sln(10000,2000,5)** would calculate 1600.00 for each period."},{"pos":[15532,15536],"content":"term","linkify":"term","nodes":[{"content":"term","pos":[0,4]}]},{"content":"Calculates the number of periods that an investment must run for.","pos":[15537,15602]},{"pos":[15608,15614],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[15682,15692],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15696,15705]},{"content":"Description","pos":[15712,15723]},{"content":"amount","pos":[15848,15854]},{"content":"The amount of the periodic investment.","pos":[15864,15902]},{"content":"interest","pos":[15924,15932]},{"content":"The interest rate for each period.","pos":[15940,15974]},{"content":"future<ph id=\"ph1\">\\_</ph>value","pos":[16000,16013],"source":"future\\_value"},{"content":"The future value that is anticipated for the investment","pos":[16016,16071]},{"pos":[16079,16091],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of periods that the investment must run for.","pos":[16093,16148]},{"pos":[16154,16161],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]}]}