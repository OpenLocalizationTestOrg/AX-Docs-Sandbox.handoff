{"content":"---\n# required metadata\n\ntitle: L Classes\ndescription: System API classes that start with the letter L.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 04/04/2017\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 52291\nms.assetid: 60d8c71b-6df4-4776-9642-ed89ab5ad46a\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# L Classes\n\n[!include[banner](../includes/banner.md)]\n\n\nSystem API classes that start with the letter L.\n\nClass Label\n-----------\n\n    class Label extends Object\n\nThe Label class manages label IDs and label files.\n\n### Remarks\n\nThe SysLabel class extends the Label class.\n\n### Examples\n\n### Methods\n\n| Method                                                                | Description                                                                                         |\n|-----------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------|\n| public LabelBulkEditor bulkEditor(str module)                         | Creates an instance of the LabelBulkEditor class.                                                   |\n| public boolean createLabelFile(str module, str language)              | Creates a label file for a specified label ID.                                                      |\n| public boolean delete(str label)                                      | Deletes a specified label.                                                                          |\n| public boolean exists(str label)                                      | Indicates whether a specified label ID exists.                                                      |\n| public str extractComment(str label)                                  | Returns a comment that is associated with a specified label ID.                                     |\n| public str extractString(str label)                                   | Returns the text that is associated with a specified label ID.                                      |\n| public str getFirstLabelFile()                                        | Returns the first label file ID record.                                                             |\n| public Date getLabelFileCreatedDate(str labelFile, str language)      | Returns the date that a specified label file was created.                                           |\n| public int getLabelFileCreatedTime(str labelFile, str language)       | Returns the time that a specified label file was created.                                           |\n| public Date getLabelFileModificationDate(str labelFile, str language) | Returns the date that a specified label file was modified.                                          |\n| public int getLabelFileModificationTime(str labelFile, str language)  | Returns the time that a specified label file was modified.                                          |\n| public str getNextLabelFile()                                         | Returns the next label file ID record.                                                              |\n| public str insert(str text, str comment, str module)                  | Creates a label ID for a specified text string.                                                     |\n| public int labelId(str label)                                         | Returns the number that is included in a specified label ID.                                        |\n| public int maxLabelId(str module)                                     | Returns the ID for the last label in the specified label file.                                      |\n| public boolean modify(str label, str text, \\[str comment\\])           | Modifies the text and comment that are associated with a specified label.                           |\n| public str moduleId(str label)                                        | Returns the label file ID for a specified label ID.                                                 |\n| public boolean moreLabelFiles()                                       | Indicates whether there are additional label files.                                                 |\n| public str name(str module, int labelId)                              | Returns a label ID, based on a specified label file ID and label ID number.                         |\n| public str searchFirst(str searchString)                              | Returns the first label ID that is found for a specified search term.                               |\n| public str searchNext()                                               | Returns the next label ID that is found for a search term that is passed to the searchFirst method. |\n| ::public static boolean flush(str labelFileId, str language)          | Flushes the label file buffers to disk.                                                             |\n| public void new(\\[str language\\])                                     | Creates a new instance of the Label class.                                                          |\n| public void finalize()                                                | Closes the current label file.                                                                      |\n\n### Method bulkEditor\n\nCreates an instance of the LabelBulkEditor class.\n\n    public LabelBulkEditor bulkEditor(str module)\n\n#### Parameters\n\nmodule  \nA string data type that specifies a three-letter label file ID.\n\n#### Return Value\n\nAn instance of the LabelBulkEditor class.\n\n#### Remarks\n\nThe LabelBulkEditor class is used to quickly modify a label file. This method returns nullNothingnullptrunita null reference (Nothing in Visual Basic) when it is invoked from the client tier.\n\n### Method createLabelFile\n\nCreates a label file for a specified label ID.\n\n    public boolean createLabelFile(str module, str language)\n\n#### Parameters\n\nmodule  \nA string data type that specifies a language by using a language prefix.\n\n<!-- -->\n\nlanguage  \nA string data type that specifies a language by using a language prefix.\n\n#### Return Value\n\ntrue if a file is created; otherwise, false.\n\n#### Remarks\n\nThe label file is created after the file buffers are flushed to disk, which occurs when the server closes.\n\n### Method delete\n\nDeletes a specified label.\n\n    public boolean delete(str label)\n\n#### Parameters\n\nlabel  \nA string that specifies the label ID. The string must include the at sign (@) followed by a label file ID and a number.\n\n#### Return Value\n\ntrue if the label ID is deleted; otherwise, false.\n\n### Method exists\n\nIndicates whether a specified label ID exists.\n\n    public boolean exists(str label)\n\n#### Parameters\n\nlabel  \nThe output of the literalStr function from a label ID string that includes the at sign (@).\n\n#### Return Value\n\ntrue if the label ID exists; otherwise, false.\n\n#### Remarks\n\nThe format of the label parameter value must resemble literalStr(\"@SYS24359\").\n\n### Method extractComment\n\nReturns a comment that is associated with a specified label ID.\n\n    public str extractComment(str label)\n\n#### Parameters\n\nlabel  \nA string that specifies the label ID. The string must include the at sign (@) followed by a label file ID and a number.\n\n#### Return Value\n\nA string value that indicates the comment that is associated with the specified label ID.\n\n#### Remarks\n\nIf you specify a label ID that does not exist, this method returns the specified ID as a string. If you do not include the @ in the label parameter value, the method returns the label ID.\n\n### Method extractString\n\nReturns the text that is associated with a specified label ID.\n\n    public str extractString(str label)\n\n#### Parameters\n\nlabel  \nA string data type that specifies a label ID. The string must include the at sign (@) followed by a label file ID and a number.\n\n#### Return Value\n\nA string data type value that indicates the text that is associated with the specified label ID.\n\n#### Remarks\n\nIf you specify a label ID that does not exist, the method returns the specified ID as a string. If you do not include the @ in the label parameter value, the method returns the label ID.\n\n### Method getFirstLabelFile\n\nReturns the first label file ID record.\n\n    public str getFirstLabelFile()\n\n#### Return Value\n\nA string data type value that indicates the label file ID.\n\n#### Remarks\n\nA label file ID is a three-letter identifier for a label file.\n\n### Method getLabelFileCreatedDate\n\nReturns the date that a specified label file was created.\n\n    public Date getLabelFileCreatedDate(str labelFile, str language)\n\n#### Parameters\n\nlabelFile  \nA string data type that specifies a language by using a language prefix.\n\n<!-- -->\n\nlanguage  \nA string data type that specifies a language by using a language prefix.\n\n#### Return Value\n\nA Date data type value that indicates when a label file is created.\n\n#### Remarks\n\nYou can use the date2str function to convert the date to a text string.\n\n### Method getLabelFileCreatedTime\n\nReturns the time that a specified label file was created.\n\n    public int getLabelFileCreatedTime(str labelFile, str language)\n\n#### Parameters\n\nlabelFile  \nA string data type that specifies a language by using a language prefix.\n\n<!-- -->\n\nlanguage  \nA string data type that specifies a language by using a language prefix.\n\n#### Return Value\n\nAn integer data type value that indicates the time that a label file is created.\n\n#### Remarks\n\nFor more information, see How to: Create a Label File. You can use the time2str function to convert the integer to a text string.\n\n### Method getLabelFileModificationDate\n\nReturns the date that a specified label file was modified.\n\n    public Date getLabelFileModificationDate(str labelFile, str language)\n\n#### Parameters\n\nlabelFile  \nA string data type that specifies a language by using a language prefix.\n\n<!-- -->\n\nlanguage  \nA string data type that specifies a language by using a language prefix.\n\n#### Return Value\n\nA Date data type value that indicates when a label file was modified.\n\n#### Remarks\n\nYou can use the date2str function to convert the date to a text string.\n\n### Method getLabelFileModificationTime\n\nReturns the time that a specified label file was modified.\n\n    public int getLabelFileModificationTime(str labelFile, str language)\n\n#### Parameters\n\nlabelFile  \nA string data type that specifies a language by using a language prefix.\n\n<!-- -->\n\nlanguage  \nA string data type that specifies a language by using a language prefix.\n\n#### Return Value\n\nAn integer value that indicates the time that a label file was modified.\n\n#### Remarks\n\nYou can use the time2str function to convert the integer to a text string.\n\n### Method getNextLabelFile\n\nReturns the next label file ID record.\n\n    public str getNextLabelFile()\n\n#### Return Value\n\nA string data type value that indicates the label file ID.\n\n#### Remarks\n\nA label file ID is a three-letter identifier for a label file.\n\n### Method insert\n\nCreates a label ID for a specified text string.\n\n    public str insert(str text, str comment, str module)\n\n#### Parameters\n\ntext  \nA string data type that specifies a three-letter label file ID.\n\n<!-- -->\n\ncomment  \nA string data type that specifies a three-letter label file ID.\n\n<!-- -->\n\nmodule  \nA string data type that specifies a three-letter label file ID.\n\n#### Return Value\n\nA string data type value for the label ID that is created.\n\n#### Remarks\n\nThis operation allocates a new label ID across all languages.\n\n### Method labelId\n\nReturns the number that is included in a specified label ID.\n\n    public int labelId(str label)\n\n#### Parameters\n\nlabel  \nA string data type that specifies the label ID. The string must include the at sign (@) followed by a label file ID and a number.\n\n#### Return Value\n\nAn integer data type value that indicates the number that is included in a label ID.\n\n#### Remarks\n\nYou must call the searchFirst or searchNext method, and then pass the return value as a parameter to this method.\n\n### Method maxLabelId\n\nReturns the ID for the last label in the specified label file.\n\n    public int maxLabelId(str module)\n\n#### Parameters\n\nmodule  \nA string that specifies a three-letter label file ID.\n\n#### Return Value\n\nAn integer that indicates the maximum label ID for the specified label file.\n\n### Method modify\n\nModifies the text and comment that are associated with a specified label.\n\n    public boolean modify(str label, str text, [str comment])\n\n#### Parameters\n\nlabel  \nA string that specifies the comment that is associated with a label ID.\n\n<!-- -->\n\ntext  \nA string that specifies the comment that is associated with a label ID.\n\n<!-- -->\n\ncomment  \nA string that specifies the comment that is associated with a label ID.\n\n#### Return Value\n\ntrue if the label ID is modified; otherwise, false.\n\n### Method moduleId\n\nReturns the label file ID for a specified label ID.\n\n    public str moduleId(str label)\n\n#### Parameters\n\nlabel  \nA string that specifies the label ID. The string must include the at sign (@) followed by a label file ID and a number.\n\n#### Return Value\n\nA string that indicates the label file ID for a specified label ID.\n\n#### Remarks\n\nYou need to call the searchFirst or searchNext method, and then pass the return value as a parameter to the labelId method.\n\n### Method moreLabelFiles\n\nIndicates whether there are additional label files.\n\n    public boolean moreLabelFiles()\n\n#### Return Value\n\ntrue if there are additional label files; otherwise, false.\n\n### Method name\n\nReturns a label ID, based on a specified label file ID and label ID number.\n\n    public str name(str module, int labelId)\n\n#### Parameters\n\nmodule  \nAn integer that specifies the numeric part of a label ID.\n\n<!-- -->\n\nlabelId  \nAn integer that specifies the numeric part of a label ID.\n\n#### Return Value\n\nA string value that indicates the label ID.\n\n### Method searchFirst\n\nReturns the first label ID that is found for a specified search term.\n\n    public str searchFirst(str searchString)\n\n#### Parameters\n\nsearchString  \nA string that specifies the search term.\n\n#### Return Value\n\nA string value that indicates the label ID.\n\n### Method searchNext\n\nReturns the next label ID that is found for a search term that is passed to the searchFirst method.\n\n    public str searchNext()\n\n#### Return Value\n\nA string value that indicates the label ID.\n\n#### Remarks\n\nYou must call the searchFirst method before you call this method. Otherwise, this method returns a random label ID.\n\n### Method flush\n\nFlushes the label file buffers to disk.\n\n    public static boolean flush(str labelFileId, str language)\n\n#### Parameters\n\nlabelFileId  \nA string that specifies a language by using a language prefix.\n\n<!-- -->\n\nlanguage  \nA string that specifies a language by using a language prefix.\n\n#### Return Value\n\n### Method new\n\nCreates a new instance of the Label class.\n\n    public void new([str language])\n\n#### Parameters\n\nlanguage  \nA string that specifies a language by using a language prefix.\n\n### Method finalize\n\nCloses the current label file.\n\n    public void finalize()\n\n## Class LabelBulkEditor\n    class LabelBulkEditor extends Object\n\nThe LabelBulkEditor class is used to quickly modify label files.\n\n### Remarks\n\nThe LabelBulkEditor class is instantiated through the Label.bulkEditor() method. The label file is opened for modification when the instance of the class is created, and the label file is closed when the instance has garbage collected.\n\n### Examples\n\n### Methods\n\n| Method                                                      | Description                                                                  |\n|-------------------------------------------------------------|------------------------------------------------------------------------------|\n| public boolean delete(str label)                            | Deletes a specified label.                                                   |\n| public boolean modify(str label, str text, \\[str comment\\]) | Modifies the text and comment that are associated with a specified label ID. |\n| public void new()                                           | Initializes an instance of the LabelBulkEditor class.                        |\n\n### Method delete\n\nDeletes a specified label.\n\n    public boolean delete(str label)\n\n#### Parameters\n\nlabel  \nA string that specifies the label ID. The string must include an at sign (@) followed by a label file ID and a number.\n\n#### Return Value\n\ntrue if the label is deleted; otherwise, false.\n\n### Method modify\n\nModifies the text and comment that are associated with a specified label ID.\n\n    public boolean modify(str label, str text, [str comment])\n\n#### Parameters\n\nlabel  \nA string that specifies the comment that is associated with the label ID.\n\n<!-- -->\n\ntext  \nA string that specifies the comment that is associated with the label ID.\n\n<!-- -->\n\ncomment  \nA string that specifies the comment that is associated with the label ID.\n\n#### Return Value\n\ntrue if the label is modified; otherwise, false.\n\n### Method new\n\nInitializes an instance of the LabelBulkEditor class.\n\n    public void new()\n\n## Class LastAotSelection\n    class LastAotSelection extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                           | Description                                               |\n|----------------------------------|-----------------------------------------------------------|\n| public TreeNode first()          |                                                           |\n| public TreeNode next()           |                                                           |\n| public ProjectNode projectRoot() |                                                           |\n| public int selectionCount()      |                                                           |\n| public void new()                | Initializes a new instance of the LastAotSelection class. |\n| public void finalize()           |                                                           |\n\n### Method first\n\n    public TreeNode first()\n\n#### Return Value\n\n### Method next\n\n    public TreeNode next()\n\n#### Return Value\n\n### Method projectRoot\n\n    public ProjectNode projectRoot()\n\n#### Return Value\n\n### Method selectionCount\n\n    public int selectionCount()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the LastAotSelection class.\n\n    public void new()\n\n### Method finalize\n\n    public void finalize()\n\n## Class List\n    class List extends Object\n\nContains any number of elements that are accessed sequentially. Lists are structures that can contain values of any X++ type. All the values in the list must be of the same type.\n\n### Remarks\n\nThe type of the values in the list is specified when the list is created and cannot be changed afterwards. The implementation of lists makes traversal of the list elements very fast. Lists can be traversed by using the ListEnumerator class. To create a ListEnumerator object, use List.getEnumerator.\n\n### Examples\n\nThe following example creates a list of integers and prints out a description of the list and the values that it contains.\n\n    { \n        // Create a list of integers \n        List il = new List(Types::Integer); \n        // Add some elements to the list \n        il.addEnd(1); \n        il.addEnd(2); \n        il.addStart(3); \n        // Print a description of the list \n        print il.definitionString(); \n        print il.toString(); \n        pause; \n    }\n\n### Methods\n\n| Method                                                | Description                                                                           |\n|-------------------------------------------------------|---------------------------------------------------------------------------------------|\n| public AnyType addEnd(AnyType element)                | Adds a value to the end of the list.                                                  |\n| public AnyType addStart(AnyType element)              | Adds a value to the start of the list.                                                |\n| public str definitionString()                         | Returns a description of the type of the elements in the list.                        |\n| public int elements()                                 | Specifies the number of elements in a list.                                           |\n| public boolean empty()                                | Determines whether a list is empty.                                                   |\n| public boolean equalTo(List l)                        | Determines whether a list is the same as the current list.                            |\n| public ListEnumerator getEnumerator()                 | Creates an enumerator for a list which allows you to traverse the list.               |\n| public container pack()                               | Serializes the current instance of the List class.                                    |\n| public str toString()                                 | Returns a description of the values in the list.                                      |\n| public Types typeId()                                 | Returns the type of the values in a list.                                             |\n| public str xml(\\[int indent\\])                        | Returns an XML string that represents the current object.                             |\n| ::public static List create(container container)      | Creates a list from the container obtained from a prior call to the List.pack method. |\n| ::public static List createFromXML(Object xmlnode)    |                                                                                       |\n| ::public static boolean equal(List list1, List list2) | Determines whether two lists are identical.                                           |\n| ::public static List merge(List list1, List list2)    | Combines two lists to create a new list.                                              |\n| public void appendList(List list)                     |                                                                                       |\n| public void new(Types Type)                           | Creates a list.                                                                       |\n\n### Method addEnd\n\nAdds a value to the end of the list.\n\n    public AnyType addEnd(AnyType element)\n\n#### Parameters\n\nelement  \nThe value to add to the end of the list.\n\n#### Return Value\n\nThe value that is added to the list.\n\n### Method addStart\n\nAdds a value to the start of the list.\n\n    public AnyType addStart(AnyType element)\n\n#### Parameters\n\nelement  \nThe value to add to the start of the list.\n\n#### Return Value\n\nThe value added to the list.\n\n#### Remarks\n\nElements can be added to the end of the list by using the List.addEnd method.\n\n#### Examples\n\nThe following example creates a list of integers, adds the values 1 and 2 to the end of the list, and then adds the value 3 to the start of the list. The values that are returned by the List.toString method are {3, 1, 2}.\n\n    { \n        // Create a list of integers \n        list il = new List(Types::Integer); \n        // Add some elements to the list \n        il.addEnd(1); \n        il.addEnd(2); \n        il.addStart(3); \n        // Print a description of the list. \n        print il.definitionString(); \n        print il.toString(); \n        pause; \n    }\n\n### Method definitionString\n\nReturns a description of the type of the elements in the list.\n\n    public str definitionString()\n\n#### Return Value\n\nA string that contains a definition of the list.\n\n#### Remarks\n\nFor example, this method could return \"list of int\". To print a list of the values within the list, use the List.toString method.\n\n#### Examples\n\nThe following example creates a list of integers. The definitionString method is used to print a description of the list.\n\n    { \n        // Create a list of integers \n        List il = new List(Types::Integer); \n        // Add some elements to the list \n        il.addEnd(1); \n        il.addEnd(2); \n        il.addStart(3); \n        // Print a description ofvthe list \n        print il.definitionString(); \n        print il.toString(); \n        pause; \n    }\n\n### Method elements\n\nSpecifies the number of elements in a list.\n\n    public int elements()\n\n#### Return Value\n\nThe number of elements in the list.\n\n#### Examples\n\nThe following example creates a list of integers and adds some elements to it. The elements method is used to test whether there are three elements in the list.\n\n    { \n        List il = new List(Types::Integer); \n        il.addStart(1); \n        il.addStart(2); \n        il.addStart(3); \n        if (il.elements() != 3) \n        { \n            print \"Something is wrong...\"; \n        } \n    }\n\n### Method empty\n\nDetermines whether a list is empty.\n\n    public boolean empty()\n\n#### Return Value\n\ntrue if the list is empty; otherwise, false.\n\n### Method equalTo\n\nDetermines whether a list is the same as the current list.\n\n    public boolean equalTo(List l)\n\n#### Parameters\n\nl  \nThe list to be compared with the current list.\n\n#### Return Value\n\ntrue if the specified list is identical to the list on which the method is called; otherwise, false.\n\n#### Remarks\n\nA list is equal to another list if the two lists are the same type, contain the same number of elements, and the elements occur in the same order. The equalTo method is a shortcut for using the List.equal method: equal(this, l).\n\n### Method getEnumerator\n\nCreates an enumerator for a list which allows you to traverse the list.\n\n    public ListEnumerator getEnumerator()\n\n#### Return Value\n\nA listEnumerator object for the current list.\n\n### Method pack\n\nSerializes the current instance of the List class.\n\n    public container pack()\n\n#### Return Value\n\nA container that contains the current instance of the List class.\n\n#### Remarks\n\nThe container created by this method contains 3 elements before the first element from the list:\n\n-   A version number for the container\n-   An integer that identifies the data type of the list elements\n-   The number of elements in the list\n\nIf the elements in the list are objects, packing is performed by calling the pack method successively on each object to yield a subcontainer. The list can be retrieved from the packed container by using the List.create method.\n\n#### Examples\n\nThe following example creates a list of records and passes in the packed list as a parameter for creating a new projReverseMarking object.\n\n    public boolean canClose() \n    { \n        ProjReverseMarking      projReverseMarking; \n        boolean                 canClose; \n        List                    list; \n        canClose = super(); \n        if (element.closedOk() && canClose) \n        { \n            List = new List(Types::Record); \n            while select tmpFrmVirtualLines \n            { \n                list.addEnd(tmpFrmVirtualLines); \n            } \n            projReverseMarking = new ProjReverseMarking(list.pack()); \n            projReverseMarking.run(); \n        } \n        return canClose; \n    }\n\n### Method toString\n\nReturns a description of the values in the list.\n\n    public str toString()\n\n#### Return Value\n\nA string that describes the values of the elements in the list.\n\n#### Remarks\n\nTo print a description of the type of the elements in the list, use the List.definitionString method.\n\n#### Examples\n\nThe following example creates a list of integers. The toString method is used to print a description of the values in the list.\n\n    { \n        // Create a list of integers \n        List il = new List(Types::Integer); \n        // Add some elements to the list \n        il.addEnd(1); \n        il.addEnd(2); \n        il.addStart(3); \n        // Print a description of the list \n        print il.definitionString(); \n        print il.toString(); \n        pause; \n    }\n\n### Method typeId\n\nReturns the type of the values in a list.\n\n    public Types typeId()\n\n#### Return Value\n\nThe type of the list elements.\n\n#### Remarks\n\nThe type of the list is specified when the list is created, and remains the same throughout the life of the list.\n\n### Method xml\n\nReturns an XML string that represents the current object.\n\n    public str xml([int indent])\n\n#### Parameters\n\nindent  \nThe amount of indentation of the returned XML string; optional.\n\n#### Return Value\n\nAn XML string that represents the current object.\n\n#### Remarks\n\nThis method can be overridden to return values that are meaningful for that type.\n\n### Method create\n\nCreates a list from the container obtained from a prior call to the List.pack method.\n\n    public static List create(container container)\n\n#### Parameters\n\ncontainer  \nThe container that holds the packed list.\n\n#### Return Value\n\nA list identical to the one that was packed into the container.\n\n#### Examples\n\nThe following example creates a list and packs it into a container. The create method is then used to unpack the container and create a list identical to the original one.\n\n    { \n        List il = new List(Types::Integer); \n        List newList; \n        container packedList; \n        // Add some elements \n        il.addEnd(1); \n        il.addEnd(2); \n        il.addEnd(3); \n        // Pack the list into a container \n        packedList = il.pack(); \n        newList = list::create(packedList); \n        // Prints <1, 2, 3> \n        print newList.toString(); \n        pause; \n    }\n\n### Method createFromXML\n\n    public static List createFromXML(Object xmlnode)\n\n#### Parameters\n\nxmlnode  \n\n#### Return Value\n\n### Method equal\n\nDetermines whether two lists are identical.\n\n    public static boolean equal(List list1, List list2)\n\n#### Parameters\n\nlist1  \nThe second list to be compared.\n\n<!-- -->\n\nlist2  \nThe second list to be compared.\n\n#### Return Value\n\ntrue if the two lists are identical; otherwise, false.\n\n#### Remarks\n\nA list is equal to another list if the two lists are the same type, contain the same number of elements, and the elements occur in the same order.\n\n### Method merge\n\nCombines two lists to create a new list.\n\n    public static List merge(List list1, List list2)\n\n#### Parameters\n\nlist1  \nThe list that will be added to the end of the first to create the new list.\n\n<!-- -->\n\nlist2  \nThe list that will be added to the end of the first to create the new list.\n\n#### Return Value\n\nThe new list.\n\n#### Remarks\n\nThe types of the lists must be the same.\n\n#### Examples\n\nThe following example creates two lists of integer values, merges them to create a new list, and then prints out the values in the new combined list.\n\n    { \n        List list1  = new List(Types::Integer); \n        List list2  = new List(Types::Integer); \n        List combinedList  = new List(Types::Integer); \n        int  i; \n        for(i=1; i<6; i++) \n        { \n            List1.addEnd(i); \n        } \n         for(i=6; i<11; i++) \n        { \n            List2.addEnd(i); \n        } \n        combinedList = List::merge(list1, list2); \n        print combinedList.toString(); \n        pause; \n    }\n\n### Method appendList\n\n    public void appendList(List list)\n\n#### Parameters\n\nlist  \n\n### Method new\n\nCreates a list.\n\n    public void new(Types Type)\n\n#### Parameters\n\nType  \nThe type that the elements in the list should have.\n\n#### Remarks\n\nThe possible values for the Type parameter are supplied by the Types system enum. After you have created a list, you cannot change the type of the elements it contains.\n\n#### Examples\n\nThe following example creates a list of strings.\n\n    { \n        // Creates a list of integers. \n        List il = new List(Types::String); \n    }\n\n## Class ListEnumerator\n    class ListEnumerator extends Object\n\nThe ListEnumerator class lets you traverse the elements in a list.\n\n### Remarks\n\nList enumerators start before the first element in the list. You must call the ListEnumerator.moveNext method to make it point to the first element in the list. It is best practice to use the ListEnumerator class instead of the ListIterator class, because enumerators are automatically created on the same tier as the list (when the list.getEnumerator method is called). This avoids a potential problem in code that is marked as Called from, where the iterator and list can be on separate tiers. In addition, list enumerators require less code than list iterators and therefore perform slightly better. The only situation where you have to use a list iterator is if you want to delete items from a list (use the ListIterator.delete method).\n\n### Examples\n\nThe following example creates a list of integers and puts some values into it. It then creates an enumerator, and then sets the enumerator to the first element in the list and then the second element in the list.\n\n    { \n        List list = new List(Types::Integer); \n        ListEnumerator enumerator; \n        // Add some elements to the list \n        list.addEnd(1); \n        list.addEnd(2); \n        list.addStart(3); \n        // Set the enumerator \n        enumerator = list.getEnumerator(); \n        // Print a description of the list \n        print enumerator.definitionString(); \n        // Go to beginning of enumerator \n        enumerator.reset(); \n        //Go to the first element in the List \n        enumerator.moveNext(); \n        // Print contents of first and second elements \n        // First element is 3 as this was added to start of list \n        print enumerator.toString(); \n        enumerator.moveNext(); \n        print enumerator.toString(); \n        pause; \n    }\n\n### Methods\n\n| Method                        | Description                                                                                                   |\n|-------------------------------|---------------------------------------------------------------------------------------------------------------|\n| public AnyType current()      | Retrieves the value that is pointed to by the enumerator.                                                     |\n| public str definitionString() | Returns a description of the enumerator.                                                                      |\n| public boolean moveNext()     | Determines whether the enumerator denotes a valid list element.                                               |\n| public str toString()         | Returns a description of the content of the element in the list that the enumerator is currently pointing to. |\n| public void reset()           | Moves the enumerator to the start of the list.                                                                |\n\n### Method current\n\nRetrieves the value that is pointed to by the enumerator.\n\n    public AnyType current()\n\n#### Return Value\n\nThe value that is currently pointed to in the list. The type of the return value is determined by the type of the items in the list.\n\n#### Examples\n\nThe following example iterates through the list and sets the dimensionTopic variable to the value of the current list element.\n\n    public DimensionTopic firstDimensionTopic() \n    { \n        DimensionTopic  dimensionTopic; \n        ListEnumerator  enumerator; \n        enumerator = this.getTopicsEnumerator(); \n        if (enumerator.moveNext()) \n        { \n            dimensionTopic = enumerator.current(); \n        } \n        return dimensionTopic; \n    }\n\n### Method definitionString\n\nReturns a description of the enumerator.\n\n    public str definitionString()\n\n#### Return Value\n\nA string that contains a description of the enumerator.\n\n#### Remarks\n\nFor example, an enumerator for a list of integers would return int list enumerator.\n\n#### Examples\n\nThe following example creates a list and an enumerator for the list. It uses the definitionString method to print a description of the enumerator.\n\n    { \n        List list = new List(Types::Integer); \n        ListEnumerator  enumerator; \n        ; \n        // Add some elements to the list \n        list.addEnd(1); \n        list.addEnd(2); \n        list.addStart(3); \n        // Set the enumerator \n        enumerator = list.getEnumerator(); \n        print enumerator.definitionString(); \n        pause; \n    }\n\n### Method moveNext\n\nDetermines whether the enumerator denotes a valid list element.\n\n    public boolean moveNext()\n\n#### Return Value\n\ntrue if the current position in the list holds a valid element; otherwise, false.\n\n#### Remarks\n\nList enumerators start before the first element in the list. You must call the moveNext method to make it point to the first element in the list.\n\n#### Examples\n\nThe following example uses the moveNext method to check whether there is another element in the list and then sets the dimensionTopic variable to the value of the current list element.\n\n    public DimensionTopic firstDimensionTopic() \n    { \n        DimensionTopic  dimensionTopic; \n        ListEnumerator  enumerator; \n        enumerator = this.getTopicsEnumerator(); \n        if (enumerator.moveNext()) \n        { \n            dimensionTopic = enumerator.current(); \n        } \n        return dimensionTopic; \n    }\n\n### Method toString\n\nReturns a description of the content of the element in the list that the enumerator is currently pointing to.\n\n    public str toString()\n\n#### Return Value\n\nA string that contains a description of the current list element.\n\n#### Examples\n\nThe following example creates a list, and then prints the content of the first and second elements in the list.\n\n    { \n        List list = new List(Types::Integer); \n        ListEnumerator  enumerator; \n        // Add some elements to the list \n        list.addEnd(1); \n        list.addEnd(2); \n        list.addStart(3); \n        // Set the enumerator \n        enumerator = list.getEnumerator(); \n        // Go to beginning of enumerator \n        enumerator.reset(); \n        //Go to the first element in the List \n        enumerator.moveNext(); \n        // First element is 3 as this was added to start of list \n        print enumerator.toString(); \n        pause; \n        enumerator.moveNext(); \n        //Print second element in list (1) \n        print enumerator.toString(); \n        pause; \n    }\n\n### Method reset\n\nMoves the enumerator to the start of the list.\n\n    public void reset()\n\n#### Remarks\n\nThe reset method moves the enumerator to the start of the list, before the first element in the list. You must call the ListEnumerator.moveNext method to make it point to the first element in the list.\n\n#### Examples\n\nThe following example creates a list and then an enumerator for the list. It uses the reset method to move to the start of the list and then uses the moveNext method to move to the first element in the list.\n\n    { \n        List list = new List(Types::Integer); \n        ListEnumerator  enumerator; \n        // Add some elements to the list \n        list.addEnd(1); \n        list.addEnd(2); \n        list.addStart(3); \n        // Set the enumerator \n        enumerator = list.getEnumerator(); \n        // Go to beginning of enumerator \n        enumerator.reset(); \n        //Go to the first element in the List \n        enumerator.moveNext(); \n        // First element is 3 as this was added to start of list \n        print enumerator.toString(); \n        pause; \n    }\n\n## Class ListIterator\n    class ListIterator extends Object\n\nThe ListIterator class is used to iterate over the elements in a list.\n\n### Remarks\n\nList iterators can be viewed as pointers into the lists over which they iterate. Functionality is available to start the iteration, determine whether more elements are available, and fetch the element that is pointed to by the iterator. The order in which the elements occur during iteration is defined by the sequence in which the elements are inserted. Elements can be inserted by using the List.addStart, List.addEnd, or ListIterator.insert method. It is better to use the ListEnumerator class than the ListIterator class. List iterators and the maps over which they iterate must be on the same client/server side. If you use the ListIterator class, and code is marked as Called from, it is possible that the list and the iterator will be on different tiers. In this case, the code will fail. If you use the ListEnumerator class, the enumerator is automatically created on the same tier as the list. Additionally, to move to the next item in a list, you must explicitly call the more and next methods if you are using a list iterator. If you use the ListEnumerator class, you only have to call the moveNext method. The only situation where you cannot use a list enumerator is where you need to delete elements from a list. For more information, see the delete method.\n\n### Examples\n\nThe following example creates a list and an iterator to point to it. It then uses various methods on the ListIterator class to print a description of the list, and the items in the list.\n\n    { \n        List il = new List(types::Integer); \n        ListIterator it; \n        // Add some elements into the list. \n        il.addStart(1); \n        il.addStart(2); \n        il.addStart(4);  \n        // Create a list iterator to traverse the values. \n        it = new ListIterator (il);  \n        // Prints \"int list iterator\". \n        print it.definitionString();  \n        // Prints \"(begin)[4]\". \n        print it.toString();  \n        // Go on for as long as elements are found in the list. \n        // Prints 4, 2, 1. \n        while (it.more()) \n        { \n            print it.value(); \n            it.next(); \n        } \n        // Prints (end). \n        print it.toString(); \n        pause; \n    }\n\n### Methods\n\n| Method                               | Description                                                                                    |\n|--------------------------------------|------------------------------------------------------------------------------------------------|\n| public str definitionString()        | Returns a textual representation of the type of the iterator.                                  |\n| public AnyType insert(AnyType value) | Inserts a new value at the position in the list that the iterator currently points to.         |\n| public boolean more()                | Determines whether the list iterator points to a valid element.                                |\n| public str toString()                | Returns a textual representation of the current list value that is pointed to by the iterator. |\n| public AnyType value()               | Retrieves the value that is pointed to by the iterator.                                        |\n| public void begin()                  | Moves the iterator to the start of the list.                                                   |\n| public void next()                   | Moves the iterator to the next element in the list.                                            |\n| public void end()                    | Moves the iterator past the last element in the list.                                          |\n| public void delete()                 | Removes the element that is pointed to by the iterator from the list.                          |\n| public void new(List list)           | Creates a new iterator for a particular list.                                                  |\n\n### Method definitionString\n\nReturns a textual representation of the type of the iterator.\n\n    public str definitionString()\n\n#### Return Value\n\nA string that contains the type of the iterator.\n\n#### Remarks\n\nFor example: int list iterator.\n\n### Method insert\n\nInserts a new value at the position in the list that the iterator currently points to.\n\n    public AnyType insert(AnyType value)\n\n#### Parameters\n\nvalue  \nThe value of the item to insert into the list.\n\n#### Return Value\n\nThe value that was inserted into the list.\n\n#### Remarks\n\nThe value parameter must be the same type as the list.\n\n#### Examples\n\nThe following example creates a list that has ten items and then uses the ListIterator.insert method to insert a new value as the third item in the list.\n\n    { \n        List il = new List(Types::Integer); \n        ListIterator it; \n        int i; \n        int j = 25; \n        // Insert values 1 to 10 into the list \n        for (i = 1; i <= 10; i++) \n        { \n            il.addEnd(i); \n        } \n        // Go to the 3rd element in the list \n        it = new ListIterator(il); \n        it.begin(); \n        it.next(); \n        it.next(); \n        // Insert a new value (25) \n        it.insert(j); \n      it.begin(); \n        // Print all values in the list. \n        // 25 is the third value in the list \n        while (it.more()) \n        { \n            print it.value(); \n            it.next();  \n        } \n        pause; \n    }\n\n### Method more\n\nDetermines whether the list iterator points to a valid element.\n\n    public boolean more()\n\n#### Return Value\n\ntrue if the list iterator points to a valid element; otherwise, false.\n\n#### Remarks\n\nAttempting to access an element when this method returns false will cause an error.\n\n#### Examples\n\nThe following example uses the ListIterator.more method to check whether there are more elements in the list and then runs through the while loop, which prints the values of all the elements in the list.\n\n    { \n        List il = new List(Types::Integer); \n        ListIterator it; \n        int i; \n        // Add some elements \n        for (i = 1; i <= 10; i++) \n        { \n            il.addEnd(i); \n        } \n        // Traverse the list \n        it = new ListIterator(il); \n        while (it.more()) \n        { \n            print it.value(); \n            it.next(); // Skip to the next element \n        } \n        pause; \n    }\n\n### Method toString\n\nReturns a textual representation of the current list value that is pointed to by the iterator.\n\n    public str toString()\n\n#### Return Value\n\nA string that contains a description of the current value.\n\n#### Remarks\n\nIf the iterator points to the first element in the list, the string will contain an indication of this, in the form \"(begin)\\[value\\]\" If the iterator does not point to an element (that is, the more() method returns false), the following string returned is: (end). If the iterator points to a value, the string is \"\\[value\\]\", where value is a string representation of the element value.\n\n#### Examples\n\nThe following example prints the following description of the values of the two values in a list:\n\n1.  (begin) \\[2\\]\n2.  \\[1\\]\n\n<!-- -->\n\n    { \n        List li = new List(Types::Integer); \n        ListIterator it = new ListIterator(li); \n        li.addStart(1); \n        li.addStart(2); // This is now the first value \n        it.begin(); \n        print it.toString(); \n        it.next(); \n        print it.toString(); \n        pause; \n    }\n\n### Method value\n\nRetrieves the value that is pointed to by the iterator.\n\n    public AnyType value()\n\n#### Return Value\n\nThe value that is pointed to by the iterator.\n\n#### Remarks\n\nBefore you try to retrieve the value of a list element, use the ListIterator.more method to test whether an element exists.\n\n### Method begin\n\nMoves the iterator to the start of the list.\n\n    public void begin()\n\n### Method next\n\nMoves the iterator to the next element in the list.\n\n    public void next()\n\n#### Remarks\n\nUse the ListIterator.more method to determine whether the iterator points to a valid element.\n\n#### Examples\n\nThe following example uses the ListIterator.next method to traverse a list as the value of each element is printed.\n\n    { \n        List il = new List(Types::Integer); \n        ListIterator it; \n        int i; \n        // Add some elements \n        for (i = 1; i <= 10; i++) \n        { \n            il.addEnd(i); \n        } \n        // Traverse the list \n        it = new ListIterator(il); \n        while (it.more()) \n        { \n            print it.value(); \n            // Move to the next element \n            it.next();  \n        } \n        pause; \n    }\n\n### Method end\n\nMoves the iterator past the last element in the list.\n\n    public void end()\n\n#### Remarks\n\nAfter this method runs, the ListIterator.more method will return false.\n\n### Method delete\n\nRemoves the element that is pointed to by the iterator from the list.\n\n    public void delete()\n\n#### Remarks\n\nThe iterator will point to the next element after the deletion.\n\n#### Examples\n\nThe following example creates a list that contains three elements and prints a description of the elements in the list. It then deletes the first element in the list and prints a description of the remaining elements.\n\n    { \n        List li = new List(Types::Integer); \n        ListIterator it; \n        li.addStart(1); \n        li.addStart(2); \n        li.addStart(3); \n        print li.toString(); \n        it = new ListIterator(li); \n        it.delete(); \n        print li.toString(); \n        pause; \n    }\n\n### Method new\n\nCreates a new iterator for a particular list.\n\n    public void new(List list)\n\n#### Parameters\n\nlist  \nThe list for which to create an iterator.\n\n#### Remarks\n\nThe iterator is positioned at the first value in the list, if the list is not empty. Iterators and the lists that they iterate over must be on the same client/server side.\n\n#### Examples\n\nThe following example creates an iterator for a list of integers.\n\n    List il = new List(types::Integer); \n    ListIterator it; \n    it = new ListIterator (il);\n\n## Class ListPage\n    class ListPage extends Page\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                      | Description                                       |\n|-----------------------------------------------------------------------------|---------------------------------------------------|\n| public str actionPaneControlParameters(str controlName, \\[str parameters\\]) |                                                   |\n| public Array activeActionPaneTabNames()                                     | Gets the name of the specified active tab.        |\n| public str caption(\\[str value\\])                                           |                                                   |\n| public ListPageArgs listPageArgs()                                          |                                                   |\n| public int listPageFieldDataField(str fieldName)                            |                                                   |\n| public Array listPageFieldNames()                                           |                                                   |\n| public int listPageFieldTableId(str fieldName)                              |                                                   |\n| public boolean listPageFieldVisible(str fieldName, \\[boolean visible\\])     |                                                   |\n| public str modeledQueryName(\\[str value\\])                                  |                                                   |\n| public void new()                                                           | Initializes a new instance of the ListPage class. |\n\n### Method actionPaneControlParameters\n\n    public str actionPaneControlParameters(str controlName, [str parameters])\n\n#### Parameters\n\ncontrolName  \n\n<!-- -->\n\nparameters  \n\n#### Return Value\n\n### Method activeActionPaneTabNames\n\nGets the name of the specified active tab.\n\n    public Array activeActionPaneTabNames()\n\n#### Return Value\n\nAn array that contains the names of the active tabs.\n\n### Method caption\n\n    public str caption([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method listPageArgs\n\n    public ListPageArgs listPageArgs()\n\n#### Return Value\n\n### Method listPageFieldDataField\n\n    public int listPageFieldDataField(str fieldName)\n\n#### Parameters\n\nfieldName  \n\n#### Return Value\n\n### Method listPageFieldNames\n\n    public Array listPageFieldNames()\n\n#### Return Value\n\n### Method listPageFieldTableId\n\n    public int listPageFieldTableId(str fieldName)\n\n#### Parameters\n\nfieldName  \n\n#### Return Value\n\n### Method listPageFieldVisible\n\n    public boolean listPageFieldVisible(str fieldName, [boolean visible])\n\n#### Parameters\n\nfieldName  \n\n<!-- -->\n\nvisible  \n\n#### Return Value\n\n### Method modeledQueryName\n\n    public str modeledQueryName([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the ListPage class.\n\n    public void new()\n\n## Class ListPageArgs\n    class ListPageArgs extends PageArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method | Description |\n|--------|-------------|\n\n## Class ListPageInteraction\n    class ListPageInteraction extends PageInteraction\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                           | Description                                                   |\n|--------------------------------------------------|---------------------------------------------------------------|\n| public ListPage listPage()                       |                                                               |\n| public void tabChanged(container activeTabNames) | Called when the active tab is changed.                        |\n| public void initializing()                       |                                                               |\n| public void initialized()                        |                                                               |\n| public void selectionChanged()                   |                                                               |\n| public void initializeQuery(Query query)         |                                                               |\n| public void new(ListPage listPage)               | Creates a new PageInteraction object operating on a listPage. |\n\n### Method listPage\n\n    public ListPage listPage()\n\n#### Return Value\n\n### Method tabChanged\n\nCalled when the active tab is changed.\n\n    public void tabChanged(container activeTabNames)\n\n#### Parameters\n\nactiveTabNames  \nA container containing the names of the active tabs.\n\n### Method initializing\n\n    public void initializing()\n\n### Method initialized\n\n    public void initialized()\n\n### Method selectionChanged\n\n    public void selectionChanged()\n\n### Method initializeQuery\n\n    public void initializeQuery(Query query)\n\n#### Parameters\n\nquery  \n\n### Method new\n\nCreates a new PageInteraction object operating on a listPage.\n\n    public void new(ListPage listPage)\n\n#### Parameters\n\nlistPage  \nThe specified ListPage object.\n\n## Class LoadAutoCompleteDataEventArgs\n    class LoadAutoCompleteDataEventArgs extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                          | Description |\n|-------------------------------------------------------------------------------------------------|-------------|\n| public AutoCompleteDataMode autoCompleteDataMode(\\[AutoCompleteDataMode autoCompleteDataMode\\]) |             |\n| public boolean canPage(\\[boolean canPage\\])                                                     |             |\n| public str filterValue()                                                                        |             |\n| public AnyType lastPagedTag()                                                                   |             |\n| public FormSegment segment()                                                                    |             |\n| public void addAutoCompleteData(str value, str description, AnyType tag)                        |             |\n\n### Method autoCompleteDataMode\n\n    public AutoCompleteDataMode autoCompleteDataMode([AutoCompleteDataMode autoCompleteDataMode])\n\n#### Parameters\n\nautoCompleteDataMode  \n\n#### Return Value\n\n### Method canPage\n\n    public boolean canPage([boolean canPage])\n\n#### Parameters\n\ncanPage  \n\n#### Return Value\n\n### Method filterValue\n\n    public str filterValue()\n\n#### Return Value\n\n### Method lastPagedTag\n\n    public AnyType lastPagedTag()\n\n#### Return Value\n\n### Method segment\n\n    public FormSegment segment()\n\n#### Return Value\n\n### Method addAutoCompleteData\n\n    public void addAutoCompleteData(str value, str description, AnyType tag)\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\ndescription  \n\n<!-- -->\n\ntag  \n\n## Class LoginProperty\n    class LoginProperty extends Object\n\nThe LoginProperty class enables logon information to be passed to an instance of the OdbcConnection class.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                | Description                                                                                                                                                                                            |\n|-------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| public str getDatabase()                              | Retrieves the name of the database, as stored in the LoginProperty class.                                                                                                                              |\n| public str getDSN()                                   | Retrieves the data source name (DSN) that is stored in the LoginProperty class.                                                                                                                        |\n| public str getOciServiceName()                        | Retrieves the Oracle service name that is stored in the LoginProperty class.                                                                                                                           |\n| public str getOther()                                 | Retrieves the additional logon parameters that are stored in the LoginProperty class.                                                                                                                  |\n| public str getServer()                                | Retrieves the server name that is stored in the LoginProperty class.                                                                                                                                   |\n| public str getTcpIpPort()                             | Retrieves the TCP/IP port that is stored in the LoginProperty class.                                                                                                                                   |\n| public boolean getUsePredefinedService()              | Returns whether the loginProperty class is set to use a predefined Oracle service instead of specifying the server and database information on the loginProperty class.                                |\n| public void setTcpIpPort(str tcpipPort)               | Specifies which TCP/IP port is used to connect to Oracle.                                                                                                                                              |\n| public void setDatabase(str database)                 | Sets the name of the database to log on to.                                                                                                                                                            |\n| public void setDSN(str datasourceName)                | Sets the DSN that is used to access the data source.                                                                                                                                                   |\n| public void new()                                     | Initializes a new instance of the LoginProperty class.                                                                                                                                                 |\n| public void setOciServiceName(str ociServiceName)     | Specifies an Oracle service name.                                                                                                                                                                      |\n| public void setOther(str otherOdbcParameters)         | Sets additional nonstandard logon parameters that are stored in the LoginProperty class.                                                                                                               |\n| public void setServer(str serverName)                 | Sets the name of the server on which the database resides.                                                                                                                                             |\n| public void setUsePredefinedService(boolean newValue) | Specifies whether to use a predefined Oracle service (created by using Oracle network configuration tools) for the connection information, or whether it will be specified in the loginProperty class. |\n\n### Method getDatabase\n\nRetrieves the name of the database, as stored in the LoginProperty class.\n\n    public str getDatabase()\n\n#### Return Value\n\nThe name of the database.\n\n### Method getDSN\n\nRetrieves the data source name (DSN) that is stored in the LoginProperty class.\n\n    public str getDSN()\n\n#### Return Value\n\nThe DSN.\n\n### Method getOciServiceName\n\nRetrieves the Oracle service name that is stored in the LoginProperty class.\n\n    public str getOciServiceName()\n\n#### Return Value\n\nThe Oracle service name.\n\n### Method getOther\n\nRetrieves the additional logon parameters that are stored in the LoginProperty class.\n\n    public str getOther()\n\n#### Return Value\n\nThe additional logon parameters as a string.\n\n### Method getServer\n\nRetrieves the server name that is stored in the LoginProperty class.\n\n    public str getServer()\n\n#### Return Value\n\nThe name of the server.\n\n### Method getTcpIpPort\n\nRetrieves the TCP/IP port that is stored in the LoginProperty class.\n\n    public str getTcpIpPort()\n\n#### Return Value\n\nThe TCP/IP port.\n\n### Method getUsePredefinedService\n\nReturns whether the loginProperty class is set to use a predefined Oracle service instead of specifying the server and database information on the loginProperty class.\n\n    public boolean getUsePredefinedService()\n\n#### Return Value\n\ntrue if a predefined Oracle service is used to connect; otherwise, false.\n\n### Method setTcpIpPort\n\nSpecifies which TCP/IP port is used to connect to Oracle.\n\n    public void setTcpIpPort(str tcpipPort)\n\n#### Parameters\n\ntcpipPort  \nThe TCP/IP port to use.\n\n#### Remarks\n\nThe default port is 1521.\n\n### Method setDatabase\n\nSets the name of the database to log on to.\n\n    public void setDatabase(str database)\n\n#### Parameters\n\ndatabase  \nThe name of the database.\n\n### Method setDSN\n\nSets the DSN that is used to access the data source.\n\n    public void setDSN(str datasourceName)\n\n#### Parameters\n\ndatasourceName  \nThe name of the data source.\n\n### Method new\n\nInitializes a new instance of the LoginProperty class.\n\n    public void new()\n\n### Method setOciServiceName\n\nSpecifies an Oracle service name.\n\n    public void setOciServiceName(str ociServiceName)\n\n#### Parameters\n\nociServiceName  \nThe name of the service.\n\n#### Remarks\n\nThis method is used when the loginProperty class is not set to use a predefined Oracle service.\n\n### Method setOther\n\nSets additional nonstandard logon parameters that are stored in the LoginProperty class.\n\n    public void setOther(str otherOdbcParameters)\n\n#### Parameters\n\notherOdbcParameters  \nThe additional ODBC-formatted parameters.\n\n#### Remarks\n\nThis method should be used only if the data source that you want to use requires some additional, nonstandard parameters. The parameters must be applied in the standard ODBC format: &lt;parm1&gt;=&lt;value1&gt;;&lt;parm2&gt;=&lt;value2&gt;,... For example: MODE=1;PATCH=32\n\n### Method setServer\n\nSets the name of the server on which the database resides.\n\n    public void setServer(str serverName)\n\n#### Parameters\n\nserverName  \nThe name of the server where the database is located.\n\n### Method setUsePredefinedService\n\nSpecifies whether to use a predefined Oracle service (created by using Oracle network configuration tools) for the connection information, or whether it will be specified in the loginProperty class.\n\n    public void setUsePredefinedService(boolean newValue)\n\n#### Parameters\n\nnewValue  \nA Boolean value that indicates whether to use a predefined Oracle service.\n\n#### Remarks\n\nBy default, a predefined service is not used.\n\n\n\n","nodes":[{"pos":[4,595],"content":"# required metadata\n\ntitle: L Classes\ndescription: System API classes that start with the letter L.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 04/04/2017\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 52291\nms.assetid: 60d8c71b-6df4-4776-9642-ed89ab5ad46a\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"L Classes","nodes":[{"pos":[0,9],"content":"L Classes","nodes":[{"content":"L Classes","pos":[0,9]}]}],"path":["title"]},{"content":"System API classes that start with the letter L.","nodes":[{"pos":[0,48],"content":"System API classes that start with the letter L.","nodes":[{"content":"System API classes that start with the letter L.","pos":[0,48]}]}],"path":["description"]}],"header":"# required metadata\n","yml":true},{"pos":[603,612],"content":"L Classes","linkify":"L Classes","nodes":[{"content":"L Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter L.","pos":[658,706]},{"pos":[708,719],"content":"Class Label","linkify":"Class Label","nodes":[{"content":"Class Label","pos":[0,11]}]},{"content":"The Label class manages label IDs and label files.","pos":[765,815]},{"pos":[821,828],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The SysLabel class extends the Label class.","pos":[830,873]},{"pos":[879,887],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[893,900],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[904,910]},{"content":"Description","pos":[976,987]},{"content":"public LabelBulkEditor bulkEditor(str module)","pos":[1256,1301]},{"content":"Creates an instance of the LabelBulkEditor class.","pos":[1328,1377]},{"content":"public boolean createLabelFile(str module, str language)","pos":[1432,1488]},{"content":"Creates a label file for a specified label ID.","pos":[1504,1550]},{"content":"public boolean delete(str label)","pos":[1608,1640]},{"content":"Deletes a specified label.","pos":[1680,1706]},{"content":"public boolean exists(str label)","pos":[1784,1816]},{"content":"Indicates whether a specified label ID exists.","pos":[1856,1902]},{"content":"public str extractComment(str label)","pos":[1960,1996]},{"content":"Returns a comment that is associated with a specified label ID.","pos":[2032,2095]},{"content":"public str extractString(str label)","pos":[2136,2171]},{"content":"Returns the text that is associated with a specified label ID.","pos":[2208,2270]},{"content":"public str getFirstLabelFile()","pos":[2312,2342]},{"content":"Returns the first label file ID record.","pos":[2384,2423]},{"content":"public Date getLabelFileCreatedDate(str labelFile, str language)","pos":[2488,2552]},{"content":"Returns the date that a specified label file was created.","pos":[2560,2617]},{"content":"public int getLabelFileCreatedTime(str labelFile, str language)","pos":[2664,2727]},{"content":"Returns the time that a specified label file was created.","pos":[2736,2793]},{"content":"public Date getLabelFileModificationDate(str labelFile, str language)","pos":[2840,2909]},{"content":"Returns the date that a specified label file was modified.","pos":[2912,2970]},{"content":"public int getLabelFileModificationTime(str labelFile, str language)","pos":[3016,3084]},{"content":"Returns the time that a specified label file was modified.","pos":[3088,3146]},{"content":"public str getNextLabelFile()","pos":[3192,3221]},{"content":"Returns the next label file ID record.","pos":[3264,3302]},{"content":"public str insert(str text, str comment, str module)","pos":[3368,3420]},{"content":"Creates a label ID for a specified text string.","pos":[3440,3487]},{"content":"public int labelId(str label)","pos":[3544,3573]},{"content":"Returns the number that is included in a specified label ID.","pos":[3616,3676]},{"content":"public int maxLabelId(str module)","pos":[3720,3753]},{"content":"Returns the ID for the last label in the specified label file.","pos":[3792,3854]},{"content":"public boolean modify(str label, str text, <ph id=\"ph1\">\\[</ph>str comment<ph id=\"ph2\">\\]</ph>)","pos":[3896,3955],"source":"public boolean modify(str label, str text, \\[str comment\\])"},{"content":"Modifies the text and comment that are associated with a specified label.","pos":[3968,4041]},{"content":"public str moduleId(str label)","pos":[4072,4102]},{"content":"Returns the label file ID for a specified label ID.","pos":[4144,4195]},{"content":"public boolean moreLabelFiles()","pos":[4248,4279]},{"content":"Indicates whether there are additional label files.","pos":[4320,4371]},{"content":"public str name(str module, int labelId)","pos":[4424,4464]},{"content":"Returns a label ID, based on a specified label file ID and label ID number.","pos":[4496,4571]},{"content":"public str searchFirst(str searchString)","pos":[4600,4640]},{"content":"Returns the first label ID that is found for a specified search term.","pos":[4672,4741]},{"content":"public str searchNext()","pos":[4776,4799]},{"content":"Returns the next label ID that is found for a search term that is passed to the searchFirst method.","pos":[4848,4947]},{"content":"::public static boolean flush(str labelFileId, str language)","pos":[4952,5012]},{"content":"Flushes the label file buffers to disk.","pos":[5024,5063]},{"content":"public void new(<ph id=\"ph1\">\\[</ph>str language<ph id=\"ph2\">\\]</ph>)","pos":[5128,5161],"source":"public void new(\\[str language\\])"},{"content":"Creates a new instance of the Label class.","pos":[5200,5242]},{"content":"public void finalize()","pos":[5304,5326]},{"content":"Closes the current label file.","pos":[5376,5406]},{"pos":[5483,5500],"content":"Method bulkEditor","linkify":"Method bulkEditor","nodes":[{"content":"Method bulkEditor","pos":[0,17]}]},{"content":"Creates an instance of the LabelBulkEditor class.","pos":[5502,5551]},{"pos":[5609,5619],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"module","pos":[5621,5627]},{"content":"A string data type that specifies a three-letter label file ID.","pos":[5630,5693]},{"pos":[5700,5712],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An instance of the LabelBulkEditor class.","pos":[5714,5755]},{"pos":[5762,5769],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The LabelBulkEditor class is used to quickly modify a label file.","pos":[5771,5836]},{"content":"This method returns nullNothingnullptrunita null reference (Nothing in Visual Basic) when it is invoked from the client tier.","pos":[5837,5962]},{"pos":[5968,5990],"content":"Method createLabelFile","linkify":"Method createLabelFile","nodes":[{"content":"Method createLabelFile","pos":[0,22]}]},{"content":"Creates a label file for a specified label ID.","pos":[5992,6038]},{"pos":[6107,6117],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"module","pos":[6119,6125]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[6128,6200]},{"content":"language","pos":[6212,6220]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[6223,6295]},{"pos":[6302,6314],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if a file is created; otherwise, false.","pos":[6316,6360]},{"pos":[6367,6374],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The label file is created after the file buffers are flushed to disk, which occurs when the server closes.","pos":[6376,6482]},{"pos":[6488,6501],"content":"Method delete","linkify":"Method delete","nodes":[{"content":"Method delete","pos":[0,13]}]},{"content":"Deletes a specified label.","pos":[6503,6529]},{"pos":[6574,6584],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"label","pos":[6586,6591]},{"content":"A string that specifies the label ID.","pos":[6594,6631]},{"content":"The string must include the at sign (@) followed by a label file ID and a number.","pos":[6632,6713]},{"pos":[6720,6732],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the label ID is deleted; otherwise, false.","pos":[6734,6784]},{"pos":[6790,6803],"content":"Method exists","linkify":"Method exists","nodes":[{"content":"Method exists","pos":[0,13]}]},{"content":"Indicates whether a specified label ID exists.","pos":[6805,6851]},{"pos":[6896,6906],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"label","pos":[6908,6913]},{"content":"The output of the literalStr function from a label ID string that includes the at sign (@).","pos":[6916,7007]},{"pos":[7014,7026],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the label ID exists; otherwise, false.","pos":[7028,7074]},{"pos":[7081,7088],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The format of the label parameter value must resemble literalStr(\"<ph id=\"ph1\">@SYS24359</ph>\").","pos":[7090,7168],"source":"The format of the label parameter value must resemble literalStr(\"@SYS24359\")."},{"pos":[7174,7195],"content":"Method extractComment","linkify":"Method extractComment","nodes":[{"content":"Method extractComment","pos":[0,21]}]},{"content":"Returns a comment that is associated with a specified label ID.","pos":[7197,7260]},{"pos":[7309,7319],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"label","pos":[7321,7326]},{"content":"A string that specifies the label ID.","pos":[7329,7366]},{"content":"The string must include the at sign (@) followed by a label file ID and a number.","pos":[7367,7448]},{"pos":[7455,7467],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string value that indicates the comment that is associated with the specified label ID.","pos":[7469,7558]},{"pos":[7565,7572],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If you specify a label ID that does not exist, this method returns the specified ID as a string.","pos":[7574,7670]},{"content":"If you do not include the @ in the label parameter value, the method returns the label ID.","pos":[7671,7761]},{"pos":[7767,7787],"content":"Method extractString","linkify":"Method extractString","nodes":[{"content":"Method extractString","pos":[0,20]}]},{"content":"Returns the text that is associated with a specified label ID.","pos":[7789,7851]},{"pos":[7899,7909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"label","pos":[7911,7916]},{"content":"A string data type that specifies a label ID.","pos":[7919,7964]},{"content":"The string must include the at sign (@) followed by a label file ID and a number.","pos":[7965,8046]},{"pos":[8053,8065],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string data type value that indicates the text that is associated with the specified label ID.","pos":[8067,8163]},{"pos":[8170,8177],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If you specify a label ID that does not exist, the method returns the specified ID as a string.","pos":[8179,8274]},{"content":"If you do not include the @ in the label parameter value, the method returns the label ID.","pos":[8275,8365]},{"pos":[8371,8395],"content":"Method getFirstLabelFile","linkify":"Method getFirstLabelFile","nodes":[{"content":"Method getFirstLabelFile","pos":[0,24]}]},{"content":"Returns the first label file ID record.","pos":[8397,8436]},{"pos":[8479,8491],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string data type value that indicates the label file ID.","pos":[8493,8551]},{"pos":[8558,8565],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A label file ID is a three-letter identifier for a label file.","pos":[8567,8629]},{"pos":[8635,8665],"content":"Method getLabelFileCreatedDate","linkify":"Method getLabelFileCreatedDate","nodes":[{"content":"Method getLabelFileCreatedDate","pos":[0,30]}]},{"content":"Returns the date that a specified label file was created.","pos":[8667,8724]},{"pos":[8801,8811],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"labelFile","pos":[8813,8822]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[8825,8897]},{"content":"language","pos":[8909,8917]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[8920,8992]},{"pos":[8999,9011],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A Date data type value that indicates when a label file is created.","pos":[9013,9080]},{"pos":[9087,9094],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use the date2str function to convert the date to a text string.","pos":[9096,9167]},{"pos":[9173,9203],"content":"Method getLabelFileCreatedTime","linkify":"Method getLabelFileCreatedTime","nodes":[{"content":"Method getLabelFileCreatedTime","pos":[0,30]}]},{"content":"Returns the time that a specified label file was created.","pos":[9205,9262]},{"pos":[9338,9348],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"labelFile","pos":[9350,9359]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[9362,9434]},{"content":"language","pos":[9446,9454]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[9457,9529]},{"pos":[9536,9548],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer data type value that indicates the time that a label file is created.","pos":[9550,9630]},{"pos":[9637,9644],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For more information, see How to: Create a Label File.","pos":[9646,9700]},{"content":"You can use the time2str function to convert the integer to a text string.","pos":[9701,9775]},{"pos":[9781,9816],"content":"Method getLabelFileModificationDate","linkify":"Method getLabelFileModificationDate","nodes":[{"content":"Method getLabelFileModificationDate","pos":[0,35]}]},{"content":"Returns the date that a specified label file was modified.","pos":[9818,9876]},{"pos":[9958,9968],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"labelFile","pos":[9970,9979]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[9982,10054]},{"content":"language","pos":[10066,10074]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[10077,10149]},{"pos":[10156,10168],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A Date data type value that indicates when a label file was modified.","pos":[10170,10239]},{"pos":[10246,10253],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use the date2str function to convert the date to a text string.","pos":[10255,10326]},{"pos":[10332,10367],"content":"Method getLabelFileModificationTime","linkify":"Method getLabelFileModificationTime","nodes":[{"content":"Method getLabelFileModificationTime","pos":[0,35]}]},{"content":"Returns the time that a specified label file was modified.","pos":[10369,10427]},{"pos":[10508,10518],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"labelFile","pos":[10520,10529]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[10532,10604]},{"content":"language","pos":[10616,10624]},{"content":"A string data type that specifies a language by using a language prefix.","pos":[10627,10699]},{"pos":[10706,10718],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the time that a label file was modified.","pos":[10720,10792]},{"pos":[10799,10806],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use the time2str function to convert the integer to a text string.","pos":[10808,10882]},{"pos":[10888,10911],"content":"Method getNextLabelFile","linkify":"Method getNextLabelFile","nodes":[{"content":"Method getNextLabelFile","pos":[0,23]}]},{"content":"Returns the next label file ID record.","pos":[10913,10951]},{"pos":[10993,11005],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string data type value that indicates the label file ID.","pos":[11007,11065]},{"pos":[11072,11079],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A label file ID is a three-letter identifier for a label file.","pos":[11081,11143]},{"pos":[11149,11162],"content":"Method insert","linkify":"Method insert","nodes":[{"content":"Method insert","pos":[0,13]}]},{"content":"Creates a label ID for a specified text string.","pos":[11164,11211]},{"pos":[11276,11286],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"text","pos":[11288,11292]},{"content":"A string data type that specifies a three-letter label file ID.","pos":[11295,11358]},{"content":"comment","pos":[11370,11377]},{"content":"A string data type that specifies a three-letter label file ID.","pos":[11380,11443]},{"content":"module","pos":[11455,11461]},{"content":"A string data type that specifies a three-letter label file ID.","pos":[11464,11527]},{"pos":[11534,11546],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string data type value for the label ID that is created.","pos":[11548,11606]},{"pos":[11613,11620],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This operation allocates a new label ID across all languages.","pos":[11622,11683]},{"pos":[11689,11703],"content":"Method labelId","linkify":"Method labelId","nodes":[{"content":"Method labelId","pos":[0,14]}]},{"content":"Returns the number that is included in a specified label ID.","pos":[11705,11765]},{"pos":[11807,11817],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"label","pos":[11819,11824]},{"content":"A string data type that specifies the label ID.","pos":[11827,11874]},{"content":"The string must include the at sign (@) followed by a label file ID and a number.","pos":[11875,11956]},{"pos":[11963,11975],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer data type value that indicates the number that is included in a label ID.","pos":[11977,12061]},{"pos":[12068,12075],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You must call the searchFirst or searchNext method, and then pass the return value as a parameter to this method.","pos":[12077,12190]},{"pos":[12196,12213],"content":"Method maxLabelId","linkify":"Method maxLabelId","nodes":[{"content":"Method maxLabelId","pos":[0,17]}]},{"content":"Returns the ID for the last label in the specified label file.","pos":[12215,12277]},{"pos":[12323,12333],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"module","pos":[12335,12341]},{"content":"A string that specifies a three-letter label file ID.","pos":[12344,12397]},{"pos":[12404,12416],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that indicates the maximum label ID for the specified label file.","pos":[12418,12494]},{"pos":[12500,12513],"content":"Method modify","linkify":"Method modify","nodes":[{"content":"Method modify","pos":[0,13]}]},{"content":"Modifies the text and comment that are associated with a specified label.","pos":[12515,12588]},{"pos":[12658,12668],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"label","pos":[12670,12675]},{"content":"A string that specifies the comment that is associated with a label ID.","pos":[12678,12749]},{"content":"text","pos":[12761,12765]},{"content":"A string that specifies the comment that is associated with a label ID.","pos":[12768,12839]},{"content":"comment","pos":[12851,12858]},{"content":"A string that specifies the comment that is associated with a label ID.","pos":[12861,12932]},{"pos":[12939,12951],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the label ID is modified; otherwise, false.","pos":[12953,13004]},{"pos":[13010,13025],"content":"Method moduleId","linkify":"Method moduleId","nodes":[{"content":"Method moduleId","pos":[0,15]}]},{"content":"Returns the label file ID for a specified label ID.","pos":[13027,13078]},{"pos":[13121,13131],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"label","pos":[13133,13138]},{"content":"A string that specifies the label ID.","pos":[13141,13178]},{"content":"The string must include the at sign (@) followed by a label file ID and a number.","pos":[13179,13260]},{"pos":[13267,13279],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that indicates the label file ID for a specified label ID.","pos":[13281,13348]},{"pos":[13355,13362],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You need to call the searchFirst or searchNext method, and then pass the return value as a parameter to the labelId method.","pos":[13364,13487]},{"pos":[13493,13514],"content":"Method moreLabelFiles","linkify":"Method moreLabelFiles","nodes":[{"content":"Method moreLabelFiles","pos":[0,21]}]},{"content":"Indicates whether there are additional label files.","pos":[13516,13567]},{"pos":[13611,13623],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if there are additional label files; otherwise, false.","pos":[13625,13684]},{"pos":[13690,13701],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Returns a label ID, based on a specified label file ID and label ID number.","pos":[13703,13778]},{"pos":[13831,13841],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"module","pos":[13843,13849]},{"content":"An integer that specifies the numeric part of a label ID.","pos":[13852,13909]},{"content":"labelId","pos":[13921,13928]},{"content":"An integer that specifies the numeric part of a label ID.","pos":[13931,13988]},{"pos":[13995,14007],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string value that indicates the label ID.","pos":[14009,14052]},{"pos":[14058,14076],"content":"Method searchFirst","linkify":"Method searchFirst","nodes":[{"content":"Method searchFirst","pos":[0,18]}]},{"content":"Returns the first label ID that is found for a specified search term.","pos":[14078,14147]},{"pos":[14200,14210],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"searchString","pos":[14212,14224]},{"content":"A string that specifies the search term.","pos":[14227,14267]},{"pos":[14274,14286],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string value that indicates the label ID.","pos":[14288,14331]},{"pos":[14337,14354],"content":"Method searchNext","linkify":"Method searchNext","nodes":[{"content":"Method searchNext","pos":[0,17]}]},{"content":"Returns the next label ID that is found for a search term that is passed to the searchFirst method.","pos":[14356,14455]},{"pos":[14491,14503],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string value that indicates the label ID.","pos":[14505,14548]},{"pos":[14555,14562],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You must call the searchFirst method before you call this method.","pos":[14564,14629]},{"content":"Otherwise, this method returns a random label ID.","pos":[14630,14679]},{"pos":[14685,14697],"content":"Method flush","linkify":"Method flush","nodes":[{"content":"Method flush","pos":[0,12]}]},{"content":"Flushes the label file buffers to disk.","pos":[14699,14738]},{"pos":[14809,14819],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"labelFileId","pos":[14821,14832]},{"content":"A string that specifies a language by using a language prefix.","pos":[14835,14897]},{"content":"language","pos":[14909,14917]},{"content":"A string that specifies a language by using a language prefix.","pos":[14920,14982]},{"pos":[14989,15001],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15007,15017],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates a new instance of the Label class.","pos":[15019,15061]},{"pos":[15105,15115],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"language","pos":[15117,15125]},{"content":"A string that specifies a language by using a language prefix.","pos":[15128,15190]},{"pos":[15196,15211],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"content":"Closes the current label file.","pos":[15213,15243]},{"pos":[15276,15297],"content":"Class LabelBulkEditor","linkify":"Class LabelBulkEditor","nodes":[{"content":"Class LabelBulkEditor","pos":[0,21]}]},{"content":"The LabelBulkEditor class is used to quickly modify label files.","pos":[15340,15404]},{"pos":[15410,15417],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The LabelBulkEditor class is instantiated through the Label.bulkEditor() method.","pos":[15419,15499]},{"content":"The label file is opened for modification when the instance of the class is created, and the label file is closed when the instance has garbage collected.","pos":[15500,15654]},{"pos":[15660,15668],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[15674,15681],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[15685,15691]},{"content":"Description","pos":[15747,15758]},{"content":"public boolean delete(str label)","pos":[15971,16003]},{"content":"Deletes a specified label.","pos":[16033,16059]},{"content":"public boolean modify(str label, str text, <ph id=\"ph1\">\\[</ph>str comment<ph id=\"ph2\">\\]</ph>)","pos":[16114,16173],"source":"public boolean modify(str label, str text, \\[str comment\\])"},{"content":"Modifies the text and comment that are associated with a specified label ID.","pos":[16176,16252]},{"content":"public void new()","pos":[16257,16274]},{"content":"Initializes an instance of the LabelBulkEditor class.","pos":[16319,16372]},{"pos":[16403,16416],"content":"Method delete","linkify":"Method delete","nodes":[{"content":"Method delete","pos":[0,13]}]},{"content":"Deletes a specified label.","pos":[16418,16444]},{"pos":[16489,16499],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"label","pos":[16501,16506]},{"content":"A string that specifies the label ID.","pos":[16509,16546]},{"content":"The string must include an at sign (@) followed by a label file ID and a number.","pos":[16547,16627]},{"pos":[16634,16646],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the label is deleted; otherwise, false.","pos":[16648,16695]},{"pos":[16701,16714],"content":"Method modify","linkify":"Method modify","nodes":[{"content":"Method modify","pos":[0,13]}]},{"content":"Modifies the text and comment that are associated with a specified label ID.","pos":[16716,16792]},{"pos":[16862,16872],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"label","pos":[16874,16879]},{"content":"A string that specifies the comment that is associated with the label ID.","pos":[16882,16955]},{"content":"text","pos":[16967,16971]},{"content":"A string that specifies the comment that is associated with the label ID.","pos":[16974,17047]},{"content":"comment","pos":[17059,17066]},{"content":"A string that specifies the comment that is associated with the label ID.","pos":[17069,17142]},{"pos":[17149,17161],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the label is modified; otherwise, false.","pos":[17163,17211]},{"pos":[17217,17227],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes an instance of the LabelBulkEditor class.","pos":[17229,17282]},{"pos":[17310,17332],"content":"Class LastAotSelection","linkify":"Class LastAotSelection","nodes":[{"content":"Class LastAotSelection","pos":[0,22]}]},{"pos":[17380,17387],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17393,17401],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[17407,17414],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[17418,17424]},{"content":"Description","pos":[17453,17464]},{"content":"public TreeNode first()","pos":[17612,17635]},{"content":"public TreeNode next()","pos":[17709,17731]},{"content":"public ProjectNode projectRoot()","pos":[17806,17838]},{"content":"public int selectionCount()","pos":[17903,17930]},{"content":"public void new()","pos":[18000,18017]},{"content":"Initializes a new instance of the LastAotSelection class.","pos":[18035,18092]},{"content":"public void finalize()","pos":[18097,18119]},{"pos":[18197,18209],"content":"Method first","linkify":"Method first","nodes":[{"content":"Method first","pos":[0,12]}]},{"pos":[18245,18257],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18263,18274],"content":"Method next","linkify":"Method next","nodes":[{"content":"Method next","pos":[0,11]}]},{"pos":[18309,18321],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18327,18345],"content":"Method projectRoot","linkify":"Method projectRoot","nodes":[{"content":"Method projectRoot","pos":[0,18]}]},{"pos":[18390,18402],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18408,18429],"content":"Method selectionCount","linkify":"Method selectionCount","nodes":[{"content":"Method selectionCount","pos":[0,21]}]},{"pos":[18469,18481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18487,18497],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the LastAotSelection class.","pos":[18499,18556]},{"pos":[18585,18600],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[18633,18643],"content":"Class List","linkify":"Class List","nodes":[{"content":"Class List","pos":[0,10]}]},{"content":"Contains any number of elements that are accessed sequentially.","pos":[18675,18738]},{"content":"Lists are structures that can contain values of any X++ type.","pos":[18739,18800]},{"content":"All the values in the list must be of the same type.","pos":[18801,18853]},{"pos":[18859,18866],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The type of the values in the list is specified when the list is created and cannot be changed afterwards.","pos":[18868,18974]},{"content":"The implementation of lists makes traversal of the list elements very fast.","pos":[18975,19050]},{"content":"Lists can be traversed by using the ListEnumerator class.","pos":[19051,19108]},{"content":"To create a ListEnumerator object, use List.getEnumerator.","pos":[19109,19167]},{"pos":[19173,19181],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of integers and prints out a description of the list and the values that it contains.","pos":[19183,19305]},{"pos":[19649,19656],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[19660,19666]},{"content":"Description","pos":[19716,19727]},{"content":"public AnyType addEnd(AnyType element)","pos":[19952,19990]},{"content":"Adds a value to the end of the list.","pos":[20008,20044]},{"content":"public AnyType addStart(AnyType element)","pos":[20098,20138]},{"content":"Adds a value to the start of the list.","pos":[20154,20192]},{"content":"public str definitionString()","pos":[20244,20273]},{"content":"Returns a description of the type of the elements in the list.","pos":[20300,20362]},{"content":"public int elements()","pos":[20390,20411]},{"content":"Specifies the number of elements in a list.","pos":[20446,20489]},{"content":"public boolean empty()","pos":[20536,20558]},{"content":"Determines whether a list is empty.","pos":[20592,20627]},{"content":"public boolean equalTo(List l)","pos":[20682,20712]},{"content":"Determines whether a list is the same as the current list.","pos":[20738,20796]},{"content":"public ListEnumerator getEnumerator()","pos":[20828,20865]},{"content":"Creates an enumerator for a list which allows you to traverse the list.","pos":[20884,20955]},{"content":"public container pack()","pos":[20974,20997]},{"content":"Serializes the current instance of the List class.","pos":[21030,21080]},{"content":"public str toString()","pos":[21120,21141]},{"content":"Returns a description of the values in the list.","pos":[21176,21224]},{"content":"public Types typeId()","pos":[21266,21287]},{"content":"Returns the type of the values in a list.","pos":[21322,21363]},{"content":"public str xml(<ph id=\"ph1\">\\[</ph>int indent<ph id=\"ph2\">\\]</ph>)","pos":[21412,21442],"source":"public str xml(\\[int indent\\])"},{"content":"Returns an XML string that represents the current object.","pos":[21468,21525]},{"content":"::public static List create(container container)","pos":[21558,21606]},{"content":"Creates a list from the container obtained from a prior call to the List.pack method.","pos":[21614,21699]},{"content":"::public static List createFromXML(Object xmlnode)","pos":[21704,21754]},{"content":"::public static boolean equal(List list1, List list2)","pos":[21850,21903]},{"content":"Determines whether two lists are identical.","pos":[21906,21949]},{"content":"::public static List merge(List list1, List list2)","pos":[21996,22046]},{"content":"Combines two lists to create a new list.","pos":[22052,22092]},{"content":"public void appendList(List list)","pos":[22142,22175]},{"content":"public void new(Types Type)","pos":[22288,22315]},{"content":"Creates a list.","pos":[22344,22359]},{"pos":[22437,22450],"content":"Method addEnd","linkify":"Method addEnd","nodes":[{"content":"Method addEnd","pos":[0,13]}]},{"content":"Adds a value to the end of the list.","pos":[22452,22488]},{"pos":[22539,22549],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"element","pos":[22551,22558]},{"content":"The value to add to the end of the list.","pos":[22561,22601]},{"pos":[22608,22620],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value that is added to the list.","pos":[22622,22658]},{"pos":[22664,22679],"content":"Method addStart","linkify":"Method addStart","nodes":[{"content":"Method addStart","pos":[0,15]}]},{"content":"Adds a value to the start of the list.","pos":[22681,22719]},{"pos":[22772,22782],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"element","pos":[22784,22791]},{"content":"The value to add to the start of the list.","pos":[22794,22836]},{"pos":[22843,22855],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value added to the list.","pos":[22857,22885]},{"pos":[22892,22899],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Elements can be added to the end of the list by using the List.addEnd method.","pos":[22901,22978]},{"pos":[22985,22993],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of integers, adds the values 1 and 2 to the end of the list, and then adds the value 3 to the start of the list.","pos":[22995,23144]},{"content":"The values that are returned by the List.toString method are {3, 1, 2}.","pos":[23145,23216]},{"pos":[23561,23584],"content":"Method definitionString","linkify":"Method definitionString","nodes":[{"content":"Method definitionString","pos":[0,23]}]},{"content":"Returns a description of the type of the elements in the list.","pos":[23586,23648]},{"pos":[23690,23702],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains a definition of the list.","pos":[23704,23752]},{"pos":[23759,23766],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For example, this method could return \"list of int\".","pos":[23768,23820]},{"content":"To print a list of the values within the list, use the List.toString method.","pos":[23821,23897]},{"pos":[23904,23912],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of integers.","pos":[23914,23963]},{"content":"The definitionString method is used to print a description of the list.","pos":[23964,24035]},{"pos":[24379,24394],"content":"Method elements","linkify":"Method elements","nodes":[{"content":"Method elements","pos":[0,15]}]},{"content":"Specifies the number of elements in a list.","pos":[24396,24439]},{"pos":[24473,24485],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of elements in the list.","pos":[24487,24522]},{"pos":[24529,24537],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of integers and adds some elements to it.","pos":[24539,24617]},{"content":"The elements method is used to test whether there are three elements in the list.","pos":[24618,24699]},{"pos":[24938,24950],"content":"Method empty","linkify":"Method empty","nodes":[{"content":"Method empty","pos":[0,12]}]},{"content":"Determines whether a list is empty.","pos":[24952,24987]},{"pos":[25022,25034],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the list is empty; otherwise, false.","pos":[25036,25080]},{"pos":[25086,25100],"content":"Method equalTo","linkify":"Method equalTo","nodes":[{"content":"Method equalTo","pos":[0,14]}]},{"content":"Determines whether a list is the same as the current list.","pos":[25102,25160]},{"pos":[25203,25213],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"l","pos":[25215,25216]},{"content":"The list to be compared with the current list.","pos":[25219,25265]},{"pos":[25272,25284],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the specified list is identical to the list on which the method is called; otherwise, false.","pos":[25286,25386]},{"pos":[25393,25400],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A list is equal to another list if the two lists are the same type, contain the same number of elements, and the elements occur in the same order.","pos":[25402,25548]},{"content":"The equalTo method is a shortcut for using the List.equal method: equal(this, l).","pos":[25549,25630]},{"pos":[25636,25656],"content":"Method getEnumerator","linkify":"Method getEnumerator","nodes":[{"content":"Method getEnumerator","pos":[0,20]}]},{"content":"Creates an enumerator for a list which allows you to traverse the list.","pos":[25658,25729]},{"pos":[25779,25791],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A listEnumerator object for the current list.","pos":[25793,25838]},{"pos":[25844,25855],"content":"Method pack","linkify":"Method pack","nodes":[{"content":"Method pack","pos":[0,11]}]},{"content":"Serializes the current instance of the List class.","pos":[25857,25907]},{"pos":[25943,25955],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that contains the current instance of the List class.","pos":[25957,26022]},{"pos":[26029,26036],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The container created by this method contains 3 elements before the first element from the list:","pos":[26038,26134]},{"content":"A version number for the container","pos":[26140,26174]},{"content":"An integer that identifies the data type of the list elements","pos":[26179,26240]},{"content":"The number of elements in the list","pos":[26245,26279]},{"content":"If the elements in the list are objects, packing is performed by calling the pack method successively on each object to yield a subcontainer.","pos":[26281,26422]},{"content":"The list can be retrieved from the packed container by using the List.create method.","pos":[26423,26507]},{"pos":[26514,26522],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of records and passes in the packed list as a parameter for creating a new projReverseMarking object.","pos":[26524,26662]},{"pos":[27250,27265],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a description of the values in the list.","pos":[27267,27315]},{"pos":[27349,27361],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that describes the values of the elements in the list.","pos":[27363,27426]},{"pos":[27433,27440],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To print a description of the type of the elements in the list, use the List.definitionString method.","pos":[27442,27543]},{"pos":[27550,27558],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of integers.","pos":[27560,27609]},{"content":"The toString method is used to print a description of the values in the list.","pos":[27610,27687]},{"pos":[28031,28044],"content":"Method typeId","linkify":"Method typeId","nodes":[{"content":"Method typeId","pos":[0,13]}]},{"content":"Returns the type of the values in a list.","pos":[28046,28087]},{"pos":[28121,28133],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The type of the list elements.","pos":[28135,28165]},{"pos":[28172,28179],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The type of the list is specified when the list is created, and remains the same throughout the life of the list.","pos":[28181,28294]},{"pos":[28300,28310],"content":"Method xml","linkify":"Method xml","nodes":[{"content":"Method xml","pos":[0,10]}]},{"content":"Returns an XML string that represents the current object.","pos":[28312,28369]},{"pos":[28410,28420],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"indent","pos":[28422,28428]},{"content":"The amount of indentation of the returned XML string; optional.","pos":[28431,28494]},{"pos":[28501,28513],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An XML string that represents the current object.","pos":[28515,28564]},{"pos":[28571,28578],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be overridden to return values that are meaningful for that type.","pos":[28580,28661]},{"pos":[28667,28680],"content":"Method create","linkify":"Method create","nodes":[{"content":"Method create","pos":[0,13]}]},{"content":"Creates a list from the container obtained from a prior call to the List.pack method.","pos":[28682,28767]},{"pos":[28826,28836],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"container","pos":[28838,28847]},{"content":"The container that holds the packed list.","pos":[28850,28891]},{"pos":[28898,28910],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list identical to the one that was packed into the container.","pos":[28912,28975]},{"pos":[28982,28990],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list and packs it into a container.","pos":[28992,29059]},{"content":"The create method is then used to unpack the container and create a list identical to the original one.","pos":[29060,29163]},{"pos":[29582,29602],"content":"Method createFromXML","linkify":"Method createFromXML","nodes":[{"content":"Method createFromXML","pos":[0,20]}]},{"pos":[29663,29673],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"xmlnode","pos":[29675,29682]},{"pos":[29691,29703],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29709,29721],"content":"Method equal","linkify":"Method equal","nodes":[{"content":"Method equal","pos":[0,12]}]},{"content":"Determines whether two lists are identical.","pos":[29723,29766]},{"pos":[29830,29840],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"list1","pos":[29842,29847]},{"content":"The second list to be compared.","pos":[29850,29881]},{"content":"list2","pos":[29893,29898]},{"content":"The second list to be compared.","pos":[29901,29932]},{"pos":[29939,29951],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the two lists are identical; otherwise, false.","pos":[29953,30007]},{"pos":[30014,30021],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A list is equal to another list if the two lists are the same type, contain the same number of elements, and the elements occur in the same order.","pos":[30023,30169]},{"pos":[30175,30187],"content":"Method merge","linkify":"Method merge","nodes":[{"content":"Method merge","pos":[0,12]}]},{"content":"Combines two lists to create a new list.","pos":[30189,30229]},{"pos":[30290,30300],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"list1","pos":[30302,30307]},{"content":"The list that will be added to the end of the first to create the new list.","pos":[30310,30385]},{"content":"list2","pos":[30397,30402]},{"content":"The list that will be added to the end of the first to create the new list.","pos":[30405,30480]},{"pos":[30487,30499],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new list.","pos":[30501,30514]},{"pos":[30521,30528],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The types of the lists must be the same.","pos":[30530,30570]},{"pos":[30577,30585],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates two lists of integer values, merges them to create a new list, and then prints out the values in the new combined list.","pos":[30587,30736]},{"pos":[31196,31213],"content":"Method appendList","linkify":"Method appendList","nodes":[{"content":"Method appendList","pos":[0,17]}]},{"pos":[31259,31269],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"list","pos":[31271,31275]},{"pos":[31283,31293],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates a list.","pos":[31295,31310]},{"pos":[31350,31360],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Type","pos":[31362,31366]},{"content":"The type that the elements in the list should have.","pos":[31369,31420]},{"pos":[31427,31434],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The possible values for the Type parameter are supplied by the Types system enum.","pos":[31436,31517]},{"content":"After you have created a list, you cannot change the type of the elements it contains.","pos":[31518,31604]},{"pos":[31611,31619],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of strings.","pos":[31621,31669]},{"pos":[31772,31792],"content":"Class ListEnumerator","linkify":"Class ListEnumerator","nodes":[{"content":"Class ListEnumerator","pos":[0,20]}]},{"content":"The ListEnumerator class lets you traverse the elements in a list.","pos":[31834,31900]},{"pos":[31906,31913],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"List enumerators start before the first element in the list.","pos":[31915,31975]},{"content":"You must call the ListEnumerator.moveNext method to make it point to the first element in the list.","pos":[31976,32075]},{"content":"It is best practice to use the ListEnumerator class instead of the ListIterator class, because enumerators are automatically created on the same tier as the list (when the list.getEnumerator method is called).","pos":[32076,32285]},{"content":"This avoids a potential problem in code that is marked as Called from, where the iterator and list can be on separate tiers.","pos":[32286,32410]},{"content":"In addition, list enumerators require less code than list iterators and therefore perform slightly better.","pos":[32411,32517]},{"content":"The only situation where you have to use a list iterator is if you want to delete items from a list (use the ListIterator.delete method).","pos":[32518,32655]},{"pos":[32661,32669],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list of integers and puts some values into it.","pos":[32671,32749]},{"content":"It then creates an enumerator, and then sets the enumerator to the first element in the list and then the second element in the list.","pos":[32750,32883]},{"pos":[33666,33673],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[33677,33683]},{"content":"Description","pos":[33709,33720]},{"content":"public AnyType current()","pos":[33969,33993]},{"content":"Retrieves the value that is pointed to by the enumerator.","pos":[34001,34058]},{"content":"public str definitionString()","pos":[34115,34144]},{"content":"Returns a description of the enumerator.","pos":[34147,34187]},{"content":"public boolean moveNext()","pos":[34261,34286]},{"content":"Determines whether the enumerator denotes a valid list element.","pos":[34293,34356]},{"content":"public str toString()","pos":[34407,34428]},{"content":"Returns a description of the content of the element in the list that the enumerator is currently pointing to.","pos":[34439,34548]},{"content":"public void reset()","pos":[34553,34572]},{"content":"Moves the enumerator to the start of the list.","pos":[34585,34631]},{"pos":[34702,34716],"content":"Method current","linkify":"Method current","nodes":[{"content":"Method current","pos":[0,14]}]},{"content":"Retrieves the value that is pointed to by the enumerator.","pos":[34718,34775]},{"pos":[34812,34824],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value that is currently pointed to in the list.","pos":[34826,34877]},{"content":"The type of the return value is determined by the type of the items in the list.","pos":[34878,34958]},{"pos":[34965,34973],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example iterates through the list and sets the dimensionTopic variable to the value of the current list element.","pos":[34975,35101]},{"pos":[35440,35463],"content":"Method definitionString","linkify":"Method definitionString","nodes":[{"content":"Method definitionString","pos":[0,23]}]},{"content":"Returns a description of the enumerator.","pos":[35465,35505]},{"pos":[35547,35559],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains a description of the enumerator.","pos":[35561,35616]},{"pos":[35623,35630],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For example, an enumerator for a list of integers would return int list enumerator.","pos":[35632,35715]},{"pos":[35722,35730],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list and an enumerator for the list.","pos":[35732,35800]},{"content":"It uses the definitionString method to print a description of the enumerator.","pos":[35801,35878]},{"pos":[36249,36264],"content":"Method moveNext","linkify":"Method moveNext","nodes":[{"content":"Method moveNext","pos":[0,15]}]},{"content":"Determines whether the enumerator denotes a valid list element.","pos":[36266,36329]},{"pos":[36367,36379],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the current position in the list holds a valid element; otherwise, false.","pos":[36381,36462]},{"pos":[36469,36476],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"List enumerators start before the first element in the list.","pos":[36478,36538]},{"content":"You must call the moveNext method to make it point to the first element in the list.","pos":[36539,36623]},{"pos":[36630,36638],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example uses the moveNext method to check whether there is another element in the list and then sets the dimensionTopic variable to the value of the current list element.","pos":[36640,36824]},{"pos":[37163,37178],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a description of the content of the element in the list that the enumerator is currently pointing to.","pos":[37180,37289]},{"pos":[37323,37335],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains a description of the current list element.","pos":[37337,37402]},{"pos":[37409,37417],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list, and then prints the content of the first and second elements in the list.","pos":[37419,37530]},{"pos":[38228,38240],"content":"Method reset","linkify":"Method reset","nodes":[{"content":"Method reset","pos":[0,12]}]},{"content":"Moves the enumerator to the start of the list.","pos":[38242,38288]},{"pos":[38320,38327],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The reset method moves the enumerator to the start of the list, before the first element in the list.","pos":[38329,38430]},{"content":"You must call the ListEnumerator.moveNext method to make it point to the first element in the list.","pos":[38431,38530]},{"pos":[38537,38545],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list and then an enumerator for the list.","pos":[38547,38620]},{"content":"It uses the reset method to move to the start of the list and then uses the moveNext method to move to the first element in the list.","pos":[38621,38754]},{"pos":[39321,39339],"content":"Class ListIterator","linkify":"Class ListIterator","nodes":[{"content":"Class ListIterator","pos":[0,18]}]},{"content":"The ListIterator class is used to iterate over the elements in a list.","pos":[39379,39449]},{"pos":[39455,39462],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"List iterators can be viewed as pointers into the lists over which they iterate.","pos":[39464,39544]},{"content":"Functionality is available to start the iteration, determine whether more elements are available, and fetch the element that is pointed to by the iterator.","pos":[39545,39700]},{"content":"The order in which the elements occur during iteration is defined by the sequence in which the elements are inserted.","pos":[39701,39818]},{"content":"Elements can be inserted by using the List.addStart, List.addEnd, or ListIterator.insert method.","pos":[39819,39915]},{"content":"It is better to use the ListEnumerator class than the ListIterator class.","pos":[39916,39989]},{"content":"List iterators and the maps over which they iterate must be on the same client/server side.","pos":[39990,40081]},{"content":"If you use the ListIterator class, and code is marked as Called from, it is possible that the list and the iterator will be on different tiers.","pos":[40082,40225]},{"content":"In this case, the code will fail.","pos":[40226,40259]},{"content":"If you use the ListEnumerator class, the enumerator is automatically created on the same tier as the list.","pos":[40260,40366]},{"content":"Additionally, to move to the next item in a list, you must explicitly call the more and next methods if you are using a list iterator.","pos":[40367,40501]},{"content":"If you use the ListEnumerator class, you only have to call the moveNext method.","pos":[40502,40581]},{"content":"The only situation where you cannot use a list enumerator is where you need to delete elements from a list.","pos":[40582,40689]},{"content":"For more information, see the delete method.","pos":[40690,40734]},{"pos":[40740,40748],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list and an iterator to point to it.","pos":[40750,40818]},{"content":"It then uses various methods on the ListIterator class to print a description of the list, and the items in the list.","pos":[40819,40936]},{"pos":[41657,41664],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[41668,41674]},{"content":"Description","pos":[41707,41718]},{"content":"public str definitionString()","pos":[41944,41973]},{"content":"Returns a textual representation of the type of the iterator.","pos":[41983,42044]},{"content":"public AnyType insert(AnyType value)","pos":[42082,42118]},{"content":"Inserts a new value at the position in the list that the iterator currently points to.","pos":[42121,42207]},{"content":"public boolean more()","pos":[42220,42241]},{"content":"Determines whether the list iterator points to a valid element.","pos":[42259,42322]},{"content":"public str toString()","pos":[42358,42379]},{"content":"Returns a textual representation of the current list value that is pointed to by the iterator.","pos":[42397,42491]},{"content":"public AnyType value()","pos":[42496,42518]},{"content":"Retrieves the value that is pointed to by the iterator.","pos":[42535,42590]},{"content":"public void begin()","pos":[42634,42653]},{"content":"Moves the iterator to the start of the list.","pos":[42673,42717]},{"content":"public void next()","pos":[42772,42790]},{"content":"Moves the iterator to the next element in the list.","pos":[42811,42862]},{"content":"public void end()","pos":[42910,42927]},{"content":"Moves the iterator past the last element in the list.","pos":[42949,43002]},{"content":"public void delete()","pos":[43048,43068]},{"content":"Removes the element that is pointed to by the iterator from the list.","pos":[43087,43156]},{"content":"public void new(List list)","pos":[43186,43212]},{"content":"Creates a new iterator for a particular list.","pos":[43225,43270]},{"pos":[43327,43350],"content":"Method definitionString","linkify":"Method definitionString","nodes":[{"content":"Method definitionString","pos":[0,23]}]},{"content":"Returns a textual representation of the type of the iterator.","pos":[43352,43413]},{"pos":[43455,43467],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains the type of the iterator.","pos":[43469,43517]},{"pos":[43524,43531],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For example: int list iterator.","pos":[43533,43564]},{"pos":[43570,43583],"content":"Method insert","linkify":"Method insert","nodes":[{"content":"Method insert","pos":[0,13]}]},{"content":"Inserts a new value at the position in the list that the iterator currently points to.","pos":[43585,43671]},{"pos":[43720,43730],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[43732,43737]},{"content":"The value of the item to insert into the list.","pos":[43740,43786]},{"pos":[43793,43805],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value that was inserted into the list.","pos":[43807,43849]},{"pos":[43856,43863],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value parameter must be the same type as the list.","pos":[43865,43919]},{"pos":[43926,43934],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list that has ten items and then uses the ListIterator.insert method to insert a new value as the third item in the list.","pos":[43936,44089]},{"pos":[44779,44790],"content":"Method more","linkify":"Method more","nodes":[{"content":"Method more","pos":[0,11]}]},{"content":"Determines whether the list iterator points to a valid element.","pos":[44792,44855]},{"pos":[44889,44901],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the list iterator points to a valid element; otherwise, false.","pos":[44903,44973]},{"pos":[44980,44987],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Attempting to access an element when this method returns false will cause an error.","pos":[44989,45072]},{"pos":[45079,45087],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example uses the ListIterator.more method to check whether there are more elements in the list and then runs through the while loop, which prints the values of all the elements in the list.","pos":[45089,45292]},{"pos":[45727,45742],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a textual representation of the current list value that is pointed to by the iterator.","pos":[45744,45838]},{"pos":[45872,45884],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains a description of the current value.","pos":[45886,45944]},{"pos":[45951,45958],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the iterator points to the first element in the list, the string will contain an indication of this, in the form \"(begin)<ph id=\"ph1\">\\[</ph>value<ph id=\"ph2\">\\]</ph>\" If the iterator does not point to an element (that is, the more() method returns false), the following string returned is: (end).","pos":[45960,46224],"source":"If the iterator points to the first element in the list, the string will contain an indication of this, in the form \"(begin)\\[value\\]\" If the iterator does not point to an element (that is, the more() method returns false), the following string returned is: (end)."},{"content":"If the iterator points to a value, the string is \"<ph id=\"ph1\">\\[</ph>value<ph id=\"ph2\">\\]</ph>\", where value is a string representation of the element value.","pos":[46225,46347],"source":" If the iterator points to a value, the string is \"\\[value\\]\", where value is a string representation of the element value."},{"pos":[46354,46362],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example prints the following description of the values of the two values in a list:","pos":[46364,46461]},{"content":"(begin) <ph id=\"ph1\">\\[</ph>2<ph id=\"ph2\">\\]</ph>","pos":[46467,46480],"source":"(begin) \\[2\\]"},{"content":"<ph id=\"ph1\">\\[</ph>1<ph id=\"ph2\">\\]</ph>","pos":[46485,46490],"source":"\\[1\\]"},{"pos":[46812,46824],"content":"Method value","linkify":"Method value","nodes":[{"content":"Method value","pos":[0,12]}]},{"content":"Retrieves the value that is pointed to by the iterator.","pos":[46826,46881]},{"pos":[46916,46928],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value that is pointed to by the iterator.","pos":[46930,46975]},{"pos":[46982,46989],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Before you try to retrieve the value of a list element, use the ListIterator.more method to test whether an element exists.","pos":[46991,47114]},{"pos":[47120,47132],"content":"Method begin","linkify":"Method begin","nodes":[{"content":"Method begin","pos":[0,12]}]},{"content":"Moves the iterator to the start of the list.","pos":[47134,47178]},{"pos":[47209,47220],"content":"Method next","linkify":"Method next","nodes":[{"content":"Method next","pos":[0,11]}]},{"content":"Moves the iterator to the next element in the list.","pos":[47222,47273]},{"pos":[47304,47311],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the ListIterator.more method to determine whether the iterator points to a valid element.","pos":[47313,47406]},{"pos":[47413,47421],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example uses the ListIterator.next method to traverse a list as the value of each element is printed.","pos":[47423,47538]},{"pos":[47987,47997],"content":"Method end","linkify":"Method end","nodes":[{"content":"Method end","pos":[0,10]}]},{"content":"Moves the iterator past the last element in the list.","pos":[47999,48052]},{"pos":[48082,48089],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"After this method runs, the ListIterator.more method will return false.","pos":[48091,48162]},{"pos":[48168,48181],"content":"Method delete","linkify":"Method delete","nodes":[{"content":"Method delete","pos":[0,13]}]},{"content":"Removes the element that is pointed to by the iterator from the list.","pos":[48183,48252]},{"pos":[48285,48292],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The iterator will point to the next element after the deletion.","pos":[48294,48357]},{"pos":[48364,48372],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates a list that contains three elements and prints a description of the elements in the list.","pos":[48374,48493]},{"content":"It then deletes the first element in the list and prints a description of the remaining elements.","pos":[48494,48591]},{"pos":[48891,48901],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates a new iterator for a particular list.","pos":[48903,48948]},{"pos":[48987,48997],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"list","pos":[48999,49003]},{"content":"The list for which to create an iterator.","pos":[49006,49047]},{"pos":[49054,49061],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The iterator is positioned at the first value in the list, if the list is not empty.","pos":[49063,49147]},{"content":"Iterators and the lists that they iterate over must be on the same client/server side.","pos":[49148,49234]},{"pos":[49241,49249],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an iterator for a list of integers.","pos":[49251,49316]},{"pos":[49417,49431],"content":"Class ListPage","linkify":"Class ListPage","nodes":[{"content":"Class ListPage","pos":[0,14]}]},{"pos":[49469,49476],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[49482,49490],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[49496,49503],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[49507,49513]},{"content":"Description","pos":[49585,49596]},{"content":"public str actionPaneControlParameters(str controlName, <ph id=\"ph1\">\\[</ph>str parameters<ph id=\"ph2\">\\]</ph>)","pos":[49771,49846],"source":"public str actionPaneControlParameters(str controlName, \\[str parameters\\])"},{"content":"public Array activeActionPaneTabNames()","pos":[49903,49942]},{"content":"Gets the name of the specified active tab.","pos":[49981,50023]},{"content":"public str caption(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[50035,50068],"source":"public str caption(\\[str value\\])"},{"content":"public ListPageArgs listPageArgs()","pos":[50167,50201]},{"content":"public int listPageFieldDataField(str fieldName)","pos":[50299,50347]},{"content":"public Array listPageFieldNames()","pos":[50431,50464]},{"content":"public int listPageFieldTableId(str fieldName)","pos":[50563,50609]},{"content":"public boolean listPageFieldVisible(str fieldName, <ph id=\"ph1\">\\[</ph>boolean visible<ph id=\"ph2\">\\]</ph>)","pos":[50695,50766],"source":"public boolean listPageFieldVisible(str fieldName, \\[boolean visible\\])"},{"content":"public str modeledQueryName(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[50827,50869],"source":"public str modeledQueryName(\\[str value\\])"},{"content":"public void new()","pos":[50959,50976]},{"content":"Initializes a new instance of the ListPage class.","pos":[51037,51086]},{"pos":[51094,51128],"content":"Method actionPaneControlParameters","linkify":"Method actionPaneControlParameters","nodes":[{"content":"Method actionPaneControlParameters","pos":[0,34]}]},{"pos":[51214,51224],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"controlName","pos":[51226,51237]},{"content":"parameters","pos":[51251,51261]},{"pos":[51270,51282],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51288,51319],"content":"Method activeActionPaneTabNames","linkify":"Method activeActionPaneTabNames","nodes":[{"content":"Method activeActionPaneTabNames","pos":[0,31]}]},{"content":"Gets the name of the specified active tab.","pos":[51321,51363]},{"pos":[51415,51427],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An array that contains the names of the active tabs.","pos":[51429,51481]},{"pos":[51487,51501],"content":"Method caption","linkify":"Method caption","nodes":[{"content":"Method caption","pos":[0,14]}]},{"pos":[51545,51555],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[51557,51562]},{"pos":[51571,51583],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51589,51608],"content":"Method listPageArgs","linkify":"Method listPageArgs","nodes":[{"content":"Method listPageArgs","pos":[0,19]}]},{"pos":[51655,51667],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51673,51702],"content":"Method listPageFieldDataField","linkify":"Method listPageFieldDataField","nodes":[{"content":"Method listPageFieldDataField","pos":[0,29]}]},{"pos":[51763,51773],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldName","pos":[51775,51784]},{"pos":[51793,51805],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51811,51836],"content":"Method listPageFieldNames","linkify":"Method listPageFieldNames","nodes":[{"content":"Method listPageFieldNames","pos":[0,25]}]},{"pos":[51882,51894],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[51900,51927],"content":"Method listPageFieldTableId","linkify":"Method listPageFieldTableId","nodes":[{"content":"Method listPageFieldTableId","pos":[0,27]}]},{"pos":[51986,51996],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldName","pos":[51998,52007]},{"pos":[52016,52028],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[52034,52061],"content":"Method listPageFieldVisible","linkify":"Method listPageFieldVisible","nodes":[{"content":"Method listPageFieldVisible","pos":[0,27]}]},{"pos":[52143,52153],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldName","pos":[52155,52164]},{"content":"visible","pos":[52178,52185]},{"pos":[52194,52206],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[52212,52235],"content":"Method modeledQueryName","linkify":"Method modeledQueryName","nodes":[{"content":"Method modeledQueryName","pos":[0,23]}]},{"pos":[52288,52298],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[52300,52305]},{"pos":[52314,52326],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[52332,52342],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the ListPage class.","pos":[52344,52393]},{"pos":[52421,52439],"content":"Class ListPageArgs","linkify":"Class ListPageArgs","nodes":[{"content":"Class ListPageArgs","pos":[0,18]}]},{"pos":[52485,52492],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[52498,52506],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[52512,52519],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[52523,52529]},{"content":"Description","pos":[52532,52543]},{"pos":[52575,52600],"content":"Class ListPageInteraction","linkify":"Class ListPageInteraction","nodes":[{"content":"Class ListPageInteraction","pos":[0,25]}]},{"pos":[52660,52667],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[52673,52681],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[52687,52694],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[52698,52704]},{"content":"Description","pos":[52749,52760]},{"content":"public ListPage listPage()","pos":[52932,52958]},{"content":"public void tabChanged(container activeTabNames)","pos":[53049,53097]},{"content":"Called when the active tab is changed.","pos":[53100,53138]},{"content":"public void initializing()","pos":[53166,53192]},{"content":"public void initialized()","pos":[53283,53308]},{"content":"public void selectionChanged()","pos":[53400,53430]},{"content":"public void initializeQuery(Query query)","pos":[53517,53557]},{"content":"public void new(ListPage listPage)","pos":[53634,53668]},{"content":"Creates a new PageInteraction object operating on a listPage.","pos":[53685,53746]},{"pos":[53754,53769],"content":"Method listPage","linkify":"Method listPage","nodes":[{"content":"Method listPage","pos":[0,15]}]},{"pos":[53808,53820],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[53826,53843],"content":"Method tabChanged","linkify":"Method tabChanged","nodes":[{"content":"Method tabChanged","pos":[0,17]}]},{"content":"Called when the active tab is changed.","pos":[53845,53883]},{"pos":[53944,53954],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"activeTabNames","pos":[53956,53970]},{"content":"A container containing the names of the active tabs.","pos":[53973,54025]},{"pos":[54031,54050],"content":"Method initializing","linkify":"Method initializing","nodes":[{"content":"Method initializing","pos":[0,19]}]},{"pos":[54088,54106],"content":"Method initialized","linkify":"Method initialized","nodes":[{"content":"Method initialized","pos":[0,18]}]},{"pos":[54143,54166],"content":"Method selectionChanged","linkify":"Method selectionChanged","nodes":[{"content":"Method selectionChanged","pos":[0,23]}]},{"pos":[54208,54230],"content":"Method initializeQuery","linkify":"Method initializeQuery","nodes":[{"content":"Method initializeQuery","pos":[0,22]}]},{"pos":[54283,54293],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"query","pos":[54295,54300]},{"pos":[54308,54318],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates a new PageInteraction object operating on a listPage.","pos":[54320,54381]},{"pos":[54428,54438],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"listPage","pos":[54440,54448]},{"content":"The specified ListPage object.","pos":[54451,54481]},{"pos":[54486,54521],"content":"Class LoadAutoCompleteDataEventArgs","linkify":"Class LoadAutoCompleteDataEventArgs","nodes":[{"content":"Class LoadAutoCompleteDataEventArgs","pos":[0,35]}]},{"pos":[54582,54589],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[54595,54603],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[54609,54616],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[54620,54626]},{"content":"Description","pos":[54718,54729]},{"content":"public AutoCompleteDataMode autoCompleteDataMode(<ph id=\"ph1\">\\[</ph>AutoCompleteDataMode autoCompleteDataMode<ph id=\"ph2\">\\]</ph>)","pos":[54848,54943],"source":"public AutoCompleteDataMode autoCompleteDataMode(\\[AutoCompleteDataMode autoCompleteDataMode\\])"},{"content":"public boolean canPage(<ph id=\"ph1\">\\[</ph>boolean canPage<ph id=\"ph2\">\\]</ph>)","pos":[54962,55005],"source":"public boolean canPage(\\[boolean canPage\\])"},{"content":"public str filterValue()","pos":[55076,55100]},{"content":"public AnyType lastPagedTag()","pos":[55190,55219]},{"content":"public FormSegment segment()","pos":[55304,55332]},{"content":"public void addAutoCompleteData(str value, str description, AnyType tag)","pos":[55418,55490]},{"pos":[55535,55562],"content":"Method autoCompleteDataMode","linkify":"Method autoCompleteDataMode","nodes":[{"content":"Method autoCompleteDataMode","pos":[0,27]}]},{"pos":[55668,55678],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"autoCompleteDataMode","pos":[55680,55700]},{"pos":[55709,55721],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[55727,55741],"content":"Method canPage","linkify":"Method canPage","nodes":[{"content":"Method canPage","pos":[0,14]}]},{"pos":[55795,55805],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"canPage","pos":[55807,55814]},{"pos":[55823,55835],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[55841,55859],"content":"Method filterValue","linkify":"Method filterValue","nodes":[{"content":"Method filterValue","pos":[0,18]}]},{"pos":[55896,55908],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[55914,55933],"content":"Method lastPagedTag","linkify":"Method lastPagedTag","nodes":[{"content":"Method lastPagedTag","pos":[0,19]}]},{"pos":[55975,55987],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[55993,56007],"content":"Method segment","linkify":"Method segment","nodes":[{"content":"Method segment","pos":[0,14]}]},{"pos":[56048,56060],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[56066,56092],"content":"Method addAutoCompleteData","linkify":"Method addAutoCompleteData","nodes":[{"content":"Method addAutoCompleteData","pos":[0,26]}]},{"pos":[56177,56187],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[56189,56194]},{"content":"description","pos":[56208,56219]},{"content":"tag","pos":[56233,56236]},{"pos":[56243,56262],"content":"Class LoginProperty","linkify":"Class LoginProperty","nodes":[{"content":"Class LoginProperty","pos":[0,19]}]},{"content":"The LoginProperty class enables logon information to be passed to an instance of the OdbcConnection class.","pos":[56303,56409]},{"pos":[56415,56422],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[56428,56436],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[56442,56449],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[56453,56459]},{"content":"Description","pos":[56509,56520]},{"content":"public str getDatabase()","pos":[56971,56995]},{"content":"Retrieves the name of the database, as stored in the LoginProperty class.","pos":[57027,57100]},{"content":"public str getDSN()","pos":[57230,57249]},{"content":"Retrieves the data source name (DSN) that is stored in the LoginProperty class.","pos":[57286,57365]},{"content":"public str getOciServiceName()","pos":[57489,57519]},{"content":"Retrieves the Oracle service name that is stored in the LoginProperty class.","pos":[57545,57621]},{"content":"public str getOther()","pos":[57748,57769]},{"content":"Retrieves the additional logon parameters that are stored in the LoginProperty class.","pos":[57804,57889]},{"content":"public str getServer()","pos":[58007,58029]},{"content":"Retrieves the server name that is stored in the LoginProperty class.","pos":[58063,58131]},{"content":"public str getTcpIpPort()","pos":[58266,58291]},{"content":"Retrieves the TCP/IP port that is stored in the LoginProperty class.","pos":[58322,58390]},{"content":"public boolean getUsePredefinedService()","pos":[58525,58565]},{"content":"Returns whether the loginProperty class is set to use a predefined Oracle service instead of specifying the server and database information on the loginProperty class.","pos":[58581,58748]},{"content":"public void setTcpIpPort(str tcpipPort)","pos":[58784,58823]},{"content":"Specifies which TCP/IP port is used to connect to Oracle.","pos":[58840,58897]},{"content":"public void setDatabase(str database)","pos":[59043,59080]},{"content":"Sets the name of the database to log on to.","pos":[59099,59142]},{"content":"public void setDSN(str datasourceName)","pos":[59302,59340]},{"content":"Sets the DSN that is used to access the data source.","pos":[59358,59410]},{"content":"public void new()","pos":[59561,59578]},{"content":"Initializes a new instance of the LoginProperty class.","pos":[59617,59671]},{"content":"public void setOciServiceName(str ociServiceName)","pos":[59820,59869]},{"content":"Specifies an Oracle service name.","pos":[59876,59909]},{"content":"public void setOther(str otherOdbcParameters)","pos":[60079,60124]},{"content":"Sets additional nonstandard logon parameters that are stored in the LoginProperty class.","pos":[60135,60223]},{"content":"public void setServer(str serverName)","pos":[60338,60375]},{"content":"Sets the name of the server on which the database resides.","pos":[60394,60452]},{"content":"public void setUsePredefinedService(boolean newValue)","pos":[60597,60650]},{"content":"Specifies whether to use a predefined Oracle service (created by using Oracle network configuration tools) for the connection information, or whether it will be specified in the loginProperty class.","pos":[60653,60851]},{"pos":[60859,60877],"content":"Method getDatabase","linkify":"Method getDatabase","nodes":[{"content":"Method getDatabase","pos":[0,18]}]},{"content":"Retrieves the name of the database, as stored in the LoginProperty class.","pos":[60879,60952]},{"pos":[60989,61001],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the database.","pos":[61003,61028]},{"pos":[61034,61047],"content":"Method getDSN","linkify":"Method getDSN","nodes":[{"content":"Method getDSN","pos":[0,13]}]},{"content":"Retrieves the data source name (DSN) that is stored in the LoginProperty class.","pos":[61049,61128]},{"pos":[61160,61172],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The DSN.","pos":[61174,61182]},{"pos":[61188,61212],"content":"Method getOciServiceName","linkify":"Method getOciServiceName","nodes":[{"content":"Method getOciServiceName","pos":[0,24]}]},{"content":"Retrieves the Oracle service name that is stored in the LoginProperty class.","pos":[61214,61290]},{"pos":[61333,61345],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Oracle service name.","pos":[61347,61371]},{"pos":[61377,61392],"content":"Method getOther","linkify":"Method getOther","nodes":[{"content":"Method getOther","pos":[0,15]}]},{"content":"Retrieves the additional logon parameters that are stored in the LoginProperty class.","pos":[61394,61479]},{"pos":[61513,61525],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The additional logon parameters as a string.","pos":[61527,61571]},{"pos":[61577,61593],"content":"Method getServer","linkify":"Method getServer","nodes":[{"content":"Method getServer","pos":[0,16]}]},{"content":"Retrieves the server name that is stored in the LoginProperty class.","pos":[61595,61663]},{"pos":[61698,61710],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the server.","pos":[61712,61735]},{"pos":[61741,61760],"content":"Method getTcpIpPort","linkify":"Method getTcpIpPort","nodes":[{"content":"Method getTcpIpPort","pos":[0,19]}]},{"content":"Retrieves the TCP/IP port that is stored in the LoginProperty class.","pos":[61762,61830]},{"pos":[61868,61880],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The TCP/IP port.","pos":[61882,61898]},{"pos":[61904,61934],"content":"Method getUsePredefinedService","linkify":"Method getUsePredefinedService","nodes":[{"content":"Method getUsePredefinedService","pos":[0,30]}]},{"content":"Returns whether the loginProperty class is set to use a predefined Oracle service instead of specifying the server and database information on the loginProperty class.","pos":[61936,62103]},{"pos":[62156,62168],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if a predefined Oracle service is used to connect; otherwise, false.","pos":[62170,62243]},{"pos":[62249,62268],"content":"Method setTcpIpPort","linkify":"Method setTcpIpPort","nodes":[{"content":"Method setTcpIpPort","pos":[0,19]}]},{"content":"Specifies which TCP/IP port is used to connect to Oracle.","pos":[62270,62327]},{"pos":[62379,62389],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tcpipPort","pos":[62391,62400]},{"content":"The TCP/IP port to use.","pos":[62403,62426]},{"pos":[62433,62440],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default port is 1521.","pos":[62442,62467]},{"pos":[62473,62491],"content":"Method setDatabase","linkify":"Method setDatabase","nodes":[{"content":"Method setDatabase","pos":[0,18]}]},{"content":"Sets the name of the database to log on to.","pos":[62493,62536]},{"pos":[62586,62596],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"database","pos":[62598,62606]},{"content":"The name of the database.","pos":[62609,62634]},{"pos":[62640,62653],"content":"Method setDSN","linkify":"Method setDSN","nodes":[{"content":"Method setDSN","pos":[0,13]}]},{"content":"Sets the DSN that is used to access the data source.","pos":[62655,62707]},{"pos":[62758,62768],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"datasourceName","pos":[62770,62784]},{"content":"The name of the data source.","pos":[62787,62815]},{"pos":[62821,62831],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the LoginProperty class.","pos":[62833,62887]},{"pos":[62916,62940],"content":"Method setOciServiceName","linkify":"Method setOciServiceName","nodes":[{"content":"Method setOciServiceName","pos":[0,24]}]},{"content":"Specifies an Oracle service name.","pos":[62942,62975]},{"pos":[63037,63047],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ociServiceName","pos":[63049,63063]},{"content":"The name of the service.","pos":[63066,63090]},{"pos":[63097,63104],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is used when the loginProperty class is not set to use a predefined Oracle service.","pos":[63106,63201]},{"pos":[63207,63222],"content":"Method setOther","linkify":"Method setOther","nodes":[{"content":"Method setOther","pos":[0,15]}]},{"content":"Sets additional nonstandard logon parameters that are stored in the LoginProperty class.","pos":[63224,63312]},{"pos":[63370,63380],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"otherOdbcParameters","pos":[63382,63401]},{"content":"The additional ODBC-formatted parameters.","pos":[63404,63445]},{"pos":[63452,63459],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method should be used only if the data source that you want to use requires some additional, nonstandard parameters.","pos":[63461,63582]},{"content":"The parameters must be applied in the standard ODBC format: <ph id=\"ph1\">&amp;lt;</ph>parm1<ph id=\"ph2\">&amp;gt;</ph><ph id=\"ph3\">=</ph><ph id=\"ph4\">&amp;lt;</ph>value1<ph id=\"ph5\">&amp;gt;</ph>;<ph id=\"ph6\">&amp;lt;</ph>parm2<ph id=\"ph7\">&amp;gt;</ph><ph id=\"ph8\">=</ph><ph id=\"ph9\">&amp;lt;</ph>value2<ph id=\"ph10\">&amp;gt;</ph>,... For example: MODE=1;PATCH=32","pos":[63583,63733],"source":" The parameters must be applied in the standard ODBC format: &lt;parm1&gt;=&lt;value1&gt;;&lt;parm2&gt;=&lt;value2&gt;,... For example: MODE=1;PATCH=32"},{"pos":[63739,63755],"content":"Method setServer","linkify":"Method setServer","nodes":[{"content":"Method setServer","pos":[0,16]}]},{"content":"Sets the name of the server on which the database resides.","pos":[63757,63815]},{"pos":[63865,63875],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"serverName","pos":[63877,63887]},{"content":"The name of the server where the database is located.","pos":[63890,63943]},{"pos":[63949,63979],"content":"Method setUsePredefinedService","linkify":"Method setUsePredefinedService","nodes":[{"content":"Method setUsePredefinedService","pos":[0,30]}]},{"content":"Specifies whether to use a predefined Oracle service (created by using Oracle network configuration tools) for the connection information, or whether it will be specified in the loginProperty class.","pos":[63981,64179]},{"pos":[64245,64255],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newValue","pos":[64257,64265]},{"content":"A Boolean value that indicates whether to use a predefined Oracle service.","pos":[64268,64342]},{"pos":[64349,64356],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, a predefined service is not used.","pos":[64358,64403]}]}