<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="hu-hu">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6be57c5" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4541e93368ec3ee5a80c8c1b28a8c56062e6a131</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\retail\retail-sdk-packaging.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">do-not-translate</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0648e6b0fd381969cfb61cb87e3acd0b45e611f3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32a6df69fda5d01c12c314c5c57ccde42d1db38c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Retail SDK packaging</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Retail SDK packaging</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For detailed information about how the Retail software development kit (SDK) is designed for customization and to generate customized deployable packages, see <bpt id="p1">[</bpt>Retail SDK overview<ept id="p1">](retail-sdk-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Commerce runtime (CRT)</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Retail Server</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Modern POS</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Cloud POS</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Hardware station</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The article then explains how to deploy these packages to either an existing Microsoft Dynamics Lifecycle Services (LCS) cloud-deployed environment or a new environment.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Deployable packages</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A deployable package is an asset that can be consumed by the LCS deployment service.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A deployable package can also be consumed manually to service or install a customization.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Retail SDK generates the same package that is developed for Microsoft hotfixes or updates, so that there is just one way to install updates and customizations to the existing solution.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Steps to create a deployable package</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Host the Retail SDK in Microsoft Visual Studio Online (VSO) or the source control system that your organization uses.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Customize or add functionality to the Retail stack.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use the build tools to give an identity to the customized installation package, code-sign it, and specify the customized CRT assemblies, the customized Retail Server assemblies, the customized Hardware station assemblies, and the customized database scripts.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>After all the settings have been specified, run <bpt id="p1">**</bpt>msbuild /t:rebuild<ept id="p1">**</ept> on the root of the Retail SDK to generate all deployable packages.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retail SDK build tools – Customization settings</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>BuildTools<ph id="ph1">\\</ph>Customization.settings is where most of the configuration values for the Retail SDK are set.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These values control how built binaries, components, and packages are named, versioned, and code-signed.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>After you define this metadata, The Retail SDK build system uses it to give an identity to the assets, and to package the customization assets for all the Retail components.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AssemblyNamePrefix <ept id="p1">**</ept>– Specify the prefix name for the assembly.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When you build the Retail SDK, all the assemblies are prefixed with this name.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CustomAssemblyVersion <ept id="p1">**</ept>– Specify the custom assembly version for all assemblies that are built by using the Retail SDK.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CustomVersion <ept id="p1">**</ept>– Specify the custom file version for all assemblies that are built by using the Retail SDK.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CustomName <ept id="p1">**</ept>– Specify the custom name for the assembly.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CustomDescription <ept id="p1">**</ept>– Specify the description for the assembly.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CustomDescription <ept id="p1">**</ept>– Specify the publisher for the assembly.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CustomDescription <ept id="p1">**</ept>– Specify the copyright for the assembly.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SignAssembly <ept id="p1">**</ept>– Specify <bpt id="p2">**</bpt>True<ept id="p2">**</ept> if you want to sign the assembly during the build.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DelaySign <ept id="p1">**</ept>– Specify <bpt id="p2">**</bpt>True<ept id="p2">**</ept> if you want to delay signing of the assets during the build.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AssemblyOriginatorKeyFile <ept id="p1">**</ept>– Specify the strong name key to use to sign the assembly.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ModernPOSPackageCertificateKeyFile <ept id="p1">**</ept>– Specify the PFX file to use to sign Modern POS and Hardware station.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>RetailServerLibraryPathForProxyGeneration <ept id="p1">**</ept>– Specify the customized Retail Server assembly to use for proxy generation (both TypeScript and C<ph id="ph1">\#</ph> proxy).</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>ItemGroup<ept id="p1">**</ept> section:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ISV<ph id="ph1">\_</ph>CommerceRuntime<ph id="ph2">\_</ph>CustomizableFile <ept id="p1">**</ept>– Specify the customized CRT assembly.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can have multiple entries, one for each customized CRT assembly.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ISV<ph id="ph1">\_</ph>RetailServer<ph id="ph2">\_</ph>CustomizableFile <ept id="p1">**</ept>– Specify the customized Retail Server assembly.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can have multiple entries, one for each customized Retail Server assembly.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ISV<ph id="ph1">\_</ph>HardwareStation<ph id="ph2">\_</ph>CustomizableFile <ept id="p1">**</ept>– Specify the customized Hardware station assembly.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can have multiple entries, one for each customized Hardware station assembly.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ISV<ph id="ph1">\_</ph>CustomDatabaseFile<ph id="ph2">\_</ph>Upgrade<ph id="ph3">\_</ph>Custom <ept id="p1">**</ept>– Specify the customized database scripts.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Building a deployable package for each Retail component</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Build a deployable package</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Retail SDK fully supports msbuild.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To build the Retail SDK, open a <bpt id="p1">**</bpt>MSBuild Command Prompt for VS2015<ept id="p1">**</ept> window as an administrator, and run <bpt id="p2">**</bpt>msbuild<ept id="p2">**</ept> (or, for a non-debug version, run <bpt id="p3">**</bpt>msbuild /p:Configuration=Release<ept id="p3">**</ept>).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>msbuild2<ept id="p1">](./media/msbuild2.png)](./media/msbuild2.png)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Packages</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>After the build is completed, all deployable packages are generated in the Retail SDK/Packages folder.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>packages<ept id="p1">](./media/packages.png)](./media/packages.png)</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>CRT package</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>By default, there is no separate package for CRT, because CRT isn't deployed individually.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Instead, CRT assets are packaged together with other application components, such as Modern POS, Retail Server, and Microsoft Dynamics 365 for Operations HQ.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In order for the Retail SDK build tools to package CRT in all the components where it's used, you must make the following configuration entries:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CRT extension assemblies<ept id="p1">**</ept> – These will be the new assemblies where you've written CRT extensions.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Specify an entry for CRT extension assemblies in Retail SDK<ph id="ph1">\\</ph>BuildTools<ph id="ph2">\\</ph>Customization.settings.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>crt-customization settings<ept id="p1">](./media/crt-customization-settings.png)](./media/crt-customization-settings.png)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CRT commerceruntime.config file<ept id="p1">**</ept> – If you have a new CRT assembly, you must add it to the CRT configuration file so that the runtime can load it.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Specify an entry for CRT extension assemblies in Retail SDK<ph id="ph1">\\</ph>References<ph id="ph2">\\</ph>commerceruntime.config.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>crt-config<ept id="p1">](./media/crt-config.png)](./media/crt-config.png)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Database package</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As a part of a customization, you might have to upgrade a channel database in addition to a Modern POS offline database.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Currently, you use upgrade SQL scripts to upgrade the channel and Modern POS offline databases.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can write an upgrade SQL script and put it at Retail SDK<ph id="ph1">\\</ph>Database<ph id="ph2">\\</ph>Upgrade<ph id="ph3">\\</ph>Custom, so that packaging tools can pick it up and include it in the deployable package for the correct components (Retail Server and Modern POS Offline).</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>custom db script<ept id="p1">](./media/custom-db-script.png)](./media/custom-db-script.png)</ept> You must also update Retail SDK<ph id="ph2">\\</ph>BuildTools<ph id="ph3">\\</ph>Customization.settings to instruct the build tools which files to package for the database.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>database upgrade customization setting<ept id="p1">](./media/database-upgrade-customization-setting-1024x311.png)](./media/database-upgrade-customization-setting.png)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Deployment of database scripts</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Database scripts are packaged together with the Retail Server and Modern POS Offline packages, and are run when Retail Server and Modern POS are installed.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If there are multiple custom database scripts, they are run in alphabetical order.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Therefore, if you want to run the scripts in a specific order, you must name them accordingly.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The CRT.RETAILUPGRADEHISTORY table keeps track of which scripts are already applied to the database.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Therefore, the next database upgrade will run only those upgrade scripts that don't have an entry in the CRT.RETAILUPGRADEHISTORY table.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Retail Server package</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In order for the Retail SDK build tools to package Retail Server, you must make the following configuration entries:</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Retail Server extension assemblies <ept id="p1">**</ept>– These will be the new assemblies where you've written Retail Server customizations.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Specify an entry for CRT extension assemblies in Retail SDK<ph id="ph1">\\</ph>BuildTools<ph id="ph2">\\</ph>Customization.settings.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>retail server customization setting<ept id="p1">](./media/retail-server-customization-setting.png)](./media/retail-server-customization-setting.png)</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Retail Server web.config file<ept id="p1">**</ept> – You must add an entry for Retail Server extension assemblies to the Retail Server web.config file, so that they are loaded and used.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Specify an entry for Retail Server Extension assemblies in Retail SDK<ph id="ph1">\\</ph>Packages<ph id="ph2">\\</ph>RetailServer<ph id="ph3">\\</ph>Code<ph id="ph4">\\</ph>web.config.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>retail server web config<ept id="p1">](./media/retail-server-web-config.png)](./media/retail-server-web-config.png)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>After you've specified these settings, you can run MSBuild on the root to build everything and generate deployable packages for all Retail components.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The Retail Server deployable package will be generated at Retail SDK<ph id="ph1">\\</ph>Packages<ph id="ph2">\\</ph>RetailServer<ph id="ph3">\\</ph>content.zip.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This zip file contains everything that is required in order to deploy Retail Server.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can upload this zip file to LCS and then use it to deploy a new environment.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For an existing environment, you currently have to manually copy the zip file, extract it, and then run <bpt id="p1">**</bpt>content.zip<ph id="ph1">\\</ph>RetailServer<ph id="ph2">\\</ph>Scripts<ph id="ph3">\\</ph>Upgrade<ph id="ph4">\\</ph>Core<ph id="ph5">\\</ph>UpdateRetailServer.ps1<ept id="p1">**</ept> in admin mode in Microsoft Windows PowerShell.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>update retail server<ept id="p1">](./media/update-retail-server-1024x169.png)](./media/update-retail-server.png)</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Cloud POS</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>When you run MSBuild on the root SDK folder, a CloudPOS package is created together with the other Retail components.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The Cloud POS deployable package is generated at Retail SDK<ph id="ph1">\\</ph>Packages<ph id="ph2">\\</ph>CloudPos<ph id="ph3">\\</ph>content.zip.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This zip file contains everything that is required in order to deploy Cloud POS.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>You can upload this zip file to LCS and then use it to deploy a new environment.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For an existing environment, you currently have to manually copy the zip file, extract it, and then run <bpt id="p1">**</bpt>content.zip<ph id="ph1">\\</ph>RetailCloudPos<ph id="ph2">\\</ph>Scripts<ph id="ph3">\\</ph>Upgrade<ph id="ph4">\\</ph>Core<ph id="ph5">\\</ph>UpdateCloudPos.ps1<ept id="p1">**</ept> in admin mode in Windows PowerShell.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>UpdateCloudPOS<ept id="p1">](./media/updatecloudpos.png)](./media/updatecloudpos.png)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Retail self-service packages</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Both Modern POS and Hardware station are self-service components.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To deploy self-service components, you upload them to the tenant-specific storage, so that they can appear for self-service in Dynamics 365 for Operations.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When you run MSBuild on the root SDK folder, a RetailSelfService package is created together with the other Retail components.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The RetailSelfService deployable package is generated at RetailSDK<ph id="ph1">\\</ph>Packages<ph id="ph2">\\</ph>RetailSelfService<ph id="ph3">\\</ph>content.zip.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This zip file contains everything that is required in order to deploy Retail self-service.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can upload this zip file to LCS and then use it to deploy a new environment.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For an existing environment, you currently have to manually copy the zip file, extract it, and then run <bpt id="p1">**</bpt>content.zip<ph id="ph1">\\</ph>RetailSelfService<ph id="ph2">\\</ph>Scripts<ph id="ph3">\\</ph>Upgrade<ph id="ph4">\\</ph>UpdateRetailSelfService.ps1<ept id="p1">**</ept> in admin mode in Windows PowerShell.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>UpdateRetailSelfService<ept id="p1">](./media/updateretailselfservice.png)](./media/updateretailselfservice.png)</ept> After Retail self-service is updated, you can go to Dynamics 365 for Operations to verify that the new customized self-service packages are available.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Modern POS</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>All retail stores<ept id="p1">**</ept> page, and notice that the new customized Modern POS package is available for selection.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>CustomizedModernPOS<ept id="p1">](./media/customizedmodernpos-1024x452.png)](./media/customizedmodernpos.png)</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Hardware station</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Hardware station profiles<ept id="p1">**</ept> page, and notice that the customized hardware profile is available for selection <bpt id="p2">[</bpt><ph id="ph1">![</ph>CustomizedHardwareStation<ept id="p2">](./media/customizedhardwarestation.png)](./media/customizedhardwarestation.png)</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Creating a new environment by using customized packages</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Before you can use LCS to deploy a new environment by using customized packages, you must first upload all the packages to the project's Asset library.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>These packages are software packages, and you will see options for Cloud POS, Retail Server, and Retail self-service.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Step 1</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>In the Asset library for the project, upload the customized Retail Server, Retail self-service, and Cloud POS deployable packages to LCS.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>ProjectAssetLibrary<ept id="p1">](./media/projectassetlibrary-1024x421.png)](./media/projectassetlibrary.png)</ept> <bpt id="p2">[</bpt><ph id="ph2">![</ph>UploadCustomizedRetailServerPackage<ept id="p2">](./media/uploadcustomizedretailserverpackage-1024x506.png)](./media/uploadcustomizedretailserverpackage.png)</ept> <bpt id="p3">[</bpt><ph id="ph3">![</ph>LCSSoftwarePackages<ept id="p3">](./media/lcssoftwarepackages.png)](./media/lcssoftwarepackages.png)</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Step 2</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Request a new LCS topology by going to the <bpt id="p1">**</bpt>Environments<ept id="p1">**</ept> section and requesting a new environment.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>LCSDeployment<ept id="p1">](./media/lcsdeployment-1024x530.png)](./media/lcsdeployment.png)</ept> <bpt id="p2">[</bpt><ph id="ph2">![</ph>LCSAXBaseVersion<ept id="p2">](./media/lcsaxbaseversion.png)](./media/lcsaxbaseversion.png)</ept> <bpt id="p3">[</bpt><ph id="ph3">![</ph>SelectCustomizedPackage<ept id="p3">](./media/selectcustomizedpackage.png)](./media/selectcustomizedpackage.png)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>