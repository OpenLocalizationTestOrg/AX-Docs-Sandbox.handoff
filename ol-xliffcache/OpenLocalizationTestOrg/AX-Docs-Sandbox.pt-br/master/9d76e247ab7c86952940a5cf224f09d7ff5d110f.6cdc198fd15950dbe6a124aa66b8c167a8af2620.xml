{"nodes":[{"pos":[32,66],"content":"Service endpoints | Microsoft Docs","needQuote":true,"needEscape":true,"nodes":[{"content":"Service endpoints | Microsoft Docs","pos":[0,34]}]},{"pos":[80,183],"content":"This topic describes the service endpoints that are available in Microsoft Dynamics 365 for Operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"This topic describes the service endpoints that are available in Microsoft Dynamics 365 for Operations.","pos":[0,103]}]},{"pos":[610,627],"content":"Service endpoints","linkify":"Service endpoints","nodes":[{"content":"Service endpoints","pos":[0,17]}]},{"content":"This topic describes the service endpoints that are available in Microsoft Dynamics 365 for Operations.","pos":[629,732]},{"content":"This article describes the service endpoints that are available.","pos":[734,798]},{"pos":[803,819],"content":"List of services","linkify":"List of services","nodes":[{"content":"List of services","pos":[0,16]}]},{"content":"The following table lists all the service endpoints that were available in Microsoft Dynamics AX 2012 and the service endpoints in Dynamics 365 for Operations.","pos":[820,979]},{"content":"Service endpoint","pos":[983,999]},{"content":"Dynamics AX 2012","pos":[1013,1029]},{"content":"Dynamics 365 for Operations","pos":[1032,1059]},{"content":"Document Services (AXDs)","pos":[1151,1175]},{"content":"Yes","pos":[1181,1184]},{"content":"No – Replaced by data entities","pos":[1200,1230]},{"content":"SOAP-based Metadata Service","pos":[1235,1262]},{"content":"Yes","pos":[1265,1268]},{"content":"No – Replaced by REST metadata","pos":[1284,1314]},{"content":"SOAP-based Query Service","pos":[1319,1343]},{"content":"Yes","pos":[1349,1352]},{"content":"No – Replaced by OData","pos":[1368,1390]},{"content":"OData Query Service","pos":[1403,1422]},{"content":"Yes","pos":[1433,1436]},{"content":"No – Replaced by OData","pos":[1452,1474]},{"content":"SOAP-based Custom Service","pos":[1487,1512]},{"content":"Yes","pos":[1517,1520]},{"content":"Yes","pos":[1536,1539]},{"content":"JSON-based Custom Service","pos":[1571,1596]},{"content":"No","pos":[1601,1603]},{"pos":[1620,1633],"content":"Yes (<bpt id=\"p1\">**</bpt>New<ept id=\"p1\">**</ept>)","source":"Yes (**New**)"},{"content":"OData Service","pos":[1655,1668]},{"content":"No","pos":[1685,1687]},{"pos":[1704,1717],"content":"Yes (<bpt id=\"p1\">**</bpt>New<ept id=\"p1\">**</ept>)","source":"Yes (**New**)"},{"content":"REST Metadata Service","pos":[1739,1760]},{"content":"No","pos":[1769,1771]},{"pos":[1788,1801],"content":"Yes (<bpt id=\"p1\">**</bpt>New<ept id=\"p1\">**</ept>)","source":"Yes (**New**)"},{"pos":[1825,1840],"content":"Custom services","linkify":"Custom services","nodes":[{"content":"Custom services","pos":[0,15]}]},{"pos":[1845,1870],"content":"SOAP-based Custom Service","linkify":"SOAP-based Custom Service","nodes":[{"content":"SOAP-based Custom Service","pos":[0,25]}]},{"content":"The SOAP-based services remain the same as they were in Dynamics AX 2012.","pos":[1872,1945]},{"pos":[1952,1963],"content":"Key changes","linkify":"Key changes","nodes":[{"content":"Key changes","pos":[0,11]}]},{"pos":[1969,2055],"content":"All the service groups under the <bpt id=\"p1\">**</bpt>AOTService group<ept id=\"p1\">**</ept> node are automatically deployed.","source":"All the service groups under the **AOTService group** node are automatically deployed."},{"content":"All services that must be deployed must be part of a service group.","pos":[2060,2127]},{"content":"The SOAP endpoint is at https://<ph id=\"ph1\">&amp;lt;</ph>host<ph id=\"ph2\">\\_</ph>uri<ph id=\"ph3\">&amp;gt;</ph>/soap/Services/<ph id=\"ph4\">&amp;lt;</ph>service<ph id=\"ph5\">\\_</ph>group<ph id=\"ph6\">\\_</ph>name<ph id=\"ph7\">&amp;gt;</ph>.","pos":[2129,2222],"source":"The SOAP endpoint is at https://&lt;host\\_uri&gt;/soap/Services/&lt;service\\_group\\_name&gt;."},{"content":"<bpt id=\"p1\">**</bpt>Example:<ept id=\"p1\">**</ept> https://usnconeboxax1aos.cloud.onebox.dynamics.com/soap/services/UserSessionService?wsdl The following documentation is from the Dynamics AX 2012 X++ Custom SOAP Services, and it will help you design and write services:","pos":[2223,2455],"source":"**Example:** https://usnconeboxax1aos.cloud.onebox.dynamics.com/soap/services/UserSessionService?wsdl The following documentation is from the Dynamics AX 2012 X++ Custom SOAP Services, and it will help you design and write services:"},{"pos":[2461,2564],"content":"<bpt id=\"p1\">[</bpt>Using Custom Services <ph id=\"ph1\">\\[</ph>AX 2012<ph id=\"ph2\">\\]</ph> (TechNet)<ept id=\"p1\">](http://technet.microsoft.com/en-us/library/hh509052.aspx)</ept>","source":"[Using Custom Services \\[AX 2012\\] (TechNet)](http://technet.microsoft.com/en-us/library/hh509052.aspx)"},{"pos":[2569,2704],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Exposing an X++ Class as a Data Contract <ph id=\"ph1\">\\[</ph>AX 2012<ph id=\"ph2\">\\]</ph> (TechNet)<ept id=\"p1\">](http://technet.microsoft.com/en-us/library/gg844225.aspx)</ept>","source":"[Walkthrough: Exposing an X++ Class as a Data Contract \\[AX 2012\\] (TechNet)](http://technet.microsoft.com/en-us/library/gg844225.aspx)"},{"pos":[2706,2897],"content":"<bpt id=\"p1\">**</bpt>Code examples -<ept id=\"p1\">**</ept> We have some sample code examples for consuming Custom services at <bpt id=\"p2\">&lt;</bpt>https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/SoapConsoleApplication<ept id=\"p2\">&gt;</ept>","source":"**Code examples -** We have some sample code examples for consuming Custom services at <https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/SoapConsoleApplication>"},{"pos":[2903,2928],"content":"JSON-based Custom Service","linkify":"JSON-based Custom Service","nodes":[{"content":"JSON-based Custom Service","pos":[0,25]}]},{"content":"This feature enables X++ classes to be consumed as JSON services.","pos":[2930,2995]},{"content":"In other words, the return data set is in JSON format.","pos":[2996,3050]},{"content":"JSON, which stands for JavaScript Object Notation, is a compact, lightweight format that is commonly used communicate data between the client and the server.","pos":[3051,3208]},{"content":"In Dynamics 365 for Operations, after the developer has written the services under service groups, the service groups are always deployed on two endpoints:","pos":[3209,3364]},{"content":"SOAP endpoint (mentioned in the previous section)","pos":[3370,3419]},{"content":"JSON endpoint","pos":[3424,3437]},{"content":"The JSON Endpoint is at https://<ph id=\"ph1\">&amp;lt;</ph>host<ph id=\"ph2\">\\_</ph>uri<ph id=\"ph3\">&amp;gt;</ph>/api/Services/<ph id=\"ph4\">&amp;lt;</ph>service<ph id=\"ph5\">\\_</ph>group<ph id=\"ph6\">\\_</ph>name<ph id=\"ph7\">&amp;gt;</ph><ph id=\"ph8\">/</ph><ph id=\"ph9\">&amp;lt;</ph>service<ph id=\"ph10\">\\_</ph>group<ph id=\"ph11\">\\_</ph>service<ph id=\"ph12\">\\_</ph>name<ph id=\"ph13\">&amp;gt;</ph><ph id=\"ph14\">/</ph><ph id=\"ph15\">&amp;lt;</ph>operation<ph id=\"ph16\">\\_</ph>name<ph id=\"ph17\">&amp;gt;</ph>.","pos":[3439,3593],"source":"The JSON Endpoint is at https://&lt;host\\_uri&gt;/api/Services/&lt;service\\_group\\_name&gt;/&lt;service\\_group\\_service\\_name&gt;/&lt;operation\\_name&gt;."},{"content":"<bpt id=\"p1\">**</bpt>Example:<ept id=\"p1\">**</ept> https://usnconeboxax1aos.cloud.onebox.dynamics.com/en/api/services/UserSessionService/AifUserSessionService/GetUserSessionInfo You can find a Microsoft Office Mix presentation about this topic <bpt id=\"p2\">[</bpt>here<ept id=\"p2\">](https://mix.office.com/watch/12e4fejbgj429)</ept>.","pos":[3594,3851],"source":"**Example:** https://usnconeboxax1aos.cloud.onebox.dynamics.com/en/api/services/UserSessionService/AifUserSessionService/GetUserSessionInfo You can find a Microsoft Office Mix presentation about this topic [here](https://mix.office.com/watch/12e4fejbgj429)."},{"content":"<bpt id=\"p1\">**</bpt>Code examples -<ept id=\"p1\">**</ept> We have some sample code examples for consuming Json services at <bpt id=\"p2\">&lt;</bpt>https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/JsonConsoleApplication<ept id=\"p2\">&gt;</ept>","pos":[3852,4041],"source":"**Code examples -** We have some sample code examples for consuming Json services at <https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/JsonConsoleApplication>"},{"pos":[4046,4060],"content":"OData Services","linkify":"OData Services","nodes":[{"content":"OData Services","pos":[0,14]}]},{"content":"Dynamics 365 for Operations has an OData REST endpoint.","pos":[4061,4116]},{"content":"This endpoint exposes all the data entities that are marked as <bpt id=\"p1\">**</bpt>IsPublic<ept id=\"p1\">**</ept> in the Application Object Tree (AOT).","pos":[4117,4230],"source":" This endpoint exposes all the data entities that are marked as **IsPublic** in the Application Object Tree (AOT)."},{"content":"It supports complete CRUD (create, retrieve, update, and delete) functionality that users can use to insert and retrieve data from the system.","pos":[4231,4373]},{"content":"Detailed labs for this feature are on the LCS methodology.","pos":[4374,4432]},{"content":"You can find an Office Mix presentation about OData Services <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](https://mix.office.com/watch/1aym08mqyjghi)</ept>.","pos":[4433,4545],"source":" You can find an Office Mix presentation about OData Services [here](https://mix.office.com/watch/1aym08mqyjghi)."},{"pos":[4551,4598],"content":"Supported features from the OData specification","linkify":"Supported features from the OData specification","nodes":[{"content":"Supported features from the OData specification","pos":[0,47]}]},{"pos":[4600,4784],"content":"The following table lists the high-level features that are enabled the OData, per the <bpt id=\"p1\">[</bpt>OData specification<ept id=\"p1\">](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html)</ept>.","source":"The following table lists the high-level features that are enabled the OData, per the [OData specification](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html)."},{"content":"OData v4 feature","pos":[4786,4802]},{"content":"Details","pos":[4804,4811]},{"content":"OData v4 specification reference","pos":[4813,4845]},{"content":"CRUD","pos":[4847,4851]},{"content":"HTTP Verb support for POST, PATCH, PUT, and DELETE","pos":[4853,4903]},{"content":"Query options","pos":[4905,4918]},{"content":"$filter","pos":[4924,4931]},{"content":"$count","pos":[4936,4942]},{"content":"$orderby","pos":[4947,4955]},{"content":"$skip","pos":[4960,4965]},{"content":"$top","pos":[4970,4974]},{"content":"$expand","pos":[4979,4986]},{"content":"$select","pos":[4991,4998]},{"content":"Server-driven paging","pos":[5000,5020]},{"content":"The maximum page size that is served is 1,000.","pos":[5022,5068]},{"content":"Actions that are bound to entities","pos":[5070,5104]},{"pos":[5106,5253],"content":"<bpt id=\"p1\">&lt;</bpt>http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398355<ept id=\"p1\">&gt;</ept>","source":"<http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398355>"},{"content":"Actions that are bound to entity sets","pos":[5255,5292]},{"content":"Built-in operators for $filter","pos":[5294,5324]},{"content":"Equals","pos":[5330,5336]},{"content":"Not Equals","pos":[5341,5351]},{"content":"Greater Than","pos":[5356,5368]},{"content":"Greater Than or Equal","pos":[5373,5394]},{"content":"Less Than","pos":[5399,5408]},{"content":"Less Than or Equal","pos":[5413,5431]},{"content":"And","pos":[5436,5439]},{"content":"Or","pos":[5444,5446]},{"content":"Not","pos":[5451,5454]},{"content":"Addition","pos":[5459,5467]},{"content":"Subtraction","pos":[5472,5483]},{"content":"Multiplication","pos":[5488,5502]},{"content":"Division","pos":[5507,5515]},{"pos":[5517,5678],"content":"<bpt id=\"p1\">&lt;</bpt>http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398096<ept id=\"p1\">&gt;</ept>","source":"<http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398096>"},{"pos":[5680,5710],"content":"<bpt id=\"p1\">**</bpt>Contains<ept id=\"p1\">**</ept> option in $filter","source":"**Contains** option in $filter"},{"pos":[5712,5826],"content":"Implemented as a wildcard character<bpt id=\"p1\">**</bpt> Example:<ept id=\"p1\">**</ept> http://host/service/EntitySet?$filter=StringField eq '<ph id=\"ph1\">\\*</ph>retail<ph id=\"ph2\">\\*</ph>'","source":"Implemented as a wildcard character** Example:** http://host/service/EntitySet?$filter=StringField eq '\\*retail\\*'"},{"content":"Batch requests","pos":[5828,5842]},{"pos":[5844,5991],"content":"<bpt id=\"p1\">&lt;</bpt>http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398359<ept id=\"p1\">&gt;</ept>","source":"<http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398359>"},{"content":"Metadata annotations","pos":[5993,6013]},{"content":"/data/$metadata has out-of-box annotations.","pos":[6015,6058]},{"pos":[6060,6080],"content":"<bpt id=\"p1\">**</bpt>EnumType<ept id=\"p1\">**</ept> support","source":"**EnumType** support"},{"pos":[6082,6190],"content":"Example of how EnumType is supported in $metadata: <bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>metadata<ept id=\"p1\">](./media/metadata.png)](./media/metadata.png)</ept>","source":"Example of how EnumType is supported in $metadata: [![metadata](./media/metadata.png)](./media/metadata.png)"},{"pos":[6192,6383],"content":"<bpt id=\"p1\">**</bpt>Code examples -<ept id=\"p1\">**</ept> We have some sample code examples for consuming Odata services at <bpt id=\"p2\">&lt;</bpt>https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/ODataConsoleApplication<ept id=\"p2\">&gt;</ept>","source":"**Code examples -** We have some sample code examples for consuming Odata services at <https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/ODataConsoleApplication>"},{"pos":[6389,6411],"content":"Cross-company behavior","linkify":"Cross-company behavior","nodes":[{"content":"Cross-company behavior","pos":[0,22]}]},{"content":"By default, OData returns only data that belongs to the user's default company.","pos":[6413,6492]},{"content":"To see data from outside the user's default company, specify the <bpt id=\"p1\">**</bpt>?cross-company=true<ept id=\"p1\">**</ept> query option.","pos":[6493,6595],"source":" To see data from outside the user's default company, specify the **?cross-company=true** query option."},{"content":"This option will return data from all companies that the user has access to.","pos":[6596,6672]},{"content":"<bpt id=\"p1\">**</bpt>Example:<ept id=\"p1\">**</ept> http://<ph id=\"ph1\">\\[</ph>baseURI<ph id=\"ph2\">\\]</ph>/data/FleetCustomers?cross-company=true To filter by a particular company that isn't your default company, use the following syntax: http://<ph id=\"ph3\">\\[</ph>baseURI<ph id=\"ph4\">\\]</ph>/data/FleetCustomers?$filter=dataAreaId eq 'usrt'&amp;cross-company=true","pos":[6673,6923],"source":"**Example:** http://\\[baseURI\\]/data/FleetCustomers?cross-company=true To filter by a particular company that isn't your default company, use the following syntax: http://\\[baseURI\\]/data/FleetCustomers?$filter=dataAreaId eq 'usrt'&cross-company=true"},{"pos":[6929,6945],"content":"Validate methods","linkify":"Validate methods","nodes":[{"content":"Validate methods","pos":[0,16]}]},{"content":"The following table summarizes the validate methods that the OData stack calls implicitly on the corresponding data entity.","pos":[6947,7070]},{"content":"OData","pos":[7175,7180]},{"content":"Methods (listed in the order in which they are called)","pos":[7190,7244]},{"content":"Create","pos":[7294,7300]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Clear()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7319,7343],"source":"<strong>Clear()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Initvalue()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7353,7381],"source":"<strong>Initvalue()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>PropertyInfo.SetValue()<ept id=\"p1\">&lt;/strong&gt;</ept> for all specified fields in the request","pos":[7391,7471],"source":"<strong>PropertyInfo.SetValue()</strong> for all specified fields in the request"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Validatefield()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7481,7513],"source":"<strong>Validatefield()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Defaultrow<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7523,7550],"source":"<strong>Defaultrow</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Validatewrite()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7560,7592],"source":"<strong>Validatewrite()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Write()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7602,7626],"source":"<strong>Write()</strong>"},{"content":"Update","pos":[7671,7677]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Forupdate()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7696,7724],"source":"<strong>Forupdate()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Reread()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7734,7759],"source":"<strong>Reread()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Clear()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7769,7793],"source":"<strong>Clear()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Initvalue()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7803,7831],"source":"<strong>Initvalue()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>PropertyInfo.SetValue()<ept id=\"p1\">&lt;/strong&gt;</ept> for all specified fields in the request","pos":[7841,7921],"source":"<strong>PropertyInfo.SetValue()</strong> for all specified fields in the request"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Validatefield()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7931,7963],"source":"<strong>Validatefield()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Defaultrow()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[7973,8002],"source":"<strong>Defaultrow()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Validatewrite()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[8012,8044],"source":"<strong>Validatewrite()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Write()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[8054,8078],"source":"<strong>Write()</strong>"},{"content":"Delete","pos":[8122,8128]},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Forupdate()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[8147,8175],"source":"<strong>Forupdate()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Reread()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[8185,8210],"source":"<strong>Reread()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>checkRestrictedDeleteActions()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[8220,8267],"source":"<strong>checkRestrictedDeleteActions()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Validatedelete()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[8277,8310],"source":"<strong>Validatedelete()</strong>"},{"content":"<bpt id=\"p1\">&lt;strong&gt;</bpt>Delete()<ept id=\"p1\">&lt;/strong&gt;</ept>","pos":[8320,8345],"source":"<strong>Delete()</strong>"},{"pos":[8390,8411],"content":"REST Metadata Service","linkify":"REST Metadata Service","nodes":[{"content":"REST Metadata Service","pos":[0,21]}]},{"content":"The REST metadata service is a read-only service.","pos":[8412,8461]},{"content":"In other words, users can make only GET requests.","pos":[8462,8511]},{"content":"The main purpose of this endpoint is to provide metadata information for elements.","pos":[8512,8594]},{"content":"It is an OData implementation.","pos":[8595,8625]},{"content":"This endpoint is hosted at http://<ph id=\"ph1\">\\[</ph>baseURI<ph id=\"ph2\">\\]</ph>/Metadata.","pos":[8626,8681],"source":" This endpoint is hosted at http://\\[baseURI\\]/Metadata."},{"content":"Currently, this endpoint provides metadata for the following elements:","pos":[8682,8752]},{"content":"<bpt id=\"p1\">**</bpt>Labels<ept id=\"p1\">**</ept> – This gets labels from the system.","pos":[8758,8804],"source":"**Labels** – This gets labels from the system."},{"content":"They have a dual pair key, language, and ID, so that you can retrieve the value of the label.","pos":[8805,8898]},{"content":"<bpt id=\"p1\">**</bpt>Example:<ept id=\"p1\">**</ept> https://<ph id=\"ph1\">\\[</ph>baseURI<ph id=\"ph2\">\\]</ph><ph id=\"ph3\">/metadata/Labels(Id='@SVC</ph><ph id=\"ph4\">\\_</ph>ODataLabelFile:Label1',Language='en-us')","pos":[8899,8998],"source":"**Example:** https://\\[baseURI\\]/metadata/Labels(Id='@SVC\\_ODataLabelFile:Label1',Language='en-us')"},{"content":"<bpt id=\"p1\">**</bpt>Data entities<ept id=\"p1\">**</ept> – This returns a JSON-formatted list of all the data entities in the system.","pos":[9003,9097],"source":"**Data entities** – This returns a JSON-formatted list of all the data entities in the system."},{"content":"<bpt id=\"p1\">**</bpt>Example:<ept id=\"p1\">**</ept> https://<ph id=\"ph1\">\\[</ph>baseURI<ph id=\"ph2\">\\]</ph>/Metadata/DataEntities","pos":[9098,9152],"source":"**Example:** https://\\[baseURI\\]/Metadata/DataEntities"},{"content":"We will support more sets of metadata as new scenarios require it.","pos":[9154,9220]},{"pos":[9225,9239],"content":"Authentication","linkify":"Authentication","nodes":[{"content":"Authentication","pos":[0,14]}]},{"content":"OData Services, JSON-based Custom Service, and REST Metadata Service support standard OAuth 2.0 authentication.","pos":[9240,9351]},{"content":"You can read more about OAuth 2.0 <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](//msdn.microsoft.com/en-us/library/azure/dn645545.aspx)</ept>.","pos":[9352,9449],"source":" You can read more about OAuth 2.0 [here](//msdn.microsoft.com/en-us/library/azure/dn645545.aspx)."},{"content":"We currently support <bpt id=\"p1\">[</bpt>Authorization Code Grant flow<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/azure/dn645542.aspx)</ept>.","pos":[9450,9565],"source":" We currently support [Authorization Code Grant flow](https://msdn.microsoft.com/en-us/library/azure/dn645542.aspx)."},{"content":"Two kinds of application are supported in Microsoft Azure Active Directory (AAD):","pos":[9566,9647]},{"pos":[9653,9762],"content":"<bpt id=\"p1\">**</bpt>Native client application<ept id=\"p1\">**</ept> – This flow uses a user name and password for authentication and authorization.","source":"**Native client application** – This flow uses a user name and password for authentication and authorization."},{"content":"<bpt id=\"p1\">**</bpt>Web application (Confidential client)<ept id=\"p1\">**</ept> – A confidential client is an application that can keep a client password confidential to the world.","pos":[9767,9909],"source":"**Web application (Confidential client)** – A confidential client is an application that can keep a client password confidential to the world."},{"content":"The authorization server assigned this client password to the client application.","pos":[9910,9991]},{"content":"This will be supported post-RTW.","pos":[9992,10024]},{"pos":[10030,10067],"content":"OAuth – Authorization Code Grant flow","linkify":"OAuth – Authorization Code Grant flow","nodes":[{"content":"OAuth – Authorization Code Grant flow","pos":[0,37]}]},{"pos":[10069,10133],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>1<ph id=\"ph2\">\\_</ph>Services<ept id=\"p1\">](./media/1_services.png)](./media/1_services.png)</ept>","source":"[![1\\_Services](./media/1_services.png)](./media/1_services.png)"},{"pos":[10139,10177],"content":"Register a native application with AAD","linkify":"Register a native application with AAD","nodes":[{"content":"Register a native application with AAD","pos":[0,38]}]},{"content":"Before any clients can communicate with the services, they must be registered in AAD.","pos":[10179,10264]},{"content":"These steps will help you register an application with AAD.","pos":[10265,10324]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> These steps don't have to be completed by all the people in your organization.","pos":[10325,10413],"source":"**Note:** These steps don't have to be completed by all the people in your organization."},{"content":"Only one Azure Service Administrator user can add the application and share the client ID with the developers.","pos":[10414,10524]},{"content":"<bpt id=\"p1\">**</bpt>Prerequisite:<ept id=\"p1\">**</ept> You must have an Azure subscription and admin access to Active Directory.","pos":[10525,10616],"source":"**Prerequisite:** You must have an Azure subscription and admin access to Active Directory."},{"pos":[10622,10680],"content":"In a web browser, go to <bpt id=\"p1\">&lt;</bpt>http://manage.windowsazure.com/<ept id=\"p1\">&gt;</ept>.","source":"In a web browser, go to <http://manage.windowsazure.com/>."},{"content":"Enter the user name and password of the user who has access to the Azure subscription.","pos":[10685,10771]},{"content":"After the credentials are authenticated, Azure Portal opens.","pos":[10772,10832]},{"content":"In Azure Portal, in the left navigation pane, click <bpt id=\"p1\">**</bpt>Active Directory<ept id=\"p1\">**</ept>.","pos":[10837,10910],"source":"In Azure Portal, in the left navigation pane, click **Active Directory**."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>2<ph id=\"ph2\">\\_</ph>Services<ept id=\"p1\">](./media/2_services.png)](./media/2_services.png)</ept>","pos":[10911,10975],"source":"[![2\\_Services](./media/2_services.png)](./media/2_services.png)"},{"content":"In the grid, select the Active Directory instance that is being used.","pos":[10980,11049]},{"content":"On the top toolbar, click <bpt id=\"p1\">**</bpt>Applications<ept id=\"p1\">**</ept>.","pos":[11054,11097],"source":"On the top toolbar, click **Applications**."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>3<ph id=\"ph2\">\\_</ph>Services<ept id=\"p1\">](./media/3_services.png)](./media/3_services.png)</ept>","pos":[11098,11162],"source":"[![3\\_Services](./media/3_services.png)](./media/3_services.png)"},{"content":"In the bottom pane, click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.","pos":[11167,11201],"source":"In the bottom pane, click **Add**."},{"content":"The <bpt id=\"p1\">**</bpt>Add application<ept id=\"p1\">**</ept> wizard starts.","pos":[11202,11240],"source":" The **Add application** wizard starts."},{"content":"Add a new native client application.","pos":[11245,11281]},{"content":"Enter information in the wizard as shown in the following screen shots.","pos":[11282,11353]},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>4<ph id=\"ph2\">\\_</ph>Services<ept id=\"p1\">](./media/4_services.png)](./media/4_services.png)</ept> <bpt id=\"p2\">[</bpt><ph id=\"ph3\">![</ph>5<ph id=\"ph4\">\\_</ph>Services<ept id=\"p2\">](./media/5_services.png)](./media/5_services.png)</ept> <bpt id=\"p3\">[</bpt><ph id=\"ph5\">![</ph>6<ph id=\"ph6\">\\_</ph>Services<ept id=\"p3\">](./media/6_services.png)](./media/6_services.png)</ept>","pos":[11354,11548],"source":"[![4\\_Services](./media/4_services.png)](./media/4_services.png) [![5\\_Services](./media/5_services.png)](./media/5_services.png) [![6\\_Services](./media/6_services.png)](./media/6_services.png)"},{"content":"Click the check mark button to complete the wizard.","pos":[11553,11604]},{"content":"After you complete the wizard, the new application page opens.","pos":[11605,11667]},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>native client app<ept id=\"p1\">](./media/native-client-app.png)](./media/native-client-app.png)</ept>","pos":[11668,11752],"source":"[![native client app](./media/native-client-app.png)](./media/native-client-app.png)"},{"pos":[11757,11797],"content":"On the top toolbar, click <bpt id=\"p1\">**</bpt>Configure<ept id=\"p1\">**</ept>.","source":"On the top toolbar, click **Configure**."},{"content":"Scroll down until you see the <bpt id=\"p1\">**</bpt>Permissions to other applications<ept id=\"p1\">**</ept> section.","pos":[11802,11878],"source":"Scroll down until you see the **Permissions to other applications** section."},{"content":"Click <bpt id=\"p1\">**</bpt>Add Application<ept id=\"p1\">**</ept> in this section.","pos":[11879,11921],"source":" Click **Add Application** in this section."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>7<ph id=\"ph2\">\\_</ph>Services<ept id=\"p1\">](./media/7_services.png)](./media/7_services.png)</ept>","pos":[11922,11986],"source":"[![7\\_Services](./media/7_services.png)](./media/7_services.png)"},{"pos":[11991,12037],"content":"Select <bpt id=\"p1\">**</bpt>Microsoft Dynamics ERP<ept id=\"p1\">**</ept> in the list.","source":"Select **Microsoft Dynamics ERP** in the list."},{"pos":[12042,12110],"content":"Click the <bpt id=\"p1\">**</bpt>Complete check<ept id=\"p1\">**</ept> button in the right corner of the page.","source":"Click the **Complete check** button in the right corner of the page."},{"content":"In the <bpt id=\"p1\">**</bpt>Delegate Permissions<ept id=\"p1\">**</ept> list, select all the check boxes.","pos":[12115,12180],"source":"In the **Delegate Permissions** list, select all the check boxes."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> We are working on cleaning up this list.","pos":[12181,12231],"source":"**Note:** We are working on cleaning up this list."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>8<ph id=\"ph2\">\\_</ph>Services<ept id=\"p1\">](./media/8_services.png)](./media/8_services.png)</ept>","pos":[12232,12296],"source":"[![8\\_Services](./media/8_services.png)](./media/8_services.png)"},{"content":"Make a note of the following two pieces of information:","pos":[12301,12356]},{"pos":[12365,12461],"content":"<bpt id=\"p1\">**</bpt>Client ID<ept id=\"p1\">**</ept> – As you scroll toward the top of this page, you will see <bpt id=\"p2\">**</bpt>Client ID<ept id=\"p2\">**</ept> displayed.","source":"**Client ID** – As you scroll toward the top of this page, you will see **Client ID** displayed."},{"pos":[12470,12486],"content":"<bpt id=\"p1\">**</bpt>Redirect URI<ept id=\"p1\">**</ept>","source":"**Redirect URI**"},{"content":"After you have these two pieces of information, you're ready to write your client code.","pos":[12488,12575]},{"pos":[12581,12599],"content":"Client sample code","linkify":"Client sample code","nodes":[{"content":"Client sample code","pos":[0,18]}]},{"content":"The following is the sample code for getting the token from AAD.","pos":[12601,12665]},{"content":"In this flow, the user will be presented with the consent form (for cross-tenant application) and the user/name sign-in form.","pos":[12666,12791]},{"pos":[13500,13616],"content":"To pass the user name and password without showing a pop-up, you can use the following overload of <bpt id=\"p1\">**</bpt>AcquireToken<ept id=\"p1\">**</ept>.","source":"To pass the user name and password without showing a pop-up, you can use the following overload of **AcquireToken**."},{"pos":[13801,13832],"content":"Consuming external web services","linkify":"Consuming external web services","nodes":[{"content":"Consuming external web services","pos":[0,31]}]},{"content":"In previous versions, you could consume web services from X++ code by adding Microsoft Visual Studio projects as a reference and by using <bpt id=\"p1\">**</bpt>Aif::CreateServiceClient<ept id=\"p1\">**</ept>.","pos":[13833,14000],"source":"In previous versions, you could consume web services from X++ code by adding Microsoft Visual Studio projects as a reference and by using **Aif::CreateServiceClient**."},{"content":"This scenario is supported, but the steps have changed.","pos":[14001,14056]},{"content":"Application Integration Framework (AIF) is no longer supported.","pos":[14057,14120]},{"content":"The following steps show how to consume an external StockQuote service from X++.","pos":[14121,14201]},{"pos":[14207,14306],"content":"Create a new Class Library project in Visual Studio, and name it <bpt id=\"p1\">**</bpt>ExternalServiceLibrary.csproj<ept id=\"p1\">**</ept>.","source":"Create a new Class Library project in Visual Studio, and name it **ExternalServiceLibrary.csproj**."},{"pos":[14311,14440],"content":"In the Visual Studio project, add a service reference to the external web service: <bpt id=\"p1\">**</bpt>http://www.webservicex.net/stockquote.asmx<ept id=\"p1\">**</ept>","source":"In the Visual Studio project, add a service reference to the external web service: **http://www.webservicex.net/stockquote.asmx**"},{"content":"Create a new static class, and wrap the StockQuote service operation as shown in the following example.","pos":[14445,14548]},{"content":"Build the project.","pos":[15121,15139]},{"content":"The binary ExternalServiceLibrary.dll is created.","pos":[15140,15189]},{"content":"Create a new Dynamics project in Visual Studio.","pos":[15194,15241]},{"pos":[15246,15296],"content":"Add <bpt id=\"p1\">**</bpt>ExternalServiceLibrary.dll<ept id=\"p1\">**</ept> as a reference.","source":"Add **ExternalServiceLibrary.dll** as a reference."},{"content":"In the X++ class, you can use the external web services that were referenced in ExternalesrviceLibrary.dll.","pos":[15301,15408]},{"pos":[15558,15742],"content":"For more information, see <bpt id=\"p1\">[</bpt>Troubleshoot service authentication<ept id=\"p1\">](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/data-entities/troubleshooting-service-authentication)</ept>.","source":"For more information, see [Troubleshoot service authentication](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/data-entities/troubleshooting-service-authentication)."},{"pos":[15744,15752],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[15763,15920],"content":"<bpt id=\"p1\">[</bpt>Troubleshoot service authentication<ept id=\"p1\">](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/data-entities/troubleshooting-service-authentication)</ept>","source":"[Troubleshoot service authentication](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/data-entities/troubleshooting-service-authentication)"}],"content":"---\n# required metadata\n\ntitle: Service endpoints | Microsoft Docs\ndescription: This topic describes the service endpoints that are available in Microsoft Dynamics 365 for Operations.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2015-12-09 14:54:35\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# keywords: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.suite: Released- Dynamics AX 7.0.0\n# ms.tgt_pltfrm: \nms.custom: 21311\nms.assetid: 6fc96441-99ef-4098-ba55-374e427b0086\nms.region: Global\n# ms.industry: \nms.author: kuntalme\n\n---\n\n# Service endpoints\n\nThis topic describes the service endpoints that are available in Microsoft Dynamics 365 for Operations.\n\nThis article describes the service endpoints that are available.\n\n## List of services\nThe following table lists all the service endpoints that were available in Microsoft Dynamics AX 2012 and the service endpoints in Dynamics 365 for Operations.\n\n| Service endpoint            | Dynamics AX 2012 | Dynamics 365 for Operations    |\n|-----------------------------|------------------|--------------------------------|\n| Document Services (AXDs)    | Yes              | No – Replaced by data entities |\n| SOAP-based Metadata Service | Yes              | No – Replaced by REST metadata |\n| SOAP-based Query Service    | Yes              | No – Replaced by OData         |\n| OData Query Service         | Yes              | No – Replaced by OData         |\n| SOAP-based Custom Service   | Yes              | Yes                            |\n| JSON-based Custom Service   | No               | Yes (**New**)                  |\n| OData Service               | No               | Yes (**New**)                  |\n| REST Metadata Service       | No               | Yes (**New**)                  |\n\n## Custom services\n### SOAP-based Custom Service\n\nThe SOAP-based services remain the same as they were in Dynamics AX 2012.\n\n#### Key changes\n\n-   All the service groups under the **AOTService group** node are automatically deployed.\n-   All services that must be deployed must be part of a service group.\n\nThe SOAP endpoint is at https://&lt;host\\_uri&gt;/soap/Services/&lt;service\\_group\\_name&gt;. **Example:** https://usnconeboxax1aos.cloud.onebox.dynamics.com/soap/services/UserSessionService?wsdl The following documentation is from the Dynamics AX 2012 X++ Custom SOAP Services, and it will help you design and write services:\n\n-   [Using Custom Services \\[AX 2012\\] (TechNet)](http://technet.microsoft.com/en-us/library/hh509052.aspx)\n-   [Walkthrough: Exposing an X++ Class as a Data Contract \\[AX 2012\\] (TechNet)](http://technet.microsoft.com/en-us/library/gg844225.aspx)\n\n**Code examples -** We have some sample code examples for consuming Custom services at <https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/SoapConsoleApplication>\n\n### JSON-based Custom Service\n\nThis feature enables X++ classes to be consumed as JSON services. In other words, the return data set is in JSON format. JSON, which stands for JavaScript Object Notation, is a compact, lightweight format that is commonly used communicate data between the client and the server. In Dynamics 365 for Operations, after the developer has written the services under service groups, the service groups are always deployed on two endpoints:\n\n-   SOAP endpoint (mentioned in the previous section)\n-   JSON endpoint\n\nThe JSON Endpoint is at https://&lt;host\\_uri&gt;/api/Services/&lt;service\\_group\\_name&gt;/&lt;service\\_group\\_service\\_name&gt;/&lt;operation\\_name&gt;. **Example:** https://usnconeboxax1aos.cloud.onebox.dynamics.com/en/api/services/UserSessionService/AifUserSessionService/GetUserSessionInfo You can find a Microsoft Office Mix presentation about this topic [here](https://mix.office.com/watch/12e4fejbgj429). **Code examples -** We have some sample code examples for consuming Json services at <https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/JsonConsoleApplication>\n\n## OData Services\nDynamics 365 for Operations has an OData REST endpoint. This endpoint exposes all the data entities that are marked as **IsPublic** in the Application Object Tree (AOT). It supports complete CRUD (create, retrieve, update, and delete) functionality that users can use to insert and retrieve data from the system. Detailed labs for this feature are on the LCS methodology. You can find an Office Mix presentation about OData Services [here](https://mix.office.com/watch/1aym08mqyjghi).\n\n### Supported features from the OData specification\n\nThe following table lists the high-level features that are enabled the OData, per the [OData specification](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html).\n\nOData v4 feature\n\nDetails\n\nOData v4 specification reference\n\nCRUD\n\nHTTP Verb support for POST, PATCH, PUT, and DELETE\n\nQuery options\n\n-   $filter\n-   $count\n-   $orderby\n-   $skip\n-   $top\n-   $expand\n-   $select\n\nServer-driven paging\n\nThe maximum page size that is served is 1,000.\n\nActions that are bound to entities\n\n<http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398355>\n\nActions that are bound to entity sets\n\nBuilt-in operators for $filter\n\n-   Equals\n-   Not Equals\n-   Greater Than\n-   Greater Than or Equal\n-   Less Than\n-   Less Than or Equal\n-   And\n-   Or\n-   Not\n-   Addition\n-   Subtraction\n-   Multiplication\n-   Division\n\n<http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398096>\n\n**Contains** option in $filter\n\nImplemented as a wildcard character** Example:** http://host/service/EntitySet?$filter=StringField eq '\\*retail\\*'\n\nBatch requests\n\n<http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398359>\n\nMetadata annotations\n\n/data/$metadata has out-of-box annotations.\n\n**EnumType** support\n\nExample of how EnumType is supported in $metadata: [![metadata](./media/metadata.png)](./media/metadata.png)\n\n**Code examples -** We have some sample code examples for consuming Odata services at <https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/ODataConsoleApplication>\n\n### Cross-company behavior\n\nBy default, OData returns only data that belongs to the user's default company. To see data from outside the user's default company, specify the **?cross-company=true** query option. This option will return data from all companies that the user has access to. **Example:** http://\\[baseURI\\]/data/FleetCustomers?cross-company=true To filter by a particular company that isn't your default company, use the following syntax: http://\\[baseURI\\]/data/FleetCustomers?$filter=dataAreaId eq 'usrt'&cross-company=true\n\n### Validate methods\n\nThe following table summarizes the validate methods that the OData stack calls implicitly on the corresponding data entity.\n\n<table>\n<colgroup>\n<col width=\"50%\" />\n<col width=\"50%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>OData</th>\n<th>Methods (listed in the order in which they are called)</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Create</td>\n<td><ol>\n<li><strong>Clear()</strong></li>\n<li><strong>Initvalue()</strong></li>\n<li><strong>PropertyInfo.SetValue()</strong> for all specified fields in the request</li>\n<li><strong>Validatefield()</strong></li>\n<li><strong>Defaultrow</strong></li>\n<li><strong>Validatewrite()</strong></li>\n<li><strong>Write()</strong></li>\n</ol></td>\n</tr>\n<tr class=\"even\">\n<td>Update</td>\n<td><ol>\n<li><strong>Forupdate()</strong></li>\n<li><strong>Reread()</strong></li>\n<li><strong>Clear()</strong></li>\n<li><strong>Initvalue()</strong></li>\n<li><strong>PropertyInfo.SetValue()</strong> for all specified fields in the request</li>\n<li><strong>Validatefield()</strong></li>\n<li><strong>Defaultrow()</strong></li>\n<li><strong>Validatewrite()</strong></li>\n<li><strong>Write()</strong></li>\n</ol></td>\n</tr>\n<tr class=\"odd\">\n<td>Delete</td>\n<td><ol>\n<li><strong>Forupdate()</strong></li>\n<li><strong>Reread()</strong></li>\n<li><strong>checkRestrictedDeleteActions()</strong></li>\n<li><strong>Validatedelete()</strong></li>\n<li><strong>Delete()</strong></li>\n</ol></td>\n</tr>\n</tbody>\n</table>\n\n## REST Metadata Service\nThe REST metadata service is a read-only service. In other words, users can make only GET requests. The main purpose of this endpoint is to provide metadata information for elements. It is an OData implementation. This endpoint is hosted at http://\\[baseURI\\]/Metadata. Currently, this endpoint provides metadata for the following elements:\n\n-   **Labels** – This gets labels from the system. They have a dual pair key, language, and ID, so that you can retrieve the value of the label. **Example:** https://\\[baseURI\\]/metadata/Labels(Id='@SVC\\_ODataLabelFile:Label1',Language='en-us')\n-   **Data entities** – This returns a JSON-formatted list of all the data entities in the system. **Example:** https://\\[baseURI\\]/Metadata/DataEntities\n\nWe will support more sets of metadata as new scenarios require it.\n\n## Authentication\nOData Services, JSON-based Custom Service, and REST Metadata Service support standard OAuth 2.0 authentication. You can read more about OAuth 2.0 [here](//msdn.microsoft.com/en-us/library/azure/dn645545.aspx). We currently support [Authorization Code Grant flow](https://msdn.microsoft.com/en-us/library/azure/dn645542.aspx). Two kinds of application are supported in Microsoft Azure Active Directory (AAD):\n\n-   **Native client application** – This flow uses a user name and password for authentication and authorization.\n-   **Web application (Confidential client)** – A confidential client is an application that can keep a client password confidential to the world. The authorization server assigned this client password to the client application. This will be supported post-RTW.\n\n### OAuth – Authorization Code Grant flow\n\n[![1\\_Services](./media/1_services.png)](./media/1_services.png)\n\n### Register a native application with AAD\n\nBefore any clients can communicate with the services, they must be registered in AAD. These steps will help you register an application with AAD. **Note:** These steps don't have to be completed by all the people in your organization. Only one Azure Service Administrator user can add the application and share the client ID with the developers. **Prerequisite:** You must have an Azure subscription and admin access to Active Directory.\n\n1.  In a web browser, go to <http://manage.windowsazure.com/>.\n2.  Enter the user name and password of the user who has access to the Azure subscription. After the credentials are authenticated, Azure Portal opens.\n3.  In Azure Portal, in the left navigation pane, click **Active Directory**. [![2\\_Services](./media/2_services.png)](./media/2_services.png)\n4.  In the grid, select the Active Directory instance that is being used.\n5.  On the top toolbar, click **Applications**. [![3\\_Services](./media/3_services.png)](./media/3_services.png)\n6.  In the bottom pane, click **Add**. The **Add application** wizard starts.\n7.  Add a new native client application. Enter information in the wizard as shown in the following screen shots. [![4\\_Services](./media/4_services.png)](./media/4_services.png) [![5\\_Services](./media/5_services.png)](./media/5_services.png) [![6\\_Services](./media/6_services.png)](./media/6_services.png)\n8.  Click the check mark button to complete the wizard. After you complete the wizard, the new application page opens. [![native client app](./media/native-client-app.png)](./media/native-client-app.png)\n9.  On the top toolbar, click **Configure**.\n10. Scroll down until you see the **Permissions to other applications** section. Click **Add Application** in this section. [![7\\_Services](./media/7_services.png)](./media/7_services.png)\n11. Select **Microsoft Dynamics ERP** in the list.\n12. Click the **Complete check** button in the right corner of the page.\n13. In the **Delegate Permissions** list, select all the check boxes. **Note:** We are working on cleaning up this list. [![8\\_Services](./media/8_services.png)](./media/8_services.png)\n14. Make a note of the following two pieces of information:\n    -   **Client ID** – As you scroll toward the top of this page, you will see **Client ID** displayed.\n    -   **Redirect URI**\n\nAfter you have these two pieces of information, you're ready to write your client code.\n\n### Client sample code\n\nThe following is the sample code for getting the token from AAD. In this flow, the user will be presented with the consent form (for cross-tenant application) and the user/name sign-in form.\n\n    UriBuilder uri = new UriBuilder (\"https://login.windows.net/contoso2ax.onmicrosoft.com\");\n               \n    AuthenticationContext authenticationContext = new AuthenticationContext(uri.ToString());\n\n    //request token for the resource - which is the URI for your organization. NOTE: Important do not add a trailing slash at the end of the URI\n    AuthenticationResult authenticationResult = authenticationContext.AcquireToken(\"https://axdynamics1001aos.cloud.dynamics.com\", clientId, redirectURI);\n                \n    //this gets the authorization token, which needs to be passed in the Header of the HTTP Requests\n    string authenticationHeader = authenticationResult.CreateAuthorizationHeader();\n\nTo pass the user name and password without showing a pop-up, you can use the following overload of **AcquireToken**.\n\n    UserCredential userCred = new UserCredential (username, password);\n    authenticationContext.AcquireToken(\"https://axdynamics1001aos.cloud.dynamics.com\", clientId, userCred);\n\n## Consuming external web services\nIn previous versions, you could consume web services from X++ code by adding Microsoft Visual Studio projects as a reference and by using **Aif::CreateServiceClient**. This scenario is supported, but the steps have changed. Application Integration Framework (AIF) is no longer supported. The following steps show how to consume an external StockQuote service from X++.\n\n1.  Create a new Class Library project in Visual Studio, and name it **ExternalServiceLibrary.csproj**.\n2.  In the Visual Studio project, add a service reference to the external web service: **http://www.webservicex.net/stockquote.asmx**\n3.  Create a new static class, and wrap the StockQuote service operation as shown in the following example.\n\n              public static string GetQuote(string s)\n                {\n                    var binding = new System.ServiceModel.BasicHttpBinding();\n                    var endpointAddress = new EndpointAddress(\"http://www.webservicex.net/stockquote.asmx\");\n                    ServiceLibrary.QuoteReference.StockQuoteSoapClient client = new ServiceLibrary.QuoteReference.StockQuoteSoapClient(binding, endpointAddress);\n\n                    //GetQuote is the operation on the StockQuote service\n                    return client.GetQuote(\"MSFT\");\n                }\n\n4.  Build the project. The binary ExternalServiceLibrary.dll is created.\n5.  Create a new Dynamics project in Visual Studio.\n6.  Add **ExternalServiceLibrary.dll** as a reference.\n7.  In the X++ class, you can use the external web services that were referenced in ExternalesrviceLibrary.dll.\n\n           public static void main(Args _args)\n            {\n                info(ServiceLibrary.StockQuoteClass::GetQuote(\"MSFT\"));\n            }\n\nFor more information, see [Troubleshoot service authentication](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/data-entities/troubleshooting-service-authentication).\n\nSee also\n--------\n\n[Troubleshoot service authentication](https://docs.microsoft.com/en-us/dynamics365/operations/dev-itpro/data-entities/troubleshooting-service-authentication)\n\n"}