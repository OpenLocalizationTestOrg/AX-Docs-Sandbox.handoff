{"nodes":[{"pos":[32,41],"content":"U Classes","needQuote":true,"needEscape":true,"nodes":[{"content":"U Classes","pos":[0,9]}]},{"pos":[55,103],"content":"System API classes that start with the letter U.","needQuote":true,"needEscape":true,"nodes":[{"content":"System API classes that start with the letter U.","pos":[0,48]}]},{"pos":[612,621],"content":"U Classes","linkify":"U Classes","nodes":[{"content":"U Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter U.","pos":[623,671]},{"pos":[673,689],"content":"Class UnitofWork","linkify":"Class UnitofWork","nodes":[{"content":"Class UnitofWork","pos":[0,16]}]},{"pos":[749,756],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[762,770],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[776,783],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[787,793]},{"content":"Description","pos":[850,861]},{"content":"public boolean getByKey(Common record)","pos":[1025,1063]},{"content":"public void updateonSaveChanges(Common record)","pos":[1144,1190]},{"content":"public void saveChanges(<ph id=\"ph1\">\\[</ph>UserConnection user<ph id=\"ph2\">\\_</ph>connection<ph id=\"ph3\">\\]</ph>)","pos":[1263,1323],"source":"public void saveChanges(\\[UserConnection user\\_connection\\])"},{"content":"public void deleteonSaveChanges(Common record)","pos":[1382,1428]},{"content":"public void insertonSaveChanges(Common record)","pos":[1501,1547]},{"content":"public void finalize()","pos":[1620,1642]},{"content":"public void new()","pos":[1739,1756]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[1802,1853]},{"content":"public void clear()","pos":[1858,1877]},{"pos":[1980,1995],"content":"Method getByKey","linkify":"Method getByKey","nodes":[{"content":"Method getByKey","pos":[0,15]}]},{"pos":[2046,2056],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2058,2064]},{"pos":[2073,2085],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2091,2117],"content":"Method updateonSaveChanges","linkify":"Method updateonSaveChanges","nodes":[{"content":"Method updateonSaveChanges","pos":[0,26]}]},{"pos":[2176,2186],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2188,2194]},{"pos":[2202,2220],"content":"Method saveChanges","linkify":"Method saveChanges","nodes":[{"content":"Method saveChanges","pos":[0,18]}]},{"pos":[2290,2300],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"user<ph id=\"ph1\">\\_</ph>connection","pos":[2302,2318],"source":"user\\_connection"},{"pos":[2326,2352],"content":"Method deleteonSaveChanges","linkify":"Method deleteonSaveChanges","nodes":[{"content":"Method deleteonSaveChanges","pos":[0,26]}]},{"pos":[2411,2421],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2423,2429]},{"pos":[2437,2463],"content":"Method insertonSaveChanges","linkify":"Method insertonSaveChanges","nodes":[{"content":"Method insertonSaveChanges","pos":[0,26]}]},{"pos":[2522,2532],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2534,2540]},{"pos":[2548,2563],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[2597,2607],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[2609,2660]},{"pos":[2689,2701],"content":"Method clear","linkify":"Method clear","nodes":[{"content":"Method clear","pos":[0,12]}]},{"pos":[2731,2751],"content":"Class UserConnection","linkify":"Class UserConnection","nodes":[{"content":"Class UserConnection","pos":[0,20]}]},{"content":"The UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.","pos":[2797,2936]},{"pos":[2942,2949],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"SQL statements are executed, and results are returned in the context of a UserConnection class.","pos":[2951,3046]},{"content":"The UserConnection class can be used to obtain a separate transaction scope.","pos":[3047,3123]},{"pos":[3129,3137],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[3712,3719],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[3723,3729]},{"content":"Description","pos":[3779,3790]},{"content":"public void new(<ph id=\"ph1\">\\[</ph>boolean generateNewTransactionID<ph id=\"ph2\">\\]</ph>)","pos":[3947,4000],"source":"public void new(\\[boolean generateNewTransactionID\\])"},{"content":"Initializes a new instance of the Connection class.","pos":[4003,4054]},{"pos":[4062,4072],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Connection class.","pos":[4074,4125]},{"pos":[4189,4199],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"generateNewTransactionID","pos":[4201,4225]},{"pos":[4232,4250],"content":"Class UserMenuList","linkify":"Class UserMenuList","nodes":[{"content":"Class UserMenuList","pos":[0,18]}]},{"content":"The UserMenuList class enables you to create, read, update, and delete X++ code and metadata.","pos":[4292,4385]},{"pos":[4391,4398],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4404,4412],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[4418,4425],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[4429,4435]},{"content":"Description","pos":[4468,4479]},{"content":"public void createMenu(<ph id=\"ph1\">\\[</ph>str name<ph id=\"ph2\">\\]</ph>)","pos":[4539,4575],"source":"public void createMenu(\\[str name\\])"},{"pos":[4597,4614],"content":"Method createMenu","linkify":"Method createMenu","nodes":[{"content":"Method createMenu","pos":[0,17]}]},{"pos":[4661,4671],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[4673,4677]},{"pos":[4684,4699],"content":"Class UserSetup","linkify":"Class UserSetup","nodes":[{"content":"Class UserSetup","pos":[0,15]}]},{"content":"The UserSetup class provides an interface for setting user parameters.","pos":[4738,4808]},{"pos":[4814,4821],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class is used mainly in the SysUserSetup form.","pos":[4823,4874]},{"content":"This class lets you create, read, update, and delete X++ code and metadata.","pos":[4875,4950]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[4951,5061]},{"pos":[5067,5075],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5081,5088],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5092,5098]},{"content":"Description","pos":[5134,5145]},{"content":"public boolean xRef(<ph id=\"ph1\">\\[</ph>boolean enable<ph id=\"ph2\">\\]</ph>)","pos":[5208,5247],"source":"public boolean xRef(\\[boolean enable\\])"},{"content":"public void setUserSetup(Common cursor)","pos":[5266,5305]},{"content":"public void setDefaults(Common cursor)","pos":[5324,5362]},{"pos":[5385,5396],"content":"Method xRef","linkify":"Method xRef","nodes":[{"content":"Method xRef","pos":[0,11]}]},{"pos":[5446,5456],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"enable","pos":[5458,5464]},{"pos":[5473,5485],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5491,5510],"content":"Method setUserSetup","linkify":"Method setUserSetup","nodes":[{"content":"Method setUserSetup","pos":[0,19]}]},{"pos":[5562,5572],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5574,5580]},{"pos":[5588,5606],"content":"Method setDefaults","linkify":"Method setDefaults","nodes":[{"content":"Method setDefaults","pos":[0,18]}]},{"pos":[5657,5667],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5669,5675]},{"pos":[5682,5696],"content":"Class UtilFile","linkify":"Class UtilFile","nodes":[{"content":"Class UtilFile","pos":[0,14]}]},{"pos":[5736,5743],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5749,5757],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5763,5770],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5774,5780]},{"content":"Description","pos":[5836,5847]},{"content":"public boolean aodFileExist(UtilEntryLevel layer)","pos":[6036,6085]},{"content":"public int importAODFile(UtilEntryLevel layer, int modelId)","pos":[6167,6226]},{"content":"public str layers()","pos":[6298,6317]},{"content":"public boolean needReindex()","pos":[6429,6457]},{"content":"public void check(str layer, str action)","pos":[6560,6600]},{"content":"public void new(str fileType)","pos":[6691,6720]},{"content":"Initializes a new instance of the Object class.","pos":[6753,6800]},{"content":"public void reindex()","pos":[6822,6843]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[6884,6948]},{"content":"public void flushCache()","pos":[6953,6977]},{"pos":[7087,7106],"content":"Method aodFileExist","linkify":"Method aodFileExist","nodes":[{"content":"Method aodFileExist","pos":[0,19]}]},{"pos":[7168,7178],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7180,7185]},{"pos":[7194,7206],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7212,7232],"content":"Method importAODFile","linkify":"Method importAODFile","nodes":[{"content":"Method importAODFile","pos":[0,20]}]},{"pos":[7304,7314],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7316,7321]},{"content":"modelId","pos":[7335,7342]},{"pos":[7351,7363],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7369,7382],"content":"Method layers","linkify":"Method layers","nodes":[{"content":"Method layers","pos":[0,13]}]},{"pos":[7414,7426],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7432,7450],"content":"Method needReindex","linkify":"Method needReindex","nodes":[{"content":"Method needReindex","pos":[0,18]}]},{"pos":[7491,7503],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7509,7521],"content":"Method check","linkify":"Method check","nodes":[{"content":"Method check","pos":[0,12]}]},{"pos":[7574,7584],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7586,7591]},{"content":"action","pos":[7605,7611]},{"pos":[7619,7629],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[7631,7678]},{"pos":[7720,7730],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileType","pos":[7732,7740]},{"pos":[7748,7762],"content":"Method reindex","linkify":"Method reindex","nodes":[{"content":"Method reindex","pos":[0,14]}]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[7764,7828]},{"pos":[7862,7869],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before you call this API.","pos":[7871,7980]},{"pos":[7987,7995],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example calls the UtilFile.reindex method.","pos":[7997,8053]},{"content":"It checks whether the user has the required security key before you perform a modification.","pos":[8054,8145]},{"pos":[8333,8350],"content":"Method flushCache","linkify":"Method flushCache","nodes":[{"content":"Method flushCache","pos":[0,17]}]}],"content":"---\n# required metadata\n\ntitle: U Classes\ndescription: System API classes that start with the letter U.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-23 23 - 49 - 03\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 51691\nms.assetid: 2366134b-9cad-4c24-ab97-e3f1b3e7bcb7\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.dyn365.ops.intro: Feb-16\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# U Classes\n\nSystem API classes that start with the letter U.\n\nClass UnitofWork\n----------------\n\n    class UnitofWork extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                       | Description                                         |\n|--------------------------------------------------------------|-----------------------------------------------------|\n| public boolean getByKey(Common record)                       |                                                     |\n| public void updateonSaveChanges(Common record)               |                                                     |\n| public void saveChanges(\\[UserConnection user\\_connection\\]) |                                                     |\n| public void deleteonSaveChanges(Common record)               |                                                     |\n| public void insertonSaveChanges(Common record)               |                                                     |\n| public void finalize()                                       |                                                     |\n| public void new()                                            | Initializes a new instance of the UnitofWork class. |\n| public void clear()                                          |                                                     |\n\n### Method getByKey\n\n    public boolean getByKey(Common record)\n\n#### Parameters\n\nrecord  \n\n#### Return Value\n\n### Method updateonSaveChanges\n\n    public void updateonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method saveChanges\n\n    public void saveChanges([UserConnection user_connection])\n\n#### Parameters\n\nuser\\_connection  \n\n### Method deleteonSaveChanges\n\n    public void deleteonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method insertonSaveChanges\n\n    public void insertonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the UnitofWork class.\n\n    public void new()\n\n### Method clear\n\n    public void clear()\n\n## Class UserConnection\n    class UserConnection extends Connection\n\nThe UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.\n\n### Remarks\n\nSQL statements are executed, and results are returned in the context of a UserConnection class. The UserConnection class can be used to obtain a separate transaction scope.\n\n### Examples\n\n    static void example()  \n    { \n        UserConnection Con; \n        Statement Stmt; \n        Str sql; \n        ResultSet R; \n        SqlStatementExecutePermission perm; \n        Con = new UserConnection(); \n        sql = 'SELECT VALUE FROM SQLSYSTEMVARIABLES'; \n        Stmt = Con.createStatement(); \n        perm = new SqlStatementExecutePermission(sql); \n        // Check for permission to use the statement. \n        perm.assert(); \n        R = Stmt.executeQuery(sql); \n        while ( R.next() ) \n        { \n            print R.getString(1); \n        } \n    }\n\n### Methods\n\n| Method                                                | Description                                         |\n|-------------------------------------------------------|-----------------------------------------------------|\n| public void new(\\[boolean generateNewTransactionID\\]) | Initializes a new instance of the Connection class. |\n\n### Method new\n\nInitializes a new instance of the Connection class.\n\n    public void new([boolean generateNewTransactionID])\n\n#### Parameters\n\ngenerateNewTransactionID  \n\n## Class UserMenuList\n    class UserMenuList extends TreeNode\n\nThe UserMenuList class enables you to create, read, update, and delete X++ code and metadata.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                               | Description |\n|--------------------------------------|-------------|\n| public void createMenu(\\[str name\\]) |             |\n\n### Method createMenu\n\n    public void createMenu([str name])\n\n#### Parameters\n\nname  \n\n## Class UserSetup\n    class UserSetup extends TreeNode\n\nThe UserSetup class provides an interface for setting user parameters.\n\n### Remarks\n\nThis class is used mainly in the SysUserSetup form. This class lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n### Examples\n\n### Methods\n\n| Method                                  | Description |\n|-----------------------------------------|-------------|\n| public boolean xRef(\\[boolean enable\\]) |             |\n| public void setUserSetup(Common cursor) |             |\n| public void setDefaults(Common cursor)  |             |\n\n### Method xRef\n\n    public boolean xRef([boolean enable])\n\n#### Parameters\n\nenable  \n\n#### Return Value\n\n### Method setUserSetup\n\n    public void setUserSetup(Common cursor)\n\n#### Parameters\n\ncursor  \n\n### Method setDefaults\n\n    public void setDefaults(Common cursor)\n\n#### Parameters\n\ncursor  \n\n## Class UtilFile\n    class UtilFile extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                      | Description                                                      |\n|-------------------------------------------------------------|------------------------------------------------------------------|\n| public boolean aodFileExist(UtilEntryLevel layer)           |                                                                  |\n| public int importAODFile(UtilEntryLevel layer, int modelId) |                                                                  |\n| public str layers()                                         |                                                                  |\n| public boolean needReindex()                                |                                                                  |\n| public void check(str layer, str action)                    |                                                                  |\n| public void new(str fileType)                               | Initializes a new instance of the Object class.                  |\n| public void reindex()                                       | Lets you create, read, update, and delete X++ code and metadata. |\n| public void flushCache()                                    |                                                                  |\n\n### Method aodFileExist\n\n    public boolean aodFileExist(UtilEntryLevel layer)\n\n#### Parameters\n\nlayer  \n\n#### Return Value\n\n### Method importAODFile\n\n    public int importAODFile(UtilEntryLevel layer, int modelId)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\nmodelId  \n\n#### Return Value\n\n### Method layers\n\n    public str layers()\n\n#### Return Value\n\n### Method needReindex\n\n    public boolean needReindex()\n\n#### Return Value\n\n### Method check\n\n    public void check(str layer, str action)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\naction  \n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(str fileType)\n\n#### Parameters\n\nfileType  \n\n### Method reindex\n\nLets you create, read, update, and delete X++ code and metadata.\n\n    public void reindex()\n\n#### Remarks\n\nMake sure that the user has access to the development security key (SysDevelopment) before you call this API.\n\n#### Examples\n\nThe following example calls the UtilFile.reindex method. It checks whether the user has the required security key before you perform a modification.\n\n    server static public void Main(Args _args) \n    { \n        UtilFile u; \n        u = new UtilFile(\"util\"); \n        if (u) \n        { \n            u.reindex(); \n        } \n    }\n\n### Method flushCache\n\n    public void flushCache()\n\n"}