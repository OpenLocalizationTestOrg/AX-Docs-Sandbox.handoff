{"nodes":[{"pos":[32,41],"content":"B Classes","needQuote":true,"needEscape":true,"nodes":[{"content":"B Classes","pos":[0,9]}]},{"pos":[55,103],"content":"System API classes that start with the letter B.","needQuote":true,"needEscape":true,"nodes":[{"content":"System API classes that start with the letter B.","pos":[0,48]}]},{"pos":[660,669],"content":"B Classes","linkify":"B Classes","nodes":[{"content":"B Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter B.","pos":[671,719]},{"pos":[721,733],"content":"Class Binary","linkify":"Class Binary","nodes":[{"content":"Class Binary","pos":[0,12]}]},{"pos":[785,792],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[798,806],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[812,819],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[823,829]},{"content":"Description","pos":[898,909]},{"content":"public int byte(int offset, <ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[1077,1119],"source":"public int byte(int offset, \\[int value\\])"},{"content":"public Real double(int offset, <ph id=\"ph1\">\\[</ph>Real value<ph id=\"ph2\">\\]</ph>)","pos":[1204,1250],"source":"public Real double(int offset, \\[Real value\\])"},{"content":"public int dWord(int offset, <ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[1331,1374],"source":"public int dWord(int offset, \\[int value\\])"},{"content":"public container getContainer()","pos":[1458,1489]},{"content":"public CLRObject getMemoryStream()","pos":[1585,1619]},{"content":"public Int64 qWord(int offset, <ph id=\"ph1\">\\[</ph>Int64 value<ph id=\"ph2\">\\]</ph>)","pos":[1712,1759],"source":"public Int64 qWord(int offset, \\[Int64 value\\])"},{"content":"public str string(int offset, <ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[1839,1883],"source":"public str string(int offset, \\[str value\\])"},{"content":"public int strLenBytes(int offset)","pos":[1966,2000]},{"content":"public int word(int offset, <ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[2093,2135],"source":"public int word(int offset, \\[int value\\])"},{"content":"public str wString(int offset, <ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[2220,2265],"source":"public str wString(int offset, \\[str value\\])"},{"content":"::public static Binary constructFromContainer(container data)","pos":[2347,2408]},{"content":"::public static Binary constructFromMemoryStream(CLRObject memoryStream)","pos":[2474,2546]},{"content":"public void attach(Int64 bufPtr, int bufSize)","pos":[2601,2646]},{"content":"public void finalize()","pos":[2728,2750]},{"content":"public void appendSubString(<ph id=\"ph1\">\\[</ph>str string<ph id=\"ph2\">\\]</ph>)","pos":[2855,2898],"source":"public void appendSubString(\\[str string\\])"},{"content":"public void setBinaryValue(int offset, Binary value)","pos":[2982,3034]},{"content":"public void new(AnyType buffersizeOrString, <ph id=\"ph1\">\\[</ph>boolean wideString<ph id=\"ph2\">\\]</ph>)","pos":[3109,3176],"source":"public void new(AnyType buffersizeOrString, \\[boolean wideString\\])"},{"content":"Initializes a new instance of the Object class.","pos":[3184,3231]},{"pos":[3239,3250],"content":"Method byte","linkify":"Method byte","nodes":[{"content":"Method byte","pos":[0,11]}]},{"pos":[3303,3313],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"offset","pos":[3315,3321]},{"content":"value","pos":[3335,3340]},{"pos":[3349,3361],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3367,3380],"content":"Method double","linkify":"Method double","nodes":[{"content":"Method double","pos":[0,13]}]},{"pos":[3437,3447],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"offset","pos":[3449,3455]},{"content":"value","pos":[3469,3474]},{"pos":[3483,3495],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3501,3513],"content":"Method dWord","linkify":"Method dWord","nodes":[{"content":"Method dWord","pos":[0,12]}]},{"pos":[3567,3577],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"offset","pos":[3579,3585]},{"content":"value","pos":[3599,3604]},{"pos":[3613,3625],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3631,3650],"content":"Method getContainer","linkify":"Method getContainer","nodes":[{"content":"Method getContainer","pos":[0,19]}]},{"pos":[3694,3706],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3712,3734],"content":"Method getMemoryStream","linkify":"Method getMemoryStream","nodes":[{"content":"Method getMemoryStream","pos":[0,22]}]},{"pos":[3781,3793],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3799,3811],"content":"Method qWord","linkify":"Method qWord","nodes":[{"content":"Method qWord","pos":[0,12]}]},{"pos":[3869,3879],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"offset","pos":[3881,3887]},{"content":"value","pos":[3901,3906]},{"pos":[3915,3927],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3933,3946],"content":"Method string","linkify":"Method string","nodes":[{"content":"Method string","pos":[0,13]}]},{"pos":[4001,4011],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"offset","pos":[4013,4019]},{"content":"value","pos":[4033,4038]},{"pos":[4047,4059],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4065,4083],"content":"Method strLenBytes","linkify":"Method strLenBytes","nodes":[{"content":"Method strLenBytes","pos":[0,18]}]},{"pos":[4130,4140],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"offset","pos":[4142,4148]},{"pos":[4157,4169],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4175,4186],"content":"Method word","linkify":"Method word","nodes":[{"content":"Method word","pos":[0,11]}]},{"pos":[4239,4249],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"offset","pos":[4251,4257]},{"content":"value","pos":[4271,4276]},{"pos":[4285,4297],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4303,4317],"content":"Method wString","linkify":"Method wString","nodes":[{"content":"Method wString","pos":[0,14]}]},{"pos":[4373,4383],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"offset","pos":[4385,4391]},{"content":"value","pos":[4405,4410]},{"pos":[4419,4431],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4437,4466],"content":"Method constructFromContainer","linkify":"Method constructFromContainer","nodes":[{"content":"Method constructFromContainer","pos":[0,29]}]},{"pos":[4538,4548],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[4550,4554]},{"pos":[4563,4575],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4581,4613],"content":"Method constructFromMemoryStream","linkify":"Method constructFromMemoryStream","nodes":[{"content":"Method constructFromMemoryStream","pos":[0,32]}]},{"pos":[4696,4706],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"memoryStream","pos":[4708,4720]},{"pos":[4729,4741],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4747,4760],"content":"Method attach","linkify":"Method attach","nodes":[{"content":"Method attach","pos":[0,13]}]},{"pos":[4818,4828],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"bufPtr","pos":[4830,4836]},{"content":"bufSize","pos":[4850,4857]},{"pos":[4865,4880],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[4914,4936],"content":"Method appendSubString","linkify":"Method appendSubString","nodes":[{"content":"Method appendSubString","pos":[0,22]}]},{"pos":[4990,5000],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"string","pos":[5002,5008]},{"pos":[5016,5037],"content":"Method setBinaryValue","linkify":"Method setBinaryValue","nodes":[{"content":"Method setBinaryValue","pos":[0,21]}]},{"pos":[5102,5112],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"offset","pos":[5114,5120]},{"content":"value","pos":[5134,5139]},{"pos":[5147,5157],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[5159,5206]},{"pos":[5284,5294],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"buffersizeOrString","pos":[5296,5314]},{"content":"wideString","pos":[5328,5338]},{"pos":[5345,5359],"content":"Class BinaryIo","linkify":"Class BinaryIo","nodes":[{"content":"Class BinaryIo","pos":[0,14]}]},{"pos":[5395,5402],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5408,5416],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5422,5429],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5433,5439]},{"content":"Description","pos":[5475,5486]},{"content":"public container read()","pos":[5685,5708]},{"content":"Reads the next full record from the Io object.","pos":[5727,5773]},{"content":"public IO<ph id=\"ph1\">\\_</ph>Status status()","pos":[5811,5837],"source":"public IO\\_Status status()"},{"content":"Retrieves the status of the last operation that was performed on the Io object.","pos":[5853,5932]},{"content":"public boolean write(VarArg values)","pos":[5937,5972]},{"content":"Writes values of a simple type.","pos":[5979,6010]},{"content":"public boolean writeExp(container data)","pos":[6063,6102]},{"content":"Writes the content of a container to a file.","pos":[6105,6149]},{"content":"public void new(str filename, str mode)","pos":[6189,6228]},{"content":"Creates an instance of the BinaryIo class.","pos":[6231,6273]},{"content":"public void finalize()","pos":[6315,6337]},{"content":"Closes the file and, if data was written, flushes the file buffers to disk.","pos":[6357,6432]},{"pos":[6444,6455],"content":"Method read","linkify":"Method read","nodes":[{"content":"Method read","pos":[0,11]}]},{"content":"Reads the next full record from the Io object.","pos":[6457,6503]},{"pos":[6539,6551],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that holds the next full record from the Io object.","pos":[6553,6616]},{"pos":[6623,6630],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The definition of the next full record is controlled by the inFieldDelimiter, inRecordDelimiter, and inRecordLength method properties.","pos":[6632,6766]},{"content":"The record is returned as a container.","pos":[6767,6805]},{"content":"Each entry in the container equals one field in the record.","pos":[6806,6865]},{"content":"Every specialized Io class has default settings for the inFieldDelimiter, inRecordDelimiter, and inRecordLength properties.","pos":[6866,6989]},{"content":"These default settings enable input and output of the most common formats.","pos":[6990,7064]},{"content":"You might have to adjust these settings to support the format that you want to use.","pos":[7065,7148]},{"pos":[7154,7167],"content":"Method status","linkify":"Method status","nodes":[{"content":"Method status","pos":[0,13]}]},{"content":"Retrieves the status of the last operation that was performed on the Io object.","pos":[7169,7248]},{"pos":[7286,7298],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The status of the last operation as an IO<ph id=\"ph1\">\\_</ph>Status system enumeration value.","pos":[7300,7375],"source":"The status of the last operation as an IO\\_Status system enumeration value."},{"pos":[7382,7389],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The range of possible IO<ph id=\"ph1\">\\_</ph>Status values that are returned varies, depending on the Io class.","pos":[7391,7483],"source":"The range of possible IO\\_Status values that are returned varies, depending on the Io class."},{"pos":[7489,7501],"content":"Method write","linkify":"Method write","nodes":[{"content":"Method write","pos":[0,12]}]},{"content":"Writes values of a simple type.","pos":[7503,7534]},{"pos":[7582,7592],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"values","pos":[7594,7600]},{"content":"The simple type.","pos":[7603,7619]},{"content":"The simple types are string, integer, real, enum, and date.","pos":[7620,7679]},{"pos":[7686,7698],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the write operation succeeds; otherwise, false.","pos":[7700,7755]},{"content":"If the write operation is unsuccessful, you can check the status method for the cause.","pos":[7756,7842]},{"pos":[7849,7856],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method accepts a variable number of arguments.","pos":[7858,7909]},{"content":"Each value that is specified is put into the output record as a field.","pos":[7910,7980]},{"content":"The first argument is the first field, the second argument is the second field, and so on.","pos":[7981,8071]},{"content":"The fields are separated by the field delimiter that is specified in the outFieldDelimiter method.","pos":[8072,8170]},{"content":"Each record is separated by the record delimiter that is specified in the outRecordDelimiter method.","pos":[8171,8271]},{"content":"To write complete containers, use the writeExp method.","pos":[8272,8326]},{"pos":[8332,8347],"content":"Method writeExp","linkify":"Method writeExp","nodes":[{"content":"Method writeExp","pos":[0,15]}]},{"content":"Writes the content of a container to a file.","pos":[8349,8393]},{"pos":[8445,8455],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[8457,8461]},{"content":"The container that holds data for the record.","pos":[8464,8509]},{"pos":[8516,8528],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the operation is successful; otherwise, false.","pos":[8530,8584]},{"pos":[8591,8598],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If this method returns false, check the status method for the cause.","pos":[8600,8668]},{"content":"The entries in the container are treated as fields, and the container is treated as a full record.","pos":[8669,8767]},{"content":"The field separator is defined in the outFieldDelimiter method.","pos":[8768,8831]},{"content":"The record separator is defined in the outRecordDelimiter method.","pos":[8832,8897]},{"pos":[8903,8913],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates an instance of the BinaryIo class.","pos":[8915,8957]},{"pos":[9009,9019],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filename","pos":[9021,9029]},{"content":"The mode to use to create the instance of the BinaryIo class.","pos":[9032,9093]},{"content":"mode","pos":[9105,9109]},{"content":"The mode to use to create the instance of the BinaryIo class.","pos":[9112,9173]},{"pos":[9180,9187],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If an attacker can control input to the new method, a security risk exists.","pos":[9189,9264]},{"content":"Therefore, this method runs under class.","pos":[9265,9305]},{"content":"Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.","pos":[9306,9441]},{"pos":[9448,9456],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"This example uses the BinaryIo class to read data from the ExampleFile text file.","pos":[9458,9539]},{"pos":[11821,11836],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"content":"Closes the file and, if data was written, flushes the file buffers to disk.","pos":[11838,11913]},{"pos":[11948,11955],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, you finalize the object by leaving the scope.","pos":[11957,12013]},{"content":"Therefore, the finalize method is not usually called directly.","pos":[12014,12076]},{"content":"Written output is not valid until the object is finalized.","pos":[12077,12135]},{"pos":[12140,12153],"content":"Class BinData","linkify":"Class BinData","nodes":[{"content":"Class BinData","pos":[0,13]}]},{"pos":[12192,12199],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12205,12213],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[12219,12226],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[12230,12236]},{"content":"Description","pos":[12302,12313]},{"content":"public boolean appendToFile(str filename)","pos":[12474,12515]},{"content":"public str ascii85Encode()","pos":[12596,12622]},{"content":"public str base64Encode()","pos":[12718,12743]},{"content":"public int compressLZ77(int windowBits)","pos":[12840,12879]},{"content":"public boolean copyData(BinData data, <ph id=\"ph1\">\\[</ph>int offset<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int length<ph id=\"ph4\">\\]</ph>)","pos":[12962,13031],"source":"public boolean copyData(BinData data, \\[int offset\\], \\[int length\\])"},{"content":"public int decompressLZ77()","pos":[13084,13111]},{"content":"public str getAsciiData()","pos":[13206,13231]},{"content":"public container getData()","pos":[13328,13354]},{"content":"public str getStrData()","pos":[13450,13473]},{"content":"public COMVariant getVariant()","pos":[13572,13602]},{"content":"public boolean loadFile(str filename, <ph id=\"ph1\">\\[</ph>int offset<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int length<ph id=\"ph4\">\\]</ph>)","pos":[13694,13763],"source":"public boolean loadFile(str filename, \\[int offset\\], \\[int length\\])"},{"content":"public boolean saveFile(str filename)","pos":[13816,13853]},{"content":"public int size()","pos":[13938,13955]},{"content":"::public static str dataToString(container data)","pos":[14060,14108]},{"content":"::public static container loadFromAscii85(str ascii85EncodedString)","pos":[14182,14249]},{"content":"::public static container loadFromBase64(str base64EncodedString)","pos":[14304,14369]},{"content":"::public static container stringToData(str string)","pos":[14426,14476]},{"content":"public void setStrData(str data)","pos":[14548,14580]},{"content":"public void setVariant(COMVariant data)","pos":[14670,14709]},{"content":"public void appendData(BinData binData)","pos":[14792,14831]},{"content":"public void new()","pos":[14914,14931]},{"content":"Initializes an instance of the BinData class.","pos":[14986,15031]},{"content":"public void setBinaryData(Binary binary)","pos":[15036,15076]},{"content":"public void setAsciiData(str data, <ph id=\"ph1\">\\[</ph>int codePage<ph id=\"ph2\">\\]</ph>)","pos":[15158,15210],"source":"public void setAsciiData(str data, \\[int codePage\\])"},{"content":"public void setData(container data)","pos":[15280,15315]},{"content":"public void finalize()","pos":[15402,15424]},{"pos":[15527,15546],"content":"Method appendToFile","linkify":"Method appendToFile","nodes":[{"content":"Method appendToFile","pos":[0,19]}]},{"pos":[15600,15610],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filename","pos":[15612,15620]},{"pos":[15629,15641],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15647,15667],"content":"Method ascii85Encode","linkify":"Method ascii85Encode","nodes":[{"content":"Method ascii85Encode","pos":[0,20]}]},{"pos":[15706,15718],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15724,15743],"content":"Method base64Encode","linkify":"Method base64Encode","nodes":[{"content":"Method base64Encode","pos":[0,19]}]},{"pos":[15781,15793],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15799,15818],"content":"Method compressLZ77","linkify":"Method compressLZ77","nodes":[{"content":"Method compressLZ77","pos":[0,19]}]},{"pos":[15870,15880],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"windowBits","pos":[15882,15892]},{"pos":[15901,15913],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15919,15934],"content":"Method copyData","linkify":"Method copyData","nodes":[{"content":"Method copyData","pos":[0,15]}]},{"pos":[16012,16022],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[16024,16028]},{"content":"offset","pos":[16042,16048]},{"content":"length","pos":[16062,16068]},{"pos":[16077,16089],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16095,16116],"content":"Method decompressLZ77","linkify":"Method decompressLZ77","nodes":[{"content":"Method decompressLZ77","pos":[0,21]}]},{"pos":[16156,16168],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16174,16193],"content":"Method getAsciiData","linkify":"Method getAsciiData","nodes":[{"content":"Method getAsciiData","pos":[0,19]}]},{"pos":[16231,16243],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16249,16263],"content":"Method getData","linkify":"Method getData","nodes":[{"content":"Method getData","pos":[0,14]}]},{"pos":[16302,16314],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16320,16337],"content":"Method getStrData","linkify":"Method getStrData","nodes":[{"content":"Method getStrData","pos":[0,17]}]},{"pos":[16373,16385],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16391,16408],"content":"Method getVariant","linkify":"Method getVariant","nodes":[{"content":"Method getVariant","pos":[0,17]}]},{"pos":[16451,16463],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16469,16484],"content":"Method loadFile","linkify":"Method loadFile","nodes":[{"content":"Method loadFile","pos":[0,15]}]},{"pos":[16562,16572],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filename","pos":[16574,16582]},{"content":"offset","pos":[16596,16602]},{"content":"length","pos":[16616,16622]},{"pos":[16631,16643],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16650,16657],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If an attacker can control input to the loadFile method, a security risk exists.","pos":[16659,16739]},{"content":"Therefore, this method runs under Code Access Security.","pos":[16740,16795]},{"content":"Calls to this method on the server require permission.","pos":[16796,16850]},{"content":"Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.","pos":[16851,16986]},{"pos":[16992,17007],"content":"Method saveFile","linkify":"Method saveFile","nodes":[{"content":"Method saveFile","pos":[0,15]}]},{"pos":[17057,17067],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filename","pos":[17069,17077]},{"pos":[17086,17098],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17105,17112],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If an attacker can control input to the saveFile method, a security risk exists.","pos":[17114,17194]},{"content":"Therefore, this method runs under Code Access Security.","pos":[17195,17250]},{"content":"Calls to this method on the server require permission.","pos":[17251,17305]},{"content":"Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.","pos":[17306,17441]},{"pos":[17447,17458],"content":"Method size","linkify":"Method size","nodes":[{"content":"Method size","pos":[0,11]}]},{"pos":[17488,17500],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17506,17525],"content":"Method dataToString","linkify":"Method dataToString","nodes":[{"content":"Method dataToString","pos":[0,19]}]},{"pos":[17584,17594],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[17596,17600]},{"pos":[17609,17621],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17627,17649],"content":"Method loadFromAscii85","linkify":"Method loadFromAscii85","nodes":[{"content":"Method loadFromAscii85","pos":[0,22]}]},{"pos":[17727,17737],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ascii85EncodedString","pos":[17739,17759]},{"pos":[17768,17780],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17786,17807],"content":"Method loadFromBase64","linkify":"Method loadFromBase64","nodes":[{"content":"Method loadFromBase64","pos":[0,21]}]},{"pos":[17883,17893],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"base64EncodedString","pos":[17895,17914]},{"pos":[17923,17935],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17941,17960],"content":"Method stringToData","linkify":"Method stringToData","nodes":[{"content":"Method stringToData","pos":[0,19]}]},{"pos":[18021,18031],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"string","pos":[18033,18039]},{"pos":[18048,18060],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18066,18083],"content":"Method setStrData","linkify":"Method setStrData","nodes":[{"content":"Method setStrData","pos":[0,17]}]},{"pos":[18128,18138],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[18140,18144]},{"pos":[18152,18169],"content":"Method setVariant","linkify":"Method setVariant","nodes":[{"content":"Method setVariant","pos":[0,17]}]},{"pos":[18221,18231],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[18233,18237]},{"pos":[18245,18262],"content":"Method appendData","linkify":"Method appendData","nodes":[{"content":"Method appendData","pos":[0,17]}]},{"pos":[18314,18324],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"binData","pos":[18326,18333]},{"pos":[18341,18351],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes an instance of the BinData class.","pos":[18353,18398]},{"pos":[18427,18447],"content":"Method setBinaryData","linkify":"Method setBinaryData","nodes":[{"content":"Method setBinaryData","pos":[0,20]}]},{"pos":[18500,18510],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"binary","pos":[18512,18518]},{"pos":[18526,18545],"content":"Method setAsciiData","linkify":"Method setAsciiData","nodes":[{"content":"Method setAsciiData","pos":[0,19]}]},{"pos":[18608,18618],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[18620,18624]},{"content":"codePage","pos":[18638,18646]},{"pos":[18654,18668],"content":"Method setData","linkify":"Method setData","nodes":[{"content":"Method setData","pos":[0,14]}]},{"pos":[18716,18726],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[18728,18732]},{"pos":[18740,18755],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]}],"content":"---\n# required metadata\n\ntitle: B Classes\ndescription: System API classes that start with the letter B.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 04/04/2017\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \n# ms.reviewer: a:2:{s:4:\"name\";s:22:\"Robin Reynolds-Haertle\";s:2:\"id\";s:0:\"\";}\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 50951\nms.assetid: 23a67a79-4f80-4f48-802a-08aba7824259\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# B Classes\n\nSystem API classes that start with the letter B.\n\nClass Binary\n------------\n\n    class Binary extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                   | Description                                     |\n|--------------------------------------------------------------------------|-------------------------------------------------|\n| public int byte(int offset, \\[int value\\])                               |                                                 |\n| public Real double(int offset, \\[Real value\\])                           |                                                 |\n| public int dWord(int offset, \\[int value\\])                              |                                                 |\n| public container getContainer()                                          |                                                 |\n| public CLRObject getMemoryStream()                                       |                                                 |\n| public Int64 qWord(int offset, \\[Int64 value\\])                          |                                                 |\n| public str string(int offset, \\[str value\\])                             |                                                 |\n| public int strLenBytes(int offset)                                       |                                                 |\n| public int word(int offset, \\[int value\\])                               |                                                 |\n| public str wString(int offset, \\[str value\\])                            |                                                 |\n| ::public static Binary constructFromContainer(container data)            |                                                 |\n| ::public static Binary constructFromMemoryStream(CLRObject memoryStream) |                                                 |\n| public void attach(Int64 bufPtr, int bufSize)                            |                                                 |\n| public void finalize()                                                   |                                                 |\n| public void appendSubString(\\[str string\\])                              |                                                 |\n| public void setBinaryValue(int offset, Binary value)                     |                                                 |\n| public void new(AnyType buffersizeOrString, \\[boolean wideString\\])      | Initializes a new instance of the Object class. |\n\n### Method byte\n\n    public int byte(int offset, [int value])\n\n#### Parameters\n\noffset  \n\n<!-- -->\n\nvalue  \n\n#### Return Value\n\n### Method double\n\n    public Real double(int offset, [Real value])\n\n#### Parameters\n\noffset  \n\n<!-- -->\n\nvalue  \n\n#### Return Value\n\n### Method dWord\n\n    public int dWord(int offset, [int value])\n\n#### Parameters\n\noffset  \n\n<!-- -->\n\nvalue  \n\n#### Return Value\n\n### Method getContainer\n\n    public container getContainer()\n\n#### Return Value\n\n### Method getMemoryStream\n\n    public CLRObject getMemoryStream()\n\n#### Return Value\n\n### Method qWord\n\n    public Int64 qWord(int offset, [Int64 value])\n\n#### Parameters\n\noffset  \n\n<!-- -->\n\nvalue  \n\n#### Return Value\n\n### Method string\n\n    public str string(int offset, [str value])\n\n#### Parameters\n\noffset  \n\n<!-- -->\n\nvalue  \n\n#### Return Value\n\n### Method strLenBytes\n\n    public int strLenBytes(int offset)\n\n#### Parameters\n\noffset  \n\n#### Return Value\n\n### Method word\n\n    public int word(int offset, [int value])\n\n#### Parameters\n\noffset  \n\n<!-- -->\n\nvalue  \n\n#### Return Value\n\n### Method wString\n\n    public str wString(int offset, [str value])\n\n#### Parameters\n\noffset  \n\n<!-- -->\n\nvalue  \n\n#### Return Value\n\n### Method constructFromContainer\n\n    public static Binary constructFromContainer(container data)\n\n#### Parameters\n\ndata  \n\n#### Return Value\n\n### Method constructFromMemoryStream\n\n    public static Binary constructFromMemoryStream(CLRObject memoryStream)\n\n#### Parameters\n\nmemoryStream  \n\n#### Return Value\n\n### Method attach\n\n    public void attach(Int64 bufPtr, int bufSize)\n\n#### Parameters\n\nbufPtr  \n\n<!-- -->\n\nbufSize  \n\n### Method finalize\n\n    public void finalize()\n\n### Method appendSubString\n\n    public void appendSubString([str string])\n\n#### Parameters\n\nstring  \n\n### Method setBinaryValue\n\n    public void setBinaryValue(int offset, Binary value)\n\n#### Parameters\n\noffset  \n\n<!-- -->\n\nvalue  \n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(AnyType buffersizeOrString, [boolean wideString])\n\n#### Parameters\n\nbuffersizeOrString  \n\n<!-- -->\n\nwideString  \n\n## Class BinaryIo\n    class BinaryIo extends Io\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                  | Description                                                                     |\n|-----------------------------------------|---------------------------------------------------------------------------------|\n| public container read()                 | Reads the next full record from the Io object.                                  |\n| public IO\\_Status status()              | Retrieves the status of the last operation that was performed on the Io object. |\n| public boolean write(VarArg values)     | Writes values of a simple type.                                                 |\n| public boolean writeExp(container data) | Writes the content of a container to a file.                                    |\n| public void new(str filename, str mode) | Creates an instance of the BinaryIo class.                                      |\n| public void finalize()                  | Closes the file and, if data was written, flushes the file buffers to disk.     |\n\n### Method read\n\nReads the next full record from the Io object.\n\n    public container read()\n\n#### Return Value\n\nA container that holds the next full record from the Io object.\n\n#### Remarks\n\nThe definition of the next full record is controlled by the inFieldDelimiter, inRecordDelimiter, and inRecordLength method properties. The record is returned as a container. Each entry in the container equals one field in the record. Every specialized Io class has default settings for the inFieldDelimiter, inRecordDelimiter, and inRecordLength properties. These default settings enable input and output of the most common formats. You might have to adjust these settings to support the format that you want to use.\n\n### Method status\n\nRetrieves the status of the last operation that was performed on the Io object.\n\n    public IO_Status status()\n\n#### Return Value\n\nThe status of the last operation as an IO\\_Status system enumeration value.\n\n#### Remarks\n\nThe range of possible IO\\_Status values that are returned varies, depending on the Io class.\n\n### Method write\n\nWrites values of a simple type.\n\n    public boolean write(VarArg values)\n\n#### Parameters\n\nvalues  \nThe simple type. The simple types are string, integer, real, enum, and date.\n\n#### Return Value\n\ntrue if the write operation succeeds; otherwise, false. If the write operation is unsuccessful, you can check the status method for the cause.\n\n#### Remarks\n\nThis method accepts a variable number of arguments. Each value that is specified is put into the output record as a field. The first argument is the first field, the second argument is the second field, and so on. The fields are separated by the field delimiter that is specified in the outFieldDelimiter method. Each record is separated by the record delimiter that is specified in the outRecordDelimiter method. To write complete containers, use the writeExp method.\n\n### Method writeExp\n\nWrites the content of a container to a file.\n\n    public boolean writeExp(container data)\n\n#### Parameters\n\ndata  \nThe container that holds data for the record.\n\n#### Return Value\n\ntrue if the operation is successful; otherwise, false.\n\n#### Remarks\n\nIf this method returns false, check the status method for the cause. The entries in the container are treated as fields, and the container is treated as a full record. The field separator is defined in the outFieldDelimiter method. The record separator is defined in the outRecordDelimiter method.\n\n### Method new\n\nCreates an instance of the BinaryIo class.\n\n    public void new(str filename, str mode)\n\n#### Parameters\n\nfilename  \nThe mode to use to create the instance of the BinaryIo class.\n\n<!-- -->\n\nmode  \nThe mode to use to create the instance of the BinaryIo class.\n\n#### Remarks\n\nIf an attacker can control input to the new method, a security risk exists. Therefore, this method runs under class. Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.\n\n#### Examples\n\nThis example uses the BinaryIo class to read data from the ExampleFile text file.\n\n    static void BinaryIoExampleW2(Args _args)\n    {     \n        #define.ExampleFile(@\"D:\\Writers\\GeneMi\\_Junk\\TestW.BinaryIo\")\n        #define.ExampleOpenModeW(\"w\")\n        #define.ExampleOpenModeR(\"r\")\n        BinaryIo binaryIoObject;\n        container con1;\n        str sConRecs;\n        FileIoPermission perm;\n\n        // Set the code access permission to help protect the use of\n        // the BinaryIo.new method.\n        perm = new FileIoPermission(#ExampleFile, #ExampleOpenModeW);\n        if (perm == null)\n        {\n            return;\n        }\n        perm.assert();\n             \n        // Overwrites the file if it already exists; restarts it as empty.\n        binaryIoObject = new BinaryIo(#ExampleFile, #ExampleOpenModeW);\n        if (binaryIoObject != null)\n        {\n            info(\"w binaryIoObject is NOT null, Good.\");\n            binaryIoObject.write(\"hello world\");\n            binaryIoObject.write(\"goodbye solar system\");\n        }\n        else\n        {\n            warning(\"w binaryIoObject is NULL, Bad.\");\n        }\n\n        binaryIoObject.finalize();\n        binaryIoObject = null;\n        // Close the file, w?\n        // BinaryIo instance can only read files in that\n        // are in the exact same esoteric format that BinaryIo\n        // writes files to.\n        // binaryIoObject = new BinaryIo(#ExampleFile, #ExampleOpenModeR);\n        if (binaryIoObject != null)\n        {\n             info(\"r binaryIoObject is NOT null, Good.\");\n             while (true)\n            {\n                con1 = binaryIoObject.read();\n                if (con1 == conNull())\n                {\n                    info(\"r, no more records.\");\n                    break;\n                }\n                sConRecs = con2Str(con1);\n                info(sConRecs);\n            }\n        }\n        else\n        {\n             warning(\"r binaryIoObject is NULL, Bad.\");\n        }\n        binaryIoObject.finalize();\n        binaryIoObject = null;\n        WINAPI::deleteFile(#ExampleFile);\n         // Clean up after the job.\n        CodeAccessPermission::revertAssert();\n     }\n    /*** Output copied from Infolog:Message (11:22:16 am)w binaryIoObject is NOT null, Good.r binaryIoObject is NOT null, Good.hello worldgoodbye solar systemr, no more records.***/\n\n### Method finalize\n\nCloses the file and, if data was written, flushes the file buffers to disk.\n\n    public void finalize()\n\n#### Remarks\n\nTypically, you finalize the object by leaving the scope. Therefore, the finalize method is not usually called directly. Written output is not valid until the object is finalized.\n\n## Class BinData\n    class BinData extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                | Description                                   |\n|-----------------------------------------------------------------------|-----------------------------------------------|\n| public boolean appendToFile(str filename)                             |                                               |\n| public str ascii85Encode()                                            |                                               |\n| public str base64Encode()                                             |                                               |\n| public int compressLZ77(int windowBits)                               |                                               |\n| public boolean copyData(BinData data, \\[int offset\\], \\[int length\\]) |                                               |\n| public int decompressLZ77()                                           |                                               |\n| public str getAsciiData()                                             |                                               |\n| public container getData()                                            |                                               |\n| public str getStrData()                                               |                                               |\n| public COMVariant getVariant()                                        |                                               |\n| public boolean loadFile(str filename, \\[int offset\\], \\[int length\\]) |                                               |\n| public boolean saveFile(str filename)                                 |                                               |\n| public int size()                                                     |                                               |\n| ::public static str dataToString(container data)                      |                                               |\n| ::public static container loadFromAscii85(str ascii85EncodedString)   |                                               |\n| ::public static container loadFromBase64(str base64EncodedString)     |                                               |\n| ::public static container stringToData(str string)                    |                                               |\n| public void setStrData(str data)                                      |                                               |\n| public void setVariant(COMVariant data)                               |                                               |\n| public void appendData(BinData binData)                               |                                               |\n| public void new()                                                     | Initializes an instance of the BinData class. |\n| public void setBinaryData(Binary binary)                              |                                               |\n| public void setAsciiData(str data, \\[int codePage\\])                  |                                               |\n| public void setData(container data)                                   |                                               |\n| public void finalize()                                                |                                               |\n\n### Method appendToFile\n\n    public boolean appendToFile(str filename)\n\n#### Parameters\n\nfilename  \n\n#### Return Value\n\n### Method ascii85Encode\n\n    public str ascii85Encode()\n\n#### Return Value\n\n### Method base64Encode\n\n    public str base64Encode()\n\n#### Return Value\n\n### Method compressLZ77\n\n    public int compressLZ77(int windowBits)\n\n#### Parameters\n\nwindowBits  \n\n#### Return Value\n\n### Method copyData\n\n    public boolean copyData(BinData data, [int offset], [int length])\n\n#### Parameters\n\ndata  \n\n<!-- -->\n\noffset  \n\n<!-- -->\n\nlength  \n\n#### Return Value\n\n### Method decompressLZ77\n\n    public int decompressLZ77()\n\n#### Return Value\n\n### Method getAsciiData\n\n    public str getAsciiData()\n\n#### Return Value\n\n### Method getData\n\n    public container getData()\n\n#### Return Value\n\n### Method getStrData\n\n    public str getStrData()\n\n#### Return Value\n\n### Method getVariant\n\n    public COMVariant getVariant()\n\n#### Return Value\n\n### Method loadFile\n\n    public boolean loadFile(str filename, [int offset], [int length])\n\n#### Parameters\n\nfilename  \n\n<!-- -->\n\noffset  \n\n<!-- -->\n\nlength  \n\n#### Return Value\n\n#### Remarks\n\nIf an attacker can control input to the loadFile method, a security risk exists. Therefore, this method runs under Code Access Security. Calls to this method on the server require permission. Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.\n\n### Method saveFile\n\n    public boolean saveFile(str filename)\n\n#### Parameters\n\nfilename  \n\n#### Return Value\n\n#### Remarks\n\nIf an attacker can control input to the saveFile method, a security risk exists. Therefore, this method runs under Code Access Security. Calls to this method on the server require permission. Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.\n\n### Method size\n\n    public int size()\n\n#### Return Value\n\n### Method dataToString\n\n    public static str dataToString(container data)\n\n#### Parameters\n\ndata  \n\n#### Return Value\n\n### Method loadFromAscii85\n\n    public static container loadFromAscii85(str ascii85EncodedString)\n\n#### Parameters\n\nascii85EncodedString  \n\n#### Return Value\n\n### Method loadFromBase64\n\n    public static container loadFromBase64(str base64EncodedString)\n\n#### Parameters\n\nbase64EncodedString  \n\n#### Return Value\n\n### Method stringToData\n\n    public static container stringToData(str string)\n\n#### Parameters\n\nstring  \n\n#### Return Value\n\n### Method setStrData\n\n    public void setStrData(str data)\n\n#### Parameters\n\ndata  \n\n### Method setVariant\n\n    public void setVariant(COMVariant data)\n\n#### Parameters\n\ndata  \n\n### Method appendData\n\n    public void appendData(BinData binData)\n\n#### Parameters\n\nbinData  \n\n### Method new\n\nInitializes an instance of the BinData class.\n\n    public void new()\n\n### Method setBinaryData\n\n    public void setBinaryData(Binary binary)\n\n#### Parameters\n\nbinary  \n\n### Method setAsciiData\n\n    public void setAsciiData(str data, [int codePage])\n\n#### Parameters\n\ndata  \n\n<!-- -->\n\ncodePage  \n\n### Method setData\n\n    public void setData(container data)\n\n#### Parameters\n\ndata  \n\n### Method finalize\n\n    public void finalize()\n\n"}