{"nodes":[{"pos":[32,96],"content":"Integrate the Retail SDK with the continuous build system (VSTS)","needQuote":true,"needEscape":true,"nodes":[{"content":"Integrate the Retail SDK with the continuous build system (VSTS)","pos":[0,64]}]},{"pos":[110,437],"content":"The LCS-integrated experience supports both code upgrades and new projects. The Retail SDK is a self-contained MSBuild-based build system. Many customizers want to make productive changes in both Microsoft Dynamics 365 for Operations and Retail components. This article outlines the manual steps for merging both build systems.","needQuote":true,"needEscape":true,"nodes":[{"content":"The LCS-integrated experience supports both code upgrades and new projects. The Retail SDK is a self-contained MSBuild-based build system. Many customizers want to make productive changes in both Microsoft Dynamics 365 for Operations and Retail components. This article outlines the manual steps for merging both build systems.","pos":[0,327],"nodes":[{"content":"The LCS-integrated experience supports both code upgrades and new projects.","pos":[0,75]},{"content":"The Retail SDK is a self-contained MSBuild-based build system.","pos":[76,138]},{"content":"Many customizers want to make productive changes in both Microsoft Dynamics 365 for Operations and Retail components.","pos":[139,256]},{"content":"This article outlines the manual steps for merging both build systems.","pos":[257,327]}]}]},{"pos":[932,996],"content":"Integrate the Retail SDK with the continuous build system (VSTS)","linkify":"Integrate the Retail SDK with the continuous build system (VSTS)","nodes":[{"content":"Integrate the Retail SDK with the continuous build system (VSTS)","pos":[0,64]}]},{"content":"The LCS-integrated experience supports both code upgrades and new projects.","pos":[998,1073]},{"content":"The Retail SDK is a self-contained MSBuild-based build system.","pos":[1074,1136]},{"content":"Many customizers want to make productive changes in both Microsoft Dynamics 365 for Operations and Retail components.","pos":[1137,1254]},{"content":"This article outlines the manual steps for merging both build systems.","pos":[1255,1325]},{"pos":[1328,1351],"content":"Enable the build system","linkify":"Enable the build system","nodes":[{"content":"Enable the build system","pos":[0,23]}]},{"content":"To get started, you must follow all the steps to get a full Dynamics 365 for Operations continuous build system up and running.","pos":[1377,1504]},{"content":"For information, see <bpt id=\"p1\">[</bpt>Developer topology deployment with continuous build and test automation<ept id=\"p1\">](/dynamics365/operations/dev-itpro/perf-test/continuous-build-test-automation)</ept>.","pos":[1505,1678],"source":" For information, see [Developer topology deployment with continuous build and test automation](/dynamics365/operations/dev-itpro/perf-test/continuous-build-test-automation)."},{"content":"After deployment, you create the build definition and build steps.","pos":[1679,1745]},{"content":"Build at least one time, so that you become familiar with it and are sure that you can build without errors.","pos":[1746,1854]},{"content":"Then move to the next step.","pos":[1855,1882]},{"pos":[1887,1909],"content":"Prepare the Retail SDK","linkify":"Prepare the Retail SDK","nodes":[{"content":"Prepare the Retail SDK","pos":[0,22]}]},{"pos":[1914,1936],"content":"Getting the Retail SDK","linkify":"Getting the Retail SDK","nodes":[{"content":"Getting the Retail SDK","pos":[0,22]}]},{"content":"If you don't already have the Retail software development kit (SDK) in the same Microsoft Visual Studio Team Services (VSTS) project, add it now.","pos":[1938,2083]},{"content":"You will find the Retail SDK in any developer or build topology.","pos":[2084,2148]},{"content":"Follow the branching documentation in the <bpt id=\"p1\">**</bpt>Retail Sdk Handbook.pdf<ept id=\"p1\">**</ept> file, which is in the Documents folder for the Retail SDK.","pos":[2149,2277],"source":" Follow the branching documentation in the **Retail Sdk Handbook.pdf** file, which is in the Documents folder for the Retail SDK."},{"content":"We recommend that you create your Retail SDK mirror and your Retail SDK customization branch at this time.","pos":[2278,2384]},{"content":"After your Retail SDK customization branch is ready, and it has been submitted in the same VSTS project as Dynamics 365 for Operations, you can start.","pos":[2385,2535]},{"pos":[2541,2569],"content":"Get the build target working","linkify":"Get the build target working","nodes":[{"content":"Get the build target working","pos":[0,28]}]},{"content":"You must make some changes in a few filesto get the correct build targeting to work.","pos":[2571,2655]},{"content":"(These changes will be made in a future release of the Retail SDK.)","pos":[2656,2723]},{"pos":[2730,2751],"content":"1. Add a Clean target","linkify":"1. Add a Clean target","nodes":[{"content":"1. Add a Clean target","pos":[0,21]}]},{"content":"Add a correct Clean target at the end of these four project files:","pos":[2753,2819]},{"content":"Packages<ph id=\"ph1\">\\\\</ph>CloudPos<ph id=\"ph2\">\\\\</ph>Sdk.CloudPosSetup.proj","pos":[2825,2867],"source":"Packages\\\\CloudPos\\\\Sdk.CloudPosSetup.proj"},{"content":"Packages<ph id=\"ph1\">\\\\</ph>RetailDeployablePackage<ph id=\"ph2\">\\\\</ph>Sdk.RetailDeployablePackageSetup.proj","pos":[2872,2944],"source":"Packages\\\\RetailDeployablePackage\\\\Sdk.RetailDeployablePackageSetup.proj"},{"content":"Packages<ph id=\"ph1\">\\\\</ph>RetailSelfService<ph id=\"ph2\">\\\\</ph>Sdk.RetailSelfServiceSetup.proj","pos":[2949,3009],"source":"Packages\\\\RetailSelfService\\\\Sdk.RetailSelfServiceSetup.proj"},{"content":"Packages<ph id=\"ph1\">\\\\</ph>RetailServer<ph id=\"ph2\">\\\\</ph>Sdk.RetailServerSetup.proj","pos":[3014,3064],"source":"Packages\\\\RetailServer\\\\Sdk.RetailServerSetup.proj"},{"content":"In an XML editor of your choice, update the Rebuild and Clean MSBuild targets as shown here.","pos":[3066,3158]},{"content":"All four project files require the same changes.","pos":[3436,3484]},{"pos":[3491,3535],"content":"2. Change the CopyTypeScriptLibraries target","linkify":"2. Change the CopyTypeScriptLibraries target","nodes":[{"content":"2. Change the CopyTypeScriptLibraries target","pos":[0,44]}]},{"content":"Change the CopyTypeScriptLibraries target in these four project files:","pos":[3537,3607]},{"content":"OnlineStore<ph id=\"ph1\">\\\\</ph>Ecommerce.Sdk.Controls<ph id=\"ph2\">\\\\</ph>Platform.Ecommerce.Sdk.Controls.csproj","pos":[3613,3688],"source":"OnlineStore\\\\Ecommerce.Sdk.Controls\\\\Platform.Ecommerce.Sdk.Controls.csproj"},{"content":"POS<ph id=\"ph1\">\\\\</ph>App<ph id=\"ph2\">\\\\</ph>Pos.App.jsproj","pos":[3693,3717],"source":"POS\\\\App\\\\Pos.App.jsproj"},{"content":"POS<ph id=\"ph1\">\\\\</ph>ViewModels<ph id=\"ph2\">\\\\</ph>Pos.ViewModels.csproj","pos":[3722,3760],"source":"POS\\\\ViewModels\\\\Pos.ViewModels.csproj"},{"content":"POS<ph id=\"ph1\">\\\\</ph>Web<ph id=\"ph2\">\\\\</ph>Pos.Web.csproj","pos":[3765,3789],"source":"POS\\\\Web\\\\Pos.Web.csproj"},{"content":"Make this change in all four files.","pos":[4159,4194]},{"content":"When you've finished, submit these eight file changes to VSTS.","pos":[4195,4257]},{"pos":[4263,4349],"content":"Add two Windows PowerShell scripts to the Retail SDK that will be used for build tasks","linkify":"Add two Windows PowerShell scripts to the Retail SDK that will be used for build tasks","nodes":[{"content":"Add two Windows PowerShell scripts to the Retail SDK that will be used for build tasks","pos":[0,86]}]},{"content":"You need to add two scripts that the build can use to do its work.","pos":[4351,4417]},{"content":"(These scripts will be added automatically in a future release of the Retail SDK.) In the Retail Sdk<ph id=\"ph1\">\\\\</ph>Buildtools folder, add a file that has the following content file.","pos":[4418,4586],"source":" (These scripts will be added automatically in a future release of the Retail SDK.) In the Retail Sdk\\\\Buildtools folder, add a file that has the following content file."},{"content":"Name this file <bpt id=\"p1\">**</bpt>Copy-RetailBinaries.ps1<ept id=\"p1\">**</ept>.","pos":[4587,4630],"source":" Name this file **Copy-RetailBinaries.ps1**."},{"content":"In the same folder, add a file that has the following content.","pos":[6564,6626]},{"content":"Name this file <bpt id=\"p1\">**</bpt>Copy-RetailPackages.ps1<ept id=\"p1\">**</ept>.","pos":[6627,6670],"source":" Name this file **Copy-RetailPackages.ps1**."},{"content":"When you've finished, submit both files to VSTS.","pos":[9300,9348]},{"pos":[9353,9396],"content":"Add a repository mapping for the Retail SDK","linkify":"Add a repository mapping for the Retail SDK","nodes":[{"content":"Add a repository mapping for the Retail SDK","pos":[0,43]}]},{"content":"Edit the build definition so that it includes the location of the Retail SDK.","pos":[9397,9474]},{"content":"(In other words, add a map.) <bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Adding a repository mapping for the Retail SDK<ept id=\"p1\">](./media/build-map-addition.png)](./media/build-map-addition.png)</ept>","pos":[9475,9619],"source":" (In other words, add a map.) [![Adding a repository mapping for the Retail SDK](./media/build-map-addition.png)](./media/build-map-addition.png)"},{"pos":[9624,9668],"content":"Add a new build step to build the Retail SDK","linkify":"Add a new build step to build the Retail SDK","nodes":[{"content":"Add a new build step to build the Retail SDK","pos":[0,44]}]},{"content":"Add a new step at the beginning of the build pipeline, as shown in the following screen shot.","pos":[9669,9762]},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Adding a new build step to build the Retail SDK<ept id=\"p1\">](./media/new-build-step-1024x527.png)](./media/new-build-step.png)</ept>","pos":[9763,9880],"source":"[![Adding a new build step to build the Retail SDK](./media/new-build-step-1024x527.png)](./media/new-build-step.png)"},{"pos":[9885,9974],"content":"Add a copy step for binaries from the Retail SDK to the Dynamics 365 for Operations build","linkify":"Add a copy step for binaries from the Retail SDK to the Dynamics 365 for Operations build","nodes":[{"content":"Add a copy step for binaries from the Retail SDK to the Dynamics 365 for Operations build","pos":[0,89]}]},{"content":"This build step enables Microsoft to copy the latest built Retail binaries to the Dynamics 365 for Operations bin folder, if Microsoft shares files/binaries.","pos":[9975,10132]},{"content":"Make sure that you complete this step immediately after you add a build step for the Retail SDK, as described in the previous section.","pos":[10133,10267]},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Adding a copy step for binaries from the Retail SDK to the Dynamics AX build<ept id=\"p1\">](./media/binary-drop-to-ax.png)](./media/binary-drop-to-ax.png)</ept>","pos":[10268,10411],"source":"[![Adding a copy step for binaries from the Retail SDK to the Dynamics AX build](./media/binary-drop-to-ax.png)](./media/binary-drop-to-ax.png)"},{"pos":[10416,10455],"content":"Add a copy step for all Retail packages","linkify":"Add a copy step for all Retail packages","nodes":[{"content":"Add a copy step for all Retail packages","pos":[0,39]}]},{"content":"Make sure that this step occurs after the “PowerShell: Generate packages” step (see image below).","pos":[10456,10553]},{"content":"Here are the arguments.","pos":[10554,10577]},{"pos":[10674,10782],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Adding a copy step for all Retail packages<ept id=\"p1\">](./media/package-drop-1024x473.png)](./media/package-drop.png)</ept>","source":"[![Adding a copy step for all Retail packages](./media/package-drop-1024x473.png)](./media/package-drop.png)"},{"pos":[10787,10854],"content":"Optional: Referencing a Retail DLL from Dynamics 365 for Operations","linkify":"Optional: Referencing a Retail DLL from Dynamics 365 for Operations","nodes":[{"content":"Optional: Referencing a Retail DLL from Dynamics 365 for Operations","pos":[0,67]}]},{"content":"You must complete this task only if you must add built Retail binaries to the Dynamics 365 for Operations package.","pos":[10855,10969]},{"content":"In this case, you must follow these three steps:","pos":[10970,11018]},{"content":"Use a normal AXReference in your Dynamics 365 for Operations project.","pos":[11024,11093]},{"content":"Add the corresponding AXReference folder and the XML file inside it to VSTS.","pos":[11098,11174]},{"content":"Update the Copy-RetailBinaries.ps1 file with the appropriate file commands to get the binary file from the Retail SDK to the Dynamics 365 for Operations bin folder.","pos":[11179,11343]},{"content":"The Microsoft Windows PowerShell file includes a sample that copies the PricingEngine.dll file into the ApplicationSuite bin folder.","pos":[11344,11476]},{"content":"Depending on the modules that you're building, the files and folders must be changed so that they are in a different location.","pos":[11477,11603]}],"content":"---\n# required metadata\n\ntitle: Integrate the Retail SDK with the continuous build system (VSTS)\ndescription: The LCS-integrated experience supports both code upgrades and new projects. The Retail SDK is a self-contained MSBuild-based build system. Many customizers want to make productive changes in both Microsoft Dynamics 365 for Operations and Retail components. This article outlines the manual steps for merging both build systems. \nauthor: MargoC\nmanager: AnnBe\nms.date: 04/04/2017\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \n# ms.reviewer: 61\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 80861\nms.assetid: bb00aa60-6058-4f2e-855e-40d6be4dcecc\nms.search.region: Global\n# ms.search.industry: \nms.author: margoc\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# Integrate the Retail SDK with the continuous build system (VSTS)\n\nThe LCS-integrated experience supports both code upgrades and new projects. The Retail SDK is a self-contained MSBuild-based build system. Many customizers want to make productive changes in both Microsoft Dynamics 365 for Operations and Retail components. This article outlines the manual steps for merging both build systems. \n\nEnable the build system\n-----------------------\n\nTo get started, you must follow all the steps to get a full Dynamics 365 for Operations continuous build system up and running. For information, see [Developer topology deployment with continuous build and test automation](/dynamics365/operations/dev-itpro/perf-test/continuous-build-test-automation). After deployment, you create the build definition and build steps. Build at least one time, so that you become familiar with it and are sure that you can build without errors. Then move to the next step.\n\n## Prepare the Retail SDK\n### Getting the Retail SDK\n\nIf you don't already have the Retail software development kit (SDK) in the same Microsoft Visual Studio Team Services (VSTS) project, add it now. You will find the Retail SDK in any developer or build topology. Follow the branching documentation in the **Retail Sdk Handbook.pdf** file, which is in the Documents folder for the Retail SDK. We recommend that you create your Retail SDK mirror and your Retail SDK customization branch at this time. After your Retail SDK customization branch is ready, and it has been submitted in the same VSTS project as Dynamics 365 for Operations, you can start.\n\n### Get the build target working\n\nYou must make some changes in a few filesto get the correct build targeting to work. (These changes will be made in a future release of the Retail SDK.)\n\n#### 1. Add a Clean target\n\nAdd a correct Clean target at the end of these four project files:\n\n-   Packages\\\\CloudPos\\\\Sdk.CloudPosSetup.proj\n-   Packages\\\\RetailDeployablePackage\\\\Sdk.RetailDeployablePackageSetup.proj\n-   Packages\\\\RetailSelfService\\\\Sdk.RetailSelfServiceSetup.proj\n-   Packages\\\\RetailServer\\\\Sdk.RetailServerSetup.proj\n\nIn an XML editor of your choice, update the Rebuild and Clean MSBuild targets as shown here.\n\n    <Target Name=\"Rebuild\">\n    <CallTarget Targets=\"Clean\" />\n    <CallTarget Targets=\"Build\" />\n    </Target>\n    <Target Name=\"Clean\">\n    <RemoveDir Directories=\"$(OutputPath)content.folder\" />\n    <Delete Files=\"$(OutputPath)content.zip\" />\n    </Target>\n    </Project>\n\nAll four project files require the same changes.\n\n#### 2. Change the CopyTypeScriptLibraries target\n\nChange the CopyTypeScriptLibraries target in these four project files:\n\n-   OnlineStore\\\\Ecommerce.Sdk.Controls\\\\Platform.Ecommerce.Sdk.Controls.csproj\n-   POS\\\\App\\\\Pos.App.jsproj\n-   POS\\\\ViewModels\\\\Pos.ViewModels.csproj\n-   POS\\\\Web\\\\Pos.Web.csproj\n\n<!-- -->\n\n    <Target Name=\"CopyTypeScriptLibraries\" BeforeTargets=\"PreComputeCompileTypeScript;\">\n        <Copy SourceFiles=\"%(TypeScriptLibraries.Identity)\" DestinationFiles=\"$(TypeScriptLibrariesOutDir)%(TypeScriptLibraries.FileName)%(TypeScriptLibraries.Extension)\" SkipUnchangedFiles=\"true\" Condition=\"Exists('%(TypeScriptLibraries.Identity)')\" />\n    </Target>\n\nMake this change in all four files. When you've finished, submit these eight file changes to VSTS.\n\n### Add two Windows PowerShell scripts to the Retail SDK that will be used for build tasks\n\nYou need to add two scripts that the build can use to do its work. (These scripts will be added automatically in a future release of the Retail SDK.) In the Retail Sdk\\\\Buildtools folder, add a file that has the following content file. Name this file **Copy-RetailBinaries.ps1**.\n\n    Param(\n        [Parameter(Mandatory=$true, HelpMessage=\"The path to the build metadata.\")]\n        [string]$BuildMetadataPath\n    )\n    function Copy-FileWithCheck($fromFilePath, $toFilePath)\n    {\n        if (!(Test-Path -Path $fromFilePath))\n        {\n            throw \"Could not find $fromFilePath\"\n        }\n        $toDirectoryPath = Split-Path -Path $toFilePath -Parent\n        if (!(Test-Path -Path $toDirectoryPath))\n        {\n            New-Item $toDirectoryPath -Type container -force\n        }\n        Write-Host \"Copying $fromFilePath to $toFilePath...\"\n        Copy-Item -Path $fromFilePath -Destination $toFilePath -Force\n    }\n    [int]$ExitCode = 0\n    try\n    {\n        Write-Host \"Copying Retail binaries to: $BuildMetadataPath\"\n        if ([String]::IsNullOrEmpty($BuildMetadataPath))\n        {\n            throw \"No valid path is specified in BuildMetadataPath parameter.\"\n        }\n        $scriptRootPath = $PSScriptRoot\n        $retailSdkSourcePath = Split-Path $scriptRootPath -Parent\n        $retailSdkReferencesPath = Join-Path -Path $retailSdkSourcePath -ChildPath 'References'\n        # add your own file copies here...\n            $fileName = 'Contoso.Commerce.Runtime.Services.PricingEngine.dll'\n            Copy-FileWithCheck -fromFilePath (Join-Path -Path $retailSdkReferencesPath -ChildPath $fileName) `\n                               -toFilePath (Join-Path -Path $BuildMetadataPath -ChildPath \"ApplicationSuite\\bin\\$fileName\")\n        Write-Host \"Copying of Retail packages complete.\"\n    }\n    catch [System.Exception]\n    {\n        Write-Host \"- Exception thrown at $($_.InvocationInfo.ScriptName):$($_.InvocationInfo.ScriptLineNumber): $($_.InvocationInfo.Line.Trim())$([Environment]::NewLine)$($_.Exception.ToString())\"\n        Write-Error \"Error copying Retail packages: $($_)\"\n        $ExitCode = -1\n    }\n    Write-Host \"Script completed with exit code: $ExitCode\"\n    Exit $ExitCode\n\nIn the same folder, add a file that has the following content. Name this file **Copy-RetailPackages.ps1**.\n\n    Param(\n        [Parameter(Mandatory=$true, HelpMessage=\"The path where to produce the deployable packages.\")]\n        [string]$BuildPackagePath,\n        [Parameter(Mandatory=$false, HelpMessage=\"The build number to use in the package names.\")]\n        [string]$BuildVersion = \"1.0.0.0\"\n    )\n    function Copy-FileWithCheck($fromFilePath, $toFilePath)\n    {\n        if (!(Test-Path -Path $fromFilePath))\n        {\n            throw \"Could not find $fromFilePath\"\n        }\n            $toDirectoryPath = Split-Path -Path $toFilePath -Parent\n        if (!(Test-Path -Path $toDirectoryPath))\n        {\n            New-Item $toDirectoryPath -Type container -force\n        }\n        Write-Host \"Copying $fromFilePath to $toFilePath...\"\n        Copy-Item -Path $fromFilePath -Destination $toFilePath -Force\n    }\n    [int]$ExitCode = 0\n    try\n    {\n        Write-Host \"Copying Retail packages to: $BuildPackagePath\"\n        if ([String]::IsNullOrEmpty($BuildPackagePath))\n        {\n            throw \"No valid path is specified in BuildPackagePath parameter.\"\n        }\n        $scriptRootPath = $PSScriptRoot\n        $retailSdkSourcePath = Split-Path $scriptRootPath -Parent\n        New-Item $BuildPackagePath -Type container -force\n        # RetailServer package\n            Copy-FileWithCheck -fromFilePath (Join-Path -Path $retailSdkSourcePath -ChildPath 'Packages\\RetailServer\\content.zip') `\n                               -toFilePath (Join-Path -Path $BuildPackagePath -ChildPath \"RetailServer_$BuildVersion.zip\")\n        # CloudPOS package\n            Copy-FileWithCheck -fromFilePath (Join-Path -Path $retailSdkSourcePath -ChildPath 'Packages\\CloudPOS\\content.zip') `\n                               -toFilePath (Join-Path -Path $BuildPackagePath -ChildPath \"CloudPOS_$BuildVersion.zip\")\n        # RetailSelfService package (includes ModernPOS, ModernPOSOffline, HardwareStation packages)\n            Copy-FileWithCheck -fromFilePath (Join-Path -Path $retailSdkSourcePath -ChildPath 'Packages\\RetailSelfService\\content.zip') `\n                               -toFilePath (Join-Path -Path $BuildPackagePath -ChildPath \"RetailSelfService_$BuildVersion.zip\")\n        Write-Host \"Copying of Retail packages complete.\"\n    }\n    catch [System.Exception]\n    {\n        Write-Host \"- Exception thrown at $($_.InvocationInfo.ScriptName):$($_.InvocationInfo.ScriptLineNumber): $($_.InvocationInfo.Line.Trim())$([Environment]::NewLine)$($_.Exception.ToString())\"\n        Write-Error \"Error copying Retail packages: $($_)\"\n        $ExitCode = -1\n    }\n    Write-Host \"Script completed with exit code: $ExitCode\"\n    Exit $ExitCode\n\nWhen you've finished, submit both files to VSTS.\n\n## Add a repository mapping for the Retail SDK\nEdit the build definition so that it includes the location of the Retail SDK. (In other words, add a map.) [![Adding a repository mapping for the Retail SDK](./media/build-map-addition.png)](./media/build-map-addition.png)\n\n## Add a new build step to build the Retail SDK\nAdd a new step at the beginning of the build pipeline, as shown in the following screen shot. [![Adding a new build step to build the Retail SDK](./media/new-build-step-1024x527.png)](./media/new-build-step.png)\n\n## Add a copy step for binaries from the Retail SDK to the Dynamics 365 for Operations build\nThis build step enables Microsoft to copy the latest built Retail binaries to the Dynamics 365 for Operations bin folder, if Microsoft shares files/binaries. Make sure that you complete this step immediately after you add a build step for the Retail SDK, as described in the previous section. [![Adding a copy step for binaries from the Retail SDK to the Dynamics AX build](./media/binary-drop-to-ax.png)](./media/binary-drop-to-ax.png)\n\n## Add a copy step for all Retail packages\nMake sure that this step occurs after the “PowerShell: Generate packages” step (see image below). Here are the arguments.\n\n    -BuildPackagePath \"$(Agent.BuildDirectory)\\Packages\" -BuildVersion \"$(Build.BuildNumber)\"\n\n[![Adding a copy step for all Retail packages](./media/package-drop-1024x473.png)](./media/package-drop.png)\n\n## Optional: Referencing a Retail DLL from Dynamics 365 for Operations\nYou must complete this task only if you must add built Retail binaries to the Dynamics 365 for Operations package. In this case, you must follow these three steps:\n\n1.  Use a normal AXReference in your Dynamics 365 for Operations project.\n2.  Add the corresponding AXReference folder and the XML file inside it to VSTS.\n3.  Update the Copy-RetailBinaries.ps1 file with the appropriate file commands to get the binary file from the Retail SDK to the Dynamics 365 for Operations bin folder. The Microsoft Windows PowerShell file includes a sample that copies the PricingEngine.dll file into the ApplicationSuite bin folder. Depending on the modules that you're building, the files and folders must be changed so that they are in a different location.\n\n\n"}