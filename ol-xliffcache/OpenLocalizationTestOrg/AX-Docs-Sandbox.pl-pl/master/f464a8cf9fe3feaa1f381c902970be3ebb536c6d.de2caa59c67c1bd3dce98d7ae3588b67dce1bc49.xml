{"nodes":[{"pos":[32,59],"content":"X++ date run-time functions","needQuote":true,"needEscape":true,"nodes":[{"content":"X++ date run-time functions","pos":[0,27]}]},{"pos":[73,122],"content":"This topic describes the date run-time functions.","needQuote":true,"needEscape":true,"nodes":[{"content":"This topic describes the date run-time functions.","pos":[0,49]}]},{"pos":[629,656],"content":"X++ date run-time functions","linkify":"X++ date run-time functions","nodes":[{"content":"X++ date run-time functions","pos":[0,27]}]},{"content":"This topic describes the date run-time functions.","pos":[658,707]},{"pos":[709,716],"content":"dayName","linkify":"dayName","nodes":[{"content":"dayName","pos":[0,7]}]},{"content":"Retrieves the name of the day of the week that is specified by a number.","pos":[726,798]},{"pos":[833,843],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[847,856]},{"content":"Description","pos":[859,870]},{"content":"number","pos":[941,947]},{"content":"The number of a day in a week.","pos":[953,983]},{"pos":[991,1003],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The day of the week specified by the number parameter.","pos":[1005,1059]},{"pos":[1065,1072],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The valid values for the number parameter are <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept> through <bpt id=\"p2\">**</bpt>7<ept id=\"p2\">**</ept>.","pos":[1074,1140],"source":"The valid values for the number parameter are **1** through **7**."},{"content":"Monday is represented by <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>, Tuesday by <bpt id=\"p2\">**</bpt>2<ept id=\"p2\">**</ept>, and Sunday by <bpt id=\"p3\">**</bpt>7<ept id=\"p3\">**</ept>.","pos":[1141,1211],"source":" Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**."},{"pos":[1217,1224],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1423,1431],"content":"dayOfMth","linkify":"dayOfMth","nodes":[{"content":"dayOfMth","pos":[0,8]}]},{"content":"Calculates the number of the day in the month for the specified date.","pos":[1432,1501]},{"pos":[1536,1546],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1550,1559]},{"content":"Description","pos":[1562,1573]},{"content":"date","pos":[1618,1622]},{"content":"The date to test.","pos":[1630,1647]},{"pos":[1655,1667],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"An integer between 1 and 31 that indicates the day of the month for the specified date.","pos":[1669,1756]},{"pos":[1762,1769],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1813,1820],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2055,2062],"content":"dayOfWk","linkify":"dayOfWk","nodes":[{"content":"dayOfWk","pos":[0,7]}]},{"content":"Calculates the number of day in the week for the specified date.","pos":[2063,2127]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Monday is represented by <bpt id=\"p2\">**</bpt>1<ept id=\"p2\">**</ept>, Tuesday by <bpt id=\"p3\">**</bpt>2<ept id=\"p3\">**</ept>, and Sunday by <bpt id=\"p4\">**</bpt>7<ept id=\"p4\">**</ept>.","pos":[2128,2208],"source":"**Note:** Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**."},{"pos":[2242,2252],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2256,2265]},{"content":"Description","pos":[2268,2279]},{"content":"date","pos":[2404,2408]},{"pos":[2416,2473],"content":"A <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value that indicates the year, month, and day.","source":"A **date** value that indicates the year, month, and day."},{"pos":[2481,2493],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of the specified day in the week.","pos":[2495,2539]},{"pos":[2545,2552],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2784,2791],"content":"dayOfYr","linkify":"dayOfYr","nodes":[{"content":"dayOfYr","pos":[0,7]}]},{"content":"Calculates the number of days between January 1 and the specified date.","pos":[2792,2863]},{"pos":[2898,2908],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2912,2921]},{"content":"Description","pos":[2924,2935]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[3040,3046],"source":"\\_date"},{"content":"A date that specifies the year, month, and day.","pos":[3052,3099]},{"pos":[3107,3119],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of days between January 1 and the specified date, inclusive.","pos":[3121,3192]},{"pos":[3198,3205],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3207,3272],"content":"January 1 is <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>, and December 31 is either <bpt id=\"p2\">**</bpt>365<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>366<ept id=\"p3\">**</ept>.","source":"January 1 is **1**, and December 31 is either **365** or **366**."},{"pos":[3278,3285],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3517,3523],"content":"endMth","linkify":"endMth","nodes":[{"content":"endMth","pos":[0,6]}]},{"content":"Calculates the last date in the month of the specified date.","pos":[3524,3584]},{"pos":[3618,3628],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3632,3641]},{"content":"Description","pos":[3644,3655]},{"content":"date","pos":[3776,3780]},{"pos":[3788,3843],"content":"A <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value that indicates a year, month, and day.","source":"A **date** value that indicates a year, month, and day."},{"pos":[3851,3863],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[3865,3923],"content":"The <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value of the last day in the specified month.","source":"The **date** value of the last day in the specified month."},{"pos":[3929,3936],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4068,4074],"content":"mkDate","linkify":"mkDate","nodes":[{"content":"mkDate","pos":[0,6]}]},{"content":"Creates a date, based on three integers that indicate the day, month, and year, respectively.","pos":[4075,4168]},{"pos":[4221,4231],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4235,4244]},{"content":"Description","pos":[4247,4258]},{"content":"day","pos":[4415,4418]},{"content":"An integer that represents the day of the month.","pos":[4427,4475]},{"content":"month","pos":[4505,4510]},{"content":"An integer that represents the month of the year.","pos":[4517,4566]},{"content":"year","pos":[4595,4599]},{"content":"An integer that represents the year, which must be between 1900 and 2154.","pos":[4607,4680]},{"pos":[4688,4700],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[4702,4792],"content":"A <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value that is based on the values of the <bpt id=\"p2\">*</bpt>day<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>month<ept id=\"p3\">*</ept>, and <bpt id=\"p4\">*</bpt>year<ept id=\"p4\">*</ept> parameters.","source":"A **date** value that is based on the values of the *day*, *month*, and *year* parameters."},{"pos":[4798,4805],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the date isn't valid, this method returns a <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero, 1/1/1900) date.","pos":[4807,4882],"source":"If the date isn't valid, this method returns a **0** (zero, 1/1/1900) date."},{"content":"Beginning with Dynamics 365 for Operations (February 2016), shortcut values for the year, e.g. 75 for 1975, are not supported.","pos":[4883,5009]},{"content":"If you provide a shortcut value for the year, a date of 1/1/1900 is returned.","pos":[5010,5087]},{"pos":[5093,5100],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5310,5317],"content":"mthName","linkify":"mthName","nodes":[{"content":"mthName","pos":[0,7]}]},{"content":"Retrieves the name of the specified month","pos":[5318,5359]},{"pos":[5396,5406],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5410,5419]},{"content":"Description","pos":[5422,5433]},{"content":"number","pos":[5492,5498]},{"content":"The number of the month.","pos":[5504,5528]},{"pos":[5536,5548],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The name of the specified month.","pos":[5550,5582]},{"pos":[5588,5595],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The valid values of the <bpt id=\"p1\">*</bpt>number<ept id=\"p1\">*</ept> parameter are <bpt id=\"p2\">**</bpt>1<ept id=\"p2\">**</ept> through <bpt id=\"p3\">**</bpt>12<ept id=\"p3\">**</ept>.","pos":[5597,5665],"source":"The valid values of the *number* parameter are **1** through **12**."},{"content":"January is represented by <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept> and December by <bpt id=\"p2\">**</bpt>12<ept id=\"p2\">**</ept>.","pos":[5666,5721],"source":" January is represented by **1** and December by **12**."},{"pos":[5727,5734],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5972,5979],"content":"mthOfYr","linkify":"mthOfYr","nodes":[{"content":"mthOfYr","pos":[0,7]}]},{"content":"Retrieves the number of the month in the year for the specified date.","pos":[5980,6049]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> January is <bpt id=\"p2\">**</bpt>1<ept id=\"p2\">**</ept>, February is <bpt id=\"p3\">**</bpt>2<ept id=\"p3\">**</ept>, and December is <bpt id=\"p4\">**</bpt>12<ept id=\"p4\">**</ept>.","pos":[6050,6120],"source":"**Note:** January is **1**, February is **2**, and December is **12**."},{"pos":[6154,6164],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6168,6177]},{"content":"Description","pos":[6180,6191]},{"content":"date","pos":[6292,6296]},{"content":"A date that specifies a year, month, and day.","pos":[6304,6349]},{"pos":[6357,6369],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[6371,6466],"content":"The number of the month in the year, for the month that is represented by the <bpt id=\"p1\">*</bpt>date<ept id=\"p1\">*</ept> parameter.","source":"The number of the month in the year, for the month that is represented by the *date* parameter."},{"pos":[6472,6479],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6703,6710],"content":"nextMth","linkify":"nextMth","nodes":[{"content":"nextMth","pos":[0,7]}]},{"content":"Retrieves the date in the following month that corresponds most closely to the specified date.","pos":[6711,6805]},{"pos":[6840,6850],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6854,6863]},{"content":"Description","pos":[6866,6877]},{"content":"date","pos":[6970,6974]},{"content":"The date to match in the following month.","pos":[6982,7023]},{"pos":[7031,7043],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the next month.","pos":[7045,7117]},{"pos":[7123,7130],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7251,7258],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7500,7507],"content":"nextQtr","linkify":"nextQtr","nodes":[{"content":"nextQtr","pos":[0,7]}]},{"content":"Retrieves the date in the following quarter that corresponds most closely to the specified date.","pos":[7508,7604]},{"pos":[7639,7649],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7653,7662]},{"content":"Description","pos":[7665,7676]},{"content":"date","pos":[7773,7777]},{"content":"The date to match in the following quarter.","pos":[7785,7828]},{"pos":[7836,7848],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to specified date that is found in the next quarter.","pos":[7850,7920]},{"pos":[7926,7933],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7935,7989],"content":"For example, <bpt id=\"p1\">**</bpt>nextQtr(3111998)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>3041998<ept id=\"p2\">**</ept>.","source":"For example, **nextQtr(3111998)** returns **3041998**."},{"pos":[7995,8002],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8254,8260],"content":"nextYr","linkify":"nextYr","nodes":[{"content":"nextYr","pos":[0,6]}]},{"content":"Retrieves the date in the following year that corresponds most closely to the specified date.","pos":[8261,8354]},{"pos":[8388,8398],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8402,8411]},{"content":"Description","pos":[8414,8425]},{"content":"date","pos":[8516,8520]},{"content":"The date to match in the following year.","pos":[8528,8568]},{"pos":[8576,8588],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the following year.","pos":[8590,8666]},{"pos":[8672,8679],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8681,8734],"content":"For example, <bpt id=\"p1\">**</bpt>nextyr(2921998)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>2821999<ept id=\"p2\">**</ept>.","source":"For example, **nextyr(2921998)** returns **2821999**."},{"pos":[8740,8747],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8994,9001],"content":"prevMth","linkify":"prevMth","nodes":[{"content":"prevMth","pos":[0,7]}]},{"content":"Retrieves the date in the previous month that corresponds most closely to the specified date.","pos":[9002,9095]},{"pos":[9130,9140],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9144,9153]},{"content":"Description","pos":[9156,9167]},{"content":"date","pos":[9258,9262]},{"content":"The date to match in the previous month.","pos":[9270,9310]},{"pos":[9318,9330],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the previous month.","pos":[9332,9408]},{"pos":[9414,9421],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9561,9568],"content":"prevQtr","linkify":"prevQtr","nodes":[{"content":"prevQtr","pos":[0,7]}]},{"content":"Retrieves the date in the previous quarter that corresponds most closely to the specified date.","pos":[9569,9664]},{"pos":[9699,9709],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9713,9722]},{"content":"Description","pos":[9725,9736]},{"content":"date","pos":[9831,9835]},{"content":"The date to match in the previous quarter.","pos":[9843,9885]},{"pos":[9893,9905],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the previous quarter.","pos":[9907,9985]},{"pos":[9991,9998],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10139,10145],"content":"prevYr","linkify":"prevYr","nodes":[{"content":"prevYr","pos":[0,6]}]},{"content":"Retrieves the date in the previous year that corresponds most closely to the specified date.","pos":[10146,10238]},{"pos":[10272,10282],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10286,10295]},{"content":"Description","pos":[10298,10309]},{"content":"date","pos":[10398,10402]},{"content":"The date to match in the previous year.","pos":[10410,10449]},{"pos":[10457,10469],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the previous year.","pos":[10471,10546]},{"pos":[10552,10559],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10697,10710],"content":"systemDateGet","linkify":"systemDateGet","nodes":[{"content":"systemDateGet","pos":[0,13]}]},{"content":"Retrieves the session date, if it has been set.","pos":[10711,10758]},{"pos":[10790,10802],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The session date if it has been set; otherwise, the system date.","pos":[10804,10868]},{"pos":[10874,10881],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Consider using <bpt id=\"p1\">**</bpt>Session date and time<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> menu to open the <bpt id=\"p3\">**</bpt>Session date and time<ept id=\"p3\">**</ept> page.","pos":[10883,10989],"source":"Consider using **Session date and time** on the **Tools** menu to open the **Session date and time** page."},{"content":"This page can be used to actively set the session date.","pos":[10990,11045]},{"content":"After this set action is detected by the system, subsequent calls to the <bpt id=\"p1\">**</bpt>systemDateGet<ept id=\"p1\">**</ept> function return the session date.","pos":[11046,11170],"source":" After this set action is detected by the system, subsequent calls to the **systemDateGet** function return the session date."},{"content":"The <bpt id=\"p1\">**</bpt>today<ept id=\"p1\">**</ept> function returns the system date.","pos":[11171,11218],"source":" The **today** function returns the system date."},{"content":"This function doesn't support time zones.","pos":[11219,11260]},{"pos":[11266,11273],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the date in the Infolog window.","pos":[11275,11334]},{"pos":[11902,11915],"content":"systemDateSet","linkify":"systemDateSet","nodes":[{"content":"systemDateSet","pos":[0,13]}]},{"content":"Changes the system date.","pos":[11916,11940]},{"pos":[11982,11992],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11996,12005]},{"content":"Description","pos":[12008,12019]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[12086,12092],"source":"\\_date"},{"content":"The new date for the system.","pos":[12098,12126]},{"pos":[12134,12146],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The new system date.","pos":[12148,12168]},{"pos":[12174,12181],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function doesn't affect the session date.","pos":[12183,12229]},{"content":"This method changes the date, but the time will be set to <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero).","pos":[12230,12301],"source":" This method changes the date, but the time will be set to **0** (zero)."},{"pos":[12307,12314],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example sets the system date to today's date.","pos":[12316,12375]},{"pos":[12526,12533],"content":"timeNow","linkify":"timeNow","nodes":[{"content":"timeNow","pos":[0,7]}]},{"content":"Retrieves the current system time.","pos":[12534,12568]},{"pos":[12593,12605],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of seconds that have passed since midnight.","pos":[12607,12661]},{"pos":[12667,12674],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[12888,12893],"content":"today","linkify":"today","nodes":[{"content":"today","pos":[0,5]}]},{"content":"Retrieves the current date on the system.","pos":[12894,12935]},{"pos":[12959,12971],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The current date.","pos":[12973,12990]},{"pos":[12996,13003],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13211,13217],"content":"wkOfYr","linkify":"wkOfYr","nodes":[{"content":"wkOfYr","pos":[0,6]}]},{"content":"Calculates the week of the year that a date falls in, according to the ISO 8601 specification.","pos":[13218,13312]},{"pos":[13346,13356],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13360,13369]},{"content":"Description","pos":[13372,13383]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[13488,13494],"source":"\\_date"},{"content":"The date to calculate the week of the year for.","pos":[13500,13547]},{"pos":[13555,13567],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[13569,13639],"content":"The sequence number of the week that the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter occurs in.","source":"The sequence number of the week that the *\\_date* parameter occurs in."},{"pos":[13645,13652],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example compares the <bpt id=\"p1\">**</bpt>wkOfYr<ept id=\"p1\">**</ept> function with the <bpt id=\"p2\">**</bpt>Global::weekOfYear<ept id=\"p2\">**</ept> method.","pos":[13654,13753],"source":"The following code example compares the **wkOfYr** function with the **Global::weekOfYear** method."},{"content":"The function and the method produce different results.","pos":[13754,13808]},{"content":"The previous example sent the following information to the Infolog for display.","pos":[15154,15233]},{"content":"The output shows that there are differences between <bpt id=\"p1\">**</bpt>wkOfYr<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Global::weekOfYear<ept id=\"p2\">**</ept>.","pos":[15234,15324],"source":" The output shows that there are differences between **wkOfYr** and **Global::weekOfYear**."},{"content":"Message (01:59:13 pm) ----- <ph id=\"ph1\">\\#</ph>1.","pos":[15325,15357],"source":" Message (01:59:13 pm) ----- \\#1."},{"content":"For Sunday, January 5, 2003 ----- 1 = wkOfYr funtion 2 = Global::weekOfYear method ----- <ph id=\"ph1\">\\#</ph>2.","pos":[15358,15451],"source":" For Sunday, January 5, 2003 ----- 1 = wkOfYr funtion 2 = Global::weekOfYear method ----- \\#2."},{"content":"For Wednesday, August 20, 2003 ----- 34 = wkOfYr funtion 34 = Global::weekOfYear method ----- <ph id=\"ph1\">\\#</ph>3.","pos":[15452,15550],"source":" For Wednesday, August 20, 2003 ----- 34 = wkOfYr funtion 34 = Global::weekOfYear method ----- \\#3."},{"content":"For Sunday, December 28, 2003 ----- 52 = wkOfYr funtion 1 = Global::weekOfYear method","pos":[15551,15636]},{"pos":[15641,15645],"content":"year","linkify":"year","nodes":[{"content":"year","pos":[0,4]}]},{"pos":[15646,15687],"content":"Retrieves the year from a <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value.","source":"Retrieves the year from a **date** value."},{"pos":[15719,15729],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15733,15742]},{"content":"Description","pos":[15745,15756]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[15833,15839],"source":"\\_date"},{"content":"The date to return the year from.","pos":[15845,15878]},{"pos":[15886,15898],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The year of the specified date.","pos":[15900,15931]},{"pos":[15937,15944],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]}],"content":"---\n# required metadata\n\ntitle: X++ date run-time functions\ndescription: This topic describes the date run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-04 22 - 12 - 59\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \n# ms.reviewer: 2051\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 31341\nms.assetid: 97410626-4531-4ca6-8204-fa20265f83a8\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.dyn365.ops.intro: Feb-16\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# X++ date run-time functions\n\nThis topic describes the date run-time functions.\n\ndayName\n-------\n\nRetrieves the name of the day of the week that is specified by a number.\n\n    str dayName(int number)\n\n### Parameters\n\n| Parameter | Description                    |\n|-----------|--------------------------------|\n| number    | The number of a day in a week. |\n\n### Return value\n\nThe day of the week specified by the number parameter.\n\n### Remarks\n\nThe valid values for the number parameter are **1** through **7**. Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**.\n\n### Example\n\n    static void dayNameExample(Args _arg)\n    {\n            str s;\n            ;\n            s = dayName(01);\n            print \"First day of the week's name is \" + s;\n            pause;\n    }\n\n## dayOfMth\nCalculates the number of the day in the month for the specified date.\n\n    int dayOfMth(date date)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| date      | The date to test. |\n\n### Return value\n\nAn integer between 1 and 31 that indicates the day of the month for the specified date.\n\n### Remarks\n\n    dayOfMth(31122001) //returns 31.\n\n### Example\n\n    static void dayOfMthExample(Args _arg)\n    {\n            date d = today();\n            int i;\n            ;\n            i = dayOfMth(d);\n            print \"Today's day of the month is \" + int2Str(i);\n            pause;\n    }\n\n## dayOfWk\nCalculates the number of day in the week for the specified date. **Note:** Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**.\n\n    int dayOfWk(date date)\n\n### Parameters\n\n| Parameter | Description                                               |\n|-----------|-----------------------------------------------------------|\n| date      | A **date** value that indicates the year, month, and day. |\n\n### Return value\n\nThe number of the specified day in the week.\n\n### Example\n\n    static void dayOfWkExample(Args _arg)\n    {\n            date d = today();\n            int i;\n            ;\n            i = dayOfWk(d);\n            print \"Today's day of the week is \" + int2Str(i);\n            pause;\n    }\n\n## dayOfYr\nCalculates the number of days between January 1 and the specified date.\n\n    int dayOfYr(date _date)\n\n### Parameters\n\n| Parameter | Description                                     |\n|-----------|-------------------------------------------------|\n| \\_date    | A date that specifies the year, month, and day. |\n\n### Return value\n\nThe number of days between January 1 and the specified date, inclusive.\n\n### Remarks\n\nJanuary 1 is **1**, and December 31 is either **365** or **366**.\n\n### Example\n\n    static void dayOfYrExample(Args _arg)\n    {\n            date d = today();\n            int i;\n            ;\n            i = dayOfYr(d);\n            print \"Today's day of the year is \" + int2Str(i);\n            pause;\n    }\n\n## endMth\nCalculates the last date in the month of the specified date.\n\n    date endMth(date date)\n\n### Parameters\n\n| Parameter | Description                                             |\n|-----------|---------------------------------------------------------|\n| date      | A **date** value that indicates a year, month, and day. |\n\n### Return value\n\nThe **date** value of the last day in the specified month.\n\n### Remarks\n\n    endMth(0221988); //Returns the date 2921988 because 1988 is a leap year.\n    endMth(0221989); //Returns the date 2821989.\n\n## mkDate\nCreates a date, based on three integers that indicate the day, month, and year, respectively.\n\n    date mkDate(int day, int month, int year)\n\n### Parameters\n\n| Parameter | Description                                                               |\n|-----------|---------------------------------------------------------------------------|\n| day       | An integer that represents the day of the month.                          |\n| month     | An integer that represents the month of the year.                         |\n| year      | An integer that represents the year, which must be between 1900 and 2154. |\n\n### Return value\n\nA **date** value that is based on the values of the *day*, *month*, and *year* parameters.\n\n### Remarks\n\nIf the date isn't valid, this method returns a **0** (zero, 1/1/1900) date. Beginning with Dynamics 365 for Operations (February 2016), shortcut values for the year, e.g. 75 for 1975, are not supported. If you provide a shortcut value for the year, a date of 1/1/1900 is returned.\n\n### Example\n\n    static void mkDateExample(Args _arg)\n    {\n            date d;\n            ;\n            // Returns the date 0112005.\n            d = mkDate(1, 1, 2005);\n            print d;\n            pause;\n    }\n\n## mthName\nRetrieves the name of the specified month\n\n    str monthName(int number)\n\n### Parameters\n\n| Parameter | Description              |\n|-----------|--------------------------|\n| number    | The number of the month. |\n\n### Return value\n\nThe name of the specified month.\n\n### Remarks\n\nThe valid values of the *number* parameter are **1** through **12**. January is represented by **1** and December by **12**.\n\n### Example\n\n    static void mthNameExample(Args _arg)\n    {\n            str s;\n            ;\n            // MthName(6) returns the text string \"June\".\n            s = mthName(6);\n            print \"Month name is \" + s;\n            pause;\n    }\n\n## mthOfYr\nRetrieves the number of the month in the year for the specified date. **Note:** January is **1**, February is **2**, and December is **12**.\n\n    int mthOfYr(date date)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| date      | A date that specifies a year, month, and day. |\n\n### Return value\n\nThe number of the month in the year, for the month that is represented by the *date* parameter.\n\n### Example\n\n    static void mthOfYrExample(Args _arg)\n    {\n            int i;\n            ;\n            i = mthOfYr(today());\n            print \"The number of the month in today's date is \" + int2Str(i);\n            pause;\n    }\n\n## nextMth\nRetrieves the date in the following month that corresponds most closely to the specified date.\n\n    date nextMth(date date)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| date      | The date to match in the following month. |\n\n### Return value\n\nThe closest match to the specified date that is found in the next month.\n\n### Remarks\n\n    nextMth(2921996); //returns 29/03/1996.\n    nextMth(3111996); //returns 2921996, because 1996 is a leap year.\n\n### Example\n\n    static void nextMthExample(Args _arg)\n    {\n            date d;\n            ;\n            d = nextMth(today());\n            print \"Closest date next month is \"\n            + date2Str(d, 2, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## nextQtr\nRetrieves the date in the following quarter that corresponds most closely to the specified date.\n\n    date nextQtr(date date)\n\n### Parameters\n\n| Parameter | Description                                 |\n|-----------|---------------------------------------------|\n| date      | The date to match in the following quarter. |\n\n### Return value\n\nThe closest match to specified date that is found in the next quarter.\n\n### Remarks\n\nFor example, **nextQtr(3111998)** returns **3041998**.\n\n### Example\n\n    static void nextQtrExample(Args _arg)\n    {\n            date d;\n            ;\n            d = nextQtr(today());\n            print \"Closest date next quarter is \"\n                    + date2Str(d, 2, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## nextYr\nRetrieves the date in the following year that corresponds most closely to the specified date.\n\n    date nextYr(date date)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| date      | The date to match in the following year. |\n\n### Return value\n\nThe closest match to the specified date that is found in the following year.\n\n### Remarks\n\nFor example, **nextyr(2921998)** returns **2821999**.\n\n### Example\n\n    static void nextYrExample(Args _arg)\n    {\n            date d;\n            ;\n            d = nextYr(today());\n            print \"Closest date next year is \"\n                    + date2Str(d, 2, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## prevMth\nRetrieves the date in the previous month that corresponds most closely to the specified date.\n\n    date prevMth(date date)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| date      | The date to match in the previous month. |\n\n### Return value\n\nThe closest match to the specified date that is found in the previous month.\n\n### Remarks\n\n    prevMth(3131996); //Returns the date 29/02/1996 because 1996 is a leap year.\n    prevMth(2821998); //Returns the date 28/01/1998.\n\n## prevQtr\nRetrieves the date in the previous quarter that corresponds most closely to the specified date.\n\n    date prevQtr(date date)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| date      | The date to match in the previous quarter. |\n\n### Return value\n\nThe closest match to the specified date that is found in the previous quarter.\n\n### Remarks\n\n    prevQtr(3041998); //Returns the date 30/01/1998.\n    prevQtr(2951996); //Returns the date 29/02/1996, because 1996 is a leap year.\n\n## prevYr\nRetrieves the date in the previous year that corresponds most closely to the specified date.\n\n    date prevYr(date date)\n\n### Parameters\n\n| Parameter | Description                             |\n|-----------|-----------------------------------------|\n| date      | The date to match in the previous year. |\n\n### Return value\n\nThe closest match to the specified date that is found in the previous year.\n\n### Remarks\n\n    prevYr(2921996); //Returns the date 28/02/1995 because 1996 is a leap year.\n    prevYr(2821998); //Returns the date 28/02/1997.\n\n## systemDateGet\nRetrieves the session date, if it has been set.\n\n    date systemDateGet()\n\n### Return value\n\nThe session date if it has been set; otherwise, the system date.\n\n### Remarks\n\nConsider using **Session date and time** on the **Tools** menu to open the **Session date and time** page. This page can be used to actively set the session date. After this set action is detected by the system, subsequent calls to the **systemDateGet** function return the session date. The **today** function returns the system date. This function doesn't support time zones.\n\n### Example\n\nThe following example shows the date in the Infolog window.\n\n    static void Job_systemDateGet(Args _arg)\n    {\n            info( date2Str(\n                    systemDateGet(),        // X++ language function.\n                    321,                    // 321 = ymd\n                    DateDay::Digits2,\n                    DateSeparator::Hyphen,  // separator1\n                    DateMonth::Digits2,\n                    DateSeparator::Hyphen,  // separator2\n                    DateYear::Digits4\n            )\n    );\n    /*********** Actual Infolog output\n    Message (03:46:00 pm)\n    2012-04-16\n    ***********/\n    }\n\n## systemDateSet\nChanges the system date.\n\n    date systemDateSet(date _date)\n\n### Parameters\n\n| Parameter | Description                  |\n|-----------|------------------------------|\n| \\_date    | The new date for the system. |\n\n### Return value\n\nThe new system date.\n\n### Remarks\n\nThis function doesn't affect the session date. This method changes the date, but the time will be set to **0** (zero).\n\n### Example\n\nThe following example sets the system date to today's date.\n\n    static void systemDateSetExample(Args _arg)\n    {\n            date d = today();\n            d = systemDateSet(d);\n            print d;\n    }\n\n## timeNow\nRetrieves the current system time.\n\n    int timeNow()\n\n### Return value\n\nThe number of seconds that have passed since midnight.\n\n### Example\n\n    static void timeNowExample(Args _arg)\n    {\n            int i;\n            ;\n            i = timeNow();\n            print \"The number of seconds since midnight is \" + int2Str(i);\n            pause;\n    }\n\n## today\nRetrieves the current date on the system.\n\n    date today()\n\n### Return value\n\nThe current date.\n\n### Example\n\n    static void todayExample(Args _arg)\n    {\n            date d;\n            ;\n            d = today();\n            print \"Today's date is \" + date2Str(d, 0, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## wkOfYr\nCalculates the week of the year that a date falls in, according to the ISO 8601 specification.\n\n    int wkOfYr(date _date)\n\n### Parameters\n\n| Parameter | Description                                     |\n|-----------|-------------------------------------------------|\n| \\_date    | The date to calculate the week of the year for. |\n\n### Return value\n\nThe sequence number of the week that the *\\_date* parameter occurs in.\n\n### Example\n\nThe following code example compares the **wkOfYr** function with the **Global::weekOfYear** method. The function and the method produce different results.\n\n    // X++ job, under AOT > Jobs.\n    static void WeekTests3Job(Args _args)\n    {\n    int weekNum, i;\n    date dateTest;\n    str sMessages[];\n    //---------------------------------------------\n    sMessages[1] = \"----- #1.  For Sunday, January 5, 2003 -----\";\n    dateTest = 512003; // DayMonthYear  format.\n    weekNum = wkOfYr(dateTest);\n    sMessages[2] = int2str(weekNum) + \" = wkOfYr funtion\";\n    weekNum = Global::weekOfYear(dateTest);\n    sMessages[3] = int2str(weekNum) + \" = Global::weekOfYear method\";\n    //---------------------------------------------\n    sMessages[4] = \" \";\n    sMessages[5] = \"----- #2.  For Wednesday, August 20, 2003 -----\";\n    dateTest = 2082003;\n    weekNum = wkOfYr(dateTest);\n    sMessages[6] = int2str(weekNum) + \" = wkOfYr funtion\";\n    weekNum = Global::weekOfYear(dateTest);\n    sMessages[7] = int2str(weekNum) + \" = Global::weekOfYear method\";\n    //---------------------------------------------\n    sMessages[8] = \" \";\n    sMessages[9] = \"----- #3.  For Sunday, December 28, 2003 -----\";\n    dateTest = 28122003;\n    weekNum = wkOfYr(dateTest);\n    sMessages[10] = int2str(weekNum) + \" = wkOfYr funtion\";\n    weekNum = Global::weekOfYear(dateTest);\n    sMessages[11] = int2str(weekNum) + \" = Global::weekOfYear method\";\n    for (i=1; i<= 11; i++)\n    {\n    Global::info(sMessages[i]);\n    }\n    }\n\nThe previous example sent the following information to the Infolog for display. The output shows that there are differences between **wkOfYr** and **Global::weekOfYear**. Message (01:59:13 pm) ----- \\#1. For Sunday, January 5, 2003 ----- 1 = wkOfYr funtion 2 = Global::weekOfYear method ----- \\#2. For Wednesday, August 20, 2003 ----- 34 = wkOfYr funtion 34 = Global::weekOfYear method ----- \\#3. For Sunday, December 28, 2003 ----- 52 = wkOfYr funtion 1 = Global::weekOfYear method\n\n## year\nRetrieves the year from a **date** value.\n\n    int year(date _date)\n\n### Parameters\n\n| Parameter | Description                       |\n|-----------|-----------------------------------|\n| \\_date    | The date to return the year from. |\n\n### Return value\n\nThe year of the specified date.\n\n### Remarks\n\n    year(0221998); //Returns the value 1998.\n\n"}