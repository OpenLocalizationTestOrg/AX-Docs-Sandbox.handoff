{"content":"---\n# required metadata\n\ntitle: Testing and validations\ndescription: This tutorial shows you how to create and run test cases.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 04/04/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 24231\nms.assetid: 41dcbbda-e377-45a8-b180-5daa0e63c4a9\nms.search.region: Global\n# ms.search.industry: \nms.author: shailesn\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# Testing and validations\n\n[!include[banner](../includes/banner.md)]\n\n\nThis tutorial shows you how to create and run test cases.\n\nPrerequisites\n-------------\n\nYou will need to deploy Developer Topology with Developer and Build VM.\n\n## Key concepts\n-   Use SysTest Framework to author unit/component test code.\n-   Test module creation to manage test code and FormAdaptors.\n-   Import Task Recorder recordings into Visual Studio to generate test code.\n-   Integrate a Test module with a build machine.\n\n[![Integrate a test module](./media/54.png)](./media/54.png)  \n\n## Use SysTest Framework to author unit/component test code\nYou can create new test cases to test the functionality in an application.\n\n1.  Open Visual Studio as an administrator.\n1.  On the **File** menu, click **Open** &gt; **Project/Solution**, and then select **FleetManagement** **solution** from the desktop folder. If the solution file is not on your computer, the steps to create it are listed in [Tutorial: Create a Fleet Management solution file out of the Fleet Management models in the AOT](https://community.dynamics.com/ax/b/newdynamicsax/archive/2016/05/19/tutorial-create-a-fleet-management-solution-file-out-of-the-fleet-management-models-in-the-aot).\n1.  In **Solution Explorer**, right-click the **Fleet Management** solution, point to **Add**, and then click **New Project**.\n1.  Choose **Dynamics 365 for Operations **as the project type to create.\n1.  Name this new project *FleetManagementUnitTestSample*, specify the FleetManagement folder on the desktop (C:UsersPublicDesktopFleetManagement) as the location, and then click **OK**. \n        \n    [![FleetManagementUnitTestSampe](./media/55.png)](./media/55.png)\n        \n1.  In **Solution Explorer**, right-click the new project, and then click **Properties**.\n1.  Set the **Model** property to **FleetManagementUnitTests**, and then click **OK**. \n\n    [![Model property](./media/56.png)](./media/56.png)\n        \n1.  Right-click the FleetManagementUnitTestSample project, point to **Add**, and then click **New Item**.\n1.  In the **Add New Item** window, select **Class** as the type of element to add. Name the new class FMUnitTestSample, and then click **Add**. \n\n    [![Add new item](./media/57.png)](./media/57.png)\n\n1. In the first line of the code for the new class, indicate that the class extends the SysTestCase class.\n1. Add the following code to define the methods for the class. These methods define two additional tests.\n\n        class FMUnitTestSample extends SysTestCase\n        {\n            public void setup()\n            {\n                // Reset the test data to be sure things are clean\n                FMDataHelper::main(null);\n            }\n\n            [SysTestMethodAttribute]\n            public void testFMTotalsEngine()\n            {\n                FMRental rental;\n                FMTotalsEngine fmTotals;\n                FMRentalTotal fmRentalTotal;\n                FMRentalCharge rentalCharge;\n                FMRentalTotal expectedtotal;\n                str rentalID = '000022';\n\n                // Find a known rental\n                rental = FMRental::find(rentalID);\n                \n                // Get the rental charges associated with the rental\n                // Data is seeded randomly, so this will change for each run\n                select sum(ExtendedAmount) from rentalCharge\n                        where rentalCharge.RentalId == rental.RentalId;\n\n                fmTotals = FMTotalsEngine::construct();\n                fmTotals.calculateRentalVehicleRate(rental);\n                \n                // Get the totals from the engine\n                fmRentalTotal = fmTotals.totals(rental);\n\n                // Set the expected amount\n                expectedTotal = rental.VehicleRateTotal + rentalCharge.ExtendedAmount;\n                \n                this.assertEquals(expectedTotal,fmRentalTotal);\n            }\n            \n            [SysTestMethodAttribute]\n            public void testFMCarValidateField()\n            {\n                FMCarClass fmCar;\n                \n                fmCar.NumberOfDoors = -1;\n                this.assertFalse(fmCar.validateField(Fieldnum(\"FMCarClass\", \"NumberOfDoors\")));\n                \n                fmCar.NumberOfDoors = 4;\n                this.assertTrue(fmCar.validateField(Fieldnum(\"FMCarClass\", \"NumberOfDoors\")));\n            }\n        }\n\n1. Save the new class. After the save is complete, you will see the additional two test cases in **Test Explorer**. Right-click on the FleetManagementUnitTestSample project in **Solution Explorer**, and then click **Build.**\n1.  On the **View** menu, open **Test Explorer**. \n\n    [![Test explorer](./media/58-1024x545.png)](./media/58.png)\n        \n1. Click **Run selected test** to execute specific test case.\n1. Test Explorer will show the results of test after it is complete. \n\n    [![Completed test](./media/59-300x290.png)](./media/59.png)\n\n## Test module creation to manage test code and FormAdaptors\nCreating a test specific module helps to keep test code together and manageable.\n\n1. Open **Visual Studio** and go to **Dynamics 365 for Operations** &gt; **Model Management** &gt; **Create model**.\n\n    [![Create model](./media/60-1024x574.png)](./media/60.png)\n        \n1. Enter the model name, select the layer, and then enter any additional details. **Note: **It's a good idea that you include the word **Test** in the name of the test module. The default build definition is configured to discover all test modules that contain the word **Test**. \n\n    [![Model name](./media/61-1024x775.png)](./media/61.png)\n        \n1. Because this model holds forms from the Application Platform/Foundation, add references to models shown below.\n\n    [![Model references](./media/62-1024x786.png)](./media/62.png)\n        \nAfter the base test module is in place, you can import a Task Recorder recording to generate test code. When you import a Task Recorder recording XML, test code is generated using FormAdaptors. Form adaptors are wrapper classes over forms which provide strongly typed API that can be used to test form functionality. In Dynamics 365 for Operations, we have included pre-generated FormAdapters for each package for built-in forms. In the test module, add a reference to the corresponding Form Adaptor for packages and Test Essentials, which has helper methods to execute test code.\n\n## Import a Task Recorder recording into Visual Studio to generate test code\nYou can generate test code from Task Recorder recording to execute headless (non-UI) test.\n\n1. Record a scenario in Dynamics 365 for Operations by using Task Recorder.\n1. To import a Task Recording, in Visual Studio, click **Dynamics 365 for Operations** &gt; **Addins** &gt; **Import Task Recording**. \n\n    [![Import task recording](./media/63-1024x613.png)](./media/63.png)\n        \n1. In the **Import Task Recording** dialog, select the Test Module (ISVTestModule) under which you want to import task recording, and browse to recording xml file. \n\n    [![Test module](./media/64-249x300.png)](./media/64.png)\n        \n1. The task recording import process generates test code that is based on the SysTestAdapter and FormAdaptor which can be viewed in Visual Studio IDE. We do not expect you to change any test source code that is generated as part of this step.\n\n    [![Generate test code](./media/65-1024x655.png)](./media/65.png)    \n    \n1. After the test code is generated, set up Visual Studio options for test discovery and execution:\n    - If you have a 64-bit machine, you can run unit tests and capture code coverage information as a 64-bit process.\n    - To configure this, select **Test** &gt; **Test Settings** &gt; **Default Processor Architecture**, and then select **X64**.\n    - You might run into a situation in which the test execution engine opens and locks an assembly in your test project. When this happens, you canâ€™t for example, save changes to the assembly. To fix this, select **Test** &gt; **Test Settings**, and then select **Keep Test Execution Engine Running**. \n    \n    [![Keep execution engine running](./media/66.png)](./media/66.png)\n    \n    - Now that you have test code generated in Visual Studio IDE, it's time to discover the test and try executing them locally.\n\n1. From menu options, select **Test** &gt; **Windows**, and then click **Test Explorer**. After the Test Explorer window is open, it will try to discover test from test code and list all the available tests as shown below.\n\n    [![Test explorer](./media/67-1024x658.png)](./media/67.png)\n        \n1. Select the test and then click **Run** &gt; **Execute selected**. This will execute test against the locally deployed Dynamics 365 for Operations. \n\n    [![Execute selected](./media/68-1024x652.png)](./media/68.png)\n\n## Integration of the test module with build process\nAfter the test module is a part of source control, the build process template will discover all test modules, which contain the word **Test** in the name. The following illustration shows build and test execution as part of Visual Studio Online. \n\n[![Build and test execution](./media/69.png)](./media/69.png)\n\n\n\n","nodes":[{"pos":[32,55],"content":"Testing and validations","needQuote":true,"needEscape":true,"nodes":[{"content":"Testing and validations","pos":[0,23]}]},{"pos":[69,126],"content":"This tutorial shows you how to create and run test cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"This tutorial shows you how to create and run test cases.","pos":[0,57]}]},{"pos":[627,650],"content":"Testing and validations","linkify":"Testing and validations","nodes":[{"content":"Testing and validations","pos":[0,23]}]},{"content":"This tutorial shows you how to create and run test cases.","pos":[696,753]},{"pos":[755,768],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"You will need to deploy Developer Topology with Developer and Build VM.","pos":[784,855]},{"pos":[860,872],"content":"Key concepts","linkify":"Key concepts","nodes":[{"content":"Key concepts","pos":[0,12]}]},{"content":"Use SysTest Framework to author unit/component test code.","pos":[877,934]},{"content":"Test module creation to manage test code and FormAdaptors.","pos":[939,997]},{"content":"Import Task Recorder recordings into Visual Studio to generate test code.","pos":[1002,1075]},{"content":"Integrate a Test module with a build machine.","pos":[1080,1125]},{"pos":[1127,1187],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Integrate a test module<ept id=\"p1\">](./media/54.png)](./media/54.png)</ept>","source":"[![Integrate a test module](./media/54.png)](./media/54.png)"},{"pos":[1194,1250],"content":"Use SysTest Framework to author unit/component test code","linkify":"Use SysTest Framework to author unit/component test code","nodes":[{"content":"Use SysTest Framework to author unit/component test code","pos":[0,56]}]},{"content":"You can create new test cases to test the functionality in an application.","pos":[1251,1325]},{"content":"Open Visual Studio as an administrator.","pos":[1331,1370]},{"content":"On the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Open<ept id=\"p2\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p3\">**</bpt>Project/Solution<ept id=\"p3\">**</ept>, and then select <bpt id=\"p4\">**</bpt>FleetManagement<ept id=\"p4\">**</ept> <bpt id=\"p5\">**</bpt>solution<ept id=\"p5\">**</ept> from the desktop folder.","pos":[1375,1512],"source":"On the **File** menu, click **Open** &gt; **Project/Solution**, and then select **FleetManagement** **solution** from the desktop folder."},{"content":"If the solution file is not on your computer, the steps to create it are listed in <bpt id=\"p1\">[</bpt>Tutorial: Create a Fleet Management solution file out of the Fleet Management models in the AOT<ept id=\"p1\">](https://community.dynamics.com/ax/b/newdynamicsax/archive/2016/05/19/tutorial-create-a-fleet-management-solution-file-out-of-the-fleet-management-models-in-the-aot)</ept>.","pos":[1513,1859],"source":" If the solution file is not on your computer, the steps to create it are listed in [Tutorial: Create a Fleet Management solution file out of the Fleet Management models in the AOT](https://community.dynamics.com/ax/b/newdynamicsax/archive/2016/05/19/tutorial-create-a-fleet-management-solution-file-out-of-the-fleet-management-models-in-the-aot)."},{"pos":[1864,1986],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click the <bpt id=\"p2\">**</bpt>Fleet Management<ept id=\"p2\">**</ept> solution, point to <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>, and then click <bpt id=\"p4\">**</bpt>New Project<ept id=\"p4\">**</ept>.","source":"In **Solution Explorer**, right-click the **Fleet Management** solution, point to **Add**, and then click **New Project**."},{"content":"Choose **Dynamics 365 for Operations **as the project type to create.","pos":[1991,2060]},{"pos":[2065,2247],"content":"Name this new project <bpt id=\"p1\">*</bpt>FleetManagementUnitTestSample<ept id=\"p1\">*</ept>, specify the FleetManagement folder on the desktop (C:UsersPublicDesktopFleetManagement) as the location, and then click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","source":"Name this new project *FleetManagementUnitTestSample*, specify the FleetManagement folder on the desktop (C:UsersPublicDesktopFleetManagement) as the location, and then click **OK**."},{"pos":[2262,2327],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>FleetManagementUnitTestSampe<ept id=\"p1\">](./media/55.png)](./media/55.png)</ept>","source":"[![FleetManagementUnitTestSampe](./media/55.png)](./media/55.png)"},{"pos":[2341,2426],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click the new project, and then click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept>.","source":"In **Solution Explorer**, right-click the new project, and then click **Properties**."},{"pos":[2431,2513],"content":"Set the <bpt id=\"p1\">**</bpt>Model<ept id=\"p1\">**</ept> property to <bpt id=\"p2\">**</bpt>FleetManagementUnitTests<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>OK<ept id=\"p3\">**</ept>.","source":"Set the **Model** property to **FleetManagementUnitTests**, and then click **OK**."},{"pos":[2520,2571],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Model property<ept id=\"p1\">](./media/56.png)](./media/56.png)</ept>","source":"[![Model property](./media/56.png)](./media/56.png)"},{"pos":[2585,2686],"content":"Right-click the FleetManagementUnitTestSample project, point to <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>, and then click <bpt id=\"p2\">**</bpt>New Item<ept id=\"p2\">**</ept>.","source":"Right-click the FleetManagementUnitTestSample project, point to **Add**, and then click **New Item**."},{"content":"In the <bpt id=\"p1\">**</bpt>Add New Item<ept id=\"p1\">**</ept> window, select <bpt id=\"p2\">**</bpt>Class<ept id=\"p2\">**</ept> as the type of element to add.","pos":[2691,2770],"source":"In the **Add New Item** window, select **Class** as the type of element to add."},{"content":"Name the new class FMUnitTestSample, and then click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.","pos":[2771,2831],"source":" Name the new class FMUnitTestSample, and then click **Add**."},{"pos":[2838,2887],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Add new item<ept id=\"p1\">](./media/57.png)](./media/57.png)</ept>","source":"[![Add new item](./media/57.png)](./media/57.png)"},{"content":"In the first line of the code for the new class, indicate that the class extends the SysTestCase class.","pos":[2892,2995]},{"content":"Add the following code to define the methods for the class.","pos":[2999,3058]},{"content":"These methods define two additional tests.","pos":[3059,3101]},{"content":"Save the new class.","pos":[5018,5037]},{"content":"After the save is complete, you will see the additional two test cases in <bpt id=\"p1\">**</bpt>Test Explorer<ept id=\"p1\">**</ept>.","pos":[5038,5130],"source":" After the save is complete, you will see the additional two test cases in **Test Explorer**."},{"content":"Right-click on the FleetManagementUnitTestSample project in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, and then click <bpt id=\"p2\">**</bpt>Build.<ept id=\"p2\">**</ept>","pos":[5131,5239],"source":" Right-click on the FleetManagementUnitTestSample project in **Solution Explorer**, and then click **Build.**"},{"pos":[5244,5289],"content":"On the <bpt id=\"p1\">**</bpt>View<ept id=\"p1\">**</ept> menu, open <bpt id=\"p2\">**</bpt>Test Explorer<ept id=\"p2\">**</ept>.","source":"On the **View** menu, open **Test Explorer**."},{"pos":[5296,5355],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Test explorer<ept id=\"p1\">](./media/58-1024x545.png)](./media/58.png)</ept>","source":"[![Test explorer](./media/58-1024x545.png)](./media/58.png)"},{"pos":[5368,5426],"content":"Click <bpt id=\"p1\">**</bpt>Run selected test<ept id=\"p1\">**</ept> to execute specific test case.","source":"Click **Run selected test** to execute specific test case."},{"content":"Test Explorer will show the results of test after it is complete.","pos":[5430,5495]},{"pos":[5502,5561],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Completed test<ept id=\"p1\">](./media/59-300x290.png)](./media/59.png)</ept>","source":"[![Completed test](./media/59-300x290.png)](./media/59.png)"},{"pos":[5566,5623],"content":"Test module creation to manage test code and FormAdaptors","linkify":"Test module creation to manage test code and FormAdaptors","nodes":[{"content":"Test module creation to manage test code and FormAdaptors","pos":[0,57]}]},{"content":"Creating a test specific module helps to keep test code together and manageable.","pos":[5624,5704]},{"pos":[5709,5822],"content":"Open <bpt id=\"p1\">**</bpt>Visual Studio<ept id=\"p1\">**</ept> and go to <bpt id=\"p2\">**</bpt>Dynamics 365 for Operations<ept id=\"p2\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p3\">**</bpt>Model Management<ept id=\"p3\">**</ept> <ph id=\"ph2\">&amp;gt;</ph> <bpt id=\"p4\">**</bpt>Create model<ept id=\"p4\">**</ept>.","source":"Open **Visual Studio** and go to **Dynamics 365 for Operations** &gt; **Model Management** &gt; **Create model**."},{"pos":[5828,5886],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Create model<ept id=\"p1\">](./media/60-1024x574.png)](./media/60.png)</ept>","source":"[![Create model](./media/60-1024x574.png)](./media/60.png)"},{"content":"Enter the model name, select the layer, and then enter any additional details.","pos":[5899,5977]},{"content":"**Note: **It's a good idea that you include the word <bpt id=\"p1\">**</bpt>Test<ept id=\"p1\">**</ept> in the name of the test module.","pos":[5978,6071],"source":" **Note: **It's a good idea that you include the word **Test** in the name of the test module."},{"content":"The default build definition is configured to discover all test modules that contain the word <bpt id=\"p1\">**</bpt>Test<ept id=\"p1\">**</ept>.","pos":[6072,6175],"source":" The default build definition is configured to discover all test modules that contain the word **Test**."},{"pos":[6182,6238],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Model name<ept id=\"p1\">](./media/61-1024x775.png)](./media/61.png)</ept>","source":"[![Model name](./media/61-1024x775.png)](./media/61.png)"},{"content":"Because this model holds forms from the Application Platform/Foundation, add references to models shown below.","pos":[6251,6361]},{"pos":[6367,6429],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Model references<ept id=\"p1\">](./media/62-1024x786.png)](./media/62.png)</ept>","source":"[![Model references](./media/62-1024x786.png)](./media/62.png)"},{"content":"After the base test module is in place, you can import a Task Recorder recording to generate test code.","pos":[6439,6542]},{"content":"When you import a Task Recorder recording XML, test code is generated using FormAdaptors.","pos":[6543,6632]},{"content":"Form adaptors are wrapper classes over forms which provide strongly typed API that can be used to test form functionality.","pos":[6633,6755]},{"content":"In Dynamics 365 for Operations, we have included pre-generated FormAdapters for each package for built-in forms.","pos":[6756,6868]},{"content":"In the test module, add a reference to the corresponding Form Adaptor for packages and Test Essentials, which has helper methods to execute test code.","pos":[6869,7019]},{"pos":[7024,7097],"content":"Import a Task Recorder recording into Visual Studio to generate test code","linkify":"Import a Task Recorder recording into Visual Studio to generate test code","nodes":[{"content":"Import a Task Recorder recording into Visual Studio to generate test code","pos":[0,73]}]},{"content":"You can generate test code from Task Recorder recording to execute headless (non-UI) test.","pos":[7098,7188]},{"content":"Record a scenario in Dynamics 365 for Operations by using Task Recorder.","pos":[7193,7265]},{"pos":[7269,7400],"content":"To import a Task Recording, in Visual Studio, click <bpt id=\"p1\">**</bpt>Dynamics 365 for Operations<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Addins<ept id=\"p2\">**</ept> <ph id=\"ph2\">&amp;gt;</ph> <bpt id=\"p3\">**</bpt>Import Task Recording<ept id=\"p3\">**</ept>.","source":"To import a Task Recording, in Visual Studio, click **Dynamics 365 for Operations** &gt; **Addins** &gt; **Import Task Recording**."},{"pos":[7407,7474],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Import task recording<ept id=\"p1\">](./media/63-1024x613.png)](./media/63.png)</ept>","source":"[![Import task recording](./media/63-1024x613.png)](./media/63.png)"},{"pos":[7487,7647],"content":"In the <bpt id=\"p1\">**</bpt>Import Task Recording<ept id=\"p1\">**</ept> dialog, select the Test Module (ISVTestModule) under which you want to import task recording, and browse to recording xml file.","source":"In the **Import Task Recording** dialog, select the Test Module (ISVTestModule) under which you want to import task recording, and browse to recording xml file."},{"pos":[7654,7710],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Test module<ept id=\"p1\">](./media/64-249x300.png)](./media/64.png)</ept>","source":"[![Test module](./media/64-249x300.png)](./media/64.png)"},{"content":"The task recording import process generates test code that is based on the SysTestAdapter and FormAdaptor which can be viewed in Visual Studio IDE.","pos":[7723,7870]},{"content":"We do not expect you to change any test source code that is generated as part of this step.","pos":[7871,7962]},{"pos":[7968,8032],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Generate test code<ept id=\"p1\">](./media/65-1024x655.png)](./media/65.png)</ept>","source":"[![Generate test code](./media/65-1024x655.png)](./media/65.png)"},{"content":"After the test code is generated, set up Visual Studio options for test discovery and execution:","pos":[8045,8141]},{"content":"If you have a 64-bit machine, you can run unit tests and capture code coverage information as a 64-bit process.","pos":[8148,8259]},{"pos":[8266,8389],"content":"To configure this, select <bpt id=\"p1\">**</bpt>Test<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Test Settings<ept id=\"p2\">**</ept> <ph id=\"ph2\">&amp;gt;</ph> <bpt id=\"p3\">**</bpt>Default Processor Architecture<ept id=\"p3\">**</ept>, and then select <bpt id=\"p4\">**</bpt>X64<ept id=\"p4\">**</ept>.","source":"To configure this, select **Test** &gt; **Test Settings** &gt; **Default Processor Architecture**, and then select **X64**."},{"content":"You might run into a situation in which the test execution engine opens and locks an assembly in your test project.","pos":[8396,8511]},{"content":"When this happens, you canâ€™t for example, save changes to the assembly.","pos":[8512,8583]},{"content":"To fix this, select <bpt id=\"p1\">**</bpt>Test<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Test Settings<ept id=\"p2\">**</ept>, and then select <bpt id=\"p3\">**</bpt>Keep Test Execution Engine Running<ept id=\"p3\">**</ept>.","pos":[8584,8692],"source":" To fix this, select **Test** &gt; **Test Settings**, and then select **Keep Test Execution Engine Running**."},{"pos":[8703,8769],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Keep execution engine running<ept id=\"p1\">](./media/66.png)](./media/66.png)</ept>","source":"[![Keep execution engine running](./media/66.png)](./media/66.png)"},{"content":"Now that you have test code generated in Visual Studio IDE, it's time to discover the test and try executing them locally.","pos":[8781,8903]},{"content":"From menu options, select <bpt id=\"p1\">**</bpt>Test<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Windows<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>Test Explorer<ept id=\"p3\">**</ept>.","pos":[8908,8994],"source":"From menu options, select **Test** &gt; **Windows**, and then click **Test Explorer**."},{"content":"After the Test Explorer window is open, it will try to discover test from test code and list all the available tests as shown below.","pos":[8995,9127]},{"pos":[9133,9192],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Test explorer<ept id=\"p1\">](./media/67-1024x658.png)](./media/67.png)</ept>","source":"[![Test explorer](./media/67-1024x658.png)](./media/67.png)"},{"content":"Select the test and then click <bpt id=\"p1\">**</bpt>Run<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Execute selected<ept id=\"p2\">**</ept>.","pos":[9205,9270],"source":"Select the test and then click **Run** &gt; **Execute selected**."},{"content":"This will execute test against the locally deployed Dynamics 365 for Operations.","pos":[9271,9351]},{"pos":[9358,9420],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Execute selected<ept id=\"p1\">](./media/68-1024x652.png)](./media/68.png)</ept>","source":"[![Execute selected](./media/68-1024x652.png)](./media/68.png)"},{"pos":[9425,9474],"content":"Integration of the test module with build process","linkify":"Integration of the test module with build process","nodes":[{"content":"Integration of the test module with build process","pos":[0,49]}]},{"content":"After the test module is a part of source control, the build process template will discover all test modules, which contain the word <bpt id=\"p1\">**</bpt>Test<ept id=\"p1\">**</ept> in the name.","pos":[9475,9629],"source":"After the test module is a part of source control, the build process template will discover all test modules, which contain the word **Test** in the name."},{"content":"The following illustration shows build and test execution as part of Visual Studio Online.","pos":[9630,9720]},{"pos":[9723,9784],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>Build and test execution<ept id=\"p1\">](./media/69.png)](./media/69.png)</ept>","source":"[![Build and test execution](./media/69.png)](./media/69.png)"}]}