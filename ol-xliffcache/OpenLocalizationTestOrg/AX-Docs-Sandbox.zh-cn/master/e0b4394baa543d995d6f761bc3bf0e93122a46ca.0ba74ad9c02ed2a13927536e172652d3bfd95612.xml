{"nodes":[{"pos":[32,76],"content":"X++ date run-time functions | Microsoft Docs","needQuote":true,"needEscape":true,"nodes":[{"content":"X++ date run-time functions | Microsoft Docs","pos":[0,44]}]},{"pos":[90,139],"content":"This topic describes the date run-time functions.","needQuote":true,"needEscape":true,"nodes":[{"content":"This topic describes the date run-time functions.","pos":[0,49]}]},{"pos":[560,587],"content":"X++ date run-time functions","linkify":"X++ date run-time functions","nodes":[{"content":"X++ date run-time functions","pos":[0,27]}]},{"content":"This topic describes the date run-time functions.","pos":[589,638]},{"pos":[640,647],"content":"dayName","linkify":"dayName","nodes":[{"content":"dayName","pos":[0,7]}]},{"content":"Retrieves the name of the day of the week that is specified by a number.","pos":[657,729]},{"pos":[764,774],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[778,787]},{"content":"Description","pos":[790,801]},{"content":"number","pos":[872,878]},{"content":"The number of a day in a week.","pos":[884,914]},{"pos":[922,934],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The day of the week specified by the number parameter.","pos":[936,990]},{"pos":[996,1003],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The valid values for the number parameter are <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept> through <bpt id=\"p2\">**</bpt>7<ept id=\"p2\">**</ept>.","pos":[1005,1071],"source":"The valid values for the number parameter are **1** through **7**."},{"content":"Monday is represented by <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>, Tuesday by <bpt id=\"p2\">**</bpt>2<ept id=\"p2\">**</ept>, and Sunday by <bpt id=\"p3\">**</bpt>7<ept id=\"p3\">**</ept>.","pos":[1072,1142],"source":" Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**."},{"pos":[1148,1155],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1354,1362],"content":"dayOfMth","linkify":"dayOfMth","nodes":[{"content":"dayOfMth","pos":[0,8]}]},{"content":"Calculates the number of the day in the month for the specified date.","pos":[1363,1432]},{"pos":[1467,1477],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1481,1490]},{"content":"Description","pos":[1493,1504]},{"content":"date","pos":[1549,1553]},{"content":"The date to test.","pos":[1561,1578]},{"pos":[1586,1598],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"An integer between 1 and 31 that indicates the day of the month for the specified date.","pos":[1600,1687]},{"pos":[1693,1700],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1744,1751],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1986,1993],"content":"dayOfWk","linkify":"dayOfWk","nodes":[{"content":"dayOfWk","pos":[0,7]}]},{"content":"Calculates the number of day in the week for the specified date.","pos":[1994,2058]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Monday is represented by <bpt id=\"p2\">**</bpt>1<ept id=\"p2\">**</ept>, Tuesday by <bpt id=\"p3\">**</bpt>2<ept id=\"p3\">**</ept>, and Sunday by <bpt id=\"p4\">**</bpt>7<ept id=\"p4\">**</ept>.","pos":[2059,2139],"source":"**Note:** Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**."},{"pos":[2173,2183],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2187,2196]},{"content":"Description","pos":[2199,2210]},{"content":"date","pos":[2335,2339]},{"pos":[2347,2404],"content":"A <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value that indicates the year, month, and day.","source":"A **date** value that indicates the year, month, and day."},{"pos":[2412,2424],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of the specified day in the week.","pos":[2426,2470]},{"pos":[2476,2483],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2715,2722],"content":"dayOfYr","linkify":"dayOfYr","nodes":[{"content":"dayOfYr","pos":[0,7]}]},{"content":"Calculates the number of days between January 1 and the specified date.","pos":[2723,2794]},{"pos":[2829,2839],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2843,2852]},{"content":"Description","pos":[2855,2866]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[2971,2977],"source":"\\_date"},{"content":"A date that specifies the year, month, and day.","pos":[2983,3030]},{"pos":[3038,3050],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of days between January 1 and the specified date, inclusive.","pos":[3052,3123]},{"pos":[3129,3136],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3138,3203],"content":"January 1 is <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>, and December 31 is either <bpt id=\"p2\">**</bpt>365<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>366<ept id=\"p3\">**</ept>.","source":"January 1 is **1**, and December 31 is either **365** or **366**."},{"pos":[3209,3216],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3448,3454],"content":"endMth","linkify":"endMth","nodes":[{"content":"endMth","pos":[0,6]}]},{"content":"Calculates the last date in the month of the specified date.","pos":[3455,3515]},{"pos":[3549,3559],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3563,3572]},{"content":"Description","pos":[3575,3586]},{"content":"date","pos":[3707,3711]},{"pos":[3719,3774],"content":"A <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value that indicates a year, month, and day.","source":"A **date** value that indicates a year, month, and day."},{"pos":[3782,3794],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[3796,3854],"content":"The <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value of the last day in the specified month.","source":"The **date** value of the last day in the specified month."},{"pos":[3860,3867],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3999,4005],"content":"mkDate","linkify":"mkDate","nodes":[{"content":"mkDate","pos":[0,6]}]},{"content":"Creates a date, based on three integers that indicate the day, month, and year, respectively.","pos":[4006,4099]},{"pos":[4152,4162],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4166,4175]},{"content":"Description","pos":[4178,4189]},{"content":"day","pos":[4346,4349]},{"content":"An integer that represents the day of the month.","pos":[4358,4406]},{"content":"month","pos":[4436,4441]},{"content":"An integer that represents the month of the year.","pos":[4448,4497]},{"content":"year","pos":[4526,4530]},{"content":"An integer that represents the year, which must be between 1900 and 2154.","pos":[4538,4611]},{"pos":[4619,4631],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[4633,4723],"content":"A <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value that is based on the values of the <bpt id=\"p2\">*</bpt>day<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>month<ept id=\"p3\">*</ept>, and <bpt id=\"p4\">*</bpt>year<ept id=\"p4\">*</ept> parameters.","source":"A **date** value that is based on the values of the *day*, *month*, and *year* parameters."},{"pos":[4729,4736],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the date isn't valid, this method returns a <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero, 1/1/1900) date.","pos":[4738,4813],"source":"If the date isn't valid, this method returns a **0** (zero, 1/1/1900) date."},{"content":"Beginning with Dynamics 365 for Operations (February 2016), shortcut values for the year, e.g. 75 for 1975, are not supported.","pos":[4814,4940]},{"content":"If you provide a shortcut value for the year, a date of 1/1/1900 is returned.","pos":[4941,5018]},{"pos":[5024,5031],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5241,5248],"content":"mthName","linkify":"mthName","nodes":[{"content":"mthName","pos":[0,7]}]},{"content":"Retrieves the name of the specified month","pos":[5249,5290]},{"pos":[5327,5337],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5341,5350]},{"content":"Description","pos":[5353,5364]},{"content":"number","pos":[5423,5429]},{"content":"The number of the month.","pos":[5435,5459]},{"pos":[5467,5479],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The name of the specified month.","pos":[5481,5513]},{"pos":[5519,5526],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The valid values of the <bpt id=\"p1\">*</bpt>number<ept id=\"p1\">*</ept> parameter are <bpt id=\"p2\">**</bpt>1<ept id=\"p2\">**</ept> through <bpt id=\"p3\">**</bpt>12<ept id=\"p3\">**</ept>.","pos":[5528,5596],"source":"The valid values of the *number* parameter are **1** through **12**."},{"content":"January is represented by <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept> and December by <bpt id=\"p2\">**</bpt>12<ept id=\"p2\">**</ept>.","pos":[5597,5652],"source":" January is represented by **1** and December by **12**."},{"pos":[5658,5665],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5903,5910],"content":"mthOfYr","linkify":"mthOfYr","nodes":[{"content":"mthOfYr","pos":[0,7]}]},{"content":"Retrieves the number of the month in the year for the specified date.","pos":[5911,5980]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> January is <bpt id=\"p2\">**</bpt>1<ept id=\"p2\">**</ept>, February is <bpt id=\"p3\">**</bpt>2<ept id=\"p3\">**</ept>, and December is <bpt id=\"p4\">**</bpt>12<ept id=\"p4\">**</ept>.","pos":[5981,6051],"source":"**Note:** January is **1**, February is **2**, and December is **12**."},{"pos":[6085,6095],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6099,6108]},{"content":"Description","pos":[6111,6122]},{"content":"date","pos":[6223,6227]},{"content":"A date that specifies a year, month, and day.","pos":[6235,6280]},{"pos":[6288,6300],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[6302,6397],"content":"The number of the month in the year, for the month that is represented by the <bpt id=\"p1\">*</bpt>date<ept id=\"p1\">*</ept> parameter.","source":"The number of the month in the year, for the month that is represented by the *date* parameter."},{"pos":[6403,6410],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6634,6641],"content":"nextMth","linkify":"nextMth","nodes":[{"content":"nextMth","pos":[0,7]}]},{"content":"Retrieves the date in the following month that corresponds most closely to the specified date.","pos":[6642,6736]},{"pos":[6771,6781],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6785,6794]},{"content":"Description","pos":[6797,6808]},{"content":"date","pos":[6901,6905]},{"content":"The date to match in the following month.","pos":[6913,6954]},{"pos":[6962,6974],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the next month.","pos":[6976,7048]},{"pos":[7054,7061],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7182,7189],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7431,7438],"content":"nextQtr","linkify":"nextQtr","nodes":[{"content":"nextQtr","pos":[0,7]}]},{"content":"Retrieves the date in the following quarter that corresponds most closely to the specified date.","pos":[7439,7535]},{"pos":[7570,7580],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7584,7593]},{"content":"Description","pos":[7596,7607]},{"content":"date","pos":[7704,7708]},{"content":"The date to match in the following quarter.","pos":[7716,7759]},{"pos":[7767,7779],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to specified date that is found in the next quarter.","pos":[7781,7851]},{"pos":[7857,7864],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7866,7920],"content":"For example, <bpt id=\"p1\">**</bpt>nextQtr(3111998)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>3041998<ept id=\"p2\">**</ept>.","source":"For example, **nextQtr(3111998)** returns **3041998**."},{"pos":[7926,7933],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8185,8191],"content":"nextYr","linkify":"nextYr","nodes":[{"content":"nextYr","pos":[0,6]}]},{"content":"Retrieves the date in the following year that corresponds most closely to the specified date.","pos":[8192,8285]},{"pos":[8319,8329],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8333,8342]},{"content":"Description","pos":[8345,8356]},{"content":"date","pos":[8447,8451]},{"content":"The date to match in the following year.","pos":[8459,8499]},{"pos":[8507,8519],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the following year.","pos":[8521,8597]},{"pos":[8603,8610],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8612,8665],"content":"For example, <bpt id=\"p1\">**</bpt>nextyr(2921998)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>2821999<ept id=\"p2\">**</ept>.","source":"For example, **nextyr(2921998)** returns **2821999**."},{"pos":[8671,8678],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8925,8932],"content":"prevMth","linkify":"prevMth","nodes":[{"content":"prevMth","pos":[0,7]}]},{"content":"Retrieves the date in the previous month that corresponds most closely to the specified date.","pos":[8933,9026]},{"pos":[9061,9071],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9075,9084]},{"content":"Description","pos":[9087,9098]},{"content":"date","pos":[9189,9193]},{"content":"The date to match in the previous month.","pos":[9201,9241]},{"pos":[9249,9261],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the previous month.","pos":[9263,9339]},{"pos":[9345,9352],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9492,9499],"content":"prevQtr","linkify":"prevQtr","nodes":[{"content":"prevQtr","pos":[0,7]}]},{"content":"Retrieves the date in the previous quarter that corresponds most closely to the specified date.","pos":[9500,9595]},{"pos":[9630,9640],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9644,9653]},{"content":"Description","pos":[9656,9667]},{"content":"date","pos":[9762,9766]},{"content":"The date to match in the previous quarter.","pos":[9774,9816]},{"pos":[9824,9836],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the previous quarter.","pos":[9838,9916]},{"pos":[9922,9929],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10070,10076],"content":"prevYr","linkify":"prevYr","nodes":[{"content":"prevYr","pos":[0,6]}]},{"content":"Retrieves the date in the previous year that corresponds most closely to the specified date.","pos":[10077,10169]},{"pos":[10203,10213],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10217,10226]},{"content":"Description","pos":[10229,10240]},{"content":"date","pos":[10329,10333]},{"content":"The date to match in the previous year.","pos":[10341,10380]},{"pos":[10388,10400],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the previous year.","pos":[10402,10477]},{"pos":[10483,10490],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10628,10641],"content":"systemDateGet","linkify":"systemDateGet","nodes":[{"content":"systemDateGet","pos":[0,13]}]},{"content":"Retrieves the session date, if it has been set.","pos":[10642,10689]},{"pos":[10721,10733],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The session date if it has been set; otherwise, the system date.","pos":[10735,10799]},{"pos":[10805,10812],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Consider using <bpt id=\"p1\">**</bpt>Session date and time<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> menu to open the <bpt id=\"p3\">**</bpt>Session date and time<ept id=\"p3\">**</ept> page.","pos":[10814,10920],"source":"Consider using **Session date and time** on the **Tools** menu to open the **Session date and time** page."},{"content":"This page can be used to actively set the session date.","pos":[10921,10976]},{"content":"After this set action is detected by the system, subsequent calls to the <bpt id=\"p1\">**</bpt>systemDateGet<ept id=\"p1\">**</ept> function return the session date.","pos":[10977,11101],"source":" After this set action is detected by the system, subsequent calls to the **systemDateGet** function return the session date."},{"content":"The <bpt id=\"p1\">**</bpt>today<ept id=\"p1\">**</ept> function returns the system date.","pos":[11102,11149],"source":" The **today** function returns the system date."},{"content":"This function doesn't support time zones.","pos":[11150,11191]},{"pos":[11197,11204],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the date in the Infolog window.","pos":[11206,11265]},{"pos":[11833,11846],"content":"systemDateSet","linkify":"systemDateSet","nodes":[{"content":"systemDateSet","pos":[0,13]}]},{"content":"Changes the system date.","pos":[11847,11871]},{"pos":[11913,11923],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11927,11936]},{"content":"Description","pos":[11939,11950]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[12017,12023],"source":"\\_date"},{"content":"The new date for the system.","pos":[12029,12057]},{"pos":[12065,12077],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The new system date.","pos":[12079,12099]},{"pos":[12105,12112],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function doesn't affect the session date.","pos":[12114,12160]},{"content":"This method changes the date, but the time will be set to <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero).","pos":[12161,12232],"source":" This method changes the date, but the time will be set to **0** (zero)."},{"pos":[12238,12245],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example sets the system date to today's date.","pos":[12247,12306]},{"pos":[12457,12464],"content":"timeNow","linkify":"timeNow","nodes":[{"content":"timeNow","pos":[0,7]}]},{"content":"Retrieves the current system time.","pos":[12465,12499]},{"pos":[12524,12536],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of seconds that have passed since midnight.","pos":[12538,12592]},{"pos":[12598,12605],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[12819,12824],"content":"today","linkify":"today","nodes":[{"content":"today","pos":[0,5]}]},{"content":"Retrieves the current date on the system.","pos":[12825,12866]},{"pos":[12890,12902],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The current date.","pos":[12904,12921]},{"pos":[12927,12934],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13142,13148],"content":"wkOfYr","linkify":"wkOfYr","nodes":[{"content":"wkOfYr","pos":[0,6]}]},{"content":"Calculates the week of the year that a date falls in, according to the ISO 8601 specification.","pos":[13149,13243]},{"pos":[13277,13287],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13291,13300]},{"content":"Description","pos":[13303,13314]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[13419,13425],"source":"\\_date"},{"content":"The date to calculate the week of the year for.","pos":[13431,13478]},{"pos":[13486,13498],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[13500,13570],"content":"The sequence number of the week that the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter occurs in.","source":"The sequence number of the week that the *\\_date* parameter occurs in."},{"pos":[13576,13583],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example compares the <bpt id=\"p1\">**</bpt>wkOfYr<ept id=\"p1\">**</ept> function with the <bpt id=\"p2\">**</bpt>Global::weekOfYear<ept id=\"p2\">**</ept> method.","pos":[13585,13684],"source":"The following code example compares the **wkOfYr** function with the **Global::weekOfYear** method."},{"content":"The function and the method produce different results.","pos":[13685,13739]},{"content":"The previous example sent the following information to the Infolog for display.","pos":[15085,15164]},{"content":"The output shows that there are differences between <bpt id=\"p1\">**</bpt>wkOfYr<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Global::weekOfYear<ept id=\"p2\">**</ept>.","pos":[15165,15255],"source":" The output shows that there are differences between **wkOfYr** and **Global::weekOfYear**."},{"content":"Message (01:59:13 pm) ----- <ph id=\"ph1\">\\#</ph>1.","pos":[15256,15288],"source":" Message (01:59:13 pm) ----- \\#1."},{"content":"For Sunday, January 5, 2003 ----- 1 = wkOfYr funtion 2 = Global::weekOfYear method ----- <ph id=\"ph1\">\\#</ph>2.","pos":[15289,15382],"source":" For Sunday, January 5, 2003 ----- 1 = wkOfYr funtion 2 = Global::weekOfYear method ----- \\#2."},{"content":"For Wednesday, August 20, 2003 ----- 34 = wkOfYr funtion 34 = Global::weekOfYear method ----- <ph id=\"ph1\">\\#</ph>3.","pos":[15383,15481],"source":" For Wednesday, August 20, 2003 ----- 34 = wkOfYr funtion 34 = Global::weekOfYear method ----- \\#3."},{"content":"For Sunday, December 28, 2003 ----- 52 = wkOfYr funtion 1 = Global::weekOfYear method","pos":[15482,15567]},{"pos":[15572,15576],"content":"year","linkify":"year","nodes":[{"content":"year","pos":[0,4]}]},{"pos":[15577,15618],"content":"Retrieves the year from a <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value.","source":"Retrieves the year from a **date** value."},{"pos":[15650,15660],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15664,15673]},{"content":"Description","pos":[15676,15687]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[15764,15770],"source":"\\_date"},{"content":"The date to return the year from.","pos":[15776,15809]},{"pos":[15817,15829],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The year of the specified date.","pos":[15831,15862]},{"pos":[15868,15875],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]}],"content":"---\n# required metadata\n\ntitle: X++ date run-time functions | Microsoft Docs\ndescription: This topic describes the date run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-04 22:12:59\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# keywords: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: 2051\nms.suite: Released- Dynamics AX 7.0.0\n# ms.tgt_pltfrm: \nms.custom: 31341\nms.assetid: c36f7745-dc4a-4f5b-ac05-14a505f30350\nms.region: Global\n# ms.industry: \nms.author: robinr\n\n---\n\n# X++ date run-time functions\n\nThis topic describes the date run-time functions.\n\ndayName\n-------\n\nRetrieves the name of the day of the week that is specified by a number.\n\n    str dayName(int number)\n\n### Parameters\n\n| Parameter | Description                    |\n|-----------|--------------------------------|\n| number    | The number of a day in a week. |\n\n### Return value\n\nThe day of the week specified by the number parameter.\n\n### Remarks\n\nThe valid values for the number parameter are **1** through **7**. Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**.\n\n### Example\n\n    static void dayNameExample(Args _arg)\n    {\n            str s;\n            ;\n            s = dayName(01);\n            print \"First day of the week's name is \" + s;\n            pause;\n    }\n\n## dayOfMth\nCalculates the number of the day in the month for the specified date.\n\n    int dayOfMth(date date)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| date      | The date to test. |\n\n### Return value\n\nAn integer between 1 and 31 that indicates the day of the month for the specified date.\n\n### Remarks\n\n    dayOfMth(31122001) //returns 31.\n\n### Example\n\n    static void dayOfMthExample(Args _arg)\n    {\n            date d = today();\n            int i;\n            ;\n            i = dayOfMth(d);\n            print \"Today's day of the month is \" + int2Str(i);\n            pause;\n    }\n\n## dayOfWk\nCalculates the number of day in the week for the specified date. **Note:** Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**.\n\n    int dayOfWk(date date)\n\n### Parameters\n\n| Parameter | Description                                               |\n|-----------|-----------------------------------------------------------|\n| date      | A **date** value that indicates the year, month, and day. |\n\n### Return value\n\nThe number of the specified day in the week.\n\n### Example\n\n    static void dayOfWkExample(Args _arg)\n    {\n            date d = today();\n            int i;\n            ;\n            i = dayOfWk(d);\n            print \"Today's day of the week is \" + int2Str(i);\n            pause;\n    }\n\n## dayOfYr\nCalculates the number of days between January 1 and the specified date.\n\n    int dayOfYr(date _date)\n\n### Parameters\n\n| Parameter | Description                                     |\n|-----------|-------------------------------------------------|\n| \\_date    | A date that specifies the year, month, and day. |\n\n### Return value\n\nThe number of days between January 1 and the specified date, inclusive.\n\n### Remarks\n\nJanuary 1 is **1**, and December 31 is either **365** or **366**.\n\n### Example\n\n    static void dayOfYrExample(Args _arg)\n    {\n            date d = today();\n            int i;\n            ;\n            i = dayOfYr(d);\n            print \"Today's day of the year is \" + int2Str(i);\n            pause;\n    }\n\n## endMth\nCalculates the last date in the month of the specified date.\n\n    date endMth(date date)\n\n### Parameters\n\n| Parameter | Description                                             |\n|-----------|---------------------------------------------------------|\n| date      | A **date** value that indicates a year, month, and day. |\n\n### Return value\n\nThe **date** value of the last day in the specified month.\n\n### Remarks\n\n    endMth(0221988); //Returns the date 2921988 because 1988 is a leap year.\n    endMth(0221989); //Returns the date 2821989.\n\n## mkDate\nCreates a date, based on three integers that indicate the day, month, and year, respectively.\n\n    date mkDate(int day, int month, int year)\n\n### Parameters\n\n| Parameter | Description                                                               |\n|-----------|---------------------------------------------------------------------------|\n| day       | An integer that represents the day of the month.                          |\n| month     | An integer that represents the month of the year.                         |\n| year      | An integer that represents the year, which must be between 1900 and 2154. |\n\n### Return value\n\nA **date** value that is based on the values of the *day*, *month*, and *year* parameters.\n\n### Remarks\n\nIf the date isn't valid, this method returns a **0** (zero, 1/1/1900) date. Beginning with Dynamics 365 for Operations (February 2016), shortcut values for the year, e.g. 75 for 1975, are not supported. If you provide a shortcut value for the year, a date of 1/1/1900 is returned.\n\n### Example\n\n    static void mkDateExample(Args _arg)\n    {\n            date d;\n            ;\n            // Returns the date 0112005.\n            d = mkDate(1, 1, 2005);\n            print d;\n            pause;\n    }\n\n## mthName\nRetrieves the name of the specified month\n\n    str monthName(int number)\n\n### Parameters\n\n| Parameter | Description              |\n|-----------|--------------------------|\n| number    | The number of the month. |\n\n### Return value\n\nThe name of the specified month.\n\n### Remarks\n\nThe valid values of the *number* parameter are **1** through **12**. January is represented by **1** and December by **12**.\n\n### Example\n\n    static void mthNameExample(Args _arg)\n    {\n            str s;\n            ;\n            // MthName(6) returns the text string \"June\".\n            s = mthName(6);\n            print \"Month name is \" + s;\n            pause;\n    }\n\n## mthOfYr\nRetrieves the number of the month in the year for the specified date. **Note:** January is **1**, February is **2**, and December is **12**.\n\n    int mthOfYr(date date)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| date      | A date that specifies a year, month, and day. |\n\n### Return value\n\nThe number of the month in the year, for the month that is represented by the *date* parameter.\n\n### Example\n\n    static void mthOfYrExample(Args _arg)\n    {\n            int i;\n            ;\n            i = mthOfYr(today());\n            print \"The number of the month in today's date is \" + int2Str(i);\n            pause;\n    }\n\n## nextMth\nRetrieves the date in the following month that corresponds most closely to the specified date.\n\n    date nextMth(date date)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| date      | The date to match in the following month. |\n\n### Return value\n\nThe closest match to the specified date that is found in the next month.\n\n### Remarks\n\n    nextMth(2921996); //returns 29/03/1996.\n    nextMth(3111996); //returns 2921996, because 1996 is a leap year.\n\n### Example\n\n    static void nextMthExample(Args _arg)\n    {\n            date d;\n            ;\n            d = nextMth(today());\n            print \"Closest date next month is \"\n            + date2Str(d, 2, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## nextQtr\nRetrieves the date in the following quarter that corresponds most closely to the specified date.\n\n    date nextQtr(date date)\n\n### Parameters\n\n| Parameter | Description                                 |\n|-----------|---------------------------------------------|\n| date      | The date to match in the following quarter. |\n\n### Return value\n\nThe closest match to specified date that is found in the next quarter.\n\n### Remarks\n\nFor example, **nextQtr(3111998)** returns **3041998**.\n\n### Example\n\n    static void nextQtrExample(Args _arg)\n    {\n            date d;\n            ;\n            d = nextQtr(today());\n            print \"Closest date next quarter is \"\n                    + date2Str(d, 2, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## nextYr\nRetrieves the date in the following year that corresponds most closely to the specified date.\n\n    date nextYr(date date)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| date      | The date to match in the following year. |\n\n### Return value\n\nThe closest match to the specified date that is found in the following year.\n\n### Remarks\n\nFor example, **nextyr(2921998)** returns **2821999**.\n\n### Example\n\n    static void nextYrExample(Args _arg)\n    {\n            date d;\n            ;\n            d = nextYr(today());\n            print \"Closest date next year is \"\n                    + date2Str(d, 2, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## prevMth\nRetrieves the date in the previous month that corresponds most closely to the specified date.\n\n    date prevMth(date date)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| date      | The date to match in the previous month. |\n\n### Return value\n\nThe closest match to the specified date that is found in the previous month.\n\n### Remarks\n\n    prevMth(3131996); //Returns the date 29/02/1996 because 1996 is a leap year.\n    prevMth(2821998); //Returns the date 28/01/1998.\n\n## prevQtr\nRetrieves the date in the previous quarter that corresponds most closely to the specified date.\n\n    date prevQtr(date date)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| date      | The date to match in the previous quarter. |\n\n### Return value\n\nThe closest match to the specified date that is found in the previous quarter.\n\n### Remarks\n\n    prevQtr(3041998); //Returns the date 30/01/1998.\n    prevQtr(2951996); //Returns the date 29/02/1996, because 1996 is a leap year.\n\n## prevYr\nRetrieves the date in the previous year that corresponds most closely to the specified date.\n\n    date prevYr(date date)\n\n### Parameters\n\n| Parameter | Description                             |\n|-----------|-----------------------------------------|\n| date      | The date to match in the previous year. |\n\n### Return value\n\nThe closest match to the specified date that is found in the previous year.\n\n### Remarks\n\n    prevYr(2921996); //Returns the date 28/02/1995 because 1996 is a leap year.\n    prevYr(2821998); //Returns the date 28/02/1997.\n\n## systemDateGet\nRetrieves the session date, if it has been set.\n\n    date systemDateGet()\n\n### Return value\n\nThe session date if it has been set; otherwise, the system date.\n\n### Remarks\n\nConsider using **Session date and time** on the **Tools** menu to open the **Session date and time** page. This page can be used to actively set the session date. After this set action is detected by the system, subsequent calls to the **systemDateGet** function return the session date. The **today** function returns the system date. This function doesn't support time zones.\n\n### Example\n\nThe following example shows the date in the Infolog window.\n\n    static void Job_systemDateGet(Args _arg)\n    {\n            info( date2Str(\n                    systemDateGet(),        // X++ language function.\n                    321,                    // 321 = ymd\n                    DateDay::Digits2,\n                    DateSeparator::Hyphen,  // separator1\n                    DateMonth::Digits2,\n                    DateSeparator::Hyphen,  // separator2\n                    DateYear::Digits4\n            )\n    );\n    /*********** Actual Infolog output\n    Message (03:46:00 pm)\n    2012-04-16\n    ***********/\n    }\n\n## systemDateSet\nChanges the system date.\n\n    date systemDateSet(date _date)\n\n### Parameters\n\n| Parameter | Description                  |\n|-----------|------------------------------|\n| \\_date    | The new date for the system. |\n\n### Return value\n\nThe new system date.\n\n### Remarks\n\nThis function doesn't affect the session date. This method changes the date, but the time will be set to **0** (zero).\n\n### Example\n\nThe following example sets the system date to today's date.\n\n    static void systemDateSetExample(Args _arg)\n    {\n            date d = today();\n            d = systemDateSet(d);\n            print d;\n    }\n\n## timeNow\nRetrieves the current system time.\n\n    int timeNow()\n\n### Return value\n\nThe number of seconds that have passed since midnight.\n\n### Example\n\n    static void timeNowExample(Args _arg)\n    {\n            int i;\n            ;\n            i = timeNow();\n            print \"The number of seconds since midnight is \" + int2Str(i);\n            pause;\n    }\n\n## today\nRetrieves the current date on the system.\n\n    date today()\n\n### Return value\n\nThe current date.\n\n### Example\n\n    static void todayExample(Args _arg)\n    {\n            date d;\n            ;\n            d = today();\n            print \"Today's date is \" + date2Str(d, 0, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## wkOfYr\nCalculates the week of the year that a date falls in, according to the ISO 8601 specification.\n\n    int wkOfYr(date _date)\n\n### Parameters\n\n| Parameter | Description                                     |\n|-----------|-------------------------------------------------|\n| \\_date    | The date to calculate the week of the year for. |\n\n### Return value\n\nThe sequence number of the week that the *\\_date* parameter occurs in.\n\n### Example\n\nThe following code example compares the **wkOfYr** function with the **Global::weekOfYear** method. The function and the method produce different results.\n\n    // X++ job, under AOT > Jobs.\n    static void WeekTests3Job(Args _args)\n    {\n    int weekNum, i;\n    date dateTest;\n    str sMessages[];\n    //---------------------------------------------\n    sMessages[1] = \"----- #1.  For Sunday, January 5, 2003 -----\";\n    dateTest = 512003; // DayMonthYear  format.\n    weekNum = wkOfYr(dateTest);\n    sMessages[2] = int2str(weekNum) + \" = wkOfYr funtion\";\n    weekNum = Global::weekOfYear(dateTest);\n    sMessages[3] = int2str(weekNum) + \" = Global::weekOfYear method\";\n    //---------------------------------------------\n    sMessages[4] = \" \";\n    sMessages[5] = \"----- #2.  For Wednesday, August 20, 2003 -----\";\n    dateTest = 2082003;\n    weekNum = wkOfYr(dateTest);\n    sMessages[6] = int2str(weekNum) + \" = wkOfYr funtion\";\n    weekNum = Global::weekOfYear(dateTest);\n    sMessages[7] = int2str(weekNum) + \" = Global::weekOfYear method\";\n    //---------------------------------------------\n    sMessages[8] = \" \";\n    sMessages[9] = \"----- #3.  For Sunday, December 28, 2003 -----\";\n    dateTest = 28122003;\n    weekNum = wkOfYr(dateTest);\n    sMessages[10] = int2str(weekNum) + \" = wkOfYr funtion\";\n    weekNum = Global::weekOfYear(dateTest);\n    sMessages[11] = int2str(weekNum) + \" = Global::weekOfYear method\";\n    for (i=1; i<= 11; i++)\n    {\n    Global::info(sMessages[i]);\n    }\n    }\n\nThe previous example sent the following information to the Infolog for display. The output shows that there are differences between **wkOfYr** and **Global::weekOfYear**. Message (01:59:13 pm) ----- \\#1. For Sunday, January 5, 2003 ----- 1 = wkOfYr funtion 2 = Global::weekOfYear method ----- \\#2. For Wednesday, August 20, 2003 ----- 34 = wkOfYr funtion 34 = Global::weekOfYear method ----- \\#3. For Sunday, December 28, 2003 ----- 52 = wkOfYr funtion 1 = Global::weekOfYear method\n\n## year\nRetrieves the year from a **date** value.\n\n    int year(date _date)\n\n### Parameters\n\n| Parameter | Description                       |\n|-----------|-----------------------------------|\n| \\_date    | The date to return the year from. |\n\n### Return value\n\nThe year of the specified date.\n\n### Remarks\n\n    year(0221998); //Returns the value 1998.\n\n"}