{"nodes":[{"pos":[32,58],"content":"U Classes | Microsoft Docs","needQuote":true,"needEscape":true,"nodes":[{"content":"U Classes | Microsoft Docs","pos":[0,26]}]},{"pos":[72,120],"content":"System API classes that start with the letter U.","needQuote":true,"needEscape":true,"nodes":[{"content":"System API classes that start with the letter U.","pos":[0,48]}]},{"pos":[534,543],"content":"U Classes","linkify":"U Classes","nodes":[{"content":"U Classes","pos":[0,9]}]},{"pos":[545,561],"content":"Class UnitofWork","linkify":"Class UnitofWork","nodes":[{"content":"Class UnitofWork","pos":[0,16]}]},{"pos":[621,628],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[634,642],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[648,655],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[659,665]},{"content":"Description","pos":[722,733]},{"content":"public boolean getByKey(Common record)","pos":[897,935]},{"content":"public void updateonSaveChanges(Common record)","pos":[1016,1062]},{"content":"public void saveChanges(<ph id=\"ph1\">\\[</ph>UserConnection user<ph id=\"ph2\">\\_</ph>connection<ph id=\"ph3\">\\]</ph>)","pos":[1135,1195],"source":"public void saveChanges(\\[UserConnection user\\_connection\\])"},{"content":"public void deleteonSaveChanges(Common record)","pos":[1254,1300]},{"content":"public void insertonSaveChanges(Common record)","pos":[1373,1419]},{"content":"public void finalize()","pos":[1492,1514]},{"content":"public void new()","pos":[1611,1628]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[1674,1725]},{"content":"public void clear()","pos":[1730,1749]},{"pos":[1852,1867],"content":"Method getByKey","linkify":"Method getByKey","nodes":[{"content":"Method getByKey","pos":[0,15]}]},{"pos":[1918,1928],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[1930,1936]},{"pos":[1945,1957],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1963,1989],"content":"Method updateonSaveChanges","linkify":"Method updateonSaveChanges","nodes":[{"content":"Method updateonSaveChanges","pos":[0,26]}]},{"pos":[2048,2058],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2060,2066]},{"pos":[2074,2092],"content":"Method saveChanges","linkify":"Method saveChanges","nodes":[{"content":"Method saveChanges","pos":[0,18]}]},{"pos":[2162,2172],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"user<ph id=\"ph1\">\\_</ph>connection","pos":[2174,2190],"source":"user\\_connection"},{"pos":[2198,2224],"content":"Method deleteonSaveChanges","linkify":"Method deleteonSaveChanges","nodes":[{"content":"Method deleteonSaveChanges","pos":[0,26]}]},{"pos":[2283,2293],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2295,2301]},{"pos":[2309,2335],"content":"Method insertonSaveChanges","linkify":"Method insertonSaveChanges","nodes":[{"content":"Method insertonSaveChanges","pos":[0,26]}]},{"pos":[2394,2404],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2406,2412]},{"pos":[2420,2435],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[2469,2479],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[2481,2532]},{"pos":[2561,2573],"content":"Method clear","linkify":"Method clear","nodes":[{"content":"Method clear","pos":[0,12]}]},{"pos":[2603,2623],"content":"Class UserConnection","linkify":"Class UserConnection","nodes":[{"content":"Class UserConnection","pos":[0,20]}]},{"content":"The UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.","pos":[2669,2808]},{"pos":[2814,2821],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"SQL statements are executed, and results are returned in the context of a UserConnection class.","pos":[2823,2918]},{"content":"The UserConnection class can be used to obtain a separate transaction scope.","pos":[2919,2995]},{"pos":[3001,3009],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[3584,3591],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[3595,3601]},{"content":"Description","pos":[3651,3662]},{"content":"public void new(<ph id=\"ph1\">\\[</ph>boolean generateNewTransactionID<ph id=\"ph2\">\\]</ph>)","pos":[3819,3872],"source":"public void new(\\[boolean generateNewTransactionID\\])"},{"content":"Initializes a new instance of the Connection class.","pos":[3875,3926]},{"pos":[3934,3944],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Connection class.","pos":[3946,3997]},{"pos":[4061,4071],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"generateNewTransactionID","pos":[4073,4097]},{"pos":[4104,4122],"content":"Class UserMenuList","linkify":"Class UserMenuList","nodes":[{"content":"Class UserMenuList","pos":[0,18]}]},{"content":"The UserMenuList class enables you to create, read, update, and delete X++ code and metadata.","pos":[4164,4257]},{"pos":[4263,4270],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4276,4284],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[4290,4297],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[4301,4307]},{"content":"Description","pos":[4340,4351]},{"content":"public void createMenu(<ph id=\"ph1\">\\[</ph>str name<ph id=\"ph2\">\\]</ph>)","pos":[4411,4447],"source":"public void createMenu(\\[str name\\])"},{"pos":[4469,4486],"content":"Method createMenu","linkify":"Method createMenu","nodes":[{"content":"Method createMenu","pos":[0,17]}]},{"pos":[4533,4543],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[4545,4549]},{"pos":[4556,4571],"content":"Class UserSetup","linkify":"Class UserSetup","nodes":[{"content":"Class UserSetup","pos":[0,15]}]},{"content":"The UserSetup class provides an interface for setting user parameters.","pos":[4610,4680]},{"pos":[4686,4693],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class is used mainly in the SysUserSetup form.","pos":[4695,4746]},{"content":"This class lets you create, read, update, and delete X++ code and metadata.","pos":[4747,4822]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[4823,4933]},{"pos":[4939,4947],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[4953,4960],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[4964,4970]},{"content":"Description","pos":[5006,5017]},{"content":"public boolean xRef(<ph id=\"ph1\">\\[</ph>boolean enable<ph id=\"ph2\">\\]</ph>)","pos":[5080,5119],"source":"public boolean xRef(\\[boolean enable\\])"},{"content":"public void setUserSetup(Common cursor)","pos":[5138,5177]},{"content":"public void setDefaults(Common cursor)","pos":[5196,5234]},{"pos":[5257,5268],"content":"Method xRef","linkify":"Method xRef","nodes":[{"content":"Method xRef","pos":[0,11]}]},{"pos":[5318,5328],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"enable","pos":[5330,5336]},{"pos":[5345,5357],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5363,5382],"content":"Method setUserSetup","linkify":"Method setUserSetup","nodes":[{"content":"Method setUserSetup","pos":[0,19]}]},{"pos":[5434,5444],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5446,5452]},{"pos":[5460,5478],"content":"Method setDefaults","linkify":"Method setDefaults","nodes":[{"content":"Method setDefaults","pos":[0,18]}]},{"pos":[5529,5539],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5541,5547]},{"pos":[5554,5568],"content":"Class UtilFile","linkify":"Class UtilFile","nodes":[{"content":"Class UtilFile","pos":[0,14]}]},{"pos":[5608,5615],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5621,5629],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5635,5642],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5646,5652]},{"content":"Description","pos":[5708,5719]},{"content":"public boolean aodFileExist(UtilEntryLevel layer)","pos":[5908,5957]},{"content":"public int importAODFile(UtilEntryLevel layer, int modelId)","pos":[6039,6098]},{"content":"public str layers()","pos":[6170,6189]},{"content":"public boolean needReindex()","pos":[6301,6329]},{"content":"public void check(str layer, str action)","pos":[6432,6472]},{"content":"public void new(str fileType)","pos":[6563,6592]},{"content":"Initializes a new instance of the Object class.","pos":[6625,6672]},{"content":"public void reindex()","pos":[6694,6715]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[6756,6820]},{"content":"public void flushCache()","pos":[6825,6849]},{"pos":[6959,6978],"content":"Method aodFileExist","linkify":"Method aodFileExist","nodes":[{"content":"Method aodFileExist","pos":[0,19]}]},{"pos":[7040,7050],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7052,7057]},{"pos":[7066,7078],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7084,7104],"content":"Method importAODFile","linkify":"Method importAODFile","nodes":[{"content":"Method importAODFile","pos":[0,20]}]},{"pos":[7176,7186],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7188,7193]},{"content":"modelId","pos":[7207,7214]},{"pos":[7223,7235],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7241,7254],"content":"Method layers","linkify":"Method layers","nodes":[{"content":"Method layers","pos":[0,13]}]},{"pos":[7286,7298],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7304,7322],"content":"Method needReindex","linkify":"Method needReindex","nodes":[{"content":"Method needReindex","pos":[0,18]}]},{"pos":[7363,7375],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7381,7393],"content":"Method check","linkify":"Method check","nodes":[{"content":"Method check","pos":[0,12]}]},{"pos":[7446,7456],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7458,7463]},{"content":"action","pos":[7477,7483]},{"pos":[7491,7501],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[7503,7550]},{"pos":[7592,7602],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileType","pos":[7604,7612]},{"pos":[7620,7634],"content":"Method reindex","linkify":"Method reindex","nodes":[{"content":"Method reindex","pos":[0,14]}]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[7636,7700]},{"pos":[7734,7741],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before you call this API.","pos":[7743,7852]},{"pos":[7859,7867],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example calls the UtilFile.reindex method.","pos":[7869,7925]},{"content":"It checks whether the user has the required security key before you perform a modification.","pos":[7926,8017]},{"pos":[8205,8222],"content":"Method flushCache","linkify":"Method flushCache","nodes":[{"content":"Method flushCache","pos":[0,17]}]}],"content":"---\n# required metadata\n\ntitle: U Classes | Microsoft Docs\ndescription: System API classes that start with the letter U.\nauthor: annbe\nmanager: AnnBe\nms.date: 2016-02-23 23:49:03\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# keywords: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \n# ms.reviewer: \nms.suite: Released- Dynamics AX 7.0.0\n# ms.tgt_pltfrm: \nms.custom: 51691\nms.assetid: c3e18556-a2ec-460b-add4-81726d07abc1\n# ms.region: \n# ms.industry: \nms.author: RobinARH\n\n---\n\n# U Classes\n\nClass UnitofWork\n----------------\n\n    class UnitofWork extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                       | Description                                         |\n|--------------------------------------------------------------|-----------------------------------------------------|\n| public boolean getByKey(Common record)                       |                                                     |\n| public void updateonSaveChanges(Common record)               |                                                     |\n| public void saveChanges(\\[UserConnection user\\_connection\\]) |                                                     |\n| public void deleteonSaveChanges(Common record)               |                                                     |\n| public void insertonSaveChanges(Common record)               |                                                     |\n| public void finalize()                                       |                                                     |\n| public void new()                                            | Initializes a new instance of the UnitofWork class. |\n| public void clear()                                          |                                                     |\n\n### Method getByKey\n\n    public boolean getByKey(Common record)\n\n#### Parameters\n\nrecord  \n\n#### Return Value\n\n### Method updateonSaveChanges\n\n    public void updateonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method saveChanges\n\n    public void saveChanges([UserConnection user_connection])\n\n#### Parameters\n\nuser\\_connection  \n\n### Method deleteonSaveChanges\n\n    public void deleteonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method insertonSaveChanges\n\n    public void insertonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the UnitofWork class.\n\n    public void new()\n\n### Method clear\n\n    public void clear()\n\n## Class UserConnection\n    class UserConnection extends Connection\n\nThe UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.\n\n### Remarks\n\nSQL statements are executed, and results are returned in the context of a UserConnection class. The UserConnection class can be used to obtain a separate transaction scope.\n\n### Examples\n\n    static void example()  \n    { \n        UserConnection Con; \n        Statement Stmt; \n        Str sql; \n        ResultSet R; \n        SqlStatementExecutePermission perm; \n        Con = new UserConnection(); \n        sql = 'SELECT VALUE FROM SQLSYSTEMVARIABLES'; \n        Stmt = Con.createStatement(); \n        perm = new SqlStatementExecutePermission(sql); \n        // Check for permission to use the statement. \n        perm.assert(); \n        R = Stmt.executeQuery(sql); \n        while ( R.next() ) \n        { \n            print R.getString(1); \n        } \n    }\n\n### Methods\n\n| Method                                                | Description                                         |\n|-------------------------------------------------------|-----------------------------------------------------|\n| public void new(\\[boolean generateNewTransactionID\\]) | Initializes a new instance of the Connection class. |\n\n### Method new\n\nInitializes a new instance of the Connection class.\n\n    public void new([boolean generateNewTransactionID])\n\n#### Parameters\n\ngenerateNewTransactionID  \n\n## Class UserMenuList\n    class UserMenuList extends TreeNode\n\nThe UserMenuList class enables you to create, read, update, and delete X++ code and metadata.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                               | Description |\n|--------------------------------------|-------------|\n| public void createMenu(\\[str name\\]) |             |\n\n### Method createMenu\n\n    public void createMenu([str name])\n\n#### Parameters\n\nname  \n\n## Class UserSetup\n    class UserSetup extends TreeNode\n\nThe UserSetup class provides an interface for setting user parameters.\n\n### Remarks\n\nThis class is used mainly in the SysUserSetup form. This class lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n### Examples\n\n### Methods\n\n| Method                                  | Description |\n|-----------------------------------------|-------------|\n| public boolean xRef(\\[boolean enable\\]) |             |\n| public void setUserSetup(Common cursor) |             |\n| public void setDefaults(Common cursor)  |             |\n\n### Method xRef\n\n    public boolean xRef([boolean enable])\n\n#### Parameters\n\nenable  \n\n#### Return Value\n\n### Method setUserSetup\n\n    public void setUserSetup(Common cursor)\n\n#### Parameters\n\ncursor  \n\n### Method setDefaults\n\n    public void setDefaults(Common cursor)\n\n#### Parameters\n\ncursor  \n\n## Class UtilFile\n    class UtilFile extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                      | Description                                                      |\n|-------------------------------------------------------------|------------------------------------------------------------------|\n| public boolean aodFileExist(UtilEntryLevel layer)           |                                                                  |\n| public int importAODFile(UtilEntryLevel layer, int modelId) |                                                                  |\n| public str layers()                                         |                                                                  |\n| public boolean needReindex()                                |                                                                  |\n| public void check(str layer, str action)                    |                                                                  |\n| public void new(str fileType)                               | Initializes a new instance of the Object class.                  |\n| public void reindex()                                       | Lets you create, read, update, and delete X++ code and metadata. |\n| public void flushCache()                                    |                                                                  |\n\n### Method aodFileExist\n\n    public boolean aodFileExist(UtilEntryLevel layer)\n\n#### Parameters\n\nlayer  \n\n#### Return Value\n\n### Method importAODFile\n\n    public int importAODFile(UtilEntryLevel layer, int modelId)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\nmodelId  \n\n#### Return Value\n\n### Method layers\n\n    public str layers()\n\n#### Return Value\n\n### Method needReindex\n\n    public boolean needReindex()\n\n#### Return Value\n\n### Method check\n\n    public void check(str layer, str action)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\naction  \n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(str fileType)\n\n#### Parameters\n\nfileType  \n\n### Method reindex\n\nLets you create, read, update, and delete X++ code and metadata.\n\n    public void reindex()\n\n#### Remarks\n\nMake sure that the user has access to the development security key (SysDevelopment) before you call this API.\n\n#### Examples\n\nThe following example calls the UtilFile.reindex method. It checks whether the user has the required security key before you perform a modification.\n\n    server static public void Main(Args _args) \n    { \n        UtilFile u; \n        u = new UtilFile(\"util\"); \n        if (u) \n        { \n            u.reindex(); \n        } \n    }\n\n### Method flushCache\n\n    public void flushCache()\n\n"}