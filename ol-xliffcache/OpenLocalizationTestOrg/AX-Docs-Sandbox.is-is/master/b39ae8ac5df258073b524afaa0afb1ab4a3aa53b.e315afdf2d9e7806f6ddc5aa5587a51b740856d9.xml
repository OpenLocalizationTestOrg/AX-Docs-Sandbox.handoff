{"nodes":[{"pos":[32,41],"content":"V Classes","needQuote":true,"needEscape":true,"nodes":[{"content":"V Classes","pos":[0,9]}]},{"pos":[55,103],"content":"System API classes that start with the letter V.","needQuote":true,"needEscape":true,"nodes":[{"content":"System API classes that start with the letter V.","pos":[0,48]}]},{"pos":[616,625],"content":"V Classes","linkify":"V Classes","nodes":[{"content":"V Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter V.","pos":[627,675]},{"pos":[677,700],"content":"Class ValidateEventArgs","linkify":"Class ValidateEventArgs","nodes":[{"content":"Class ValidateEventArgs","pos":[0,23]}]},{"pos":[781,788],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[794,802],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[808,815],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[819,825]},{"content":"Description","pos":[875,886]},{"content":"public boolean parmValidateResult(<ph id=\"ph1\">\\[</ph>boolean result<ph id=\"ph2\">\\]</ph>)","pos":[963,1016],"source":"public boolean parmValidateResult(\\[boolean result\\])"},{"content":"public void new(boolean result)","pos":[1035,1066]},{"pos":[1110,1135],"content":"Method parmValidateResult","linkify":"Method parmValidateResult","nodes":[{"content":"Method parmValidateResult","pos":[0,25]}]},{"pos":[1199,1209],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"result","pos":[1211,1217]},{"pos":[1226,1238],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1244,1254],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[1298,1308],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"result","pos":[1310,1316]},{"pos":[1323,1351],"content":"Class ValidateFieldEventArgs","linkify":"Class ValidateFieldEventArgs","nodes":[{"content":"Class ValidateFieldEventArgs","pos":[0,28]}]},{"pos":[1416,1423],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1429,1437],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[1443,1450],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[1454,1460]},{"content":"Description","pos":[1501,1512]},{"content":"public int parmFieldId()","pos":[1580,1604]},{"content":"public void new(int fieldId, boolean result)","pos":[1643,1687]},{"pos":[1709,1727],"content":"Method parmFieldId","linkify":"Method parmFieldId","nodes":[{"content":"Method parmFieldId","pos":[0,18]}]},{"pos":[1764,1776],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1782,1792],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[1849,1859],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[1861,1868]},{"content":"result","pos":[1882,1888]},{"pos":[1895,1928],"content":"Class ValidateFieldValueEventArgs","linkify":"Class ValidateFieldValueEventArgs","nodes":[{"content":"Class ValidateFieldValueEventArgs","pos":[0,33]}]},{"pos":[1998,2005],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2011,2019],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[2025,2032],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[2036,2042]},{"content":"Description","pos":[2101,2112]},{"content":"public str parmFieldName()","pos":[2198,2224]},{"content":"public int parmArrayIndex()","pos":[2279,2306]},{"content":"public void new(str fieldName, int arrayIndex, boolean result)","pos":[2360,2422]},{"pos":[2444,2464],"content":"Method parmFieldName","linkify":"Method parmFieldName","nodes":[{"content":"Method parmFieldName","pos":[0,20]}]},{"pos":[2503,2515],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2521,2542],"content":"Method parmArrayIndex","linkify":"Method parmArrayIndex","nodes":[{"content":"Method parmArrayIndex","pos":[0,21]}]},{"pos":[2582,2594],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2600,2610],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[2685,2695],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldName","pos":[2697,2706]},{"content":"arrayIndex","pos":[2720,2730]},{"content":"result","pos":[2744,2750]},{"pos":[2757,2784],"content":"Class VirtualChannelManager","linkify":"Class VirtualChannelManager","nodes":[{"content":"Class VirtualChannelManager","pos":[0,27]}]},{"pos":[2837,2844],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2850,2858],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[2864,2871],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[2875,2881]},{"content":"Description","pos":[2924,2935]},{"content":"public void finalize()","pos":[3107,3129]},{"content":"public void new()","pos":[3223,3240]},{"content":"Initializes a new instance of the VirtualChannelManager class.","pos":[3272,3334]},{"content":"public void sendData(int listenerId, str data)","pos":[3339,3385]},{"pos":[3458,3473],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[3507,3517],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the VirtualChannelManager class.","pos":[3519,3581]},{"pos":[3610,3625],"content":"Method sendData","linkify":"Method sendData","nodes":[{"content":"Method sendData","pos":[0,15]}]},{"pos":[3684,3694],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"listenerId","pos":[3696,3706]},{"content":"data","pos":[3720,3724]},{"pos":[3731,3747],"content":"Class VSItemNode","linkify":"Class VSItemNode","nodes":[{"content":"Class VSItemNode","pos":[0,16]}]},{"content":"The VSItemNode class is a base class for Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).","pos":[3787,3941]},{"pos":[3947,3954],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3960,3968],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[3974,3981],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[3985,3991]},{"content":"Description","pos":[4054,4065]},{"content":"public str AOTgetSource()","pos":[4237,4262]},{"content":"Returns the source code of this node.","pos":[4306,4343]},{"content":"public BinData getFileData()","pos":[4363,4391]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[4489,4555]},{"content":"Notifies listeners that a file has been deleted.","pos":[4558,4606]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[4615,4668]},{"content":"Notifies listeners that a file has been updated.","pos":[4684,4732]},{"content":"public void setFileData(BinData data)","pos":[4741,4778]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[4867,4925],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[4936,4970]},{"content":"public void getFile(str fileName)","pos":[4993,5026]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[5119,5172]},{"content":"Notifies listeners that a new file has been created.","pos":[5188,5240]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[5245,5311]},{"content":"Notifies listeners that a file has been renamed.","pos":[5314,5362]},{"content":"public void setFile(str fileName)","pos":[5371,5404]},{"pos":[5500,5519],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[5521,5558]},{"pos":[5596,5608],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains the source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[5610,5745]},{"pos":[5752,5759],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[5761,5820]},{"pos":[5826,5844],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[5885,5897],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5903,5927],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"content":"Notifies listeners that a file has been deleted.","pos":[5929,5977]},{"pos":[6054,6064],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[6066,6070]},{"content":"The AOT path of the file.","pos":[6073,6098]},{"content":"aotPath","pos":[6110,6117]},{"content":"The AOT path of the file.","pos":[6120,6145]},{"pos":[6151,6175],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"content":"Notifies listeners that a file has been updated.","pos":[6177,6225]},{"pos":[6289,6299],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[6301,6305]},{"content":"The node that has been updated.","pos":[6308,6339]},{"pos":[6345,6363],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[6413,6423],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[6425,6429]},{"pos":[6437,6456],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[6458,6492]},{"pos":[6561,6571],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[6573,6579]},{"content":"The value that specifies whether the method is static; optional.","pos":[6582,6646]},{"content":"isStatic","pos":[6658,6666]},{"content":"The value that specifies whether the method is static; optional.","pos":[6669,6733]},{"pos":[6740,6747],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[6749,6806]},{"pos":[6812,6826],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[6872,6882],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[6884,6892]},{"pos":[6900,6924],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"content":"Notifies listeners that a new file has been created.","pos":[6926,6978]},{"pos":[7042,7052],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[7054,7058]},{"content":"The node that has been created.","pos":[7061,7092]},{"pos":[7098,7122],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"content":"Notifies listeners that a file has been renamed.","pos":[7124,7172]},{"pos":[7249,7259],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[7261,7265]},{"content":"The old name of the file.","pos":[7268,7293]},{"content":"oldName","pos":[7305,7312]},{"content":"The old name of the file.","pos":[7315,7340]},{"pos":[7346,7360],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[7406,7416],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[7418,7426]},{"pos":[7433,7456],"content":"Class VSProjectFileNode","linkify":"Class VSProjectFileNode","nodes":[{"content":"Class VSProjectFileNode","pos":[0,23]}]},{"content":"The VSProjectFileNode class represents files in the Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).","pos":[7505,7670]},{"pos":[7676,7683],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7689,7697],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[7703,7710],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[7714,7720]},{"content":"Description","pos":[7783,7794]},{"content":"public str AOTgetSource()","pos":[7936,7961]},{"content":"Returns the source code of this node.","pos":[8005,8042]},{"content":"public BinData getFileData()","pos":[8047,8075]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[8158,8211]},{"content":"public void setFileData(BinData data)","pos":[8269,8306]},{"content":"public void getFile(str fileName)","pos":[8380,8413]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[8491,8557]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[8602,8655]},{"content":"public void setFile(str fileName)","pos":[8713,8746]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[8824,8890]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[8935,8993],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[9004,9038]},{"pos":[9049,9068],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[9070,9107]},{"pos":[9145,9157],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[9159,9290]},{"pos":[9297,9304],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[9306,9365]},{"pos":[9371,9389],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[9430,9442],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9448,9472],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[9536,9546],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9548,9552]},{"pos":[9560,9578],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[9628,9638],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[9640,9644]},{"pos":[9652,9666],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[9712,9722],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[9724,9732]},{"pos":[9740,9764],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[9841,9851],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9853,9857]},{"content":"aotPath","pos":[9871,9878]},{"pos":[9886,9910],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[9974,9984],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9986,9990]},{"pos":[9998,10012],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[10058,10068],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[10070,10078]},{"pos":[10086,10110],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[10187,10197],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[10199,10203]},{"content":"oldName","pos":[10217,10224]},{"pos":[10232,10251],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[10253,10287]},{"pos":[10356,10366],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[10368,10374]},{"content":"The value that specifies whether the method is static; optional.","pos":[10377,10441]},{"content":"isStatic","pos":[10453,10461]},{"content":"The value that specifies whether the method is static; optional.","pos":[10464,10528]},{"pos":[10535,10542],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[10544,10601]},{"pos":[10606,10631],"content":"Class VSProjectFolderNode","linkify":"Class VSProjectFolderNode","nodes":[{"content":"Class VSProjectFolderNode","pos":[0,25]}]},{"content":"The VSProjectFolderNode class represents folders in the Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).","pos":[10680,10849]},{"pos":[10855,10862],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10868,10876],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[10882,10889],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[10893,10899]},{"content":"Description","pos":[10988,10999]},{"content":"public str AOTgetSource()","pos":[11301,11326]},{"content":"Returns the source code of this node.","pos":[11396,11433]},{"content":"public VSProjectFileNode createFileNode(str name)","pos":[11505,11554]},{"content":"Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.","pos":[11600,11702]},{"content":"public VSProjectFolderNode createFolderNode(str name)","pos":[11709,11762]},{"content":"Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.","pos":[11804,11908]},{"content":"public VSProjectLinkNode createLinkNode(str name, str aotPath, <ph id=\"ph1\">\\[</ph>boolean createLinkedNode<ph id=\"ph2\">\\]</ph>)","pos":[11913,12005],"source":"public VSProjectLinkNode createLinkNode(str name, str aotPath, \\[boolean createLinkedNode\\])"},{"content":"Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.","pos":[12008,12110]},{"content":"public BinData getFileData()","pos":[12117,12145]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[12321,12374]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[12525,12591]},{"content":"public void setFileData(BinData data)","pos":[12729,12766]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[12933,12991],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[13028,13062]},{"content":"public void getFile(str fileName)","pos":[13137,13170]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[13341,13394]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[13545,13611]},{"content":"public void setFile(str fileName)","pos":[13749,13782]},{"pos":[13956,13975],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[13977,14014]},{"pos":[14052,14064],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[14066,14197]},{"pos":[14204,14211],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[14213,14272]},{"pos":[14278,14299],"content":"Method createFileNode","linkify":"Method createFileNode","nodes":[{"content":"Method createFileNode","pos":[0,21]}]},{"content":"Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.","pos":[14301,14403]},{"pos":[14465,14475],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[14477,14481]},{"content":"The name of the file node.","pos":[14484,14510]},{"pos":[14517,14529],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectFileNode class.","pos":[14531,14579]},{"pos":[14585,14608],"content":"Method createFolderNode","linkify":"Method createFolderNode","nodes":[{"content":"Method createFolderNode","pos":[0,23]}]},{"content":"Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.","pos":[14610,14714]},{"pos":[14780,14790],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[14792,14796]},{"content":"The name of the folder node.","pos":[14799,14827]},{"pos":[14834,14846],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectFolderNode class.","pos":[14848,14898]},{"pos":[14904,14925],"content":"Method createLinkNode","linkify":"Method createLinkNode","nodes":[{"content":"Method createLinkNode","pos":[0,21]}]},{"content":"Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.","pos":[14927,15029]},{"pos":[15132,15142],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[15144,15148]},{"content":"aotPath","pos":[15162,15169]},{"content":"createLinkedNode","pos":[15183,15199]},{"pos":[15208,15220],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectLinkNode class.","pos":[15222,15270]},{"pos":[15276,15294],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[15335,15347],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15353,15377],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[15441,15451],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[15453,15457]},{"pos":[15465,15489],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[15566,15576],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[15578,15582]},{"content":"aotPath","pos":[15596,15603]},{"pos":[15611,15629],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[15679,15689],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[15691,15695]},{"pos":[15703,15722],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[15724,15758]},{"pos":[15827,15837],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[15839,15845]},{"content":"The value that specifies whether the method is static; optional.","pos":[15848,15912]},{"content":"isStatic","pos":[15924,15932]},{"content":"The value that specifies whether the method is static; optional.","pos":[15935,15999]},{"pos":[16006,16013],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[16015,16072]},{"pos":[16078,16092],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[16138,16148],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[16150,16158]},{"pos":[16166,16190],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[16254,16264],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[16266,16270]},{"pos":[16278,16302],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[16379,16389],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[16391,16395]},{"content":"oldName","pos":[16409,16416]},{"pos":[16424,16438],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[16484,16494],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[16496,16504]},{"pos":[16511,16534],"content":"Class VSProjectLinkNode","linkify":"Class VSProjectLinkNode","nodes":[{"content":"Class VSProjectLinkNode","pos":[0,23]}]},{"content":"The VSProjectLinkNode class represents links to other Microsoft Dynamics 365 for Operations Application Object Tree (AOT) nodes in the Microsoft Visual Studio project nodes in the AOT.","pos":[16583,16767]},{"pos":[16773,16780],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16786,16794],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[16800,16807],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[16811,16817]},{"content":"Description","pos":[16880,16891]},{"content":"public str AOTgetSource()","pos":[17033,17058]},{"content":"Returns the source code of this node.","pos":[17102,17139]},{"content":"public str getAOTPath()","pos":[17144,17167]},{"content":"public BinData getFileData()","pos":[17255,17283]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[17366,17419]},{"content":"public void setFile(str fileName)","pos":[17477,17510]},{"content":"public void setFileData(BinData data)","pos":[17588,17625]},{"content":"public void getFile(str fileName)","pos":[17699,17732]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[17810,17863]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[17921,17979],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[17990,18024]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[18032,18098]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[18143,18209]},{"pos":[18257,18276],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[18278,18315]},{"pos":[18353,18365],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[18367,18498]},{"pos":[18505,18512],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[18514,18573]},{"pos":[18579,18596],"content":"Method getAOTPath","linkify":"Method getAOTPath","nodes":[{"content":"Method getAOTPath","pos":[0,17]}]},{"pos":[18632,18644],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18650,18668],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[18709,18721],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18727,18751],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[18815,18825],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[18827,18831]},{"pos":[18839,18853],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[18899,18909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[18911,18919]},{"pos":[18927,18945],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[18995,19005],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[19007,19011]},{"pos":[19019,19033],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[19079,19089],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[19091,19099]},{"pos":[19107,19131],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[19195,19205],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19207,19211]},{"pos":[19219,19238],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[19240,19274]},{"pos":[19343,19353],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[19355,19361]},{"content":"The value that specifies whether the method is static; optional.","pos":[19364,19428]},{"content":"isStatic","pos":[19440,19448]},{"content":"The value that specifies whether the method is static; optional.","pos":[19451,19515]},{"pos":[19522,19529],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[19531,19588]},{"pos":[19594,19618],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[19695,19705],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19707,19711]},{"content":"oldName","pos":[19725,19732]},{"pos":[19740,19764],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[19841,19851],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19853,19857]},{"content":"aotPath","pos":[19871,19878]},{"pos":[19885,19904],"content":"Class VSProjectNode","linkify":"Class VSProjectNode","nodes":[{"content":"Class VSProjectNode","pos":[0,19]}]},{"content":"The VSProjectNode class represents projects in the Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).","pos":[19952,20116]},{"pos":[20122,20129],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20135,20143],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[20149,20156],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[20160,20166]},{"content":"Description","pos":[20232,20243]},{"content":"public container extract(<ph id=\"ph1\">\\[</ph>str path<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean extractReferenced<ph id=\"ph4\">\\]</ph>)","pos":[20508,20577],"source":"public container extract(\\[str path\\], \\[boolean extractReferenced\\])"},{"content":"Extracts the whole project to disk.","pos":[20580,20615]},{"content":"public VSProjectFolderNode getContentNode()","pos":[20682,20725]},{"content":"Gets the content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[20754,20844]},{"content":"public DeployTo getDeployTo()","pos":[20856,20885]},{"content":"Gets value of the deployTo property.","pos":[20928,20964]},{"content":"public VSProjectFolderNode getOutputNode()","pos":[21030,21072]},{"content":"Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[21102,21198]},{"content":"public VSProjectFileNode getPrimaryOutputNode()","pos":[21204,21251]},{"content":"Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[21276,21373]},{"content":"public str getPrimaryTargetFileName()","pos":[21378,21415]},{"content":"Gets the primary target file name of the Visual Studio project.","pos":[21450,21513]},{"content":"public Map getProxies()","pos":[21552,21575]},{"content":"Gets the proxies in this project.","pos":[21624,21657]},{"content":"public container getProxiesContainer()","pos":[21726,21764]},{"content":"Gets the proxies in this project.","pos":[21798,21831]},{"content":"public str getReferencedProjectsInAOT()","pos":[21900,21939]},{"content":"Gets the AOT paths of the projects that are referenced by this Visual Studio project.","pos":[21972,22057]},{"content":"public str referencedProjects(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[22074,22118],"source":"public str referencedProjects(\\[str value\\])"},{"content":"public void setPrimaryTargetFileName(str targetFileName)","pos":[22248,22304]},{"content":"Sets the primary target file name of the Visual Studio project.","pos":[22320,22383]},{"content":"public void extractToSpecificDir(str directory)","pos":[22422,22469]},{"content":"public void setDeployTo(DeployTo deployTo)","pos":[22596,22638]},{"content":"Sets the value of the deployTo property.","pos":[22668,22708]},{"pos":[22773,22787],"content":"Method extract","linkify":"Method extract","nodes":[{"content":"Method extract","pos":[0,14]}]},{"content":"Extracts the whole project to disk.","pos":[22789,22824]},{"pos":[22902,22912],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"path","pos":[22914,22918]},{"content":"A Boolean value that determines whether to extract the referenced projects.","pos":[22921,22996]},{"content":"extractReferenced","pos":[23008,23025]},{"content":"A Boolean value that determines whether to extract the referenced projects.","pos":[23028,23103]},{"pos":[23110,23122],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of paths where the project was extracted.","pos":[23124,23172]},{"pos":[23178,23199],"content":"Method getContentNode","linkify":"Method getContentNode","nodes":[{"content":"Method getContentNode","pos":[0,21]}]},{"content":"Gets the content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[23201,23291]},{"pos":[23347,23359],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[23361,23446]},{"pos":[23452,23470],"content":"Method getDeployTo","linkify":"Method getDeployTo","nodes":[{"content":"Method getDeployTo","pos":[0,18]}]},{"content":"Gets value of the deployTo property.","pos":[23472,23508]},{"pos":[23550,23562],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The deployTo property value.","pos":[23564,23592]},{"pos":[23598,23618],"content":"Method getOutputNode","linkify":"Method getOutputNode","nodes":[{"content":"Method getOutputNode","pos":[0,20]}]},{"content":"Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[23620,23716]},{"pos":[23771,23783],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[23785,23876]},{"pos":[23882,23909],"content":"Method getPrimaryOutputNode","linkify":"Method getPrimaryOutputNode","nodes":[{"content":"Method getPrimaryOutputNode","pos":[0,27]}]},{"content":"Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[23911,24008]},{"pos":[24068,24080],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[24082,24172]},{"pos":[24178,24209],"content":"Method getPrimaryTargetFileName","linkify":"Method getPrimaryTargetFileName","nodes":[{"content":"Method getPrimaryTargetFileName","pos":[0,31]}]},{"content":"Gets the primary target file name of the Visual Studio project.","pos":[24211,24274]},{"pos":[24324,24336],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The primary target file name of the Visual Studio project.","pos":[24338,24396]},{"pos":[24402,24419],"content":"Method getProxies","linkify":"Method getProxies","nodes":[{"content":"Method getProxies","pos":[0,17]}]},{"content":"Gets the proxies in this project.","pos":[24421,24454]},{"pos":[24490,24502],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A map that contains the Class, Enum, and Table keys.","pos":[24504,24556]},{"content":"Each key contains a list of proxies.","pos":[24557,24593]},{"pos":[24599,24625],"content":"Method getProxiesContainer","linkify":"Method getProxiesContainer","nodes":[{"content":"Method getProxiesContainer","pos":[0,26]}]},{"content":"Gets the proxies in this project.","pos":[24627,24660]},{"pos":[24711,24723],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that holds the packed representation of a map that contains the Class, Enum, and Table keys.","pos":[24725,24829]},{"content":"Each key contains a list of proxies.","pos":[24830,24866]},{"pos":[24872,24905],"content":"Method getReferencedProjectsInAOT","linkify":"Method getReferencedProjectsInAOT","nodes":[{"content":"Method getReferencedProjectsInAOT","pos":[0,33]}]},{"content":"Gets the AOT paths of the projects that are referenced by this Visual Studio project.","pos":[24907,24992]},{"pos":[25044,25056],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of AOT paths of the projects that are referenced by this Visual Studio project.","pos":[25058,25144]},{"pos":[25150,25175],"content":"Method referencedProjects","linkify":"Method referencedProjects","nodes":[{"content":"Method referencedProjects","pos":[0,25]}]},{"pos":[25230,25240],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[25242,25247]},{"pos":[25256,25268],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25274,25305],"content":"Method setPrimaryTargetFileName","linkify":"Method setPrimaryTargetFileName","nodes":[{"content":"Method setPrimaryTargetFileName","pos":[0,31]}]},{"content":"Sets the primary target file name of the Visual Studio project.","pos":[25307,25370]},{"pos":[25439,25449],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"targetFileName","pos":[25451,25465]},{"content":"The primary target file name of the Visual Studio project.","pos":[25468,25526]},{"pos":[25532,25559],"content":"Method extractToSpecificDir","linkify":"Method extractToSpecificDir","nodes":[{"content":"Method extractToSpecificDir","pos":[0,27]}]},{"pos":[25619,25629],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"directory","pos":[25631,25640]},{"pos":[25648,25666],"content":"Method setDeployTo","linkify":"Method setDeployTo","nodes":[{"content":"Method setDeployTo","pos":[0,18]}]},{"content":"Sets the value of the deployTo property.","pos":[25668,25708]},{"pos":[25763,25773],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"deployTo","pos":[25775,25783]},{"content":"The deployTo property value.","pos":[25786,25814]},{"pos":[25819,25839],"content":"Class VSProjectsNode","linkify":"Class VSProjectsNode","nodes":[{"content":"Class VSProjectsNode","pos":[0,20]}]},{"content":"The VSProjectNode class is the root of the Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).","pos":[25888,26044]},{"pos":[26050,26057],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26063,26071],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[26077,26084],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[26088,26094]},{"content":"Description","pos":[26188,26199]},{"content":"public TreeNode AOTfindChild(str name, <ph id=\"ph1\">\\[</ph>int nodeType<ph id=\"ph2\">\\]</ph>)","pos":[26478,26534],"source":"public TreeNode AOTfindChild(str name, \\[int nodeType\\])"},{"content":"Finds the specified child node of this node.","pos":[26578,26622]},{"content":"public VSProjectNode createProjectNode(str name, str projectTypesString, <ph id=\"ph1\">\\[</ph>boolean virtualNode<ph id=\"ph2\">\\]</ph>)","pos":[26673,26770],"source":"public VSProjectNode createProjectNode(str name, str projectTypesString, \\[boolean virtualNode\\])"},{"content":"Creates a new instance of the VSProjectNode class.","pos":[26773,26823]},{"content":"public container getProjectsDeployingTo(DeployTo deployTo)","pos":[26868,26926]},{"content":"Gets a list of VSProjectNode objects that have the specified deployTo property.","pos":[26968,27047]},{"content":"public container getProjectsModifiedAfter(DateTime timestamp)","pos":[27063,27124]},{"content":"Gets a list of VSProjectNode objects that were modified after the specified date and time.","pos":[27163,27253]},{"content":"public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)","pos":[27258,27326]},{"content":"public Object getVSProjectNodeObservable()","pos":[27453,27495]},{"content":"Gets the VSProjectNodeObservable object.","pos":[27553,27593]},{"content":"public void AOTrefresh()","pos":[27648,27672]},{"content":"Updates the node with the latest changes to the .aod file.","pos":[27748,27806]},{"pos":[27846,27865],"content":"Method AOTfindChild","linkify":"Method AOTfindChild","nodes":[{"content":"Method AOTfindChild","pos":[0,19]}]},{"content":"Finds the specified child node of this node.","pos":[27867,27911]},{"pos":[27978,27988],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[27990,27994]},{"content":"nodeType","pos":[28008,28016]},{"pos":[28025,28037],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The specified tree node.","pos":[28039,28063]},{"pos":[28069,28093],"content":"Method createProjectNode","linkify":"Method createProjectNode","nodes":[{"content":"Method createProjectNode","pos":[0,24]}]},{"content":"Creates a new instance of the VSProjectNode class.","pos":[28095,28145]},{"pos":[28253,28263],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[28265,28269]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28272,28346]},{"content":"In this case, the node will not be persisted in the Microsoft Dynamics 365 for Operations Store.","pos":[28347,28443]},{"content":"projectTypesString","pos":[28455,28473]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28476,28550]},{"content":"In this case, the node will not be persisted in the Microsoft Dynamics 365 for Operations Store.","pos":[28551,28647]},{"content":"virtualNode","pos":[28659,28670]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28673,28747]},{"content":"In this case, the node will not be persisted in the Microsoft Dynamics 365 for Operations Store.","pos":[28748,28844]},{"pos":[28851,28863],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The VSProjectNode object that is created.","pos":[28865,28906]},{"pos":[28912,28941],"content":"Method getProjectsDeployingTo","linkify":"Method getProjectsDeployingTo","nodes":[{"content":"Method getProjectsDeployingTo","pos":[0,29]}]},{"content":"Gets a list of VSProjectNode objects that have the specified deployTo property.","pos":[28943,29022]},{"pos":[29093,29103],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"deployTo","pos":[29105,29113]},{"content":"The value of the deployTo property.","pos":[29116,29151]},{"pos":[29158,29170],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of VSProjectNode objects.","pos":[29172,29204]},{"pos":[29210,29241],"content":"Method getProjectsModifiedAfter","linkify":"Method getProjectsModifiedAfter","nodes":[{"content":"Method getProjectsModifiedAfter","pos":[0,31]}]},{"content":"Gets a list of VSProjectNode objects that were modified after the specified date and time.","pos":[29243,29333]},{"pos":[29407,29417],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"timestamp","pos":[29419,29428]},{"content":"The date and time as a DB<ph id=\"ph1\">\\_</ph>DATETIME<ph id=\"ph2\">\\_</ph>TYPE value.","pos":[29431,29479],"source":"The date and time as a DB\\_DATETIME\\_TYPE value."},{"pos":[29486,29498],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of VSProjectNode objects.","pos":[29500,29532]},{"pos":[29538,29564],"content":"Method getTypeNodeFromGuid","linkify":"Method getTypeNodeFromGuid","nodes":[{"content":"Method getTypeNodeFromGuid","pos":[0,26]}]},{"pos":[29645,29655],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"projectTypesString","pos":[29657,29675]},{"pos":[29684,29696],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29702,29735],"content":"Method getVSProjectNodeObservable","linkify":"Method getVSProjectNodeObservable","nodes":[{"content":"Method getVSProjectNodeObservable","pos":[0,33]}]},{"content":"Gets the VSProjectNodeObservable object.","pos":[29737,29777]},{"pos":[29832,29844],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The VSProjectNodeObservable object.","pos":[29846,29881]},{"pos":[29888,29895],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Observers can register with this and get notified of CRUD operations on Visual Studio projects.","pos":[29897,29992]},{"pos":[29998,30015],"content":"Method AOTrefresh","linkify":"Method AOTrefresh","nodes":[{"content":"Method AOTrefresh","pos":[0,17]}]},{"content":"Updates the node with the latest changes to the .aod file.","pos":[30017,30075]},{"pos":[30110,30133],"content":"Class VSProjectTypeNode","linkify":"Class VSProjectTypeNode","nodes":[{"content":"Class VSProjectTypeNode","pos":[0,23]}]},{"content":"The VSProjectTypeNode class represents project types in the Visual Studio Project nodes in the AOT.","pos":[30180,30279]},{"pos":[30285,30292],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30298,30306],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[30312,30319],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[30323,30329]},{"content":"Description","pos":[30332,30343]},{"pos":[30375,30384],"content":"Class VSS","linkify":"Class VSS","nodes":[{"content":"Class VSS","pos":[0,9]}]},{"pos":[30419,30426],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30432,30440],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[30446,30453],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[30457,30463]},{"content":"Description","pos":[30569,30580]},{"content":"public boolean connect()","pos":[30773,30797]},{"content":"public boolean connected()","pos":[30931,30957]},{"content":"public boolean disconnect()","pos":[31089,31116]},{"content":"public container getCheckedoutFiles()","pos":[31247,31284]},{"content":"public container getConnectionInfo()","pos":[31405,31441]},{"content":"public VSSItem getVSSItem(str vssItemPath, str localFilePath, <ph id=\"ph1\">\\[</ph>boolean completePath<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int version<ph id=\"ph4\">\\]</ph>)","pos":[31563,31667],"source":"public VSSItem getVSSItem(str vssItemPath, str localFilePath, \\[boolean completePath\\], \\[int version\\])"},{"content":"public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)","pos":[31721,31815]},{"content":"public VSSItem newSubProject(str name, str localPath)","pos":[31879,31932]},{"content":"public Map synchronizeProjects(<ph id=\"ph1\">\\[</ph>Set projects<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean force<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>boolean delLocalFiles<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str label<ph id=\"ph8\">\\]</ph>)","pos":[32037,32146],"source":"public Map synchronizeProjects(\\[Set projects\\], \\[boolean force\\], \\[boolean delLocalFiles\\], \\[str label\\])"},{"content":"public void new()","pos":[32195,32212]},{"content":"Initializes an instance of the VSS class.","pos":[32307,32348]},{"pos":[32356,32370],"content":"Method connect","linkify":"Method connect","nodes":[{"content":"Method connect","pos":[0,14]}]},{"pos":[32407,32419],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32425,32441],"content":"Method connected","linkify":"Method connected","nodes":[{"content":"Method connected","pos":[0,16]}]},{"pos":[32480,32492],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32498,32515],"content":"Method disconnect","linkify":"Method disconnect","nodes":[{"content":"Method disconnect","pos":[0,17]}]},{"pos":[32555,32567],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32573,32598],"content":"Method getCheckedoutFiles","linkify":"Method getCheckedoutFiles","nodes":[{"content":"Method getCheckedoutFiles","pos":[0,25]}]},{"pos":[32648,32660],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32666,32690],"content":"Method getConnectionInfo","linkify":"Method getConnectionInfo","nodes":[{"content":"Method getConnectionInfo","pos":[0,24]}]},{"pos":[32739,32751],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32757,32774],"content":"Method getVSSItem","linkify":"Method getVSSItem","nodes":[{"content":"Method getVSSItem","pos":[0,17]}]},{"pos":[32887,32897],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"vssItemPath","pos":[32899,32910]},{"content":"localFilePath","pos":[32924,32937]},{"content":"completePath","pos":[32951,32963]},{"content":"version","pos":[32977,32984]},{"pos":[32993,33005],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33011,33022],"content":"Method init","linkify":"Method init","nodes":[{"content":"Method init","pos":[0,11]}]},{"pos":[33129,33139],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"vssIni","pos":[33141,33147]},{"content":"vssPrjRoot","pos":[33161,33171]},{"content":"vssWorkingFolder","pos":[33185,33201]},{"content":"vssUser","pos":[33215,33222]},{"content":"vssPwd","pos":[33236,33242]},{"pos":[33251,33263],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33269,33289],"content":"Method newSubProject","linkify":"Method newSubProject","nodes":[{"content":"Method newSubProject","pos":[0,20]}]},{"pos":[33355,33365],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[33367,33371]},{"content":"localPath","pos":[33385,33394]},{"pos":[33403,33415],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33421,33447],"content":"Method synchronizeProjects","linkify":"Method synchronizeProjects","nodes":[{"content":"Method synchronizeProjects","pos":[0,26]}]},{"pos":[33561,33571],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"projects","pos":[33573,33581]},{"content":"force","pos":[33595,33600]},{"content":"delLocalFiles","pos":[33614,33627]},{"content":"label","pos":[33641,33646]},{"pos":[33655,33667],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33673,33683],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes an instance of the VSS class.","pos":[33685,33726]},{"pos":[33754,33767],"content":"Class VSSItem","linkify":"Class VSSItem","nodes":[{"content":"Class VSSItem","pos":[0,13]}]},{"pos":[33806,33813],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33819,33827],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[33833,33840],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[33844,33850]},{"content":"Description","pos":[33931,33942]},{"content":"public boolean add(<ph id=\"ph1\">\\[</ph>boolean keepCheckedout<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>str comment<ph id=\"ph4\">\\]</ph>)","pos":[34124,34187],"source":"public boolean add(\\[boolean keepCheckedout\\], \\[str comment\\])"},{"content":"public boolean checkin(<ph id=\"ph1\">\\[</ph>str comment<ph id=\"ph2\">\\]</ph>)","pos":[34264,34303],"source":"public boolean checkin(\\[str comment\\])"},{"content":"public boolean checkout(<ph id=\"ph1\">\\[</ph>boolean allowMultipleCheckout<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean replaceLocal<ph id=\"ph4\">\\]</ph>)","pos":[34404,34488],"source":"public boolean checkout(\\[boolean allowMultipleCheckout\\], \\[boolean replaceLocal\\])"},{"content":"public boolean delete()","pos":[34544,34567]},{"content":"public boolean destroy()","pos":[34684,34708]},{"content":"public Map get(<ph id=\"ph1\">\\[</ph>boolean force<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int version<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>str label<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str localFile<ph id=\"ph8\">\\]</ph>)","pos":[34824,34908],"source":"public Map get(\\[boolean force\\], \\[int version\\], \\[str label\\], \\[str localFile\\])"},{"content":"public str getActionText()","pos":[34964,34990]},{"content":"public container getCheckedOutTo()","pos":[35104,35138]},{"content":"public int getCheckoutVersion()","pos":[35244,35275]},{"content":"public container getHistory()","pos":[35384,35413]},{"content":"public ComInterface getIUnknown()","pos":[35524,35557]},{"content":"public int getVersionNo()","pos":[35664,35689]},{"content":"public str getVSSPath()","pos":[35804,35827]},{"content":"public boolean isCheckedOut()","pos":[35944,35973]},{"content":"public boolean isRenamed()","pos":[36084,36110]},{"content":"public str name(str newName)","pos":[36224,36252]},{"content":"public boolean rename(str newName)","pos":[36364,36398]},{"content":"public boolean undoCheckout()","pos":[36504,36533]},{"content":"private void new()","pos":[36644,36662]},{"content":"Initializes a new instance of the VSSItem class.","pos":[36731,36779]},{"pos":[36787,36797],"content":"Method add","linkify":"Method add","nodes":[{"content":"Method add","pos":[0,10]}]},{"pos":[36869,36879],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"keepCheckedout","pos":[36881,36895]},{"content":"comment","pos":[36909,36916]},{"pos":[36925,36937],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36943,36957],"content":"Method checkin","linkify":"Method checkin","nodes":[{"content":"Method checkin","pos":[0,14]}]},{"pos":[37007,37017],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"comment","pos":[37019,37026]},{"pos":[37035,37047],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37053,37068],"content":"Method checkout","linkify":"Method checkout","nodes":[{"content":"Method checkout","pos":[0,15]}]},{"pos":[37161,37171],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"allowMultipleCheckout","pos":[37173,37194]},{"content":"replaceLocal","pos":[37208,37220]},{"pos":[37229,37241],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37247,37260],"content":"Method delete","linkify":"Method delete","nodes":[{"content":"Method delete","pos":[0,13]}]},{"pos":[37296,37308],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37314,37328],"content":"Method destroy","linkify":"Method destroy","nodes":[{"content":"Method destroy","pos":[0,14]}]},{"pos":[37365,37377],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37383,37393],"content":"Method get","linkify":"Method get","nodes":[{"content":"Method get","pos":[0,10]}]},{"pos":[37482,37492],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"force","pos":[37494,37499]},{"content":"version","pos":[37513,37520]},{"content":"label","pos":[37534,37539]},{"content":"localFile","pos":[37553,37562]},{"pos":[37571,37583],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37589,37609],"content":"Method getActionText","linkify":"Method getActionText","nodes":[{"content":"Method getActionText","pos":[0,20]}]},{"pos":[37648,37660],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37666,37688],"content":"Method getCheckedOutTo","linkify":"Method getCheckedOutTo","nodes":[{"content":"Method getCheckedOutTo","pos":[0,22]}]},{"pos":[37735,37747],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37753,37778],"content":"Method getCheckoutVersion","linkify":"Method getCheckoutVersion","nodes":[{"content":"Method getCheckoutVersion","pos":[0,25]}]},{"pos":[37822,37834],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37840,37857],"content":"Method getHistory","linkify":"Method getHistory","nodes":[{"content":"Method getHistory","pos":[0,17]}]},{"pos":[37899,37911],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37917,37935],"content":"Method getIUnknown","linkify":"Method getIUnknown","nodes":[{"content":"Method getIUnknown","pos":[0,18]}]},{"pos":[37981,37993],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37999,38018],"content":"Method getVersionNo","linkify":"Method getVersionNo","nodes":[{"content":"Method getVersionNo","pos":[0,19]}]},{"pos":[38056,38068],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38074,38091],"content":"Method getVSSPath","linkify":"Method getVSSPath","nodes":[{"content":"Method getVSSPath","pos":[0,17]}]},{"pos":[38127,38139],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38145,38164],"content":"Method isCheckedOut","linkify":"Method isCheckedOut","nodes":[{"content":"Method isCheckedOut","pos":[0,19]}]},{"pos":[38206,38218],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38224,38240],"content":"Method isRenamed","linkify":"Method isRenamed","nodes":[{"content":"Method isRenamed","pos":[0,16]}]},{"pos":[38279,38291],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38297,38308],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"pos":[38349,38359],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newName","pos":[38361,38368]},{"pos":[38377,38389],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38395,38408],"content":"Method rename","linkify":"Method rename","nodes":[{"content":"Method rename","pos":[0,13]}]},{"pos":[38455,38465],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newName","pos":[38467,38474]},{"pos":[38483,38495],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38501,38520],"content":"Method undoCheckout","linkify":"Method undoCheckout","nodes":[{"content":"Method undoCheckout","pos":[0,19]}]},{"pos":[38562,38574],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38580,38590],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the VSSItem class.","pos":[38592,38640]}],"content":"---\n# required metadata\n\ntitle: V Classes\ndescription: System API classes that start with the letter V.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-26 02 - 11 - 31\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 55841\nms.assetid: fd3859a7-c0e5-41b3-9bd3-fc68099e727f\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# V Classes\n\nSystem API classes that start with the letter V.\n\nClass ValidateEventArgs\n-----------------------\n\n    class ValidateEventArgs extends DataEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                | Description |\n|-------------------------------------------------------|-------------|\n| public boolean parmValidateResult(\\[boolean result\\]) |             |\n| public void new(boolean result)                       |             |\n\n### Method parmValidateResult\n\n    public boolean parmValidateResult([boolean result])\n\n#### Parameters\n\nresult  \n\n#### Return Value\n\n### Method new\n\n    public void new(boolean result)\n\n#### Parameters\n\nresult  \n\n## Class ValidateFieldEventArgs\n    class ValidateFieldEventArgs extends ValidateEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                       | Description |\n|----------------------------------------------|-------------|\n| public int parmFieldId()                     |             |\n| public void new(int fieldId, boolean result) |             |\n\n### Method parmFieldId\n\n    public int parmFieldId()\n\n#### Return Value\n\n### Method new\n\n    public void new(int fieldId, boolean result)\n\n#### Parameters\n\nfieldId  \n\n<!-- -->\n\nresult  \n\n## Class ValidateFieldValueEventArgs\n    class ValidateFieldValueEventArgs extends ValidateEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                         | Description |\n|----------------------------------------------------------------|-------------|\n| public str parmFieldName()                                     |             |\n| public int parmArrayIndex()                                    |             |\n| public void new(str fieldName, int arrayIndex, boolean result) |             |\n\n### Method parmFieldName\n\n    public str parmFieldName()\n\n#### Return Value\n\n### Method parmArrayIndex\n\n    public int parmArrayIndex()\n\n#### Return Value\n\n### Method new\n\n    public void new(str fieldName, int arrayIndex, boolean result)\n\n#### Parameters\n\nfieldName  \n\n<!-- -->\n\narrayIndex  \n\n<!-- -->\n\nresult  \n\n## Class VirtualChannelManager\n    class VirtualChannelManager extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                         | Description                                                    |\n|------------------------------------------------|----------------------------------------------------------------|\n| public void finalize()                         |                                                                |\n| public void new()                              | Initializes a new instance of the VirtualChannelManager class. |\n| public void sendData(int listenerId, str data) |                                                                |\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the VirtualChannelManager class.\n\n    public void new()\n\n### Method sendData\n\n    public void sendData(int listenerId, str data)\n\n#### Parameters\n\nlistenerId  \n\n<!-- -->\n\ndata  \n\n## Class VSItemNode\n    class VSItemNode extends TreeNode\n\nThe VSItemNode class is a base class for Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                                          |\n|--------------------------------------------------------------------|------------------------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node.                |\n| public BinData getFileData()                                       |                                                      |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) | Notifies listeners that a file has been deleted.     |\n| ::public static void notifyFileUpdated(TreeNode node)              | Notifies listeners that a file has been updated.     |\n| public void setFileData(BinData data)                              |                                                      |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.                   |\n| public void getFile(str fileName)                                  |                                                      |\n| ::public static void notifyFileCreated(TreeNode node)              | Notifies listeners that a new file has been created. |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) | Notifies listeners that a file has been renamed.     |\n| public void setFile(str fileName)                                  |                                                      |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains the source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileDeleted\n\nNotifies listeners that a file has been deleted.\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \nThe AOT path of the file.\n\n<!-- -->\n\naotPath  \nThe AOT path of the file.\n\n### Method notifyFileUpdated\n\nNotifies listeners that a file has been updated.\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \nThe node that has been updated.\n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileCreated\n\nNotifies listeners that a new file has been created.\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \nThe node that has been created.\n\n### Method notifyFileRenamed\n\nNotifies listeners that a file has been renamed.\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \nThe old name of the file.\n\n<!-- -->\n\noldName  \nThe old name of the file.\n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n## Class VSProjectFileNode\n    class VSProjectFileNode extends VSItemNode\n\nThe VSProjectFileNode class represents files in the Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                           |\n|--------------------------------------------------------------------|---------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node. |\n| public BinData getFileData()                                       |                                       |\n| ::public static void notifyFileCreated(TreeNode node)              |                                       |\n| public void setFileData(BinData data)                              |                                       |\n| public void getFile(str fileName)                                  |                                       |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) |                                       |\n| ::public static void notifyFileUpdated(TreeNode node)              |                                       |\n| public void setFile(str fileName)                                  |                                       |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) |                                       |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.    |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n## Class VSProjectFolderNode\n    class VSProjectFolderNode extends TreeNode\n\nThe VSProjectFolderNode class represents folders in the Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                       | Description                                                                                              |\n|----------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|\n| public str AOTgetSource()                                                                    | Returns the source code of this node.                                                                    |\n| public VSProjectFileNode createFileNode(str name)                                            | Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.   |\n| public VSProjectFolderNode createFolderNode(str name)                                        | Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance. |\n| public VSProjectLinkNode createLinkNode(str name, str aotPath, \\[boolean createLinkedNode\\]) | Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.   |\n| public BinData getFileData()                                                                 |                                                                                                          |\n| ::public static void notifyFileUpdated(TreeNode node)                                        |                                                                                                          |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath)                           |                                                                                                          |\n| public void setFileData(BinData data)                                                        |                                                                                                          |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])                                   | Sets the source code of this node.                                                                       |\n| public void getFile(str fileName)                                                            |                                                                                                          |\n| ::public static void notifyFileCreated(TreeNode node)                                        |                                                                                                          |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName)                           |                                                                                                          |\n| public void setFile(str fileName)                                                            |                                                                                                          |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method createFileNode\n\nCreates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectFileNode createFileNode(str name)\n\n#### Parameters\n\nname  \nThe name of the file node.\n\n#### Return Value\n\nThe new instance of the VSProjectFileNode class.\n\n### Method createFolderNode\n\nCreates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectFolderNode createFolderNode(str name)\n\n#### Parameters\n\nname  \nThe name of the folder node.\n\n#### Return Value\n\nThe new instance of the VSProjectFolderNode class.\n\n### Method createLinkNode\n\nCreates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectLinkNode createLinkNode(str name, str aotPath, [boolean createLinkedNode])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\naotPath  \n\n<!-- -->\n\ncreateLinkedNode  \n\n#### Return Value\n\nThe new instance of the VSProjectLinkNode class.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n## Class VSProjectLinkNode\n    class VSProjectLinkNode extends VSItemNode\n\nThe VSProjectLinkNode class represents links to other Microsoft Dynamics 365 for Operations Application Object Tree (AOT) nodes in the Microsoft Visual Studio project nodes in the AOT.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                           |\n|--------------------------------------------------------------------|---------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node. |\n| public str getAOTPath()                                            |                                       |\n| public BinData getFileData()                                       |                                       |\n| ::public static void notifyFileCreated(TreeNode node)              |                                       |\n| public void setFile(str fileName)                                  |                                       |\n| public void setFileData(BinData data)                              |                                       |\n| public void getFile(str fileName)                                  |                                       |\n| ::public static void notifyFileUpdated(TreeNode node)              |                                       |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.    |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) |                                       |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) |                                       |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getAOTPath\n\n    public str getAOTPath()\n\n#### Return Value\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n## Class VSProjectNode\n    class VSProjectNode extends xResourceNode\n\nThe VSProjectNode class represents projects in the Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                | Description                                                                                       |\n|-----------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|\n| public container extract(\\[str path\\], \\[boolean extractReferenced\\]) | Extracts the whole project to disk.                                                               |\n| public VSProjectFolderNode getContentNode()                           | Gets the content VSProjectFolderNode object that contains the Visual Studio project files.        |\n| public DeployTo getDeployTo()                                         | Gets value of the deployTo property.                                                              |\n| public VSProjectFolderNode getOutputNode()                            | Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.  |\n| public VSProjectFileNode getPrimaryOutputNode()                       | Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project. |\n| public str getPrimaryTargetFileName()                                 | Gets the primary target file name of the Visual Studio project.                                   |\n| public Map getProxies()                                               | Gets the proxies in this project.                                                                 |\n| public container getProxiesContainer()                                | Gets the proxies in this project.                                                                 |\n| public str getReferencedProjectsInAOT()                               | Gets the AOT paths of the projects that are referenced by this Visual Studio project.             |\n| public str referencedProjects(\\[str value\\])                          |                                                                                                   |\n| public void setPrimaryTargetFileName(str targetFileName)              | Sets the primary target file name of the Visual Studio project.                                   |\n| public void extractToSpecificDir(str directory)                       |                                                                                                   |\n| public void setDeployTo(DeployTo deployTo)                            | Sets the value of the deployTo property.                                                          |\n\n### Method extract\n\nExtracts the whole project to disk.\n\n    public container extract([str path], [boolean extractReferenced])\n\n#### Parameters\n\npath  \nA Boolean value that determines whether to extract the referenced projects.\n\n<!-- -->\n\nextractReferenced  \nA Boolean value that determines whether to extract the referenced projects.\n\n#### Return Value\n\nA list of paths where the project was extracted.\n\n### Method getContentNode\n\nGets the content VSProjectFolderNode object that contains the Visual Studio project files.\n\n    public VSProjectFolderNode getContentNode()\n\n#### Return Value\n\nThe content VSProjectFolderNode object that contains the Visual Studio project files.\n\n### Method getDeployTo\n\nGets value of the deployTo property.\n\n    public DeployTo getDeployTo()\n\n#### Return Value\n\nThe deployTo property value.\n\n### Method getOutputNode\n\nGets the output VSProjectFolderNode object that contains the Visual Studio project output files.\n\n    public VSProjectFolderNode getOutputNode()\n\n#### Return Value\n\nThe output VSProjectFolderNode object that contains the Visual Studio project output files.\n\n### Method getPrimaryOutputNode\n\nGets the VSProjectFileNode object that represent the primary output of the Visual Studio project.\n\n    public VSProjectFileNode getPrimaryOutputNode()\n\n#### Return Value\n\nA VSProjectFileNode object that represent the primary output of the Visual Studio project.\n\n### Method getPrimaryTargetFileName\n\nGets the primary target file name of the Visual Studio project.\n\n    public str getPrimaryTargetFileName()\n\n#### Return Value\n\nThe primary target file name of the Visual Studio project.\n\n### Method getProxies\n\nGets the proxies in this project.\n\n    public Map getProxies()\n\n#### Return Value\n\nA map that contains the Class, Enum, and Table keys. Each key contains a list of proxies.\n\n### Method getProxiesContainer\n\nGets the proxies in this project.\n\n    public container getProxiesContainer()\n\n#### Return Value\n\nA container that holds the packed representation of a map that contains the Class, Enum, and Table keys. Each key contains a list of proxies.\n\n### Method getReferencedProjectsInAOT\n\nGets the AOT paths of the projects that are referenced by this Visual Studio project.\n\n    public str getReferencedProjectsInAOT()\n\n#### Return Value\n\nA list of AOT paths of the projects that are referenced by this Visual Studio project.\n\n### Method referencedProjects\n\n    public str referencedProjects([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method setPrimaryTargetFileName\n\nSets the primary target file name of the Visual Studio project.\n\n    public void setPrimaryTargetFileName(str targetFileName)\n\n#### Parameters\n\ntargetFileName  \nThe primary target file name of the Visual Studio project.\n\n### Method extractToSpecificDir\n\n    public void extractToSpecificDir(str directory)\n\n#### Parameters\n\ndirectory  \n\n### Method setDeployTo\n\nSets the value of the deployTo property.\n\n    public void setDeployTo(DeployTo deployTo)\n\n#### Parameters\n\ndeployTo  \nThe deployTo property value.\n\n## Class VSProjectsNode\n    class VSProjectsNode extends xResourceNode\n\nThe VSProjectNode class is the root of the Microsoft Visual Studio project nodes in the Microsoft Dynamics 365 for Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                            | Description                                                                                |\n|---------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|\n| public TreeNode AOTfindChild(str name, \\[int nodeType\\])                                          | Finds the specified child node of this node.                                               |\n| public VSProjectNode createProjectNode(str name, str projectTypesString, \\[boolean virtualNode\\]) | Creates a new instance of the VSProjectNode class.                                         |\n| public container getProjectsDeployingTo(DeployTo deployTo)                                        | Gets a list of VSProjectNode objects that have the specified deployTo property.            |\n| public container getProjectsModifiedAfter(DateTime timestamp)                                     | Gets a list of VSProjectNode objects that were modified after the specified date and time. |\n| public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)                              |                                                                                            |\n| public Object getVSProjectNodeObservable()                                                        | Gets the VSProjectNodeObservable object.                                                   |\n| public void AOTrefresh()                                                                          | Updates the node with the latest changes to the .aod file.                                 |\n\n### Method AOTfindChild\n\nFinds the specified child node of this node.\n\n    public TreeNode AOTfindChild(str name, [int nodeType])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nnodeType  \n\n#### Return Value\n\nThe specified tree node.\n\n### Method createProjectNode\n\nCreates a new instance of the VSProjectNode class.\n\n    public VSProjectNode createProjectNode(str name, str projectTypesString, [boolean virtualNode])\n\n#### Parameters\n\nname  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Microsoft Dynamics 365 for Operations Store.\n\n<!-- -->\n\nprojectTypesString  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Microsoft Dynamics 365 for Operations Store.\n\n<!-- -->\n\nvirtualNode  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Microsoft Dynamics 365 for Operations Store.\n\n#### Return Value\n\nThe VSProjectNode object that is created.\n\n### Method getProjectsDeployingTo\n\nGets a list of VSProjectNode objects that have the specified deployTo property.\n\n    public container getProjectsDeployingTo(DeployTo deployTo)\n\n#### Parameters\n\ndeployTo  \nThe value of the deployTo property.\n\n#### Return Value\n\nA list of VSProjectNode objects.\n\n### Method getProjectsModifiedAfter\n\nGets a list of VSProjectNode objects that were modified after the specified date and time.\n\n    public container getProjectsModifiedAfter(DateTime timestamp)\n\n#### Parameters\n\ntimestamp  \nThe date and time as a DB\\_DATETIME\\_TYPE value.\n\n#### Return Value\n\nA list of VSProjectNode objects.\n\n### Method getTypeNodeFromGuid\n\n    public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)\n\n#### Parameters\n\nprojectTypesString  \n\n#### Return Value\n\n### Method getVSProjectNodeObservable\n\nGets the VSProjectNodeObservable object.\n\n    public Object getVSProjectNodeObservable()\n\n#### Return Value\n\nThe VSProjectNodeObservable object.\n\n#### Remarks\n\nObservers can register with this and get notified of CRUD operations on Visual Studio projects.\n\n### Method AOTrefresh\n\nUpdates the node with the latest changes to the .aod file.\n\n    public void AOTrefresh()\n\n## Class VSProjectTypeNode\n    class VSProjectTypeNode extends TreeNode\n\nThe VSProjectTypeNode class represents project types in the Visual Studio Project nodes in the AOT.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method | Description |\n|--------|-------------|\n\n## Class VSS\n    class VSS extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                        | Description                               |\n|---------------------------------------------------------------------------------------------------------------|-------------------------------------------|\n| public boolean connect()                                                                                      |                                           |\n| public boolean connected()                                                                                    |                                           |\n| public boolean disconnect()                                                                                   |                                           |\n| public container getCheckedoutFiles()                                                                         |                                           |\n| public container getConnectionInfo()                                                                          |                                           |\n| public VSSItem getVSSItem(str vssItemPath, str localFilePath, \\[boolean completePath\\], \\[int version\\])      |                                           |\n| public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)                |                                           |\n| public VSSItem newSubProject(str name, str localPath)                                                         |                                           |\n| public Map synchronizeProjects(\\[Set projects\\], \\[boolean force\\], \\[boolean delLocalFiles\\], \\[str label\\]) |                                           |\n| public void new()                                                                                             | Initializes an instance of the VSS class. |\n\n### Method connect\n\n    public boolean connect()\n\n#### Return Value\n\n### Method connected\n\n    public boolean connected()\n\n#### Return Value\n\n### Method disconnect\n\n    public boolean disconnect()\n\n#### Return Value\n\n### Method getCheckedoutFiles\n\n    public container getCheckedoutFiles()\n\n#### Return Value\n\n### Method getConnectionInfo\n\n    public container getConnectionInfo()\n\n#### Return Value\n\n### Method getVSSItem\n\n    public VSSItem getVSSItem(str vssItemPath, str localFilePath, [boolean completePath], [int version])\n\n#### Parameters\n\nvssItemPath  \n\n<!-- -->\n\nlocalFilePath  \n\n<!-- -->\n\ncompletePath  \n\n<!-- -->\n\nversion  \n\n#### Return Value\n\n### Method init\n\n    public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)\n\n#### Parameters\n\nvssIni  \n\n<!-- -->\n\nvssPrjRoot  \n\n<!-- -->\n\nvssWorkingFolder  \n\n<!-- -->\n\nvssUser  \n\n<!-- -->\n\nvssPwd  \n\n#### Return Value\n\n### Method newSubProject\n\n    public VSSItem newSubProject(str name, str localPath)\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nlocalPath  \n\n#### Return Value\n\n### Method synchronizeProjects\n\n    public Map synchronizeProjects([Set projects], [boolean force], [boolean delLocalFiles], [str label])\n\n#### Parameters\n\nprojects  \n\n<!-- -->\n\nforce  \n\n<!-- -->\n\ndelLocalFiles  \n\n<!-- -->\n\nlabel  \n\n#### Return Value\n\n### Method new\n\nInitializes an instance of the VSS class.\n\n    public void new()\n\n## Class VSSItem\n    class VSSItem extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                               | Description                                      |\n|--------------------------------------------------------------------------------------|--------------------------------------------------|\n| public boolean add(\\[boolean keepCheckedout\\], \\[str comment\\])                      |                                                  |\n| public boolean checkin(\\[str comment\\])                                              |                                                  |\n| public boolean checkout(\\[boolean allowMultipleCheckout\\], \\[boolean replaceLocal\\]) |                                                  |\n| public boolean delete()                                                              |                                                  |\n| public boolean destroy()                                                             |                                                  |\n| public Map get(\\[boolean force\\], \\[int version\\], \\[str label\\], \\[str localFile\\]) |                                                  |\n| public str getActionText()                                                           |                                                  |\n| public container getCheckedOutTo()                                                   |                                                  |\n| public int getCheckoutVersion()                                                      |                                                  |\n| public container getHistory()                                                        |                                                  |\n| public ComInterface getIUnknown()                                                    |                                                  |\n| public int getVersionNo()                                                            |                                                  |\n| public str getVSSPath()                                                              |                                                  |\n| public boolean isCheckedOut()                                                        |                                                  |\n| public boolean isRenamed()                                                           |                                                  |\n| public str name(str newName)                                                         |                                                  |\n| public boolean rename(str newName)                                                   |                                                  |\n| public boolean undoCheckout()                                                        |                                                  |\n| private void new()                                                                   | Initializes a new instance of the VSSItem class. |\n\n### Method add\n\n    public boolean add([boolean keepCheckedout], [str comment])\n\n#### Parameters\n\nkeepCheckedout  \n\n<!-- -->\n\ncomment  \n\n#### Return Value\n\n### Method checkin\n\n    public boolean checkin([str comment])\n\n#### Parameters\n\ncomment  \n\n#### Return Value\n\n### Method checkout\n\n    public boolean checkout([boolean allowMultipleCheckout], [boolean replaceLocal])\n\n#### Parameters\n\nallowMultipleCheckout  \n\n<!-- -->\n\nreplaceLocal  \n\n#### Return Value\n\n### Method delete\n\n    public boolean delete()\n\n#### Return Value\n\n### Method destroy\n\n    public boolean destroy()\n\n#### Return Value\n\n### Method get\n\n    public Map get([boolean force], [int version], [str label], [str localFile])\n\n#### Parameters\n\nforce  \n\n<!-- -->\n\nversion  \n\n<!-- -->\n\nlabel  \n\n<!-- -->\n\nlocalFile  \n\n#### Return Value\n\n### Method getActionText\n\n    public str getActionText()\n\n#### Return Value\n\n### Method getCheckedOutTo\n\n    public container getCheckedOutTo()\n\n#### Return Value\n\n### Method getCheckoutVersion\n\n    public int getCheckoutVersion()\n\n#### Return Value\n\n### Method getHistory\n\n    public container getHistory()\n\n#### Return Value\n\n### Method getIUnknown\n\n    public ComInterface getIUnknown()\n\n#### Return Value\n\n### Method getVersionNo\n\n    public int getVersionNo()\n\n#### Return Value\n\n### Method getVSSPath\n\n    public str getVSSPath()\n\n#### Return Value\n\n### Method isCheckedOut\n\n    public boolean isCheckedOut()\n\n#### Return Value\n\n### Method isRenamed\n\n    public boolean isRenamed()\n\n#### Return Value\n\n### Method name\n\n    public str name(str newName)\n\n#### Parameters\n\nnewName  \n\n#### Return Value\n\n### Method rename\n\n    public boolean rename(str newName)\n\n#### Parameters\n\nnewName  \n\n#### Return Value\n\n### Method undoCheckout\n\n    public boolean undoCheckout()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the VSSItem class.\n\n    private void new()\n\n"}