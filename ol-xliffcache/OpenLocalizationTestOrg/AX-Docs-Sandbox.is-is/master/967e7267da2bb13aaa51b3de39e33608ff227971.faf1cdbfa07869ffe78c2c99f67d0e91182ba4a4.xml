{"nodes":[{"pos":[32,90],"content":"F Classes - FormFastTabSummarySeparator to FormGridControl","needQuote":true,"needEscape":true,"nodes":[{"content":"F Classes - FormFastTabSummarySeparator to FormGridControl","pos":[0,58]}]},{"pos":[104,182],"content":"API reference for classes from FormFastTabSummarySeparator to FormGridControl.","needQuote":true,"needEscape":true,"nodes":[{"content":"API reference for classes from FormFastTabSummarySeparator to FormGridControl.","pos":[0,78]}]},{"pos":[695,753],"content":"F Classes - FormFastTabSummarySeparator to FormGridControl","linkify":"F Classes - FormFastTabSummarySeparator to FormGridControl","nodes":[{"content":"F Classes - FormFastTabSummarySeparator to FormGridControl","pos":[0,58]}]},{"content":"API reference for classes from FormFastTabSummarySeparator to FormGridControl.","pos":[755,833]},{"pos":[835,868],"content":"Class FormFastTabSummarySeparator","linkify":"Class FormFastTabSummarySeparator","nodes":[{"content":"Class FormFastTabSummarySeparator","pos":[0,33]}]},{"pos":[967,974],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[980,988],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[994,1001],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[1005,1011]},{"content":"Description","pos":[1115,1126]},{"content":"public boolean alignControl(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[1569,1615],"source":"public boolean alignControl(\\[boolean value\\])"},{"content":"Determines whether to align the control.","pos":[1679,1719]},{"content":"public boolean allowEdit(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[1851,1894],"source":"public boolean allowEdit(\\[boolean value\\])"},{"content":"Determines whether the user can change the contents of the control.","pos":[1961,2028]},{"content":"public boolean allowSysSetup()","pos":[2133,2163]},{"content":"Retrieves a value that indicates whether the control is shown in the SysSetup form.","pos":[2243,2326]},{"content":"public boolean autoDeclaration(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[2415,2464],"source":"public boolean autoDeclaration(\\[boolean value\\])"},{"content":"Determines whether the system can declare a member variable that has the same name as the control.","pos":[2525,2623]},{"content":"public int backgroundColor(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[2697,2738],"source":"public int backgroundColor(\\[int value\\])"},{"content":"Gets or sets the background color of the control.","pos":[2807,2856]},{"content":"public int backStyle(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[2979,3014],"source":"public int backStyle(\\[int value\\])"},{"content":"Determiness whether the control background can be transparent.","pos":[3089,3151]},{"content":"public int beginDrag(int x, int y)","pos":[3261,3295]},{"content":"Is called when the user starts to drag a form control.","pos":[3371,3425]},{"content":"public int bold(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[3543,3573],"source":"public int bold(\\[int value\\])"},{"content":"Gets or sets the weight of font used to output text in the control.","pos":[3653,3720]},{"content":"public container calcControlSize(int chars, int lines)","pos":[3825,3879]},{"content":"Retrieves the size of the control.","pos":[3935,3969]},{"content":"public int characterSet(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[4107,4145],"source":"public int characterSet(\\[int value\\])"},{"content":"Gets or sets the character set of the font.","pos":[4217,4260]},{"content":"public int colorScheme(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[4389,4426],"source":"public int colorScheme(\\[int value\\])"},{"content":"Gets or sets the color scheme of the control.","pos":[4499,4544]},{"content":"public ConfigurationKeyId configurationKey(<ph id=\"ph1\">\\[</ph>ConfigurationKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[4671,4743],"source":"public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])"},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[4781,4848]},{"content":"public List configurationKeyEx()","pos":[4953,4985]},{"content":"Retrieves a list that contains the IDs of configuration keys that are in effect for the control.","pos":[5063,5159]},{"content":"public str countryRegionCodes(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[5235,5279],"source":"public str countryRegionCodes(\\[str value\\])"},{"content":"Gets or sets the comma-separated list of country/region codes for the control.","pos":[5345,5423]},{"content":"public str dataRelationPath(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[5517,5559],"source":"public str dataRelationPath(\\[str value\\])"},{"content":"Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[5627,5752]},{"content":"public int displayTarget(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[5799,5838],"source":"public int displayTarget(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.","pos":[5909,6140]},{"content":"public int dragDrop(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[6145,6179],"source":"public int dragDrop(\\[int value\\])"},{"content":"Determines whether to enable or disable drag-and-drop operations for the control.","pos":[6255,6336]},{"content":"public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)","pos":[6427,6508]},{"content":"Raises the dragOver event to indicate that a mouse drag operation is over the current control.","pos":[6537,6631]},{"content":"public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)","pos":[6709,6786]},{"content":"Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.","pos":[6819,6915]},{"content":"public str dragText()","pos":[6991,7012]},{"content":"Retrieves the text that is displayed when the form control is dragged.","pos":[7101,7171]},{"content":"public boolean enabled(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[7273,7314],"source":"public boolean enabled(\\[boolean value\\])"},{"content":"Determines whether to enable or disable the object.","pos":[7383,7434]},{"content":"public str font(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[7555,7585],"source":"public str font(\\[str value\\])"},{"content":"Gets or sets the name of the font for the control to use.","pos":[7665,7722]},{"content":"public int fontSize(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[7837,7871],"source":"public int fontSize(\\[int value\\])"},{"content":"Gets or sets the size of the font for the control to use.","pos":[7947,8004]},{"content":"public boolean hasChanged(<ph id=\"ph1\">\\[</ph>boolean val<ph id=\"ph2\">\\]</ph>)","pos":[8119,8161],"source":"public boolean hasChanged(\\[boolean val\\])"},{"content":"Sets or returns a value that indicates whether the contents of the control have changed.","pos":[8229,8317]},{"content":"public boolean hasUserSetting()","pos":[8401,8432]},{"content":"Indicates whether the control has custom user settings.","pos":[8511,8566]},{"content":"public int height(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[8683,8725],"source":"public int height(int value, \\[int mode\\])"},{"content":"Gets or sets the height of the control.","pos":[8793,8832]},{"content":"public int heightMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[8965,9001],"source":"public int heightMode(\\[int value\\])"},{"content":"Gets or sets a calculation mode for the height of the control.","pos":[9075,9137]},{"content":"public int heightValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[9247,9284],"source":"public int heightValue(\\[int value\\])"},{"content":"Gets or sets the height of the control.","pos":[9357,9396]},{"content":"public str helpField()","pos":[9529,9551]},{"content":"Retrieves the Help text for the control.","pos":[9639,9679]},{"content":"public str helpText(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[9811,9845],"source":"public str helpText(\\[str value\\])"},{"content":"Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.","pos":[9921,10025]},{"content":"public str hierarchyParent(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[10093,10134],"source":"public str hierarchyParent(\\[str value\\])"},{"content":"Gets or sets the HierarchyParent property value of the control.","pos":[10203,10266]},{"content":"public int hWnd()","pos":[10375,10392]},{"content":"Retrieves the Windows handle for the control.","pos":[10485,10530]},{"content":"public boolean isContainer()","pos":[10657,10685]},{"content":"public boolean isDisplayed()","pos":[10939,10967]},{"content":"Retrieves a value that indicates whether the control is displayed.","pos":[11049,11115]},{"content":"public boolean isRestricted()","pos":[11221,11250]},{"content":"Retrieves a value that indicates whether the control is restricted.","pos":[11331,11398]},{"content":"public boolean isUserSetupEnabled(int neededSetupRights)","pos":[11503,11559]},{"content":"Retrieves a value that indicates whether the control allows for the specified level of customization.","pos":[11613,11714]},{"content":"public boolean italic(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[11785,11825],"source":"public boolean italic(\\[boolean value\\])"},{"content":"public int left(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[12067,12107],"source":"public int left(int value, \\[int mode\\])"},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[12177,12241]},{"content":"public int leftMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[12349,12383],"source":"public int leftMode(\\[int value\\])"},{"content":"Sets the horizontal arrange mode for the control in the form.","pos":[12459,12520]},{"content":"public int leftValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[12631,12666],"source":"public int leftValue(\\[int value\\])"},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[12741,12805]},{"content":"public boolean markAsUserAdd(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[12913,12960],"source":"public boolean markAsUserAdd(\\[boolean value\\])"},{"content":"Marks or unmarks the control as a user-added control.","pos":[13023,13076]},{"content":"public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[13195,13274]},{"content":"Is called when the control is double-clicked by the user.","pos":[13305,13362]},{"content":"public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[13477,13552]},{"content":"Is called when the user clicks the mouse button over the control.","pos":[13587,13652]},{"content":"public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[13759,13834]},{"content":"Is called when the user moves the mouse pointer over the control.","pos":[13869,13934]},{"content":"public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[14041,14114]},{"content":"Is called when the user releases the mouse button over the control area.","pos":[14151,14223]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[14323,14353],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.","pos":[14433,14600]},{"content":"public int neededPermission(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[14637,14679],"source":"public int neededPermission(\\[int value\\])"},{"content":"public container SysObsoleteAttribute()","pos":[14919,14958]},{"content":"public FormControl parentControl()","pos":[15201,15235]},{"content":"Retrieves the parent control for the control.","pos":[15311,15356]},{"content":"public SecurityKeyId securityKey(<ph id=\"ph1\">\\[</ph>SecurityKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[15483,15540],"source":"public SecurityKeyId securityKey(\\[SecurityKeyId value\\])"},{"content":"Sets or returns the ID of the security key for the control.","pos":[15593,15652]},{"content":"public int showContextMenu(int menuHandle)","pos":[15765,15807]},{"content":"Shows the shortcut menu for the control.","pos":[15875,15915]},{"content":"public boolean skip(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[16047,16085],"source":"public boolean skip(\\[boolean value\\])"},{"content":"Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.","pos":[16157,16284]},{"content":"public str toolTip()","pos":[16329,16349]},{"content":"Retrieves the tooltip text for the control.","pos":[16439,16482]},{"content":"public int top(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[16611,16650],"source":"public int top(int value, \\[int mode\\])"},{"content":"Gets or sets the vertical position of the control in the form.","pos":[16721,16783]},{"content":"public int topMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[16893,16926],"source":"public int topMode(\\[int value\\])"},{"content":"Sets the vertical arrange mode for the control in the form.","pos":[17003,17062]},{"content":"public int topValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[17175,17209],"source":"public int topValue(\\[int value\\])"},{"content":"Gets or sets the vertical position of the control in the form.","pos":[17285,17347]},{"content":"public int type(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[17457,17487],"source":"public int type(\\[int value\\])"},{"content":"public boolean underline(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[17739,17782],"source":"public boolean underline(\\[boolean value\\])"},{"content":"public boolean SysObsoleteAttribute(container data)","pos":[18021,18072]},{"content":"public int userData(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[18303,18337],"source":"public int userData(\\[int value\\])"},{"content":"Gets or sets the user data for the control.","pos":[18413,18456]},{"content":"public int userDataItem(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[18585,18623],"source":"public int userDataItem(\\[int value\\])"},{"content":"Gets or sets the user data item for the control.","pos":[18695,18743]},{"content":"public int userDataItems(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[18867,18906],"source":"public int userDataItems(\\[int value\\])"},{"content":"Gets or sets the number of user data items for the control.","pos":[18977,19036]},{"content":"public int userDisable(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[19149,19186],"source":"public int userDisable(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is disabled for the user.","pos":[19259,19342]},{"content":"public int userHeight(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[19431,19467],"source":"public int userHeight(\\[int value\\])"},{"content":"Gets or sets the custom user height for the control.","pos":[19541,19593]},{"content":"public int userHide(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[19713,19747],"source":"public int userHide(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is hidden from the user.","pos":[19823,19905]},{"content":"public int userOrgContainer(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[19995,20037],"source":"public int userOrgContainer(\\[int value\\])"},{"content":"Gets or sets the organization container for the control.","pos":[20105,20161]},{"content":"public int userOrgSibling(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[20277,20317],"source":"public int userOrgSibling(\\[int value\\])"},{"content":"Gets or sets the organization sibling for the control.","pos":[20387,20441]},{"content":"public str userPromptText(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[20559,20599],"source":"public str userPromptText(\\[str value\\])"},{"content":"Gets or sets the user label text for the control.","pos":[20669,20718]},{"content":"public int userSecurityLevel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[20841,20884],"source":"public int userSecurityLevel(\\[int value\\])"},{"content":"Gets or sets the user security level for the control.","pos":[20951,21004]},{"content":"public int userSkip(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[21123,21157],"source":"public int userSkip(\\[int value\\])"},{"content":"Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.","pos":[21233,21381]},{"content":"public int userWidth(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[21405,21440],"source":"public int userWidth(\\[int value\\])"},{"content":"Sets or returns the width of the control in pixels.","pos":[21515,21566]},{"content":"public int verticalSpacing(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[21687,21747],"source":"public int verticalSpacing(\\[int value\\], \\[AutoMode mode\\])"},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[21797,21858]},{"content":"public AutoMode verticalSpacingMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[21969,22023],"source":"public AutoMode verticalSpacingMode(\\[AutoMode mode\\])"},{"content":"Sets the vertical spacing mode for the control in the form.","pos":[22079,22138]},{"content":"public int verticalSpacingValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[22251,22297],"source":"public int verticalSpacingValue(\\[int value\\])"},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[22361,22422]},{"content":"public boolean visible(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[22533,22574],"source":"public boolean visible(\\[boolean value\\])"},{"content":"Sets or returns a value that indicates whether the control is visible.","pos":[22643,22713]},{"content":"public int width(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[22815,22856],"source":"public int width(int value, \\[int mode\\])"},{"content":"Gets or sets the width of the control.","pos":[22925,22963]},{"content":"public int widthMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[23097,23132],"source":"public int widthMode(\\[int value\\])"},{"content":"Gets or sets the calculation mode of the width of the control.","pos":[23207,23269]},{"content":"public int widthValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[23379,23415],"source":"public int widthValue(\\[int value\\])"},{"content":"Gets or sets the width of the control.","pos":[23489,23527]},{"content":"public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)","pos":[23661,23734]},{"content":"Raises the drop event to indicate that a drop operation is being performed on the current control.","pos":[23771,23869]},{"content":"public void copy()","pos":[23943,23961]},{"content":"Copies the contents of the control to the clipboard.","pos":[24053,24105]},{"content":"public void cut()","pos":[24225,24242]},{"content":"Cuts the contents of the control.","pos":[24335,24368]},{"content":"public void setFocus()","pos":[24507,24529]},{"content":"Sets the focus on the control.","pos":[24617,24647]},{"content":"public void mouseLeave()","pos":[24789,24813]},{"content":"Indicates that the mouse pointer has left the control.","pos":[24899,24953]},{"content":"public void endDrag()","pos":[25071,25092]},{"content":"Is called when the user has finished dragging a form control.","pos":[25181,25242]},{"content":"public void context()","pos":[25353,25374]},{"content":"Shows the shortcut menu for the control.","pos":[25463,25503]},{"content":"public void gotFocus()","pos":[25635,25657]},{"content":"Indicates that the control has received focus.","pos":[25745,25791]},{"content":"public void prefColumnSize(int width, int height)","pos":[25917,25966]},{"content":"Specifies the preferred column width and height for the form control.","pos":[26027,26096]},{"content":"public void lostFocus()","pos":[26199,26222]},{"content":"Indicates that the control has lost focus.","pos":[26309,26351]},{"content":"public void displayControl()","pos":[26481,26509]},{"content":"Displays the control.","pos":[26591,26612]},{"content":"public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, <ph id=\"ph1\">\\[</ph>Object overrideObject<ph id=\"ph2\">\\]</ph>)","pos":[26763,26870],"source":"public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, \\[Object overrideObject\\])"},{"content":"public void paste()","pos":[27045,27064]},{"content":"Pastes the contents of the clipboard into the control.","pos":[27155,27209]},{"content":"public void resetUserSetting()","pos":[27327,27357]},{"content":"Resets the user settings for the control.","pos":[27437,27478]},{"content":"public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)","pos":[27609,27678]},{"content":"Raises the dropEx event to indicate that a drop operation is being performed on the current control.","pos":[27719,27819]},{"content":"public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[27891,27968]},{"content":"Is called when the user moves the mouse pointer into the control area.","pos":[28001,28071]},{"content":"public void inputSearch(str searchStr)","pos":[28173,28211]},{"content":"Performs data filtering for the control, based on the specified string.","pos":[28283,28354]},{"content":"public void dragLeave()","pos":[28455,28478]},{"content":"Raises the dragLeave event to indicate that a mouse drag operation has left the current control.","pos":[28565,28661]},{"pos":[28740,28759],"content":"Method alignControl","linkify":"Method alignControl","nodes":[{"content":"Method alignControl","pos":[0,19]}]},{"content":"Determines whether to align the control.","pos":[28761,28801]},{"pos":[28858,28868],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[28870,28875]},{"pos":[28884,28896],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control should be aligned; otherwise, false.","pos":[28898,28954]},{"pos":[28961,28968],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The upper-left corner of the control is aligned according to the longest label.","pos":[28970,29049]},{"pos":[29055,29071],"content":"Method allowEdit","linkify":"Method allowEdit","nodes":[{"content":"Method allowEdit","pos":[0,16]}]},{"content":"Determines whether the user can change the contents of the control.","pos":[29073,29140]},{"pos":[29194,29204],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[29206,29211]},{"pos":[29220,29232],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control can be edited; otherwise, false.","pos":[29234,29286]},{"pos":[29293,29300],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When this property is set on a container control, modifications are disabled or enabled for all controls within the container.","pos":[29302,29428]},{"pos":[29434,29454],"content":"Method allowSysSetup","linkify":"Method allowSysSetup","nodes":[{"content":"Method allowSysSetup","pos":[0,20]}]},{"content":"Retrieves a value that indicates whether the control is shown in the SysSetup form.","pos":[29456,29539]},{"pos":[29582,29594],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is shown in the SysSetup form; otherwise, false.","pos":[29596,29664]},{"pos":[29670,29692],"content":"Method autoDeclaration","linkify":"Method autoDeclaration","nodes":[{"content":"Method autoDeclaration","pos":[0,22]}]},{"content":"Determines whether the system can declare a member variable that has the same name as the control.","pos":[29694,29792]},{"pos":[29852,29862],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[29864,29869]},{"pos":[29878,29890],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the member variable can be declared for this control; otherwise, false.","pos":[29892,29971]},{"pos":[29978,29985],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Controls cannot have identical names.","pos":[29987,30024]},{"pos":[30030,30052],"content":"Method backgroundColor","linkify":"Method backgroundColor","nodes":[{"content":"Method backgroundColor","pos":[0,22]}]},{"content":"Gets or sets the background color of the control.","pos":[30054,30103]},{"pos":[30155,30165],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[30167,30172]},{"pos":[30181,30193],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that contains a packed RGB color.","pos":[30195,30239]},{"pos":[30246,30253],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The integer that is returned contains a packed RGB color as follows:","pos":[30255,30323]},{"content":"The low-order byte contains a value for the relative intensity of red.","pos":[30329,30399]},{"content":"The second byte contains a value for green.","pos":[30404,30447]},{"content":"The third byte contains a value for blue.","pos":[30452,30493]},{"content":"The high-order byte must be zero.","pos":[30498,30531]},{"content":"The maximum value for a single byte is 255.","pos":[30536,30579]},{"pos":[30585,30601],"content":"Method backStyle","linkify":"Method backStyle","nodes":[{"content":"Method backStyle","pos":[0,16]}]},{"content":"Determiness whether the control background can be transparent.","pos":[30603,30665]},{"pos":[30711,30721],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[30723,30728]},{"pos":[30737,30749],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control background can be transparent; otherwise, 0.","pos":[30751,30812]},{"pos":[30818,30834],"content":"Method beginDrag","linkify":"Method beginDrag","nodes":[{"content":"Method beginDrag","pos":[0,16]}]},{"content":"Is called when the user starts to drag a form control.","pos":[30836,30890]},{"pos":[30937,30947],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[30949,30950]},{"content":"An integer value that indicates the y-coordinate of the mouse pointer.","pos":[30953,31023]},{"content":"The coordinate is relative to the upper-left corner of the control.","pos":[31024,31091]},{"content":"y","pos":[31103,31104]},{"content":"An integer value that indicates the y-coordinate of the mouse pointer.","pos":[31107,31177]},{"content":"The coordinate is relative to the upper-left corner of the control.","pos":[31178,31245]},{"pos":[31252,31264],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[31266,31305]},{"pos":[31312,31319],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This event is not raised unless the DragDrop property is enabled for the control.","pos":[31321,31402]},{"content":"To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.","pos":[31403,31507]},{"pos":[31513,31524],"content":"Method bold","linkify":"Method bold","nodes":[{"content":"Method bold","pos":[0,11]}]},{"content":"Gets or sets the weight of font used to output text in the control.","pos":[31526,31593]},{"pos":[31634,31644],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[31646,31651]},{"pos":[31660,31672],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value between zero and nine, inclusive.","pos":[31674,31724]},{"pos":[31731,31738],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The integer that is returned contains the weight of the font as follows:","pos":[31740,31812]},{"content":"0 Use the default font weight.","pos":[31818,31848]},{"content":"1 Thin.","pos":[31853,31860]},{"content":"2 Extra-light.","pos":[31865,31879]},{"content":"3 Light.","pos":[31884,31892]},{"content":"4 Normal.","pos":[31897,31906]},{"content":"5 Medium.","pos":[31911,31920]},{"content":"6 Semibold.","pos":[31925,31936]},{"content":"7 Bold.","pos":[31941,31948]},{"content":"8 Extra-bold.","pos":[31953,31966]},{"content":"9 Heavy.","pos":[31971,31979]},{"pos":[31985,32007],"content":"Method calcControlSize","linkify":"Method calcControlSize","nodes":[{"content":"Method calcControlSize","pos":[0,22]}]},{"content":"Retrieves the size of the control.","pos":[32009,32043]},{"pos":[32110,32120],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"chars","pos":[32122,32127]},{"content":"The number of lines to use to determine the height.","pos":[32130,32181]},{"content":"lines","pos":[32193,32198]},{"content":"The number of lines to use to determine the height.","pos":[32201,32252]},{"pos":[32259,32271],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The container that holds the width and height.","pos":[32273,32319]},{"pos":[32325,32344],"content":"Method characterSet","linkify":"Method characterSet","nodes":[{"content":"Method characterSet","pos":[0,19]}]},{"content":"Gets or sets the character set of the font.","pos":[32346,32389]},{"pos":[32438,32448],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[32450,32455]},{"pos":[32464,32476],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the character set of the font.","pos":[32478,32540]},{"pos":[32547,32554],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The values for the integer that is returned indicate the character set according to the following table:","pos":[32556,32660]},{"content":"Value.","pos":[32664,32670]},{"content":"Description.","pos":[32673,32685]},{"content":"0","pos":[32732,32733]},{"content":"ANSI<ph id=\"ph1\">\\_</ph>CHARSET","pos":[32741,32754],"source":"ANSI\\_CHARSET"},{"content":"1","pos":[32766,32767]},{"content":"DEFAULT<ph id=\"ph1\">\\_</ph>CHARSET","pos":[32775,32791],"source":"DEFAULT\\_CHARSET"},{"content":"2","pos":[32800,32801]},{"content":"SYMBOL<ph id=\"ph1\">\\_</ph>CHARSET","pos":[32809,32824],"source":"SYMBOL\\_CHARSET"},{"content":"77","pos":[32834,32836]},{"content":"MAC<ph id=\"ph1\">\\_</ph>CHARSET","pos":[32843,32855],"source":"MAC\\_CHARSET"},{"content":"128","pos":[32868,32871]},{"content":"SHIFTJIS<ph id=\"ph1\">\\_</ph>CHARSET","pos":[32877,32894],"source":"SHIFTJIS\\_CHARSET"},{"content":"129","pos":[32902,32905]},{"content":"HANGUL<ph id=\"ph1\">\\_</ph>CHARSET","pos":[32911,32926],"source":"HANGUL\\_CHARSET"},{"content":"134","pos":[32936,32939]},{"content":"GB2312<ph id=\"ph1\">\\_</ph>CHARSET","pos":[32945,32960],"source":"GB2312\\_CHARSET"},{"content":"136","pos":[32970,32973]},{"content":"CHINESEBIG5<ph id=\"ph1\">\\_</ph>CHARSET","pos":[32979,32999],"source":"CHINESEBIG5\\_CHARSET"},{"content":"161","pos":[33004,33007]},{"content":"GREEK<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33013,33027],"source":"GREEK\\_CHARSET"},{"content":"162","pos":[33038,33041]},{"content":"TURKISH<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33047,33063],"source":"TURKISH\\_CHARSET"},{"content":"163","pos":[33072,33075]},{"content":"VIETNAMESE<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33081,33100],"source":"VIETNAMESE\\_CHARSET"},{"content":"186","pos":[33106,33109]},{"content":"BALTIC<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33115,33130],"source":"BALTIC\\_CHARSET"},{"content":"204","pos":[33140,33143]},{"content":"RUSSIAN<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33149,33165],"source":"RUSSIAN\\_CHARSET"},{"content":"238","pos":[33174,33177]},{"content":"EASTEUROPE<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33183,33202],"source":"EASTEUROPE\\_CHARSET"},{"content":"255","pos":[33208,33211]},{"content":"OEM<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33217,33229],"source":"OEM\\_CHARSET"},{"content":"The value in the following table is for the Korean language edition of MicrosoftWindows.","pos":[33241,33329]},{"content":"Value.","pos":[33333,33339]},{"content":"Description.","pos":[33342,33354]},{"content":"130","pos":[33389,33392]},{"content":"JOHAB<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33398,33412],"source":"JOHAB\\_CHARSET"},{"content":"The values in the following table are for the Middle East language edition of Windows.","pos":[33416,33502]},{"content":"Value.","pos":[33506,33512]},{"content":"Description.","pos":[33515,33527]},{"content":"177","pos":[33564,33567]},{"content":"HEBREW<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33573,33588],"source":"HEBREW\\_CHARSET"},{"content":"178","pos":[33593,33596]},{"content":"ARABIC<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33602,33617],"source":"ARABIC\\_CHARSET"},{"content":"The value in the following table is for the Thai language edition of Windows.","pos":[33621,33698]},{"content":"Value.","pos":[33702,33708]},{"content":"Description.","pos":[33711,33723]},{"content":"222","pos":[33756,33759]},{"content":"THAI<ph id=\"ph1\">\\_</ph>CHARSET","pos":[33765,33778],"source":"THAI\\_CHARSET"},{"content":"The default character set is set to a value based on the current system locale.","pos":[33782,33861]},{"content":"For example, when the system locale is English (United States), it is set as ANSI<ph id=\"ph1\">\\_</ph>CHARSET.","pos":[33862,33953],"source":" For example, when the system locale is English (United States), it is set as ANSI\\_CHARSET."},{"content":"For more information, see the LOGFONT structure on the MSDN website, http://go.microsoft.com/fwlink/?LinkID=85972.","pos":[33954,34068]},{"pos":[34074,34092],"content":"Method colorScheme","linkify":"Method colorScheme","nodes":[{"content":"Method colorScheme","pos":[0,18]}]},{"content":"Gets or sets the color scheme of the control.","pos":[34094,34139]},{"pos":[34187,34197],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[34199,34204]},{"content":"The value to set; optional.","pos":[34207,34234]},{"pos":[34241,34253],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer between zero and two, inclusive.","pos":[34255,34298]},{"pos":[34305,34312],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The color scheme is defined according to the following table:","pos":[34314,34375]},{"content":"Value.","pos":[34379,34385]},{"content":"Style.","pos":[34388,34394]},{"content":"0","pos":[34451,34452]},{"content":"Default.","pos":[34460,34468]},{"content":"1","pos":[34487,34488]},{"content":"The Windows palette.","pos":[34496,34516]},{"content":"2","pos":[34523,34524]},{"content":"The true-color scheme.","pos":[34532,34554]},{"pos":[34562,34585],"content":"Method configurationKey","linkify":"Method configurationKey","nodes":[{"content":"Method configurationKey","pos":[0,23]}]},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[34587,34654]},{"pos":[34737,34747],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[34749,34754]},{"pos":[34763,34775],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the configuration key that is assigned to the control.","pos":[34777,34849]},{"pos":[34856,34863],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The configuration key is used to determine whether this control can be displayed.","pos":[34865,34946]},{"content":"If the configuration key is disabled in the system, the control is not displayed in the form.","pos":[34947,35040]},{"pos":[35046,35071],"content":"Method configurationKeyEx","linkify":"Method configurationKeyEx","nodes":[{"content":"Method configurationKeyEx","pos":[0,25]}]},{"content":"Retrieves a list that contains the IDs of configuration keys that are in effect for the control.","pos":[35073,35169]},{"pos":[35214,35226],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list that contains the IDs of configuration keys that are in effect for the control.","pos":[35228,35314]},{"pos":[35321,35328],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The returned list does not contain duplicate IDs.","pos":[35330,35379]},{"content":"If the control is bound to a data source, the returned list of configuration key IDs also includes the configuration key ID for the table and field.","pos":[35380,35528]},{"content":"The returned list also contains any configuration key IDs that are applied to the properties, extended data type, or enumType methods.","pos":[35529,35663]},{"pos":[35669,35694],"content":"Method countryRegionCodes","linkify":"Method countryRegionCodes","nodes":[{"content":"Method countryRegionCodes","pos":[0,25]}]},{"content":"Gets or sets the comma-separated list of country/region codes for the control.","pos":[35696,35774]},{"pos":[35829,35839],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[35841,35846]},{"content":"The string that contains the country/region codes to set; optional.","pos":[35849,35916]},{"pos":[35923,35935],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The comma-separated list of country/region codes for the control.","pos":[35937,36002]},{"pos":[36008,36031],"content":"Method dataRelationPath","linkify":"Method dataRelationPath","nodes":[{"content":"Method dataRelationPath","pos":[0,23]}]},{"content":"Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[36033,36158]},{"pos":[36211,36221],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[36223,36228]},{"content":"The string that contains the period-delimited list of relations; optional.","pos":[36231,36305]},{"pos":[36312,36324],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[36326,36438]},{"pos":[36445,36452],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is used by the reference group control to track exactly which relations produce the replacement field that is used.","pos":[36454,36581]},{"content":"It enables the reference group control to bind consistently to the controls that it contains.","pos":[36582,36675]},{"pos":[36681,36701],"content":"Method displayTarget","linkify":"Method displayTarget","nodes":[{"content":"Method displayTarget","pos":[0,20]}]},{"content":"Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.","pos":[36703,36934]},{"pos":[36984,36994],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[36996,37001]},{"content":"The integer value that indicates where the control is displayed; optional.","pos":[37004,37078]},{"pos":[37085,37097],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise Portal, or in both.","pos":[37099,37259]},{"pos":[37265,37280],"content":"Method dragDrop","linkify":"Method dragDrop","nodes":[{"content":"Method dragDrop","pos":[0,15]}]},{"content":"Determines whether to enable or disable drag-and-drop operations for the control.","pos":[37282,37363]},{"pos":[37408,37418],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[37420,37425]},{"pos":[37434,37446],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if drag-and-drop operations are enabled; otherwise, false.","pos":[37448,37508]},{"pos":[37514,37529],"content":"Method dragOver","linkify":"Method dragOver","nodes":[{"content":"Method dragOver","pos":[0,15]}]},{"content":"Raises the dragOver event to indicate that a mouse drag operation is over the current control.","pos":[37531,37625]},{"pos":[37719,37729],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[37731,37741]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[37744,37829]},{"content":"dragMode","pos":[37841,37849]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[37852,37937]},{"content":"x","pos":[37949,37950]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[37953,38038]},{"content":"y","pos":[38050,38051]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[38054,38139]},{"pos":[38146,38158],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A FormDrag enumeration value that indicates the mode of dragging.","pos":[38160,38225]},{"pos":[38231,38248],"content":"Method dragOverEx","linkify":"Method dragOverEx","nodes":[{"content":"Method dragOverEx","pos":[0,17]}]},{"content":"Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.","pos":[38250,38346]},{"pos":[38436,38446],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[38448,38458]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[38461,38546]},{"content":"dragMode","pos":[38558,38566]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[38569,38654]},{"content":"x","pos":[38666,38667]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[38670,38755]},{"content":"y","pos":[38767,38768]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[38771,38856]},{"pos":[38863,38875],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A FormDrag enumeration value that indicates the mode of dragging.","pos":[38877,38942]},{"pos":[38948,38963],"content":"Method dragText","linkify":"Method dragText","nodes":[{"content":"Method dragText","pos":[0,15]}]},{"content":"Retrieves the text that is displayed when the form control is dragged.","pos":[38965,39035]},{"pos":[39069,39081],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The text that is displayed when the control is dragged; an empty string if there is no text to display when the control is dragged.","pos":[39083,39214]},{"pos":[39220,39234],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Determines whether to enable or disable the object.","pos":[39236,39287]},{"pos":[39339,39349],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[39351,39356]},{"pos":[39365,39377],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the object is enabled; otherwise, false.","pos":[39379,39427]},{"pos":[39434,39441],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The enabled property allows controls to be enabled or disabled at run time.","pos":[39443,39518]},{"content":"For example, you can disable objects that do not apply to the current state of the application.","pos":[39519,39614]},{"content":"You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.","pos":[39615,39749]},{"pos":[39755,39766],"content":"Method font","linkify":"Method font","nodes":[{"content":"Method font","pos":[0,11]}]},{"content":"Gets or sets the name of the font for the control to use.","pos":[39768,39825]},{"pos":[39866,39876],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[39878,39883]},{"content":"The value to set; optional.","pos":[39886,39913]},{"pos":[39920,39932],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the font to use, such as Tahoma or Verdana.","pos":[39934,39989]},{"pos":[39995,40010],"content":"Method fontSize","linkify":"Method fontSize","nodes":[{"content":"Method fontSize","pos":[0,15]}]},{"content":"Gets or sets the size of the font for the control to use.","pos":[40012,40069]},{"pos":[40114,40124],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[40126,40131]},{"content":"The value to set; optional.","pos":[40134,40161]},{"pos":[40168,40180],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of the font in points.","pos":[40182,40215]},{"pos":[40221,40238],"content":"Method hasChanged","linkify":"Method hasChanged","nodes":[{"content":"Method hasChanged","pos":[0,17]}]},{"content":"Sets or returns a value that indicates whether the contents of the control have changed.","pos":[40240,40328]},{"pos":[40381,40391],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"val","pos":[40393,40396]},{"content":"The value to assign as the hasChanged value for the control; optional.","pos":[40399,40469]},{"pos":[40476,40488],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the contents of the control have changed; otherwise, false.","pos":[40490,40557]},{"pos":[40563,40584],"content":"Method hasUserSetting","linkify":"Method hasUserSetting","nodes":[{"content":"Method hasUserSetting","pos":[0,21]}]},{"content":"Indicates whether the control has custom user settings.","pos":[40586,40641]},{"pos":[40685,40697],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control has custom user settings; otherwise, false.","pos":[40699,40762]},{"pos":[40768,40781],"content":"Method height","linkify":"Method height","nodes":[{"content":"Method height","pos":[0,13]}]},{"content":"Gets or sets the height of the control.","pos":[40783,40822]},{"pos":[40875,40885],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[40887,40892]},{"content":"mode","pos":[40906,40910]},{"pos":[40919,40931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of the control in pixels.","pos":[40933,40969]},{"pos":[40976,40983],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Exact mode is used if the value parameter is omitted.Calculate the height according to the following table:","pos":[40985,41092]},{"content":"Mode.","pos":[41096,41101]},{"content":"Height calculation.","pos":[41115,41134]},{"content":"-1 Exact.","pos":[41322,41331]},{"content":"The exact height in pixels of the controls is used.","pos":[41341,41392]},{"content":"0 Auto.","pos":[41435,41442]},{"content":"The height of the control is calculated automatically and the value parameter is ignored.","pos":[41454,41543]},{"content":"1 Column height.","pos":[41548,41564]},{"content":"The layout of the form determines the height of the control.","pos":[41567,41627]},{"content":"The height and height calculation mode can be set separately.","pos":[41660,41721]},{"pos":[41727,41744],"content":"Method heightMode","linkify":"Method heightMode","nodes":[{"content":"Method heightMode","pos":[0,17]}]},{"content":"Gets or sets a calculation mode for the height of the control.","pos":[41746,41808]},{"pos":[41855,41865],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[41867,41872]},{"pos":[41881,41893],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The calculation mode.","pos":[41895,41916]},{"pos":[41923,41930],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Calculate the height according to the following table:","pos":[41932,41986]},{"content":"Mode.","pos":[41990,41995]},{"content":"Height Calculation.","pos":[42007,42026]},{"content":"Exact.","pos":[42212,42218]},{"content":"The exact height in pixels of the controls is used.","pos":[42229,42280]},{"content":"Auto.","pos":[42323,42328]},{"content":"The height of the control is calculated automatically and the value parameter is ignored.","pos":[42340,42429]},{"content":"Column height.","pos":[42434,42448]},{"content":"The layout of the form determines the height of the control.","pos":[42451,42511]},{"content":"The height of the control might change when the mode is set to auto or column height.","pos":[42544,42629]},{"pos":[42635,42653],"content":"Method heightValue","linkify":"Method heightValue","nodes":[{"content":"Method heightValue","pos":[0,18]}]},{"content":"Gets or sets the height of the control.","pos":[42655,42694]},{"pos":[42742,42752],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[42754,42759]},{"content":"The value to set; optional.","pos":[42762,42789]},{"pos":[42796,42808],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height in pixels.","pos":[42810,42831]},{"pos":[42838,42845],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The height of the control is not changed unless the exact height calculation mode is used.","pos":[42847,42937]},{"pos":[42943,42959],"content":"Method helpField","linkify":"Method helpField","nodes":[{"content":"Method helpField","pos":[0,16]}]},{"content":"Retrieves the Help text for the control.","pos":[42961,43001]},{"pos":[43036,43048],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Help text for the control; an empty string if there is no Help text for the control.","pos":[43050,43138]},{"pos":[43145,43152],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The helpField method cannot be used to set the value of the Help text.","pos":[43154,43224]},{"content":"Use the helpText method to set the value of the Help text.","pos":[43225,43283]},{"pos":[43289,43304],"content":"Method helpText","linkify":"Method helpText","nodes":[{"content":"Method helpText","pos":[0,15]}]},{"content":"Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.","pos":[43306,43410]},{"pos":[43455,43465],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[43467,43472]},{"pos":[43481,43493],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string to be displayed at the bottom of the screen.","pos":[43495,43550]},{"pos":[43557,43564],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Set the HelpText property for an object by using the property sheet.","pos":[43566,43634]},{"content":"The Help text must not exceed 250 characters.","pos":[43635,43680]},{"pos":[43686,43708],"content":"Method hierarchyParent","linkify":"Method hierarchyParent","nodes":[{"content":"Method hierarchyParent","pos":[0,22]}]},{"content":"Gets or sets the HierarchyParent property value of the control.","pos":[43710,43773]},{"pos":[43825,43835],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[43837,43842]},{"content":"The value to assign the HierarchyParent property of the control.","pos":[43845,43909]},{"pos":[43916,43928],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The HierarchyParent property value of the control.","pos":[43930,43980]},{"pos":[43986,43997],"content":"Method hWnd","linkify":"Method hWnd","nodes":[{"content":"Method hWnd","pos":[0,11]}]},{"content":"Retrieves the Windows handle for the control.","pos":[43999,44044]},{"pos":[44074,44086],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The handle for the control.","pos":[44088,44115]},{"pos":[44122,44129],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The handle can be used with the Windows API.","pos":[44131,44175]},{"pos":[44181,44199],"content":"Method isContainer","linkify":"Method isContainer","nodes":[{"content":"Method isContainer","pos":[0,18]}]},{"pos":[44240,44252],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44258,44276],"content":"Method isDisplayed","linkify":"Method isDisplayed","nodes":[{"content":"Method isDisplayed","pos":[0,18]}]},{"content":"Retrieves a value that indicates whether the control is displayed.","pos":[44278,44344]},{"pos":[44385,44397],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is displayed; otherwise, false.","pos":[44399,44450]},{"pos":[44457,44464],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To modify the visible state of the control, call the visible method.","pos":[44466,44534]},{"pos":[44540,44559],"content":"Method isRestricted","linkify":"Method isRestricted","nodes":[{"content":"Method isRestricted","pos":[0,19]}]},{"content":"Retrieves a value that indicates whether the control is restricted.","pos":[44561,44628]},{"pos":[44670,44682],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is restricted; otherwise, false.","pos":[44684,44736]},{"pos":[44742,44767],"content":"Method isUserSetupEnabled","linkify":"Method isUserSetupEnabled","nodes":[{"content":"Method isUserSetupEnabled","pos":[0,25]}]},{"content":"Retrieves a value that indicates whether the control allows for the specified level of customization.","pos":[44769,44870]},{"pos":[44939,44949],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"neededSetupRights","pos":[44951,44968]},{"content":"A value from the FormAllowUserSetup enumeration that specifies the level of customization that is being queried for the control.","pos":[44971,45099]},{"pos":[45106,45118],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control, design, and parent containers allow for the level of customization that is specified by the neededSetupRights parameter; otherwise, false.","pos":[45120,45279]},{"pos":[45286,45293],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following table describes the values for the neededSetupRights parameter.","pos":[45295,45372]},{"content":"FormAllowUserSetup::No 0","pos":[45712,45736]},{"content":"No changes can be made to the control.","pos":[45747,45785]},{"content":"If this value is set for the neededSetupRights parameter, the method always returns true.","pos":[45786,45875]},{"content":"FormAllowUserSetup::Restricted 1","pos":[45880,45912]},{"content":"The user can change the editable, visible, skip, label, and width properties of the control.","pos":[45915,46007]},{"content":"The user cannot move the control.","pos":[46008,46041]},{"content":"FormAllowUserSetup::Yes 2","pos":[46048,46073]},{"content":"The user can change the editable, visible, skip, label, and width properties of the control.","pos":[46083,46175]},{"content":"The user can also move the control.","pos":[46176,46211]},{"content":"For this method to return true, the AllowUserSetup property for the design and all parent containers must allow for the level of access that is specified by the neededSetupRights parameter.","pos":[46215,46404]},{"pos":[46410,46423],"content":"Method italic","linkify":"Method italic","nodes":[{"content":"Method italic","pos":[0,13]}]},{"pos":[46474,46484],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[46486,46491]},{"pos":[46500,46512],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[46518,46529],"content":"Method left","linkify":"Method left","nodes":[{"content":"Method left","pos":[0,11]}]},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[46531,46595]},{"pos":[46646,46656],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[46658,46663]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[46666,46752]},{"content":"mode","pos":[46764,46768]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[46771,46857]},{"pos":[46864,46876],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal position of the control in the form.","pos":[46878,46929]},{"pos":[46935,46950],"content":"Method leftMode","linkify":"Method leftMode","nodes":[{"content":"Method leftMode","pos":[0,15]}]},{"content":"Sets the horizontal arrange mode for the control in the form.","pos":[46952,47013]},{"pos":[47058,47068],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[47070,47075]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[47078,47164]},{"pos":[47171,47183],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal arrange mode for the control in the form.","pos":[47185,47241]},{"pos":[47247,47263],"content":"Method leftValue","linkify":"Method leftValue","nodes":[{"content":"Method leftValue","pos":[0,16]}]},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[47265,47329]},{"pos":[47375,47385],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[47387,47392]},{"content":"An integer value that indicates the horizontal position of the control; optional.","pos":[47395,47476]},{"pos":[47483,47495],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal position of the control in the form.","pos":[47497,47548]},{"pos":[47554,47574],"content":"Method markAsUserAdd","linkify":"Method markAsUserAdd","nodes":[{"content":"Method markAsUserAdd","pos":[0,20]}]},{"content":"Marks or unmarks the control as a user-added control.","pos":[47576,47629]},{"pos":[47687,47697],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[47699,47704]},{"content":"The Boolean value that indicates whether the control should be marked as a user-added control.","pos":[47707,47801]},{"pos":[47808,47820],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control was marked as a user-added control; otherwise, false.","pos":[47822,47895]},{"pos":[47901,47921],"content":"Method mouseDblClick","linkify":"Method mouseDblClick","nodes":[{"content":"Method mouseDblClick","pos":[0,20]}]},{"content":"Is called when the control is double-clicked by the user.","pos":[47923,47980]},{"pos":[48072,48082],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[48084,48085]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[48088,48149]},{"content":"y","pos":[48161,48162]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[48165,48226]},{"content":"button","pos":[48238,48244]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[48247,48308]},{"content":"Ctrl","pos":[48320,48324]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[48327,48388]},{"content":"Shift","pos":[48400,48405]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[48408,48469]},{"pos":[48476,48488],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[48490,48529]},{"pos":[48536,48543],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[48545,48649]},{"pos":[48655,48671],"content":"Method mouseDown","linkify":"Method mouseDown","nodes":[{"content":"Method mouseDown","pos":[0,16]}]},{"content":"Is called when the user clicks the mouse button over the control.","pos":[48673,48738]},{"pos":[48826,48836],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[48838,48839]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[48842,48903]},{"content":"y","pos":[48915,48916]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[48919,48980]},{"content":"button","pos":[48992,48998]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[49001,49062]},{"content":"Ctrl","pos":[49074,49078]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[49081,49142]},{"content":"Shift","pos":[49154,49159]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[49162,49223]},{"pos":[49230,49242],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[49244,49283]},{"pos":[49290,49297],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[49299,49403]},{"content":"This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.","pos":[49404,49539]},{"pos":[49545,49561],"content":"Method mouseMove","linkify":"Method mouseMove","nodes":[{"content":"Method mouseMove","pos":[0,16]}]},{"content":"Is called when the user moves the mouse pointer over the control.","pos":[49563,49628]},{"pos":[49716,49726],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[49728,49729]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[49732,49793]},{"content":"y","pos":[49805,49806]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[49809,49870]},{"content":"button","pos":[49882,49888]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[49891,49952]},{"content":"Ctrl","pos":[49964,49968]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[49971,50032]},{"content":"Shift","pos":[50044,50049]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[50052,50113]},{"pos":[50120,50132],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[50134,50173]},{"pos":[50180,50187],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[50189,50293]},{"pos":[50299,50313],"content":"Method mouseUp","linkify":"Method mouseUp","nodes":[{"content":"Method mouseUp","pos":[0,14]}]},{"content":"Is called when the user releases the mouse button over the control area.","pos":[50315,50387]},{"pos":[50473,50483],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[50485,50486]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[50489,50550]},{"content":"y","pos":[50562,50563]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[50566,50627]},{"content":"button","pos":[50639,50645]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[50648,50709]},{"content":"Ctrl","pos":[50721,50725]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[50728,50789]},{"content":"Shift","pos":[50801,50806]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[50809,50870]},{"pos":[50877,50889],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[50891,50930]},{"pos":[50937,50944],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[50946,51050]},{"content":"This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.","pos":[51051,51186]},{"pos":[51192,51203],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.","pos":[51205,51372]},{"pos":[51413,51423],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[51425,51430]},{"content":"The name to assign to the control.","pos":[51433,51467]},{"pos":[51474,51486],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[51488,51552]},{"pos":[51559,51566],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[51568,51662]},{"content":"It must begin with a letter.","pos":[51668,51696]},{"content":"It cannot exceed 250 characters.","pos":[51701,51733]},{"content":"It can include numbers and underscore (<ph id=\"ph1\">\\_</ph>) characters.","pos":[51738,51792],"source":"It can include numbers and underscore (\\_) characters."},{"content":"It cannot include punctuation or spaces.","pos":[51797,51837]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.","pos":[51842,51952]},{"pos":[51958,51981],"content":"Method neededPermission","linkify":"Method neededPermission","nodes":[{"content":"Method neededPermission","pos":[0,23]}]},{"pos":[52034,52044],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[52046,52051]},{"pos":[52060,52072],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[52078,52105],"content":"Method SysObsoleteAttribute","linkify":"Method SysObsoleteAttribute","nodes":[{"content":"Method SysObsoleteAttribute","pos":[0,27]}]},{"pos":[52157,52169],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[52175,52195],"content":"Method parentControl","linkify":"Method parentControl","nodes":[{"content":"Method parentControl","pos":[0,20]}]},{"content":"Retrieves the parent control for the control.","pos":[52197,52242]},{"pos":[52289,52301],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The parent control for the control.","pos":[52303,52338]},{"pos":[52344,52362],"content":"Method securityKey","linkify":"Method securityKey","nodes":[{"content":"Method securityKey","pos":[0,18]}]},{"content":"Sets or returns the ID of the security key for the control.","pos":[52364,52423]},{"pos":[52491,52501],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[52503,52508]},{"content":"The ID of the security key to assign to the control; optional.","pos":[52511,52573]},{"pos":[52580,52592],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the security key for the control; 0 (zero) if no security key is assigned to the control.","pos":[52594,52693]},{"pos":[52699,52721],"content":"Method showContextMenu","linkify":"Method showContextMenu","nodes":[{"content":"Method showContextMenu","pos":[0,22]}]},{"content":"Shows the shortcut menu for the control.","pos":[52723,52763]},{"pos":[52818,52828],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"menuHandle","pos":[52830,52840]},{"content":"The ID of the menu to show.","pos":[52843,52870]},{"pos":[52877,52889],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates whether the call succeeded.","pos":[52891,52950]},{"pos":[52956,52967],"content":"Method skip","linkify":"Method skip","nodes":[{"content":"Method skip","pos":[0,11]}]},{"content":"Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.","pos":[52969,53096]},{"pos":[53145,53155],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[53157,53162]},{"content":"The value to assign to the skip property of the control; optional.","pos":[53165,53231]},{"pos":[53238,53250],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is skipped when the user presses the TAB key to move to the control; otherwise, false.","pos":[53252,53358]},{"pos":[53365,53372],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the enabled property is true, the allowEdit property is false, and the skip property is true, the user cannot change the contents of the control but can still copy the contents of the control.","pos":[53374,53569]},{"pos":[53575,53589],"content":"Method toolTip","linkify":"Method toolTip","nodes":[{"content":"Method toolTip","pos":[0,14]}]},{"content":"Retrieves the tooltip text for the control.","pos":[53591,53634]},{"pos":[53667,53679],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The tooltip text for the control; an empty string if no tooltip text has been defined for the control.","pos":[53681,53783]},{"pos":[53790,53797],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The method might be overridden to provide a value to the toolTip method.","pos":[53799,53871]},{"pos":[53877,53887],"content":"Method top","linkify":"Method top","nodes":[{"content":"Method top","pos":[0,10]}]},{"content":"Gets or sets the vertical position of the control in the form.","pos":[53889,53951]},{"pos":[54001,54011],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[54013,54018]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[54021,54105]},{"content":"mode","pos":[54117,54121]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[54124,54208]},{"pos":[54215,54227],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical position of the control in the form.","pos":[54229,54278]},{"pos":[54284,54298],"content":"Method topMode","linkify":"Method topMode","nodes":[{"content":"Method topMode","pos":[0,14]}]},{"content":"Sets the vertical arrange mode for the control in the form.","pos":[54300,54359]},{"pos":[54403,54413],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[54415,54420]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[54423,54507]},{"pos":[54514,54526],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical arrange mode for the control in the form.","pos":[54528,54582]},{"pos":[54588,54603],"content":"Method topValue","linkify":"Method topValue","nodes":[{"content":"Method topValue","pos":[0,15]}]},{"content":"Gets or sets the vertical position of the control in the form.","pos":[54605,54667]},{"pos":[54712,54722],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[54724,54729]},{"content":"An integer value that indicates the vertical position of the control; optional.","pos":[54732,54811]},{"pos":[54818,54830],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical position of the control in the form.","pos":[54832,54881]},{"pos":[54887,54898],"content":"Method type","linkify":"Method type","nodes":[{"content":"Method type","pos":[0,11]}]},{"pos":[54939,54949],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[54951,54956]},{"pos":[54965,54977],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[54983,54999],"content":"Method underline","linkify":"Method underline","nodes":[{"content":"Method underline","pos":[0,16]}]},{"pos":[55053,55063],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[55065,55070]},{"pos":[55079,55091],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[55097,55124],"content":"Method SysObsoleteAttribute","linkify":"Method SysObsoleteAttribute","nodes":[{"content":"Method SysObsoleteAttribute","pos":[0,27]}]},{"pos":[55188,55198],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[55200,55204]},{"pos":[55213,55225],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[55231,55246],"content":"Method userData","linkify":"Method userData","nodes":[{"content":"Method userData","pos":[0,15]}]},{"content":"Gets or sets the user data for the control.","pos":[55248,55291]},{"pos":[55336,55346],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[55348,55353]},{"content":"An integer value that indicates the user data for the control; optional.","pos":[55356,55428]},{"pos":[55435,55447],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user data for the control.","pos":[55449,55479]},{"pos":[55485,55504],"content":"Method userDataItem","linkify":"Method userDataItem","nodes":[{"content":"Method userDataItem","pos":[0,19]}]},{"content":"Gets or sets the user data item for the control.","pos":[55506,55554]},{"pos":[55603,55613],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[55615,55620]},{"content":"An integer value that indicates the user data item for the control; optional.","pos":[55623,55700]},{"pos":[55707,55719],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user data item for the control.","pos":[55721,55756]},{"pos":[55762,55782],"content":"Method userDataItems","linkify":"Method userDataItems","nodes":[{"content":"Method userDataItems","pos":[0,20]}]},{"content":"Gets or sets the number of user data items for the control.","pos":[55784,55843]},{"pos":[55893,55903],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[55905,55910]},{"content":"An integer value that indicates the number of user data items for the control; optional.","pos":[55913,56001]},{"pos":[56008,56020],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of user data items for the control.","pos":[56022,56068]},{"pos":[56074,56092],"content":"Method userDisable","linkify":"Method userDisable","nodes":[{"content":"Method userDisable","pos":[0,18]}]},{"content":"Gets or sets the value that indicates whether the control is disabled for the user.","pos":[56094,56177]},{"pos":[56225,56235],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[56237,56242]},{"content":"The value that indicates whether the control is disabled for the user; optional.","pos":[56245,56325]},{"pos":[56332,56344],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control is disabled for the user; otherwise, 0.","pos":[56346,56402]},{"pos":[56408,56425],"content":"Method userHeight","linkify":"Method userHeight","nodes":[{"content":"Method userHeight","pos":[0,17]}]},{"content":"Gets or sets the custom user height for the control.","pos":[56427,56479]},{"pos":[56526,56536],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[56538,56543]},{"content":"The user height for the control; optional.","pos":[56546,56588]},{"pos":[56595,56607],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The custom user height for the control.","pos":[56609,56648]},{"pos":[56654,56669],"content":"Method userHide","linkify":"Method userHide","nodes":[{"content":"Method userHide","pos":[0,15]}]},{"content":"Gets or sets the value that indicates whether the control is hidden from the user.","pos":[56671,56753]},{"pos":[56798,56808],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[56810,56815]},{"content":"The value that indicates whether the control is hidden from the user; optional.","pos":[56818,56897]},{"pos":[56904,56916],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control is hidden from the user; otherwise, 0.","pos":[56918,56973]},{"pos":[56980,56987],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The user specifies whether a control is hidden by right-clicking the control when it is viewable or by right-clicking another control when the original control is hidden.","pos":[56989,57159]},{"content":"A right-click opens a menu that can be used to hide or display the control.","pos":[57160,57235]},{"content":"This method lets you programmatically determine and set the value.","pos":[57236,57302]},{"pos":[57308,57331],"content":"Method userOrgContainer","linkify":"Method userOrgContainer","nodes":[{"content":"Method userOrgContainer","pos":[0,23]}]},{"content":"Gets or sets the organization container for the control.","pos":[57333,57389]},{"pos":[57442,57452],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[57454,57459]},{"content":"The organization container to set for the control; optional.","pos":[57462,57522]},{"pos":[57529,57541],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The organization container for the control.","pos":[57543,57586]},{"pos":[57592,57613],"content":"Method userOrgSibling","linkify":"Method userOrgSibling","nodes":[{"content":"Method userOrgSibling","pos":[0,21]}]},{"content":"Gets or sets the organization sibling for the control.","pos":[57615,57669]},{"pos":[57720,57730],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[57732,57737]},{"content":"The organization sibling to set for the control; optional.","pos":[57740,57798]},{"pos":[57805,57817],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The organization sibling for the control.","pos":[57819,57860]},{"pos":[57866,57887],"content":"Method userPromptText","linkify":"Method userPromptText","nodes":[{"content":"Method userPromptText","pos":[0,21]}]},{"content":"Gets or sets the user label text for the control.","pos":[57889,57938]},{"pos":[57989,57999],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[58001,58006]},{"content":"The user label text to set for the control; optional.","pos":[58009,58062]},{"pos":[58069,58081],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user label text for the control.","pos":[58083,58119]},{"pos":[58125,58149],"content":"Method userSecurityLevel","linkify":"Method userSecurityLevel","nodes":[{"content":"Method userSecurityLevel","pos":[0,24]}]},{"content":"Gets or sets the user security level for the control.","pos":[58151,58204]},{"pos":[58258,58268],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[58270,58275]},{"content":"The user security level to set for the control; optional.","pos":[58278,58335]},{"pos":[58342,58354],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user security level for the control.","pos":[58356,58396]},{"pos":[58402,58417],"content":"Method userSkip","linkify":"Method userSkip","nodes":[{"content":"Method userSkip","pos":[0,15]}]},{"content":"Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.","pos":[58419,58567]},{"pos":[58612,58622],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[58624,58629]},{"content":"The value to assign to the userSkip property; optional.","pos":[58632,58687]},{"content":"The value is 1 if the user setting to skip the control is in effect; otherwise, the value is 0.","pos":[58688,58783]},{"pos":[58790,58802],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the user setting to skip the control is in effect; otherwise, 0.","pos":[58804,58873]},{"pos":[58879,58895],"content":"Method userWidth","linkify":"Method userWidth","nodes":[{"content":"Method userWidth","pos":[0,16]}]},{"content":"Sets or returns the width of the control in pixels.","pos":[58897,58948]},{"pos":[58994,59004],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[59006,59011]},{"content":"The number of pixels to use as the width of the control; optional.","pos":[59014,59080]},{"pos":[59087,59099],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of pixels that the user specified as the width of the control; 0 (zero) if the user did not specify a character width.","pos":[59101,59230]},{"pos":[59237,59244],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The userWidth method returns the width in pixels, based on six times the number of characters.","pos":[59246,59340]},{"content":"For example, if the user has specified 30 characters as the width of the control, the return value is 6 <ph id=\"ph1\">\\*</ph> 30 = 180.","pos":[59341,59457],"source":" For example, if the user has specified 30 characters as the width of the control, the return value is 6 \\* 30 = 180."},{"content":"To specify the width of the control in characters, users can right-click the control to open the setup form where the character specification is made.","pos":[59458,59608]},{"pos":[59614,59636],"content":"Method verticalSpacing","linkify":"Method verticalSpacing","nodes":[{"content":"Method verticalSpacing","pos":[0,22]}]},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[59638,59699]},{"pos":[59768,59778],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[59780,59785]},{"content":"An integer value that indicates the AutoMode value for the control; optional.","pos":[59788,59865]},{"content":"mode","pos":[59877,59881]},{"content":"An integer value that indicates the AutoMode value for the control; optional.","pos":[59884,59961]},{"pos":[59968,59980],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing of the control in the form.","pos":[59982,60030]},{"pos":[60036,60062],"content":"Method verticalSpacingMode","linkify":"Method verticalSpacingMode","nodes":[{"content":"Method verticalSpacingMode","pos":[0,26]}]},{"content":"Sets the vertical spacing mode for the control in the form.","pos":[60064,60123]},{"pos":[60188,60198],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[60200,60204]},{"pos":[60213,60225],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing mode for the control in the form.","pos":[60227,60281]},{"pos":[60287,60314],"content":"Method verticalSpacingValue","linkify":"Method verticalSpacingValue","nodes":[{"content":"Method verticalSpacingValue","pos":[0,27]}]},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[60316,60377]},{"pos":[60434,60444],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[60446,60451]},{"content":"An integer value that indicates the vertical spacing of the control; optional.","pos":[60454,60532]},{"pos":[60539,60551],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing of the control in the form.","pos":[60553,60601]},{"pos":[60607,60621],"content":"Method visible","linkify":"Method visible","nodes":[{"content":"Method visible","pos":[0,14]}]},{"content":"Sets or returns a value that indicates whether the control is visible.","pos":[60623,60693]},{"pos":[60745,60755],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[60757,60762]},{"content":"The value to assign to the visibility setting for the control; optional.","pos":[60765,60837]},{"pos":[60844,60856],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is visible; otherwise, false.","pos":[60858,60907]},{"pos":[60913,60925],"content":"Method width","linkify":"Method width","nodes":[{"content":"Method width","pos":[0,12]}]},{"content":"Gets or sets the width of the control.","pos":[60927,60965]},{"pos":[61017,61027],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[61029,61034]},{"content":"mode","pos":[61048,61052]},{"pos":[61061,61073],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width of the control in pixels.","pos":[61075,61110]},{"pos":[61117,61124],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Exact mode is used if the value parameter is omitted.Calculate the width according to the following table:","pos":[61126,61232]},{"content":"Mode.","pos":[61236,61241]},{"content":"Width calculation.","pos":[61254,61272]},{"content":"-1 Exact.","pos":[61458,61467]},{"content":"The exact width in pixels of the controls is used.","pos":[61476,61526]},{"content":"0 Auto.","pos":[61569,61576]},{"content":"The width of the control is calculated automatically and the value parameter is ignored.","pos":[61587,61675]},{"content":"1 Column width.","pos":[61680,61695]},{"content":"The layout of the form determines the width of the control.","pos":[61698,61757]},{"content":"The width and width calculation mode can be set separately.","pos":[61790,61849]},{"pos":[61855,61871],"content":"Method widthMode","linkify":"Method widthMode","nodes":[{"content":"Method widthMode","pos":[0,16]}]},{"content":"Gets or sets the calculation mode of the width of the control.","pos":[61873,61935]},{"pos":[61981,61991],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[61993,61998]},{"pos":[62007,62019],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the current calculation mode.","pos":[62021,62082]},{"pos":[62089,62096],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Calculate the width according to the following table:","pos":[62098,62151]},{"content":"Mode.","pos":[62155,62160]},{"content":"Width Calculation.","pos":[62171,62189]},{"content":"Exact.","pos":[62373,62379]},{"content":"The exact width in pixels of the controls is used.","pos":[62389,62439]},{"content":"Auto.","pos":[62482,62487]},{"content":"The width of the control is calculated automatically and the value parameter is ignored.","pos":[62498,62586]},{"content":"Column width.","pos":[62591,62604]},{"content":"The layout of the form determines the width of the control.","pos":[62607,62666]},{"content":"The width of the control might change when the mode is set to auto or column width.","pos":[62699,62782]},{"pos":[62788,62805],"content":"Method widthValue","linkify":"Method widthValue","nodes":[{"content":"Method widthValue","pos":[0,17]}]},{"content":"Gets or sets the width of the control.","pos":[62807,62845]},{"pos":[62892,62902],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[62904,62909]},{"pos":[62918,62930],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width in pixels of the control.","pos":[62932,62967]},{"pos":[62974,62981],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To change the width of the control, use the exact width calculation mode.","pos":[62983,63056]},{"pos":[63062,63073],"content":"Method drop","linkify":"Method drop","nodes":[{"content":"Method drop","pos":[0,11]}]},{"content":"Raises the drop event to indicate that a drop operation is being performed on the current control.","pos":[63075,63173]},{"pos":[63259,63269],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[63271,63281]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[63284,63369]},{"content":"dragMode","pos":[63381,63389]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[63392,63477]},{"content":"x","pos":[63489,63490]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[63493,63578]},{"content":"y","pos":[63590,63591]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[63594,63679]},{"pos":[63685,63696],"content":"Method copy","linkify":"Method copy","nodes":[{"content":"Method copy","pos":[0,11]}]},{"content":"Copies the contents of the control to the clipboard.","pos":[63698,63750]},{"pos":[63780,63790],"content":"Method cut","linkify":"Method cut","nodes":[{"content":"Method cut","pos":[0,10]}]},{"content":"Cuts the contents of the control.","pos":[63792,63825]},{"pos":[63854,63869],"content":"Method setFocus","linkify":"Method setFocus","nodes":[{"content":"Method setFocus","pos":[0,15]}]},{"content":"Sets the focus on the control.","pos":[63871,63901]},{"pos":[63935,63952],"content":"Method mouseLeave","linkify":"Method mouseLeave","nodes":[{"content":"Method mouseLeave","pos":[0,17]}]},{"content":"Indicates that the mouse pointer has left the control.","pos":[63954,64008]},{"pos":[64044,64058],"content":"Method endDrag","linkify":"Method endDrag","nodes":[{"content":"Method endDrag","pos":[0,14]}]},{"content":"Is called when the user has finished dragging a form control.","pos":[64060,64121]},{"pos":[64155,64162],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This event is not raised unless the DragDrop property is enabled for the control and a beginDrag event has already been started.","pos":[64164,64292]},{"content":"To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.","pos":[64293,64397]},{"pos":[64403,64417],"content":"Method context","linkify":"Method context","nodes":[{"content":"Method context","pos":[0,14]}]},{"content":"Shows the shortcut menu for the control.","pos":[64419,64459]},{"pos":[64492,64507],"content":"Method gotFocus","linkify":"Method gotFocus","nodes":[{"content":"Method gotFocus","pos":[0,15]}]},{"content":"Indicates that the control has received focus.","pos":[64509,64555]},{"pos":[64589,64610],"content":"Method prefColumnSize","linkify":"Method prefColumnSize","nodes":[{"content":"Method prefColumnSize","pos":[0,21]}]},{"content":"Specifies the preferred column width and height for the form control.","pos":[64612,64681]},{"pos":[64743,64753],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"width","pos":[64755,64760]},{"content":"The preferred height of the control.","pos":[64763,64799]},{"content":"height","pos":[64811,64817]},{"content":"The preferred height of the control.","pos":[64820,64856]},{"pos":[64862,64878],"content":"Method lostFocus","linkify":"Method lostFocus","nodes":[{"content":"Method lostFocus","pos":[0,16]}]},{"content":"Indicates that the control has lost focus.","pos":[64880,64922]},{"pos":[64957,64978],"content":"Method displayControl","linkify":"Method displayControl","nodes":[{"content":"Method displayControl","pos":[0,21]}]},{"content":"Displays the control.","pos":[64980,65001]},{"pos":[65041,65070],"content":"Method registerOverrideMethod","linkify":"Method registerOverrideMethod","nodes":[{"content":"Method registerOverrideMethod","pos":[0,29]}]},{"pos":[65188,65198],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodToOverride","pos":[65200,65216]},{"content":"objectMethodToCall","pos":[65230,65248]},{"content":"overrideObject","pos":[65262,65276]},{"pos":[65284,65296],"content":"Method paste","linkify":"Method paste","nodes":[{"content":"Method paste","pos":[0,12]}]},{"content":"Pastes the contents of the clipboard into the control.","pos":[65298,65352]},{"pos":[65383,65406],"content":"Method resetUserSetting","linkify":"Method resetUserSetting","nodes":[{"content":"Method resetUserSetting","pos":[0,23]}]},{"content":"Resets the user settings for the control.","pos":[65408,65449]},{"pos":[65491,65504],"content":"Method dropEx","linkify":"Method dropEx","nodes":[{"content":"Method dropEx","pos":[0,13]}]},{"content":"Raises the dropEx event to indicate that a drop operation is being performed on the current control.","pos":[65506,65606]},{"pos":[65688,65698],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[65700,65710]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[65713,65798]},{"content":"dragMode","pos":[65810,65818]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[65821,65906]},{"content":"x","pos":[65918,65919]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[65922,66007]},{"content":"y","pos":[66019,66020]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[66023,66108]},{"pos":[66114,66131],"content":"Method mouseEnter","linkify":"Method mouseEnter","nodes":[{"content":"Method mouseEnter","pos":[0,17]}]},{"content":"Is called when the user moves the mouse pointer into the control area.","pos":[66133,66203]},{"pos":[66293,66303],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[66305,66306]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[66309,66370]},{"content":"y","pos":[66382,66383]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[66386,66447]},{"content":"button","pos":[66459,66465]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[66468,66529]},{"content":"Ctrl","pos":[66541,66545]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[66548,66609]},{"content":"Shift","pos":[66621,66626]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[66629,66690]},{"pos":[66696,66714],"content":"Method inputSearch","linkify":"Method inputSearch","nodes":[{"content":"Method inputSearch","pos":[0,18]}]},{"content":"Performs data filtering for the control, based on the specified string.","pos":[66716,66787]},{"pos":[66838,66848],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"searchStr","pos":[66850,66859]},{"content":"The string value to use to filter data; optional.","pos":[66862,66911]},{"pos":[66917,66933],"content":"Method dragLeave","linkify":"Method dragLeave","nodes":[{"content":"Method dragLeave","pos":[0,16]}]},{"content":"Raises the dragLeave event to indicate that a mouse drag operation has left the current control.","pos":[66935,67031]},{"pos":[67065,67092],"content":"Class FormFilterPaneControl","linkify":"Class FormFilterPaneControl","nodes":[{"content":"Class FormFilterPaneControl","pos":[0,27]}]},{"pos":[67150,67157],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[67163,67171],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[67177,67184],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[67188,67194]},{"content":"Description","pos":[67298,67309]},{"content":"public boolean alignChild(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[67752,67796],"source":"public boolean alignChild(\\[boolean value\\])"},{"content":"public boolean alignChildren(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[68034,68081],"source":"public boolean alignChildren(\\[boolean value\\])"},{"content":"public boolean alignControl(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[68316,68362],"source":"public boolean alignControl(\\[boolean value\\])"},{"content":"Determines whether to align the control.","pos":[68426,68466]},{"content":"public boolean allowEdit(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[68598,68641],"source":"public boolean allowEdit(\\[boolean value\\])"},{"content":"Determines whether the user can change the contents of the control.","pos":[68708,68775]},{"content":"public boolean allowSysSetup()","pos":[68880,68910]},{"content":"Retrieves a value that indicates whether the control is shown in the SysSetup form.","pos":[68990,69073]},{"content":"public int allowUserSetup(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[69162,69202],"source":"public int allowUserSetup(\\[int value\\])"},{"content":"public int arrangeGuide(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[69444,69482],"source":"public int arrangeGuide(\\[int value\\])"},{"content":"public int arrangeMethod(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[69726,69765],"source":"public int arrangeMethod(\\[int value\\])"},{"content":"public int arrangeWhen(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[70008,70045],"source":"public int arrangeWhen(\\[int value\\])"},{"content":"public boolean autoDeclaration(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[70290,70339],"source":"public boolean autoDeclaration(\\[boolean value\\])"},{"content":"Determines whether the system can declare a member variable that has the same name as the control.","pos":[70400,70498]},{"content":"public int beginDrag(int x, int y)","pos":[70572,70606]},{"content":"Is called when the user starts to drag a form control.","pos":[70682,70736]},{"content":"public int bottomMargin(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[70854,70911],"source":"public int bottomMargin(\\[int value\\], \\[AutoMode mode\\])"},{"content":"public AutoMode bottomMarginMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[71136,71187],"source":"public AutoMode bottomMarginMode(\\[AutoMode mode\\])"},{"content":"public int bottomMarginValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[71418,71461],"source":"public int bottomMarginValue(\\[int value\\])"},{"content":"public container calcControlSize(int chars, int lines)","pos":[71700,71754]},{"content":"Retrieves the size of the control.","pos":[71810,71844]},{"content":"public str caption(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[71982,72015],"source":"public str caption(\\[str value\\])"},{"content":"Gets or set the caption of the control.","pos":[72092,72131]},{"content":"public int columns(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[72264,72316],"source":"public int columns(\\[int value\\], \\[AutoMode mode\\])"},{"content":"public AutoMode columnsMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[72546,72592],"source":"public AutoMode columnsMode(\\[AutoMode mode\\])"},{"content":"public int columnspace(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[72828,72884],"source":"public int columnspace(\\[int value\\], \\[AutoMode mode\\])"},{"content":"public AutoMode columnspaceMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[73110,73160],"source":"public AutoMode columnspaceMode(\\[AutoMode mode\\])"},{"content":"public int columnspaceValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[73392,73434],"source":"public int columnspaceValue(\\[int value\\])"},{"content":"public int columnsValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[73674,73712],"source":"public int columnsValue(\\[int value\\])"},{"content":"public ConfigurationKeyId configurationKey(<ph id=\"ph1\">\\[</ph>ConfigurationKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[73956,74028],"source":"public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])"},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[74066,74133]},{"content":"public List configurationKeyEx()","pos":[74238,74270]},{"content":"Retrieves a list that contains the IDs of configuration keys that are in effect for the control.","pos":[74348,74444]},{"content":"public str countryRegionCodes(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[74520,74564],"source":"public str countryRegionCodes(\\[str value\\])"},{"content":"Gets or sets the comma-separated list of country/region codes for the control.","pos":[74630,74708]},{"content":"public FieldId countryRegionContextField(<ph id=\"ph1\">\\[</ph>FieldId value<ph id=\"ph2\">\\]</ph>)","pos":[74802,74861],"source":"public FieldId countryRegionContextField(\\[FieldId value\\])"},{"content":"public str dataRelationPath(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[75084,75126],"source":"public str dataRelationPath(\\[str value\\])"},{"content":"Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[75194,75319]},{"content":"public int dataSource(<ph id=\"ph1\">\\[</ph>AnyType value<ph id=\"ph2\">\\]</ph>)","pos":[75366,75406],"source":"public int dataSource(\\[AnyType value\\])"},{"content":"Gets or sets a data source to be used by the control or the form.","pos":[75476,75541]},{"content":"public int displayTarget(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[75648,75687],"source":"public int displayTarget(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.","pos":[75758,75989]},{"content":"public int dragDrop(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[75994,76028],"source":"public int dragDrop(\\[int value\\])"},{"content":"Determines whether to enable or disable drag-and-drop operations for the control.","pos":[76104,76185]},{"content":"public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)","pos":[76276,76357]},{"content":"Raises the dragOver event to indicate that a mouse drag operation is over the current control.","pos":[76386,76480]},{"content":"public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)","pos":[76558,76635]},{"content":"Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.","pos":[76668,76764]},{"content":"public str dragText()","pos":[76840,76861]},{"content":"Retrieves the text that is displayed when the form control is dragged.","pos":[76950,77020]},{"content":"public boolean enabled(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[77122,77163],"source":"public boolean enabled(\\[boolean value\\])"},{"content":"Determines whether to enable or disable the object.","pos":[77232,77283]},{"content":"public boolean hasChanged(<ph id=\"ph1\">\\[</ph>boolean val<ph id=\"ph2\">\\]</ph>)","pos":[77404,77446],"source":"public boolean hasChanged(\\[boolean val\\])"},{"content":"Sets or returns a value that indicates whether the contents of the control have changed.","pos":[77514,77602]},{"content":"public boolean hasUserSetting()","pos":[77686,77717]},{"content":"Indicates whether the control has custom user settings.","pos":[77796,77851]},{"content":"public int height(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[77968,78010],"source":"public int height(int value, \\[int mode\\])"},{"content":"Gets or sets the height of the control.","pos":[78078,78117]},{"content":"public int heightMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[78250,78286],"source":"public int heightMode(\\[int value\\])"},{"content":"Gets or sets a calculation mode for the height of the control.","pos":[78360,78422]},{"content":"public int heightValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[78532,78569],"source":"public int heightValue(\\[int value\\])"},{"content":"Gets or sets the height of the control.","pos":[78642,78681]},{"content":"public str helpField()","pos":[78814,78836]},{"content":"Retrieves the Help text for the control.","pos":[78924,78964]},{"content":"public str helpText(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[79096,79130],"source":"public str helpText(\\[str value\\])"},{"content":"Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.","pos":[79206,79310]},{"content":"public boolean hideIfEmpty(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[79378,79423],"source":"public boolean hideIfEmpty(\\[boolean value\\])"},{"content":"public str hierarchyParent(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[79660,79701],"source":"public str hierarchyParent(\\[str value\\])"},{"content":"Gets or sets the HierarchyParent property value of the control.","pos":[79770,79833]},{"content":"public int hWnd()","pos":[79942,79959]},{"content":"Retrieves the Windows handle for the control.","pos":[80052,80097]},{"content":"public boolean isContainer()","pos":[80224,80252]},{"content":"public boolean isDisplayed()","pos":[80506,80534]},{"content":"Retrieves a value that indicates whether the control is displayed.","pos":[80616,80682]},{"content":"public boolean isRestricted()","pos":[80788,80817]},{"content":"Retrieves a value that indicates whether the control is restricted.","pos":[80898,80965]},{"content":"public boolean isUserSetupEnabled(int neededSetupRights)","pos":[81070,81126]},{"content":"Retrieves a value that indicates whether the control allows for the specified level of customization.","pos":[81180,81281]},{"content":"public boolean leave()","pos":[81352,81374]},{"content":"public int left(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[81634,81674],"source":"public int left(int value, \\[int mode\\])"},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[81744,81808]},{"content":"public int leftMargin(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[81916,81971],"source":"public int leftMargin(\\[int value\\], \\[AutoMode mode\\])"},{"content":"public AutoMode leftMarginMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[82198,82247],"source":"public AutoMode leftMarginMode(\\[AutoMode mode\\])"},{"content":"public int leftMarginValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[82480,82521],"source":"public int leftMarginValue(\\[int value\\])"},{"content":"public int leftMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[82762,82796],"source":"public int leftMode(\\[int value\\])"},{"content":"Sets the horizontal arrange mode for the control in the form.","pos":[82872,82933]},{"content":"public int leftValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[83044,83079],"source":"public int leftValue(\\[int value\\])"},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[83154,83218]},{"content":"public boolean markAsUserAdd(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[83326,83373],"source":"public boolean markAsUserAdd(\\[boolean value\\])"},{"content":"Marks or unmarks the control as a user-added control.","pos":[83436,83489]},{"content":"public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[83608,83687]},{"content":"Is called when the control is double-clicked by the user.","pos":[83718,83775]},{"content":"public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[83890,83965]},{"content":"Is called when the user clicks the mouse button over the control.","pos":[84000,84065]},{"content":"public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[84172,84247]},{"content":"Is called when the user moves the mouse pointer over the control.","pos":[84282,84347]},{"content":"public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[84454,84527]},{"content":"Is called when the user releases the mouse button over the control area.","pos":[84564,84636]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[84736,84766],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.","pos":[84846,85013]},{"content":"public int neededPermission(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[85050,85092],"source":"public int neededPermission(\\[int value\\])"},{"content":"public container SysObsoleteAttribute()","pos":[85332,85371]},{"content":"public FormControl parentControl()","pos":[85614,85648]},{"content":"Retrieves the parent control for the control.","pos":[85724,85769]},{"content":"public int rightMargin(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[85896,85952],"source":"public int rightMargin(\\[int value\\], \\[AutoMode mode\\])"},{"content":"public AutoMode rightMarginMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[86178,86228],"source":"public AutoMode rightMarginMode(\\[AutoMode mode\\])"},{"content":"public int rightMarginValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[86460,86502],"source":"public int rightMarginValue(\\[int value\\])"},{"content":"public SecurityKeyId securityKey(<ph id=\"ph1\">\\[</ph>SecurityKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[86742,86799],"source":"public SecurityKeyId securityKey(\\[SecurityKeyId value\\])"},{"content":"Sets or returns the ID of the security key for the control.","pos":[86852,86911]},{"content":"public int showContextMenu(int menuHandle)","pos":[87024,87066]},{"content":"Shows the shortcut menu for the control.","pos":[87134,87174]},{"content":"public boolean skip(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[87306,87344],"source":"public boolean skip(\\[boolean value\\])"},{"content":"Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.","pos":[87416,87543]},{"content":"public int sort(<ph id=\"ph1\">\\[</ph>SortOrder sortDirection<ph id=\"ph2\">\\]</ph>)","pos":[87588,87632],"source":"public int sort(\\[SortOrder sortDirection\\])"},{"content":"public str toolTip()","pos":[87870,87890]},{"content":"Retrieves the tooltip text for the control.","pos":[87980,88023]},{"content":"public int top(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[88152,88191],"source":"public int top(int value, \\[int mode\\])"},{"content":"Gets or sets the vertical position of the control in the form.","pos":[88262,88324]},{"content":"public int topMargin(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[88434,88488],"source":"public int topMargin(\\[int value\\], \\[AutoMode mode\\])"},{"content":"public AutoMode topMarginMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[88716,88764],"source":"public AutoMode topMarginMode(\\[AutoMode mode\\])"},{"content":"public int topMarginValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[88998,89038],"source":"public int topMarginValue(\\[int value\\])"},{"content":"public int topMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[89280,89313],"source":"public int topMode(\\[int value\\])"},{"content":"Sets the vertical arrange mode for the control in the form.","pos":[89390,89449]},{"content":"public int topValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[89562,89596],"source":"public int topValue(\\[int value\\])"},{"content":"Gets or sets the vertical position of the control in the form.","pos":[89672,89734]},{"content":"public int type(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[89844,89874],"source":"public int type(\\[int value\\])"},{"content":"public boolean SysObsoleteAttribute(container data)","pos":[90126,90177]},{"content":"public int userData(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[90408,90442],"source":"public int userData(\\[int value\\])"},{"content":"Gets or sets the user data for the control.","pos":[90518,90561]},{"content":"public int userDataItem(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[90690,90728],"source":"public int userDataItem(\\[int value\\])"},{"content":"Gets or sets the user data item for the control.","pos":[90800,90848]},{"content":"public int userDataItems(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[90972,91011],"source":"public int userDataItems(\\[int value\\])"},{"content":"Gets or sets the number of user data items for the control.","pos":[91082,91141]},{"content":"public int userDisable(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[91254,91291],"source":"public int userDisable(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is disabled for the user.","pos":[91364,91447]},{"content":"public int userHeight(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[91536,91572],"source":"public int userHeight(\\[int value\\])"},{"content":"Gets or sets the custom user height for the control.","pos":[91646,91698]},{"content":"public int userHide(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[91818,91852],"source":"public int userHide(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is hidden from the user.","pos":[91928,92010]},{"content":"public int userOrgContainer(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[92100,92142],"source":"public int userOrgContainer(\\[int value\\])"},{"content":"Gets or sets the organization container for the control.","pos":[92210,92266]},{"content":"public int userOrgSibling(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[92382,92422],"source":"public int userOrgSibling(\\[int value\\])"},{"content":"Gets or sets the organization sibling for the control.","pos":[92492,92546]},{"content":"public str userPromptText(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[92664,92704],"source":"public str userPromptText(\\[str value\\])"},{"content":"Gets or sets the user label text for the control.","pos":[92774,92823]},{"content":"public int userSecurityLevel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[92946,92989],"source":"public int userSecurityLevel(\\[int value\\])"},{"content":"Gets or sets the user security level for the control.","pos":[93056,93109]},{"content":"public int userSkip(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[93228,93262],"source":"public int userSkip(\\[int value\\])"},{"content":"Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.","pos":[93338,93486]},{"content":"public int userWidth(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[93510,93545],"source":"public int userWidth(\\[int value\\])"},{"content":"Sets or returns the width of the control in pixels.","pos":[93620,93671]},{"content":"public int verticalSpacing(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[93792,93852],"source":"public int verticalSpacing(\\[int value\\], \\[AutoMode mode\\])"},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[93902,93963]},{"content":"public AutoMode verticalSpacingMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[94074,94128],"source":"public AutoMode verticalSpacingMode(\\[AutoMode mode\\])"},{"content":"Sets the vertical spacing mode for the control in the form.","pos":[94184,94243]},{"content":"public int verticalSpacingValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[94356,94402],"source":"public int verticalSpacingValue(\\[int value\\])"},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[94466,94527]},{"content":"public boolean visible(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[94638,94679],"source":"public boolean visible(\\[boolean value\\])"},{"content":"Sets or returns a value that indicates whether the control is visible.","pos":[94748,94818]},{"content":"public int width(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[94920,94961],"source":"public int width(int value, \\[int mode\\])"},{"content":"Gets or sets the width of the control.","pos":[95030,95068]},{"content":"public int widthMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[95202,95237],"source":"public int widthMode(\\[int value\\])"},{"content":"Gets or sets the calculation mode of the width of the control.","pos":[95312,95374]},{"content":"public int widthValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[95484,95520],"source":"public int widthValue(\\[int value\\])"},{"content":"Gets or sets the width of the control.","pos":[95594,95632]},{"content":"private void OnEnter(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[95766,95838],"source":"private void OnEnter(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void lostFocus()","pos":[96048,96071]},{"content":"Indicates that the control has lost focus.","pos":[96158,96200]},{"content":"public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)","pos":[96330,96403]},{"content":"Raises the drop event to indicate that a drop operation is being performed on the current control.","pos":[96440,96538]},{"content":"public void paste()","pos":[96612,96631]},{"content":"Pastes the contents of the clipboard into the control.","pos":[96722,96776]},{"content":"public void setFocus()","pos":[96894,96916]},{"content":"Sets the focus on the control.","pos":[97004,97034]},{"content":"private void OnLeaving(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[97176,97250],"source":"private void OnLeaving(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void mouseLeave()","pos":[97458,97482]},{"content":"Indicates that the mouse pointer has left the control.","pos":[97568,97622]},{"content":"public void gotFocus()","pos":[97740,97762]},{"content":"Indicates that the control has received focus.","pos":[97850,97896]},{"content":"public void dragLeave()","pos":[98022,98045]},{"content":"Raises the dragLeave event to indicate that a mouse drag operation has left the current control.","pos":[98132,98228]},{"content":"public void enter()","pos":[98304,98323]},{"content":"public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)","pos":[98586,98655]},{"content":"Raises the dropEx event to indicate that a drop operation is being performed on the current control.","pos":[98696,98796]},{"content":"public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[98868,98945]},{"content":"Is called when the user moves the mouse pointer into the control area.","pos":[98978,99048]},{"content":"public void jumpRef()","pos":[99150,99171]},{"content":"private void OnLostFocus(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[99432,99508],"source":"private void OnLostFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"private void OnGotFocus(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[99714,99789],"source":"private void OnGotFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void prefColumnSize(int width, int height)","pos":[99996,100045]},{"content":"Specifies the preferred column width and height for the form control.","pos":[100106,100175]},{"content":"public void cut()","pos":[100278,100295]},{"content":"Cuts the contents of the control.","pos":[100388,100421]},{"content":"public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, <ph id=\"ph1\">\\[</ph>Object overrideObject<ph id=\"ph2\">\\]</ph>)","pos":[100560,100667],"source":"public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, \\[Object overrideObject\\])"},{"content":"public void displayControl()","pos":[100842,100870]},{"content":"Displays the control.","pos":[100952,100973]},{"content":"public void copy()","pos":[101124,101142]},{"content":"Copies the contents of the control to the clipboard.","pos":[101234,101286]},{"content":"public void context()","pos":[101406,101427]},{"content":"Shows the shortcut menu for the control.","pos":[101516,101556]},{"content":"public void resetUserSetting()","pos":[101688,101718]},{"content":"Resets the user settings for the control.","pos":[101798,101839]},{"content":"public void inputSearch(str searchStr)","pos":[101970,102008]},{"content":"Performs data filtering for the control, based on the specified string.","pos":[102080,102151]},{"content":"public void filter(<ph id=\"ph1\">\\[</ph>str filterStr<ph id=\"ph2\">\\]</ph>)","pos":[102252,102289],"source":"public void filter(\\[str filterStr\\])"},{"content":"public void endDrag()","pos":[102534,102555]},{"content":"Is called when the user has finished dragging a form control.","pos":[102644,102705]},{"pos":[102819,102836],"content":"Method alignChild","linkify":"Method alignChild","nodes":[{"content":"Method alignChild","pos":[0,17]}]},{"pos":[102891,102901],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[102903,102908]},{"pos":[102917,102929],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[102935,102955],"content":"Method alignChildren","linkify":"Method alignChildren","nodes":[{"content":"Method alignChildren","pos":[0,20]}]},{"pos":[103013,103023],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[103025,103030]},{"pos":[103039,103051],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[103057,103076],"content":"Method alignControl","linkify":"Method alignControl","nodes":[{"content":"Method alignControl","pos":[0,19]}]},{"content":"Determines whether to align the control.","pos":[103078,103118]},{"pos":[103175,103185],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[103187,103192]},{"content":"The new value for the property; optional.","pos":[103195,103236]},{"pos":[103243,103255],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control should be aligned; otherwise, false.","pos":[103257,103313]},{"pos":[103320,103327],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The upper-left corner of the control is aligned according to the longest label.","pos":[103329,103408]},{"pos":[103414,103430],"content":"Method allowEdit","linkify":"Method allowEdit","nodes":[{"content":"Method allowEdit","pos":[0,16]}]},{"content":"Determines whether the user can change the contents of the control.","pos":[103432,103499]},{"pos":[103553,103563],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[103565,103570]},{"content":"The value to assign to the allowEdit property.","pos":[103573,103619]},{"pos":[103626,103638],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control can be edited; otherwise, false.","pos":[103640,103692]},{"pos":[103699,103706],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When this property is set on a container control, modifications are disabled or enabled for all controls within the container.","pos":[103708,103834]},{"pos":[103840,103860],"content":"Method allowSysSetup","linkify":"Method allowSysSetup","nodes":[{"content":"Method allowSysSetup","pos":[0,20]}]},{"content":"Retrieves a value that indicates whether the control is shown in the SysSetup form.","pos":[103862,103945]},{"pos":[103988,104000],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is shown in the SysSetup form; otherwise, false.","pos":[104002,104070]},{"pos":[104076,104097],"content":"Method allowUserSetup","linkify":"Method allowUserSetup","nodes":[{"content":"Method allowUserSetup","pos":[0,21]}]},{"pos":[104148,104158],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[104160,104165]},{"pos":[104174,104186],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[104192,104211],"content":"Method arrangeGuide","linkify":"Method arrangeGuide","nodes":[{"content":"Method arrangeGuide","pos":[0,19]}]},{"pos":[104260,104270],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[104272,104277]},{"pos":[104286,104298],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[104304,104324],"content":"Method arrangeMethod","linkify":"Method arrangeMethod","nodes":[{"content":"Method arrangeMethod","pos":[0,20]}]},{"pos":[104374,104384],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[104386,104391]},{"pos":[104400,104412],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[104418,104436],"content":"Method arrangeWhen","linkify":"Method arrangeWhen","nodes":[{"content":"Method arrangeWhen","pos":[0,18]}]},{"pos":[104484,104494],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[104496,104501]},{"pos":[104510,104522],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[104528,104550],"content":"Method autoDeclaration","linkify":"Method autoDeclaration","nodes":[{"content":"Method autoDeclaration","pos":[0,22]}]},{"content":"Determines whether the system can declare a member variable that has the same name as the control.","pos":[104552,104650]},{"pos":[104710,104720],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[104722,104727]},{"content":"The new value for the property; optional.","pos":[104730,104771]},{"pos":[104778,104790],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the member variable can be declared for this control; otherwise, false.","pos":[104792,104871]},{"pos":[104878,104885],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Controls cannot have identical names.","pos":[104887,104924]},{"pos":[104930,104946],"content":"Method beginDrag","linkify":"Method beginDrag","nodes":[{"content":"Method beginDrag","pos":[0,16]}]},{"content":"Is called when the user starts to drag a form control.","pos":[104948,105002]},{"pos":[105049,105059],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[105061,105062]},{"content":"An integer value that indicates the y-coordinate of the mouse pointer.","pos":[105065,105135]},{"content":"The coordinate is relative to the upper-left corner of the control.","pos":[105136,105203]},{"content":"y","pos":[105215,105216]},{"content":"An integer value that indicates the y-coordinate of the mouse pointer.","pos":[105219,105289]},{"content":"The coordinate is relative to the upper-left corner of the control.","pos":[105290,105357]},{"pos":[105364,105376],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[105378,105417]},{"pos":[105424,105431],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This event is not raised unless the DragDrop property is enabled for the control.","pos":[105433,105514]},{"content":"To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.","pos":[105515,105619]},{"pos":[105625,105644],"content":"Method bottomMargin","linkify":"Method bottomMargin","nodes":[{"content":"Method bottomMargin","pos":[0,19]}]},{"pos":[105710,105720],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[105722,105727]},{"content":"mode","pos":[105741,105745]},{"pos":[105754,105766],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[105772,105795],"content":"Method bottomMarginMode","linkify":"Method bottomMarginMode","nodes":[{"content":"Method bottomMarginMode","pos":[0,23]}]},{"pos":[105857,105867],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[105869,105873]},{"pos":[105882,105894],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[105900,105924],"content":"Method bottomMarginValue","linkify":"Method bottomMarginValue","nodes":[{"content":"Method bottomMarginValue","pos":[0,24]}]},{"pos":[105978,105988],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[105990,105995]},{"pos":[106004,106016],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106022,106044],"content":"Method calcControlSize","linkify":"Method calcControlSize","nodes":[{"content":"Method calcControlSize","pos":[0,22]}]},{"content":"Retrieves the size of the control.","pos":[106046,106080]},{"pos":[106147,106157],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"chars","pos":[106159,106164]},{"content":"The number of lines to use to determine the height.","pos":[106167,106218]},{"content":"lines","pos":[106230,106235]},{"content":"The number of lines to use to determine the height.","pos":[106238,106289]},{"pos":[106296,106308],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The container that holds the width and height.","pos":[106310,106356]},{"pos":[106362,106376],"content":"Method caption","linkify":"Method caption","nodes":[{"content":"Method caption","pos":[0,14]}]},{"content":"Gets or set the caption of the control.","pos":[106378,106417]},{"pos":[106461,106471],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[106473,106478]},{"pos":[106487,106499],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that is used as the caption of the control.","pos":[106501,106555]},{"pos":[106561,106575],"content":"Method columns","linkify":"Method columns","nodes":[{"content":"Method columns","pos":[0,14]}]},{"pos":[106636,106646],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[106648,106653]},{"content":"mode","pos":[106667,106671]},{"pos":[106680,106692],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106698,106716],"content":"Method columnsMode","linkify":"Method columnsMode","nodes":[{"content":"Method columnsMode","pos":[0,18]}]},{"pos":[106773,106783],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[106785,106789]},{"pos":[106798,106810],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106816,106834],"content":"Method columnspace","linkify":"Method columnspace","nodes":[{"content":"Method columnspace","pos":[0,18]}]},{"pos":[106899,106909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[106911,106916]},{"content":"mode","pos":[106930,106934]},{"pos":[106943,106955],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[106961,106983],"content":"Method columnspaceMode","linkify":"Method columnspaceMode","nodes":[{"content":"Method columnspaceMode","pos":[0,22]}]},{"pos":[107044,107054],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[107056,107060]},{"pos":[107069,107081],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[107087,107110],"content":"Method columnspaceValue","linkify":"Method columnspaceValue","nodes":[{"content":"Method columnspaceValue","pos":[0,23]}]},{"pos":[107163,107173],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[107175,107180]},{"pos":[107189,107201],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[107207,107226],"content":"Method columnsValue","linkify":"Method columnsValue","nodes":[{"content":"Method columnsValue","pos":[0,19]}]},{"pos":[107275,107285],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[107287,107292]},{"pos":[107301,107313],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[107319,107342],"content":"Method configurationKey","linkify":"Method configurationKey","nodes":[{"content":"Method configurationKey","pos":[0,23]}]},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[107344,107411]},{"pos":[107494,107504],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[107506,107511]},{"content":"The ID of the configuration key being assigned to the control; optional.","pos":[107514,107586]},{"pos":[107593,107605],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the configuration key that is assigned to the control.","pos":[107607,107679]},{"pos":[107686,107693],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The configuration key is used to determine whether this control can be displayed.","pos":[107695,107776]},{"content":"If the configuration key is disabled in the system, the control is not displayed in the form.","pos":[107777,107870]},{"pos":[107876,107901],"content":"Method configurationKeyEx","linkify":"Method configurationKeyEx","nodes":[{"content":"Method configurationKeyEx","pos":[0,25]}]},{"content":"Retrieves a list that contains the IDs of configuration keys that are in effect for the control.","pos":[107903,107999]},{"pos":[108044,108056],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list that contains the IDs of configuration keys that are in effect for the control.","pos":[108058,108144]},{"pos":[108151,108158],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The returned list does not contain duplicate IDs.","pos":[108160,108209]},{"content":"If the control is bound to a data source, the returned list of configuration key IDs also includes the configuration key ID for the table and field.","pos":[108210,108358]},{"content":"The returned list also contains any configuration key IDs that are applied to the properties, extended data type, or enumType methods.","pos":[108359,108493]},{"pos":[108499,108524],"content":"Method countryRegionCodes","linkify":"Method countryRegionCodes","nodes":[{"content":"Method countryRegionCodes","pos":[0,25]}]},{"content":"Gets or sets the comma-separated list of country/region codes for the control.","pos":[108526,108604]},{"pos":[108659,108669],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[108671,108676]},{"content":"The string that contains the country/region codes to set; optional.","pos":[108679,108746]},{"pos":[108753,108765],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The comma-separated list of country/region codes for the control.","pos":[108767,108832]},{"pos":[108838,108870],"content":"Method countryRegionContextField","linkify":"Method countryRegionContextField","nodes":[{"content":"Method countryRegionContextField","pos":[0,32]}]},{"pos":[108940,108950],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[108952,108957]},{"pos":[108966,108978],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108984,109007],"content":"Method dataRelationPath","linkify":"Method dataRelationPath","nodes":[{"content":"Method dataRelationPath","pos":[0,23]}]},{"content":"Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[109009,109134]},{"pos":[109187,109197],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[109199,109204]},{"content":"The string that contains the period-delimited list of relations; optional.","pos":[109207,109281]},{"pos":[109288,109300],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[109302,109414]},{"pos":[109421,109428],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is used by the reference group control to track exactly which relations produce the replacement field that is used.","pos":[109430,109557]},{"content":"It enables the reference group control to bind consistently to the controls that it contains.","pos":[109558,109651]},{"pos":[109657,109674],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"content":"Gets or sets a data source to be used by the control or the form.","pos":[109676,109741]},{"pos":[109792,109802],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[109804,109809]},{"pos":[109818,109830],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the data source to be used.","pos":[109832,109877]},{"pos":[109883,109903],"content":"Method displayTarget","linkify":"Method displayTarget","nodes":[{"content":"Method displayTarget","pos":[0,20]}]},{"content":"Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.","pos":[109905,110136]},{"pos":[110186,110196],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[110198,110203]},{"content":"The integer value that indicates where the control is displayed; optional.","pos":[110206,110280]},{"pos":[110287,110299],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise Portal, or in both.","pos":[110301,110461]},{"pos":[110467,110482],"content":"Method dragDrop","linkify":"Method dragDrop","nodes":[{"content":"Method dragDrop","pos":[0,15]}]},{"content":"Determines whether to enable or disable drag-and-drop operations for the control.","pos":[110484,110565]},{"pos":[110610,110620],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[110622,110627]},{"content":"An Integer that indicates whether drag-and-drop behavior is enabled; optional.","pos":[110630,110708]},{"pos":[110715,110727],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if drag-and-drop operations are enabled; otherwise, false.","pos":[110729,110789]},{"pos":[110796,110803],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the dragLeave , the dragOver, and the dragOverEx to specify the behavior.","pos":[110805,110882]},{"pos":[110888,110903],"content":"Method dragOver","linkify":"Method dragOver","nodes":[{"content":"Method dragOver","pos":[0,15]}]},{"content":"Raises the dragOver event to indicate that a mouse drag operation is over the current control.","pos":[110905,110999]},{"pos":[111093,111103],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[111105,111115]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[111118,111203]},{"content":"dragMode","pos":[111215,111223]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[111226,111311]},{"content":"x","pos":[111323,111324]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[111327,111412]},{"content":"y","pos":[111424,111425]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[111428,111513]},{"pos":[111520,111532],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A FormDrag enumeration value that indicates the mode of dragging.","pos":[111534,111599]},{"pos":[111605,111622],"content":"Method dragOverEx","linkify":"Method dragOverEx","nodes":[{"content":"Method dragOverEx","pos":[0,17]}]},{"content":"Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.","pos":[111624,111720]},{"pos":[111810,111820],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[111822,111832]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[111835,111920]},{"content":"dragMode","pos":[111932,111940]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[111943,112028]},{"content":"x","pos":[112040,112041]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[112044,112129]},{"content":"y","pos":[112141,112142]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[112145,112230]},{"pos":[112237,112249],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A FormDrag enumeration value that indicates the mode of dragging.","pos":[112251,112316]},{"pos":[112322,112337],"content":"Method dragText","linkify":"Method dragText","nodes":[{"content":"Method dragText","pos":[0,15]}]},{"content":"Retrieves the text that is displayed when the form control is dragged.","pos":[112339,112409]},{"pos":[112443,112455],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The text that is displayed when the control is dragged; an empty string if there is no text to display when the control is dragged.","pos":[112457,112588]},{"pos":[112594,112608],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Determines whether to enable or disable the object.","pos":[112610,112661]},{"pos":[112713,112723],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[112725,112730]},{"content":"A Boolean value that indicates whether the control is enabled; optional.","pos":[112733,112805]},{"pos":[112812,112824],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the object is enabled; otherwise, false.","pos":[112826,112874]},{"pos":[112881,112888],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The enabled property allows controls to be enabled or disabled at run time.","pos":[112890,112965]},{"content":"For example, you can disable objects that do not apply to the current state of the application.","pos":[112966,113061]},{"content":"You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.","pos":[113062,113196]},{"pos":[113202,113219],"content":"Method hasChanged","linkify":"Method hasChanged","nodes":[{"content":"Method hasChanged","pos":[0,17]}]},{"content":"Sets or returns a value that indicates whether the contents of the control have changed.","pos":[113221,113309]},{"pos":[113362,113372],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"val","pos":[113374,113377]},{"content":"The value to assign as the hasChanged value for the control; optional.","pos":[113380,113450]},{"pos":[113457,113469],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the contents of the control have changed; otherwise, false.","pos":[113471,113538]},{"pos":[113544,113565],"content":"Method hasUserSetting","linkify":"Method hasUserSetting","nodes":[{"content":"Method hasUserSetting","pos":[0,21]}]},{"content":"Indicates whether the control has custom user settings.","pos":[113567,113622]},{"pos":[113666,113678],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control has custom user settings; otherwise, false.","pos":[113680,113743]},{"pos":[113749,113762],"content":"Method height","linkify":"Method height","nodes":[{"content":"Method height","pos":[0,13]}]},{"content":"Gets or sets the height of the control.","pos":[113764,113803]},{"pos":[113856,113866],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[113868,113873]},{"content":"An Integer that indicates how the height is calculated; optional.","pos":[113876,113941]},{"content":"mode","pos":[113953,113957]},{"content":"An Integer that indicates how the height is calculated; optional.","pos":[113960,114025]},{"pos":[114032,114044],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of the control in pixels.","pos":[114046,114082]},{"pos":[114089,114096],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Exact mode is used if the value parameter is omitted.Calculate the height according to the following table:","pos":[114098,114205]},{"content":"Mode.","pos":[114209,114214]},{"content":"Height calculation.","pos":[114228,114247]},{"content":"-1 Exact.","pos":[114435,114444]},{"content":"The exact height in pixels of the controls is used.","pos":[114454,114505]},{"content":"0 Auto.","pos":[114548,114555]},{"content":"The height of the control is calculated automatically and the value parameter is ignored.","pos":[114567,114656]},{"content":"1 Column height.","pos":[114661,114677]},{"content":"The layout of the form determines the height of the control.","pos":[114680,114740]},{"content":"The height and height calculation mode can be set separately.","pos":[114773,114834]},{"pos":[114840,114857],"content":"Method heightMode","linkify":"Method heightMode","nodes":[{"content":"Method heightMode","pos":[0,17]}]},{"content":"Gets or sets a calculation mode for the height of the control.","pos":[114859,114921]},{"pos":[114968,114978],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[114980,114985]},{"content":"An integer value that indicates how control height is calculated; optional.","pos":[114988,115063]},{"pos":[115070,115082],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The calculation mode.","pos":[115084,115105]},{"pos":[115112,115119],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Calculate the height according to the following table:","pos":[115121,115175]},{"content":"Mode.","pos":[115179,115184]},{"content":"Height Calculation.","pos":[115196,115215]},{"content":"Exact.","pos":[115401,115407]},{"content":"The exact height in pixels of the controls is used.","pos":[115418,115469]},{"content":"Auto.","pos":[115512,115517]},{"content":"The height of the control is calculated automatically and the value parameter is ignored.","pos":[115529,115618]},{"content":"Column height.","pos":[115623,115637]},{"content":"The layout of the form determines the height of the control.","pos":[115640,115700]},{"content":"The height of the control might change when the mode is set to auto or column height.","pos":[115733,115818]},{"pos":[115824,115842],"content":"Method heightValue","linkify":"Method heightValue","nodes":[{"content":"Method heightValue","pos":[0,18]}]},{"content":"Gets or sets the height of the control.","pos":[115844,115883]},{"pos":[115931,115941],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[115943,115948]},{"content":"An Integer that specifies the height in pixels; optional.","pos":[115951,116008]},{"pos":[116015,116027],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height in pixels.","pos":[116029,116050]},{"pos":[116057,116064],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The height of the control is not changed unless the exact height calculation mode is used.","pos":[116066,116156]},{"pos":[116162,116178],"content":"Method helpField","linkify":"Method helpField","nodes":[{"content":"Method helpField","pos":[0,16]}]},{"content":"Retrieves the Help text for the control.","pos":[116180,116220]},{"pos":[116255,116267],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Help text for the control; an empty string if there is no Help text for the control.","pos":[116269,116357]},{"pos":[116364,116371],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The helpField method cannot be used to set the value of the Help text.","pos":[116373,116443]},{"content":"Use the helpText method to set the value of the Help text.","pos":[116444,116502]},{"pos":[116508,116523],"content":"Method helpText","linkify":"Method helpText","nodes":[{"content":"Method helpText","pos":[0,15]}]},{"content":"Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.","pos":[116525,116629]},{"pos":[116674,116684],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[116686,116691]},{"content":"The value that is assigned as the Help text for the control.","pos":[116694,116754]},{"pos":[116761,116773],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string to be displayed at the bottom of the screen.","pos":[116775,116830]},{"pos":[116837,116844],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Set the HelpText property for an object by using the property sheet.","pos":[116846,116914]},{"content":"The Help text must not exceed 250 characters.","pos":[116915,116960]},{"pos":[116966,116984],"content":"Method hideIfEmpty","linkify":"Method hideIfEmpty","nodes":[{"content":"Method hideIfEmpty","pos":[0,18]}]},{"pos":[117040,117050],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[117052,117057]},{"pos":[117066,117078],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[117084,117106],"content":"Method hierarchyParent","linkify":"Method hierarchyParent","nodes":[{"content":"Method hierarchyParent","pos":[0,22]}]},{"content":"Gets or sets the HierarchyParent property value of the control.","pos":[117108,117171]},{"pos":[117223,117233],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[117235,117240]},{"content":"The value to assign to the HierarchyParent property of the control.","pos":[117243,117310]},{"pos":[117317,117329],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The HierarchyParent property value of the control.","pos":[117331,117381]},{"pos":[117387,117398],"content":"Method hWnd","linkify":"Method hWnd","nodes":[{"content":"Method hWnd","pos":[0,11]}]},{"content":"Retrieves the Windows handle for the control.","pos":[117400,117445]},{"pos":[117475,117487],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The handle for the control.","pos":[117489,117516]},{"pos":[117523,117530],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The handle can be used with the Windows API.","pos":[117532,117576]},{"pos":[117582,117600],"content":"Method isContainer","linkify":"Method isContainer","nodes":[{"content":"Method isContainer","pos":[0,18]}]},{"pos":[117641,117653],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[117659,117677],"content":"Method isDisplayed","linkify":"Method isDisplayed","nodes":[{"content":"Method isDisplayed","pos":[0,18]}]},{"content":"Retrieves a value that indicates whether the control is displayed.","pos":[117679,117745]},{"pos":[117786,117798],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is displayed; otherwise, false.","pos":[117800,117851]},{"pos":[117858,117865],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To modify the visible state of the control, call the visible method.","pos":[117867,117935]},{"pos":[117941,117960],"content":"Method isRestricted","linkify":"Method isRestricted","nodes":[{"content":"Method isRestricted","pos":[0,19]}]},{"content":"Retrieves a value that indicates whether the control is restricted.","pos":[117962,118029]},{"pos":[118071,118083],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is restricted; otherwise, false.","pos":[118085,118137]},{"pos":[118143,118168],"content":"Method isUserSetupEnabled","linkify":"Method isUserSetupEnabled","nodes":[{"content":"Method isUserSetupEnabled","pos":[0,25]}]},{"content":"Retrieves a value that indicates whether the control allows for the specified level of customization.","pos":[118170,118271]},{"pos":[118340,118350],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"neededSetupRights","pos":[118352,118369]},{"content":"A value from the FormAllowUserSetup enumeration that specifies the level of customization that is being queried for the control.","pos":[118372,118500]},{"pos":[118507,118519],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control, design, and parent containers allow for the level of customization that is specified by the neededSetupRights parameter; otherwise, false.","pos":[118521,118680]},{"pos":[118687,118694],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following table describes the values for the neededSetupRights parameter.","pos":[118696,118773]},{"content":"FormAllowUserSetup::No 0","pos":[119113,119137]},{"content":"No changes can be made to the control.","pos":[119148,119186]},{"content":"If this value is set for the neededSetupRights parameter, the method always returns true.","pos":[119187,119276]},{"content":"FormAllowUserSetup::Restricted 1","pos":[119281,119313]},{"content":"The user can change the editable, visible, skip, label, and width properties of the control.","pos":[119316,119408]},{"content":"The user cannot move the control.","pos":[119409,119442]},{"content":"FormAllowUserSetup::Yes 2","pos":[119449,119474]},{"content":"The user can change the editable, visible, skip, label, and width properties of the control.","pos":[119484,119576]},{"content":"The user can also move the control.","pos":[119577,119612]},{"content":"For this method to return true, the AllowUserSetup property for the design and all parent containers must allow for the level of access that is specified by the neededSetupRights parameter.","pos":[119616,119805]},{"pos":[119811,119823],"content":"Method leave","linkify":"Method leave","nodes":[{"content":"Method leave","pos":[0,12]}]},{"pos":[119858,119870],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[119876,119887],"content":"Method left","linkify":"Method left","nodes":[{"content":"Method left","pos":[0,11]}]},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[119889,119953]},{"pos":[120004,120014],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[120016,120021]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[120024,120110]},{"content":"mode","pos":[120122,120126]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[120129,120215]},{"pos":[120222,120234],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal position of the control in the form.","pos":[120236,120287]},{"pos":[120293,120310],"content":"Method leftMargin","linkify":"Method leftMargin","nodes":[{"content":"Method leftMargin","pos":[0,17]}]},{"pos":[120374,120384],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[120386,120391]},{"content":"mode","pos":[120405,120409]},{"pos":[120418,120430],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[120436,120457],"content":"Method leftMarginMode","linkify":"Method leftMarginMode","nodes":[{"content":"Method leftMarginMode","pos":[0,21]}]},{"pos":[120517,120527],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[120529,120533]},{"pos":[120542,120554],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[120560,120582],"content":"Method leftMarginValue","linkify":"Method leftMarginValue","nodes":[{"content":"Method leftMarginValue","pos":[0,22]}]},{"pos":[120634,120644],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[120646,120651]},{"pos":[120660,120672],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[120678,120693],"content":"Method leftMode","linkify":"Method leftMode","nodes":[{"content":"Method leftMode","pos":[0,15]}]},{"content":"Sets the horizontal arrange mode for the control in the form.","pos":[120695,120756]},{"pos":[120801,120811],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[120813,120818]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[120821,120907]},{"pos":[120914,120926],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal arrange mode for the control in the form.","pos":[120928,120984]},{"pos":[120990,121006],"content":"Method leftValue","linkify":"Method leftValue","nodes":[{"content":"Method leftValue","pos":[0,16]}]},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[121008,121072]},{"pos":[121118,121128],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[121130,121135]},{"content":"An integer value that indicates the horizontal position of the control; optional.","pos":[121138,121219]},{"pos":[121226,121238],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal position of the control in the form.","pos":[121240,121291]},{"pos":[121297,121317],"content":"Method markAsUserAdd","linkify":"Method markAsUserAdd","nodes":[{"content":"Method markAsUserAdd","pos":[0,20]}]},{"content":"Marks or unmarks the control as a user-added control.","pos":[121319,121372]},{"pos":[121430,121440],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[121442,121447]},{"content":"The Boolean value that indicates whether the control should be marked as a user-added control.","pos":[121450,121544]},{"pos":[121551,121563],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control was marked as a user-added control; otherwise, false.","pos":[121565,121638]},{"pos":[121644,121664],"content":"Method mouseDblClick","linkify":"Method mouseDblClick","nodes":[{"content":"Method mouseDblClick","pos":[0,20]}]},{"content":"Is called when the control is double-clicked by the user.","pos":[121666,121723]},{"pos":[121815,121825],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[121827,121828]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[121831,121892]},{"content":"y","pos":[121904,121905]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[121908,121969]},{"content":"button","pos":[121981,121987]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[121990,122051]},{"content":"Ctrl","pos":[122063,122067]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[122070,122131]},{"content":"Shift","pos":[122143,122148]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[122151,122212]},{"pos":[122219,122231],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[122233,122272]},{"pos":[122279,122286],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[122288,122392]},{"pos":[122398,122414],"content":"Method mouseDown","linkify":"Method mouseDown","nodes":[{"content":"Method mouseDown","pos":[0,16]}]},{"content":"Is called when the user clicks the mouse button over the control.","pos":[122416,122481]},{"pos":[122569,122579],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[122581,122582]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[122585,122646]},{"content":"y","pos":[122658,122659]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[122662,122723]},{"content":"button","pos":[122735,122741]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[122744,122805]},{"content":"Ctrl","pos":[122817,122821]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[122824,122885]},{"content":"Shift","pos":[122897,122902]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[122905,122966]},{"pos":[122973,122985],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[122987,123026]},{"pos":[123033,123040],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[123042,123146]},{"content":"This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.","pos":[123147,123282]},{"pos":[123288,123304],"content":"Method mouseMove","linkify":"Method mouseMove","nodes":[{"content":"Method mouseMove","pos":[0,16]}]},{"content":"Is called when the user moves the mouse pointer over the control.","pos":[123306,123371]},{"pos":[123459,123469],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[123471,123472]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[123475,123536]},{"content":"y","pos":[123548,123549]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[123552,123613]},{"content":"button","pos":[123625,123631]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[123634,123695]},{"content":"Ctrl","pos":[123707,123711]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[123714,123775]},{"content":"Shift","pos":[123787,123792]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[123795,123856]},{"pos":[123863,123875],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[123877,123916]},{"pos":[123923,123930],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[123932,124036]},{"pos":[124042,124056],"content":"Method mouseUp","linkify":"Method mouseUp","nodes":[{"content":"Method mouseUp","pos":[0,14]}]},{"content":"Is called when the user releases the mouse button over the control area.","pos":[124058,124130]},{"pos":[124216,124226],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[124228,124229]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[124232,124293]},{"content":"y","pos":[124305,124306]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[124309,124370]},{"content":"button","pos":[124382,124388]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[124391,124452]},{"content":"Ctrl","pos":[124464,124468]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[124471,124532]},{"content":"Shift","pos":[124544,124549]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[124552,124613]},{"pos":[124620,124632],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[124634,124673]},{"pos":[124680,124687],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[124689,124793]},{"content":"This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.","pos":[124794,124929]},{"pos":[124935,124946],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.","pos":[124948,125115]},{"pos":[125156,125166],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[125168,125173]},{"content":"The name to assign to the control.","pos":[125176,125210]},{"pos":[125217,125229],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[125231,125295]},{"pos":[125302,125309],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[125311,125405]},{"content":"It must begin with a letter.","pos":[125411,125439]},{"content":"It cannot exceed 250 characters.","pos":[125444,125476]},{"content":"It can include numbers and underscore (<ph id=\"ph1\">\\_</ph>) characters.","pos":[125481,125535],"source":"It can include numbers and underscore (\\_) characters."},{"content":"It cannot include punctuation or spaces.","pos":[125540,125580]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.","pos":[125585,125695]},{"pos":[125701,125724],"content":"Method neededPermission","linkify":"Method neededPermission","nodes":[{"content":"Method neededPermission","pos":[0,23]}]},{"pos":[125777,125787],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[125789,125794]},{"pos":[125803,125815],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[125821,125848],"content":"Method SysObsoleteAttribute","linkify":"Method SysObsoleteAttribute","nodes":[{"content":"Method SysObsoleteAttribute","pos":[0,27]}]},{"pos":[125900,125912],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[125918,125938],"content":"Method parentControl","linkify":"Method parentControl","nodes":[{"content":"Method parentControl","pos":[0,20]}]},{"content":"Retrieves the parent control for the control.","pos":[125940,125985]},{"pos":[126032,126044],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The parent control for the control.","pos":[126046,126081]},{"pos":[126087,126105],"content":"Method rightMargin","linkify":"Method rightMargin","nodes":[{"content":"Method rightMargin","pos":[0,18]}]},{"pos":[126170,126180],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[126182,126187]},{"content":"mode","pos":[126201,126205]},{"pos":[126214,126226],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[126232,126254],"content":"Method rightMarginMode","linkify":"Method rightMarginMode","nodes":[{"content":"Method rightMarginMode","pos":[0,22]}]},{"pos":[126315,126325],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[126327,126331]},{"pos":[126340,126352],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[126358,126381],"content":"Method rightMarginValue","linkify":"Method rightMarginValue","nodes":[{"content":"Method rightMarginValue","pos":[0,23]}]},{"pos":[126434,126444],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[126446,126451]},{"pos":[126460,126472],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[126478,126496],"content":"Method securityKey","linkify":"Method securityKey","nodes":[{"content":"Method securityKey","pos":[0,18]}]},{"content":"Sets or returns the ID of the security key for the control.","pos":[126498,126557]},{"pos":[126625,126635],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[126637,126642]},{"content":"The ID of the security key to assign to the control; optional.","pos":[126645,126707]},{"pos":[126714,126726],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the security key for the control; 0 (zero) if no security key is assigned to the control.","pos":[126728,126827]},{"pos":[126833,126855],"content":"Method showContextMenu","linkify":"Method showContextMenu","nodes":[{"content":"Method showContextMenu","pos":[0,22]}]},{"content":"Shows the shortcut menu for the control.","pos":[126857,126897]},{"pos":[126952,126962],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"menuHandle","pos":[126964,126974]},{"content":"The ID of the menu to show.","pos":[126977,127004]},{"pos":[127011,127023],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates whether the call succeeded.","pos":[127025,127084]},{"pos":[127090,127101],"content":"Method skip","linkify":"Method skip","nodes":[{"content":"Method skip","pos":[0,11]}]},{"content":"Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.","pos":[127103,127230]},{"pos":[127279,127289],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[127291,127296]},{"content":"The value to assign to the skip property of the control; optional.","pos":[127299,127365]},{"pos":[127372,127384],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is skipped when the user presses the TAB key to move to the control; otherwise, false.","pos":[127386,127492]},{"pos":[127499,127506],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the enabled property is true, the allowEdit property is false, and the skip property is true, the user cannot change the contents of the control but can still copy the contents of the control.","pos":[127508,127703]},{"pos":[127709,127720],"content":"Method sort","linkify":"Method sort","nodes":[{"content":"Method sort","pos":[0,11]}]},{"pos":[127775,127785],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sortDirection","pos":[127787,127800]},{"pos":[127809,127821],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[127827,127841],"content":"Method toolTip","linkify":"Method toolTip","nodes":[{"content":"Method toolTip","pos":[0,14]}]},{"content":"Retrieves the tooltip text for the control.","pos":[127843,127886]},{"pos":[127919,127931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The tooltip text for the control; an empty string if no tooltip text has been defined for the control.","pos":[127933,128035]},{"pos":[128042,128049],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The method might be overridden to provide a value to the toolTip method.","pos":[128051,128123]},{"pos":[128129,128139],"content":"Method top","linkify":"Method top","nodes":[{"content":"Method top","pos":[0,10]}]},{"content":"Gets or sets the vertical position of the control in the form.","pos":[128141,128203]},{"pos":[128253,128263],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[128265,128270]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[128273,128357]},{"content":"mode","pos":[128369,128373]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[128376,128460]},{"pos":[128467,128479],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical position of the control in the form.","pos":[128481,128530]},{"pos":[128536,128552],"content":"Method topMargin","linkify":"Method topMargin","nodes":[{"content":"Method topMargin","pos":[0,16]}]},{"pos":[128615,128625],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[128627,128632]},{"content":"mode","pos":[128646,128650]},{"pos":[128659,128671],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[128677,128697],"content":"Method topMarginMode","linkify":"Method topMarginMode","nodes":[{"content":"Method topMarginMode","pos":[0,20]}]},{"pos":[128756,128766],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[128768,128772]},{"pos":[128781,128793],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[128799,128820],"content":"Method topMarginValue","linkify":"Method topMarginValue","nodes":[{"content":"Method topMarginValue","pos":[0,21]}]},{"pos":[128871,128881],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[128883,128888]},{"pos":[128897,128909],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[128915,128929],"content":"Method topMode","linkify":"Method topMode","nodes":[{"content":"Method topMode","pos":[0,14]}]},{"content":"Sets the vertical arrange mode for the control in the form.","pos":[128931,128990]},{"pos":[129034,129044],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[129046,129051]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[129054,129138]},{"pos":[129145,129157],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical arrange mode for the control in the form.","pos":[129159,129213]},{"pos":[129219,129234],"content":"Method topValue","linkify":"Method topValue","nodes":[{"content":"Method topValue","pos":[0,15]}]},{"content":"Gets or sets the vertical position of the control in the form.","pos":[129236,129298]},{"pos":[129343,129353],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[129355,129360]},{"content":"An integer value that indicates the vertical position of the control; optional.","pos":[129363,129442]},{"pos":[129449,129461],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical position of the control in the form.","pos":[129463,129512]},{"pos":[129518,129529],"content":"Method type","linkify":"Method type","nodes":[{"content":"Method type","pos":[0,11]}]},{"pos":[129570,129580],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[129582,129587]},{"pos":[129596,129608],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[129614,129641],"content":"Method SysObsoleteAttribute","linkify":"Method SysObsoleteAttribute","nodes":[{"content":"Method SysObsoleteAttribute","pos":[0,27]}]},{"pos":[129705,129715],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[129717,129721]},{"pos":[129730,129742],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[129748,129763],"content":"Method userData","linkify":"Method userData","nodes":[{"content":"Method userData","pos":[0,15]}]},{"content":"Gets or sets the user data for the control.","pos":[129765,129808]},{"pos":[129853,129863],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[129865,129870]},{"content":"An integer value that indicates the user data for the control; optional.","pos":[129873,129945]},{"pos":[129952,129964],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user data for the control.","pos":[129966,129996]},{"pos":[130002,130021],"content":"Method userDataItem","linkify":"Method userDataItem","nodes":[{"content":"Method userDataItem","pos":[0,19]}]},{"content":"Gets or sets the user data item for the control.","pos":[130023,130071]},{"pos":[130120,130130],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[130132,130137]},{"content":"An integer value that indicates the user data item for the control; optional.","pos":[130140,130217]},{"pos":[130224,130236],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user data item for the control.","pos":[130238,130273]},{"pos":[130279,130299],"content":"Method userDataItems","linkify":"Method userDataItems","nodes":[{"content":"Method userDataItems","pos":[0,20]}]},{"content":"Gets or sets the number of user data items for the control.","pos":[130301,130360]},{"pos":[130410,130420],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[130422,130427]},{"content":"An integer value that indicates the number of user data items for the control; optional.","pos":[130430,130518]},{"pos":[130525,130537],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of user data items for the control.","pos":[130539,130585]},{"pos":[130591,130609],"content":"Method userDisable","linkify":"Method userDisable","nodes":[{"content":"Method userDisable","pos":[0,18]}]},{"content":"Gets or sets the value that indicates whether the control is disabled for the user.","pos":[130611,130694]},{"pos":[130742,130752],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[130754,130759]},{"content":"The value that indicates whether the control is disabled for the user; optional.","pos":[130762,130842]},{"pos":[130849,130861],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control is disabled for the user; otherwise, 0.","pos":[130863,130919]},{"pos":[130925,130942],"content":"Method userHeight","linkify":"Method userHeight","nodes":[{"content":"Method userHeight","pos":[0,17]}]},{"content":"Gets or sets the custom user height for the control.","pos":[130944,130996]},{"pos":[131043,131053],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[131055,131060]},{"content":"The user height for the control; optional.","pos":[131063,131105]},{"pos":[131112,131124],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The custom user height for the control.","pos":[131126,131165]},{"pos":[131171,131186],"content":"Method userHide","linkify":"Method userHide","nodes":[{"content":"Method userHide","pos":[0,15]}]},{"content":"Gets or sets the value that indicates whether the control is hidden from the user.","pos":[131188,131270]},{"pos":[131315,131325],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[131327,131332]},{"content":"The value that indicates whether the control is hidden from the user; optional.","pos":[131335,131414]},{"pos":[131421,131433],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control is hidden from the user; otherwise, 0.","pos":[131435,131490]},{"pos":[131497,131504],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The user specifies whether a control is hidden by right-clicking the control when it is viewable or by right-clicking another control when the original control is hidden.","pos":[131506,131676]},{"content":"A right-click opens a menu that can be used to hide or display the control.","pos":[131677,131752]},{"content":"This method lets you programmatically determine and set the value.","pos":[131753,131819]},{"pos":[131825,131848],"content":"Method userOrgContainer","linkify":"Method userOrgContainer","nodes":[{"content":"Method userOrgContainer","pos":[0,23]}]},{"content":"Gets or sets the organization container for the control.","pos":[131850,131906]},{"pos":[131959,131969],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[131971,131976]},{"content":"The organization container to set for the control; optional.","pos":[131979,132039]},{"pos":[132046,132058],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The organization container for the control.","pos":[132060,132103]},{"pos":[132109,132130],"content":"Method userOrgSibling","linkify":"Method userOrgSibling","nodes":[{"content":"Method userOrgSibling","pos":[0,21]}]},{"content":"Gets or sets the organization sibling for the control.","pos":[132132,132186]},{"pos":[132237,132247],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[132249,132254]},{"content":"The organization sibling to set for the control; optional.","pos":[132257,132315]},{"pos":[132322,132334],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The organization sibling for the control.","pos":[132336,132377]},{"pos":[132383,132404],"content":"Method userPromptText","linkify":"Method userPromptText","nodes":[{"content":"Method userPromptText","pos":[0,21]}]},{"content":"Gets or sets the user label text for the control.","pos":[132406,132455]},{"pos":[132506,132516],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[132518,132523]},{"content":"The user label text to set for the control; optional.","pos":[132526,132579]},{"pos":[132586,132598],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user label text for the control.","pos":[132600,132636]},{"pos":[132642,132666],"content":"Method userSecurityLevel","linkify":"Method userSecurityLevel","nodes":[{"content":"Method userSecurityLevel","pos":[0,24]}]},{"content":"Gets or sets the user security level for the control.","pos":[132668,132721]},{"pos":[132775,132785],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[132787,132792]},{"content":"The user security level to set for the control; optional.","pos":[132795,132852]},{"pos":[132859,132871],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user security level for the control.","pos":[132873,132913]},{"pos":[132919,132934],"content":"Method userSkip","linkify":"Method userSkip","nodes":[{"content":"Method userSkip","pos":[0,15]}]},{"content":"Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.","pos":[132936,133084]},{"pos":[133129,133139],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[133141,133146]},{"content":"The value to assign to the userSkip property; optional.","pos":[133149,133204]},{"content":"The value is 1 if the user setting to skip the control is in effect; otherwise, the value is 0.","pos":[133205,133300]},{"pos":[133307,133319],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the user setting to skip the control is in effect; otherwise, 0.","pos":[133321,133390]},{"pos":[133396,133412],"content":"Method userWidth","linkify":"Method userWidth","nodes":[{"content":"Method userWidth","pos":[0,16]}]},{"content":"Sets or returns the width of the control in pixels.","pos":[133414,133465]},{"pos":[133511,133521],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[133523,133528]},{"content":"The number of pixels to use as the width of the control; optional.","pos":[133531,133597]},{"pos":[133604,133616],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of pixels that the user specified as the width of the control; 0 (zero) if the user did not specify a character width.","pos":[133618,133747]},{"pos":[133754,133761],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The userWidth method returns the width in pixels, based on six times the number of characters.","pos":[133763,133857]},{"content":"For example, if the user has specified 30 characters as the width of the control, the return value is 6 <ph id=\"ph1\">\\*</ph> 30 = 180.","pos":[133858,133974],"source":" For example, if the user has specified 30 characters as the width of the control, the return value is 6 \\* 30 = 180."},{"content":"To specify the width of the control in characters, users can right-click the control to open the setup form where the character specification is made.","pos":[133975,134125]},{"pos":[134131,134153],"content":"Method verticalSpacing","linkify":"Method verticalSpacing","nodes":[{"content":"Method verticalSpacing","pos":[0,22]}]},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[134155,134216]},{"pos":[134285,134295],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[134297,134302]},{"content":"An integer value that indicates the AutoMode value for the control; optional.","pos":[134305,134382]},{"content":"mode","pos":[134394,134398]},{"content":"An integer value that indicates the AutoMode value for the control; optional.","pos":[134401,134478]},{"pos":[134485,134497],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing of the control in the form.","pos":[134499,134547]},{"pos":[134553,134579],"content":"Method verticalSpacingMode","linkify":"Method verticalSpacingMode","nodes":[{"content":"Method verticalSpacingMode","pos":[0,26]}]},{"content":"Sets the vertical spacing mode for the control in the form.","pos":[134581,134640]},{"pos":[134705,134715],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[134717,134721]},{"pos":[134730,134742],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing mode for the control in the form.","pos":[134744,134798]},{"pos":[134804,134831],"content":"Method verticalSpacingValue","linkify":"Method verticalSpacingValue","nodes":[{"content":"Method verticalSpacingValue","pos":[0,27]}]},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[134833,134894]},{"pos":[134951,134961],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[134963,134968]},{"content":"An integer value that indicates the vertical spacing of the control; optional.","pos":[134971,135049]},{"pos":[135056,135068],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing of the control in the form.","pos":[135070,135118]},{"pos":[135124,135138],"content":"Method visible","linkify":"Method visible","nodes":[{"content":"Method visible","pos":[0,14]}]},{"content":"Sets or returns a value that indicates whether the control is visible.","pos":[135140,135210]},{"pos":[135262,135272],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[135274,135279]},{"content":"The value to assign to the visibility setting for the control; optional.","pos":[135282,135354]},{"pos":[135361,135373],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is visible; otherwise, false.","pos":[135375,135424]},{"pos":[135430,135442],"content":"Method width","linkify":"Method width","nodes":[{"content":"Method width","pos":[0,12]}]},{"content":"Gets or sets the width of the control.","pos":[135444,135482]},{"pos":[135534,135544],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[135546,135551]},{"content":"An Integer that indicates how the width is calculated; optional.","pos":[135554,135618]},{"content":"mode","pos":[135630,135634]},{"content":"An Integer that indicates how the width is calculated; optional.","pos":[135637,135701]},{"pos":[135708,135720],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width of the control in pixels.","pos":[135722,135757]},{"pos":[135764,135771],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Exact mode is used if the value parameter is omitted.Calculate the width according to the following table:","pos":[135773,135879]},{"content":"Mode.","pos":[135883,135888]},{"content":"Width calculation.","pos":[135901,135919]},{"content":"-1 Exact.","pos":[136105,136114]},{"content":"The exact width in pixels of the controls is used.","pos":[136123,136173]},{"content":"0 Auto.","pos":[136216,136223]},{"content":"The width of the control is calculated automatically and the value parameter is ignored.","pos":[136234,136322]},{"content":"1 Column width.","pos":[136327,136342]},{"content":"The layout of the form determines the width of the control.","pos":[136345,136404]},{"content":"The width and width calculation mode can be set separately.","pos":[136437,136496]},{"pos":[136502,136518],"content":"Method widthMode","linkify":"Method widthMode","nodes":[{"content":"Method widthMode","pos":[0,16]}]},{"content":"Gets or sets the calculation mode of the width of the control.","pos":[136520,136582]},{"pos":[136628,136638],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[136640,136645]},{"content":"An integer value that indicates how control width is calculated; optional.","pos":[136648,136722]},{"pos":[136729,136741],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the current calculation mode.","pos":[136743,136804]},{"pos":[136811,136818],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Calculate the width according to the following table:","pos":[136820,136873]},{"content":"Mode.","pos":[136877,136882]},{"content":"Width Calculation.","pos":[136893,136911]},{"content":"Exact.","pos":[137095,137101]},{"content":"The exact width in pixels of the controls is used.","pos":[137111,137161]},{"content":"Auto.","pos":[137204,137209]},{"content":"The width of the control is calculated automatically and the value parameter is ignored.","pos":[137220,137308]},{"content":"Column width.","pos":[137313,137326]},{"content":"The layout of the form determines the width of the control.","pos":[137329,137388]},{"content":"The width of the control might change when the mode is set to auto or column width.","pos":[137421,137504]},{"pos":[137510,137527],"content":"Method widthValue","linkify":"Method widthValue","nodes":[{"content":"Method widthValue","pos":[0,17]}]},{"content":"Gets or sets the width of the control.","pos":[137529,137567]},{"pos":[137614,137624],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[137626,137631]},{"content":"An Integer that specifies the width in pixels; optional.","pos":[137634,137690]},{"pos":[137697,137709],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width in pixels of the control.","pos":[137711,137746]},{"pos":[137753,137760],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To change the width of the control, use the exact width calculation mode.","pos":[137762,137835]},{"pos":[137841,137855],"content":"Method OnEnter","linkify":"Method OnEnter","nodes":[{"content":"Method OnEnter","pos":[0,14]}]},{"pos":[137936,137946],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[137948,137954]},{"content":"e","pos":[137968,137969]},{"pos":[137977,137993],"content":"Method lostFocus","linkify":"Method lostFocus","nodes":[{"content":"Method lostFocus","pos":[0,16]}]},{"content":"Indicates that the control has lost focus.","pos":[137995,138037]},{"pos":[138072,138083],"content":"Method drop","linkify":"Method drop","nodes":[{"content":"Method drop","pos":[0,11]}]},{"content":"Raises the drop event to indicate that a drop operation is being performed on the current control.","pos":[138085,138183]},{"pos":[138269,138279],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[138281,138291]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[138294,138379]},{"content":"dragMode","pos":[138391,138399]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[138402,138487]},{"content":"x","pos":[138499,138500]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[138503,138588]},{"content":"y","pos":[138600,138601]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[138604,138689]},{"pos":[138695,138707],"content":"Method paste","linkify":"Method paste","nodes":[{"content":"Method paste","pos":[0,12]}]},{"content":"Pastes the contents of the clipboard into the control.","pos":[138709,138763]},{"pos":[138794,138809],"content":"Method setFocus","linkify":"Method setFocus","nodes":[{"content":"Method setFocus","pos":[0,15]}]},{"content":"Sets the focus on the control.","pos":[138811,138841]},{"pos":[138875,138891],"content":"Method OnLeaving","linkify":"Method OnLeaving","nodes":[{"content":"Method OnLeaving","pos":[0,16]}]},{"pos":[138974,138984],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[138986,138992]},{"content":"e","pos":[139006,139007]},{"pos":[139015,139032],"content":"Method mouseLeave","linkify":"Method mouseLeave","nodes":[{"content":"Method mouseLeave","pos":[0,17]}]},{"content":"Indicates that the mouse pointer has left the control.","pos":[139034,139088]},{"pos":[139124,139139],"content":"Method gotFocus","linkify":"Method gotFocus","nodes":[{"content":"Method gotFocus","pos":[0,15]}]},{"content":"Indicates that the control has received focus.","pos":[139141,139187]},{"pos":[139221,139237],"content":"Method dragLeave","linkify":"Method dragLeave","nodes":[{"content":"Method dragLeave","pos":[0,16]}]},{"content":"Raises the dragLeave event to indicate that a mouse drag operation has left the current control.","pos":[139239,139335]},{"pos":[139370,139382],"content":"Method enter","linkify":"Method enter","nodes":[{"content":"Method enter","pos":[0,12]}]},{"pos":[139413,139426],"content":"Method dropEx","linkify":"Method dropEx","nodes":[{"content":"Method dropEx","pos":[0,13]}]},{"content":"Raises the dropEx event to indicate that a drop operation is being performed on the current control.","pos":[139428,139528]},{"pos":[139610,139620],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[139622,139632]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[139635,139720]},{"content":"dragMode","pos":[139732,139740]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[139743,139828]},{"content":"x","pos":[139840,139841]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[139844,139929]},{"content":"y","pos":[139941,139942]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[139945,140030]},{"pos":[140036,140053],"content":"Method mouseEnter","linkify":"Method mouseEnter","nodes":[{"content":"Method mouseEnter","pos":[0,17]}]},{"content":"Is called when the user moves the mouse pointer into the control area.","pos":[140055,140125]},{"pos":[140215,140225],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[140227,140228]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[140231,140292]},{"content":"y","pos":[140304,140305]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[140308,140369]},{"content":"button","pos":[140381,140387]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[140390,140451]},{"content":"Ctrl","pos":[140463,140467]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[140470,140531]},{"content":"Shift","pos":[140543,140548]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[140551,140612]},{"pos":[140618,140632],"content":"Method jumpRef","linkify":"Method jumpRef","nodes":[{"content":"Method jumpRef","pos":[0,14]}]},{"pos":[140665,140683],"content":"Method OnLostFocus","linkify":"Method OnLostFocus","nodes":[{"content":"Method OnLostFocus","pos":[0,18]}]},{"pos":[140768,140778],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[140780,140786]},{"content":"e","pos":[140800,140801]},{"pos":[140809,140826],"content":"Method OnGotFocus","linkify":"Method OnGotFocus","nodes":[{"content":"Method OnGotFocus","pos":[0,17]}]},{"pos":[140910,140920],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[140922,140928]},{"content":"e","pos":[140942,140943]},{"pos":[140951,140972],"content":"Method prefColumnSize","linkify":"Method prefColumnSize","nodes":[{"content":"Method prefColumnSize","pos":[0,21]}]},{"content":"Specifies the preferred column width and height for the form control.","pos":[140974,141043]},{"pos":[141105,141115],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"width","pos":[141117,141122]},{"content":"The preferred height of the control.","pos":[141125,141161]},{"content":"height","pos":[141173,141179]},{"content":"The preferred height of the control.","pos":[141182,141218]},{"pos":[141224,141234],"content":"Method cut","linkify":"Method cut","nodes":[{"content":"Method cut","pos":[0,10]}]},{"content":"Cuts the contents of the control.","pos":[141236,141269]},{"pos":[141298,141327],"content":"Method registerOverrideMethod","linkify":"Method registerOverrideMethod","nodes":[{"content":"Method registerOverrideMethod","pos":[0,29]}]},{"pos":[141445,141455],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodToOverride","pos":[141457,141473]},{"content":"objectMethodToCall","pos":[141487,141505]},{"content":"overrideObject","pos":[141519,141533]},{"pos":[141541,141562],"content":"Method displayControl","linkify":"Method displayControl","nodes":[{"content":"Method displayControl","pos":[0,21]}]},{"content":"Displays the control.","pos":[141564,141585]},{"pos":[141625,141636],"content":"Method copy","linkify":"Method copy","nodes":[{"content":"Method copy","pos":[0,11]}]},{"content":"Copies the contents of the control to the clipboard.","pos":[141638,141690]},{"pos":[141720,141734],"content":"Method context","linkify":"Method context","nodes":[{"content":"Method context","pos":[0,14]}]},{"content":"Shows the shortcut menu for the control.","pos":[141736,141776]},{"pos":[141809,141832],"content":"Method resetUserSetting","linkify":"Method resetUserSetting","nodes":[{"content":"Method resetUserSetting","pos":[0,23]}]},{"content":"Resets the user settings for the control.","pos":[141834,141875]},{"pos":[141917,141935],"content":"Method inputSearch","linkify":"Method inputSearch","nodes":[{"content":"Method inputSearch","pos":[0,18]}]},{"content":"Performs data filtering for the control, based on the specified string.","pos":[141937,142008]},{"pos":[142059,142069],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"searchStr","pos":[142071,142080]},{"content":"The string value to use to filter data; optional.","pos":[142083,142132]},{"pos":[142138,142151],"content":"Method filter","linkify":"Method filter","nodes":[{"content":"Method filter","pos":[0,13]}]},{"pos":[142199,142209],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filterStr","pos":[142211,142220]},{"pos":[142228,142242],"content":"Method endDrag","linkify":"Method endDrag","nodes":[{"content":"Method endDrag","pos":[0,14]}]},{"content":"Is called when the user has finished dragging a form control.","pos":[142244,142305]},{"pos":[142339,142346],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This event is not raised unless the DragDrop property is enabled for the control and a beginDrag event has already been started.","pos":[142348,142476]},{"content":"To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.","pos":[142477,142581]},{"pos":[142586,142617],"content":"Class FormFunctionButtonControl","linkify":"Class FormFunctionButtonControl","nodes":[{"content":"Class FormFunctionButtonControl","pos":[0,31]}]},{"pos":[142679,142686],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[142692,142700],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[142706,142713],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[142717,142723]},{"content":"Description","pos":[142827,142838]},{"content":"public boolean alignControl(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[143281,143327],"source":"public boolean alignControl(\\[boolean value\\])"},{"content":"Determines whether to align the control.","pos":[143391,143431]},{"content":"public int alignment(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[143563,143598],"source":"public int alignment(\\[int value\\])"},{"content":"public boolean allowEdit(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[143845,143888],"source":"public boolean allowEdit(\\[boolean value\\])"},{"content":"Determines whether the user can change the contents of the control.","pos":[143955,144022]},{"content":"public boolean allowSysSetup()","pos":[144127,144157]},{"content":"Retrieves a value that indicates whether the control is shown in the SysSetup form.","pos":[144237,144320]},{"content":"public boolean autoDeclaration(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[144409,144458],"source":"public boolean autoDeclaration(\\[boolean value\\])"},{"content":"Determines whether the system can declare a member variable that has the same name as the control.","pos":[144519,144617]},{"content":"public boolean autoRefreshData(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[144691,144740],"source":"public boolean autoRefreshData(\\[boolean value\\])"},{"content":"public int backgroundColor(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[144973,145014],"source":"public int backgroundColor(\\[int value\\])"},{"content":"Gets or sets the background color of the control.","pos":[145083,145132]},{"content":"public int backStyle(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[145255,145290],"source":"public int backStyle(\\[int value\\])"},{"content":"Determiness whether the control background can be transparent.","pos":[145365,145427]},{"content":"public int beginDrag(int x, int y)","pos":[145537,145571]},{"content":"Is called when the user starts to drag a form control.","pos":[145647,145701]},{"content":"public boolean big(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[145819,145856],"source":"public boolean big(\\[boolean value\\])"},{"content":"public int bold(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[146101,146131],"source":"public int bold(\\[int value\\])"},{"content":"Gets or sets the weight of font used to output text in the control.","pos":[146211,146278]},{"content":"public int border(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[146383,146415],"source":"public int border(\\[int value\\])"},{"content":"Gets or sets the style of the borderline of the control.","pos":[146493,146549]},{"content":"public int buttonDisplay(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[146665,146704],"source":"public int buttonDisplay(\\[int value\\])"},{"content":"Gets or sets the appearance of the button control.","pos":[146775,146825]},{"content":"public container calcControlSize(int chars, int lines)","pos":[146947,147001]},{"content":"Retrieves the size of the control.","pos":[147057,147091]},{"content":"public str caption(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[147229,147262],"source":"public str caption(\\[str value\\])"},{"content":"Gets or set the caption of the control.","pos":[147339,147378]},{"content":"public int characterSet(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[147511,147549],"source":"public int characterSet(\\[int value\\])"},{"content":"Gets or sets the character set of the font.","pos":[147621,147664]},{"content":"public int colorScheme(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[147793,147830],"source":"public int colorScheme(\\[int value\\])"},{"content":"Gets or sets the color scheme of the control.","pos":[147903,147948]},{"content":"public ConfigurationKeyId configurationKey(<ph id=\"ph1\">\\[</ph>ConfigurationKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[148075,148147],"source":"public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])"},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[148185,148252]},{"content":"public List configurationKeyEx()","pos":[148357,148389]},{"content":"Retrieves a list that contains the IDs of configuration keys that are in effect for the control.","pos":[148467,148563]},{"content":"public int copyCallerQuery(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[148639,148680],"source":"public int copyCallerQuery(\\[int value\\])"},{"content":"public str countryRegionCodes(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[148921,148965],"source":"public str countryRegionCodes(\\[str value\\])"},{"content":"Gets or sets the comma-separated list of country/region codes for the control.","pos":[149031,149109]},{"content":"public FieldId countryRegionContextField(<ph id=\"ph1\">\\[</ph>FieldId value<ph id=\"ph2\">\\]</ph>)","pos":[149203,149262],"source":"public FieldId countryRegionContextField(\\[FieldId value\\])"},{"content":"public str dataRelationPath(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[149485,149527],"source":"public str dataRelationPath(\\[str value\\])"},{"content":"Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[149595,149720]},{"content":"public int dataSource(<ph id=\"ph1\">\\[</ph>AnyType value<ph id=\"ph2\">\\]</ph>)","pos":[149767,149807],"source":"public int dataSource(\\[AnyType value\\])"},{"content":"Gets or sets a data source to be used by the control or the form.","pos":[149877,149942]},{"content":"public boolean defaultButton(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[150049,150096],"source":"public boolean defaultButton(\\[boolean value\\])"},{"content":"Determines whether the button should be the default button in the form.","pos":[150159,150230]},{"content":"public str disabledImage(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[150331,150370],"source":"public str disabledImage(\\[str value\\])"},{"content":"Gets or sets the disabled image of the button.","pos":[150441,150487]},{"content":"public int disabledImageLocation(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[150613,150660],"source":"public int disabledImageLocation(\\[int value\\])"},{"content":"public int disabledResource(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[150895,150937],"source":"public int disabledResource(\\[int value\\])"},{"content":"Gets or sets the resource ID of the image to use as the disabled button image.","pos":[151005,151083]},{"content":"public int displayTarget(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[151177,151216],"source":"public int displayTarget(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.","pos":[151287,151518]},{"content":"public int dragDrop(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[151523,151557],"source":"public int dragDrop(\\[int value\\])"},{"content":"Determines whether to enable or disable drag-and-drop operations for the control.","pos":[151633,151714]},{"content":"public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)","pos":[151805,151886]},{"content":"Raises the dragOver event to indicate that a mouse drag operation is over the current control.","pos":[151915,152009]},{"content":"public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)","pos":[152087,152164]},{"content":"Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.","pos":[152197,152293]},{"content":"public str dragText()","pos":[152369,152390]},{"content":"Retrieves the text that is displayed when the form control is dragged.","pos":[152479,152549]},{"content":"public boolean enabled(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[152651,152692],"source":"public boolean enabled(\\[boolean value\\])"},{"content":"Determines whether to enable or disable the object.","pos":[152761,152812]},{"content":"public str font(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[152933,152963],"source":"public str font(\\[str value\\])"},{"content":"Gets or sets the name of the font for the control to use.","pos":[153043,153100]},{"content":"public int fontSize(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[153215,153249],"source":"public int fontSize(\\[int value\\])"},{"content":"Gets or sets the size of the font for the control to use.","pos":[153325,153382]},{"content":"public boolean forcedToOverflow(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[153497,153547],"source":"public boolean forcedToOverflow(\\[boolean value\\])"},{"content":"public int foregroundColor(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[153779,153820],"source":"public int foregroundColor(\\[int value\\])"},{"content":"Gets or sets the text color for the control to use.","pos":[153889,153940]},{"content":"public int formViewOption(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[154061,154101],"source":"public int formViewOption(\\[int value\\])"},{"content":"public boolean hasChanged(<ph id=\"ph1\">\\[</ph>boolean val<ph id=\"ph2\">\\]</ph>)","pos":[154343,154385],"source":"public boolean hasChanged(\\[boolean val\\])"},{"content":"Sets or returns a value that indicates whether the contents of the control have changed.","pos":[154453,154541]},{"content":"public boolean hasUserSetting()","pos":[154625,154656]},{"content":"Indicates whether the control has custom user settings.","pos":[154735,154790]},{"content":"public int height(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[154907,154949],"source":"public int height(int value, \\[int mode\\])"},{"content":"Gets or sets the height of the control.","pos":[155017,155056]},{"content":"public int heightMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[155189,155225],"source":"public int heightMode(\\[int value\\])"},{"content":"Gets or sets a calculation mode for the height of the control.","pos":[155299,155361]},{"content":"public int heightValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[155471,155508],"source":"public int heightValue(\\[int value\\])"},{"content":"Gets or sets the height of the control.","pos":[155581,155620]},{"content":"public str helpField()","pos":[155753,155775]},{"content":"Retrieves the Help text for the control.","pos":[155863,155903]},{"content":"public str helpText(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[156035,156069],"source":"public str helpText(\\[str value\\])"},{"content":"Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.","pos":[156145,156249]},{"content":"public str hierarchyParent(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[156317,156358],"source":"public str hierarchyParent(\\[str value\\])"},{"content":"Gets or sets the HierarchyParent property value of the control.","pos":[156427,156490]},{"content":"public int hWnd()","pos":[156599,156616]},{"content":"Retrieves the Windows handle for the control.","pos":[156709,156754]},{"content":"public int imageLocation(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[156881,156920],"source":"public int imageLocation(\\[int value\\])"},{"content":"public boolean isContainer()","pos":[157163,157191]},{"content":"public boolean isDisplayed()","pos":[157445,157473]},{"content":"Retrieves a value that indicates whether the control is displayed.","pos":[157555,157621]},{"content":"public boolean isRestricted()","pos":[157727,157756]},{"content":"Retrieves a value that indicates whether the control is restricted.","pos":[157837,157904]},{"content":"public boolean isUserSetupEnabled(int neededSetupRights)","pos":[158009,158065]},{"content":"Retrieves a value that indicates whether the control allows for the specified level of customization.","pos":[158119,158220]},{"content":"public boolean italic(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[158291,158331],"source":"public boolean italic(\\[boolean value\\])"},{"content":"public str keyTip(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[158573,158605],"source":"public str keyTip(\\[str value\\])"},{"content":"public int left(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[158855,158895],"source":"public int left(int value, \\[int mode\\])"},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[158965,159029]},{"content":"public int leftMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[159137,159171],"source":"public int leftMode(\\[int value\\])"},{"content":"Sets the horizontal arrange mode for the control in the form.","pos":[159247,159308]},{"content":"public int leftValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[159419,159454],"source":"public int leftValue(\\[int value\\])"},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[159529,159593]},{"content":"public boolean markAsUserAdd(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[159701,159748],"source":"public boolean markAsUserAdd(\\[boolean value\\])"},{"content":"Marks or unmarks the control as a user-added control.","pos":[159811,159864]},{"content":"public xMenuFunction menufunction()","pos":[159983,160018]},{"content":"public str menuItemName(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[160265,160303],"source":"public str menuItemName(\\[str value\\])"},{"content":"public MenuItemType menuItemType(<ph id=\"ph1\">\\[</ph>MenuItemType value<ph id=\"ph2\">\\]</ph>)","pos":[160547,160603],"source":"public MenuItemType menuItemType(\\[MenuItemType value\\])"},{"content":"public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[160829,160908]},{"content":"Is called when the control is double-clicked by the user.","pos":[160939,160996]},{"content":"public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[161111,161186]},{"content":"Is called when the user clicks the mouse button over the control.","pos":[161221,161286]},{"content":"public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[161393,161468]},{"content":"Is called when the user moves the mouse pointer over the control.","pos":[161503,161568]},{"content":"public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[161675,161748]},{"content":"Is called when the user releases the mouse button over the control area.","pos":[161785,161857]},{"content":"public int multiSelect(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[161957,161994],"source":"public int multiSelect(\\[int value\\])"},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[162239,162269],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.","pos":[162349,162516]},{"content":"public int neededPermission(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[162553,162595],"source":"public int neededPermission(\\[int value\\])"},{"content":"public int needsRecord(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[162835,162872],"source":"public int needsRecord(\\[int value\\])"},{"content":"public str normalImage(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[163117,163154],"source":"public str normalImage(\\[str value\\])"},{"content":"public int normalResource(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[163399,163439],"source":"public int normalResource(\\[int value\\])"},{"content":"public int openMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[163681,163715],"source":"public int openMode(\\[int value\\])"},{"content":"public container SysObsoleteAttribute()","pos":[163963,164002]},{"content":"public str parameters(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[164245,164281],"source":"public str parameters(\\[str value\\])"},{"content":"Gets or sets the list of parameters that are passed to objects taht are run by the MenuFunction class.","pos":[164355,164457]},{"content":"public FormControl parentControl()","pos":[164527,164561]},{"content":"Retrieves the parent control for the control.","pos":[164637,164682]},{"content":"public boolean primary(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[164809,164850],"source":"public boolean primary(\\[boolean value\\])"},{"content":"public boolean saveRecord(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[165091,165135],"source":"public boolean saveRecord(\\[boolean value\\])"},{"content":"public SecurityKeyId securityKey(<ph id=\"ph1\">\\[</ph>SecurityKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[165373,165430],"source":"public SecurityKeyId securityKey(\\[SecurityKeyId value\\])"},{"content":"Sets or returns the ID of the security key for the control.","pos":[165483,165542]},{"content":"public boolean sendExternalContext(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[165655,165708],"source":"public boolean sendExternalContext(\\[boolean value\\])"},{"content":"public int shortkey(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[165937,165971],"source":"public int shortkey(\\[int value\\])"},{"content":"public int showContextMenu(int menuHandle)","pos":[166219,166261]},{"content":"Shows the shortcut menu for the control.","pos":[166329,166369]},{"content":"public boolean showShortCut(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[166501,166547],"source":"public boolean showShortCut(\\[boolean value\\])"},{"content":"public boolean skip(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[166783,166821],"source":"public boolean skip(\\[boolean value\\])"},{"content":"Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.","pos":[166893,167020]},{"content":"public int sort(<ph id=\"ph1\">\\[</ph>SortOrder sortDirection<ph id=\"ph2\">\\]</ph>)","pos":[167065,167109],"source":"public int sort(\\[SortOrder sortDirection\\])"},{"content":"public int style(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[167347,167378],"source":"public int style(\\[int value\\])"},{"content":"public str text(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[167629,167659],"source":"public str text(\\[str value\\])"},{"content":"public str toolTip()","pos":[167911,167931]},{"content":"Retrieves the tooltip text for the control.","pos":[168021,168064]},{"content":"public int top(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[168193,168232],"source":"public int top(int value, \\[int mode\\])"},{"content":"Gets or sets the vertical position of the control in the form.","pos":[168303,168365]},{"content":"public int topMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[168475,168508],"source":"public int topMode(\\[int value\\])"},{"content":"Sets the vertical arrange mode for the control in the form.","pos":[168585,168644]},{"content":"public int topValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[168757,168791],"source":"public int topValue(\\[int value\\])"},{"content":"Gets or sets the vertical position of the control in the form.","pos":[168867,168929]},{"content":"public int type(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[169039,169069],"source":"public int type(\\[int value\\])"},{"content":"public boolean underline(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[169321,169364],"source":"public boolean underline(\\[boolean value\\])"},{"content":"public boolean SysObsoleteAttribute(container data)","pos":[169603,169654]},{"content":"public int userData(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[169885,169919],"source":"public int userData(\\[int value\\])"},{"content":"Gets or sets the user data for the control.","pos":[169995,170038]},{"content":"public int userDataItem(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[170167,170205],"source":"public int userDataItem(\\[int value\\])"},{"content":"Gets or sets the user data item for the control.","pos":[170277,170325]},{"content":"public int userDataItems(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[170449,170488],"source":"public int userDataItems(\\[int value\\])"},{"content":"Gets or sets the number of user data items for the control.","pos":[170559,170618]},{"content":"public int userDisable(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[170731,170768],"source":"public int userDisable(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is disabled for the user.","pos":[170841,170924]},{"content":"public int userHeight(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[171013,171049],"source":"public int userHeight(\\[int value\\])"},{"content":"Gets or sets the custom user height for the control.","pos":[171123,171175]},{"content":"public int userHide(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[171295,171329],"source":"public int userHide(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is hidden from the user.","pos":[171405,171487]},{"content":"public int userOrgContainer(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[171577,171619],"source":"public int userOrgContainer(\\[int value\\])"},{"content":"Gets or sets the organization container for the control.","pos":[171687,171743]},{"content":"public int userOrgSibling(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[171859,171899],"source":"public int userOrgSibling(\\[int value\\])"},{"content":"Gets or sets the organization sibling for the control.","pos":[171969,172023]},{"content":"public str userPromptText(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[172141,172181],"source":"public str userPromptText(\\[str value\\])"},{"content":"Gets or sets the user label text for the control.","pos":[172251,172300]},{"content":"public int userSecurityLevel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[172423,172466],"source":"public int userSecurityLevel(\\[int value\\])"},{"content":"Gets or sets the user security level for the control.","pos":[172533,172586]},{"content":"public int userSkip(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[172705,172739],"source":"public int userSkip(\\[int value\\])"},{"content":"Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.","pos":[172815,172963]},{"content":"public int userWidth(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[172987,173022],"source":"public int userWidth(\\[int value\\])"},{"content":"Sets or returns the width of the control in pixels.","pos":[173097,173148]},{"content":"public boolean value(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[173269,173308],"source":"public boolean value(\\[boolean value\\])"},{"content":"public int verticalSpacing(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[173551,173611],"source":"public int verticalSpacing(\\[int value\\], \\[AutoMode mode\\])"},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[173661,173722]},{"content":"public AutoMode verticalSpacingMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[173833,173887],"source":"public AutoMode verticalSpacingMode(\\[AutoMode mode\\])"},{"content":"Sets the vertical spacing mode for the control in the form.","pos":[173943,174002]},{"content":"public int verticalSpacingValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[174115,174161],"source":"public int verticalSpacingValue(\\[int value\\])"},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[174225,174286]},{"content":"public boolean visible(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[174397,174438],"source":"public boolean visible(\\[boolean value\\])"},{"content":"Sets or returns a value that indicates whether the control is visible.","pos":[174507,174577]},{"content":"public int width(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[174679,174720],"source":"public int width(int value, \\[int mode\\])"},{"content":"Gets or sets the width of the control.","pos":[174789,174827]},{"content":"public int widthMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[174961,174996],"source":"public int widthMode(\\[int value\\])"},{"content":"Gets or sets the calculation mode of the width of the control.","pos":[175071,175133]},{"content":"public int widthValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[175243,175279],"source":"public int widthValue(\\[int value\\])"},{"content":"Gets or sets the width of the control.","pos":[175353,175391]},{"content":"public void prefColumnSize(int width, int height)","pos":[175525,175574]},{"content":"Specifies the preferred column width and height for the form control.","pos":[175635,175704]},{"content":"public void lostFocus()","pos":[175807,175830]},{"content":"Indicates that the control has lost focus.","pos":[175917,175959]},{"content":"public void resetUserSetting()","pos":[176089,176119]},{"content":"Resets the user settings for the control.","pos":[176199,176240]},{"content":"public void context()","pos":[176371,176392]},{"content":"Shows the shortcut menu for the control.","pos":[176481,176521]},{"content":"public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)","pos":[176653,176726]},{"content":"Raises the drop event to indicate that a drop operation is being performed on the current control.","pos":[176763,176861]},{"content":"private void OnLostFocus(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[176935,177011],"source":"private void OnLostFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void gotFocus()","pos":[177217,177239]},{"content":"Indicates that the control has received focus.","pos":[177327,177373]},{"content":"public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[177499,177576]},{"content":"Is called when the user moves the mouse pointer into the control area.","pos":[177609,177679]},{"content":"public void paste()","pos":[177781,177800]},{"content":"Pastes the contents of the clipboard into the control.","pos":[177891,177945]},{"content":"private void OnGotFocus(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[178063,178138],"source":"private void OnGotFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void endDrag()","pos":[178345,178366]},{"content":"Is called when the user has finished dragging a form control.","pos":[178455,178516]},{"content":"public void cut()","pos":[178627,178644]},{"content":"Cuts the contents of the control.","pos":[178737,178770]},{"content":"public void filter(<ph id=\"ph1\">\\[</ph>str filterStr<ph id=\"ph2\">\\]</ph>)","pos":[178909,178946],"source":"public void filter(\\[str filterStr\\])"},{"content":"public void displayControl()","pos":[179191,179219]},{"content":"Displays the control.","pos":[179301,179322]},{"content":"public void inputSearch(str searchStr)","pos":[179473,179511]},{"content":"Performs data filtering for the control, based on the specified string.","pos":[179583,179654]},{"content":"public void copy()","pos":[179755,179773]},{"content":"Copies the contents of the control to the clipboard.","pos":[179865,179917]},{"content":"public void clicked()","pos":[180037,180058]},{"content":"private void OnClicked(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[180319,180393],"source":"private void OnClicked(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)","pos":[180601,180670]},{"content":"Raises the dropEx event to indicate that a drop operation is being performed on the current control.","pos":[180711,180811]},{"content":"public void mouseLeave()","pos":[180883,180907]},{"content":"Indicates that the mouse pointer has left the control.","pos":[180993,181047]},{"content":"public void setFocus()","pos":[181165,181187]},{"content":"Sets the focus on the control.","pos":[181275,181305]},{"content":"public void dragLeave()","pos":[181447,181470]},{"content":"Raises the dragLeave event to indicate that a mouse drag operation has left the current control.","pos":[181557,181653]},{"content":"public void jumpRef()","pos":[181729,181750]},{"content":"public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, <ph id=\"ph1\">\\[</ph>Object overrideObject<ph id=\"ph2\">\\]</ph>)","pos":[182011,182118],"source":"public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, \\[Object overrideObject\\])"},{"pos":[182296,182315],"content":"Method alignControl","linkify":"Method alignControl","nodes":[{"content":"Method alignControl","pos":[0,19]}]},{"content":"Determines whether to align the control.","pos":[182317,182357]},{"pos":[182414,182424],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[182426,182431]},{"content":"The new value for the property; optional.","pos":[182434,182475]},{"pos":[182482,182494],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control should be aligned; otherwise, false.","pos":[182496,182552]},{"pos":[182559,182566],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The upper-left corner of the control is aligned according to the longest label.","pos":[182568,182647]},{"pos":[182653,182669],"content":"Method alignment","linkify":"Method alignment","nodes":[{"content":"Method alignment","pos":[0,16]}]},{"pos":[182715,182725],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[182727,182732]},{"pos":[182741,182753],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[182759,182775],"content":"Method allowEdit","linkify":"Method allowEdit","nodes":[{"content":"Method allowEdit","pos":[0,16]}]},{"content":"Determines whether the user can change the contents of the control.","pos":[182777,182844]},{"pos":[182898,182908],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[182910,182915]},{"content":"The value to assign to the allowEdit property.","pos":[182918,182964]},{"pos":[182971,182983],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control can be edited; otherwise, false.","pos":[182985,183037]},{"pos":[183044,183051],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When this property is set on a container control, modifications are disabled or enabled for all controls within the container.","pos":[183053,183179]},{"pos":[183185,183205],"content":"Method allowSysSetup","linkify":"Method allowSysSetup","nodes":[{"content":"Method allowSysSetup","pos":[0,20]}]},{"content":"Retrieves a value that indicates whether the control is shown in the SysSetup form.","pos":[183207,183290]},{"pos":[183333,183345],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is shown in the SysSetup form; otherwise, false.","pos":[183347,183415]},{"pos":[183421,183443],"content":"Method autoDeclaration","linkify":"Method autoDeclaration","nodes":[{"content":"Method autoDeclaration","pos":[0,22]}]},{"content":"Determines whether the system can declare a member variable that has the same name as the control.","pos":[183445,183543]},{"pos":[183603,183613],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[183615,183620]},{"content":"The new value for the property; optional.","pos":[183623,183664]},{"pos":[183671,183683],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the member variable can be declared for this control; otherwise, false.","pos":[183685,183764]},{"pos":[183771,183778],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Controls cannot have identical names.","pos":[183780,183817]},{"pos":[183823,183845],"content":"Method autoRefreshData","linkify":"Method autoRefreshData","nodes":[{"content":"Method autoRefreshData","pos":[0,22]}]},{"pos":[183905,183915],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[183917,183922]},{"pos":[183931,183943],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[183949,183971],"content":"Method backgroundColor","linkify":"Method backgroundColor","nodes":[{"content":"Method backgroundColor","pos":[0,22]}]},{"content":"Gets or sets the background color of the control.","pos":[183973,184022]},{"pos":[184074,184084],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[184086,184091]},{"pos":[184100,184112],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that contains a packed RGB color.","pos":[184114,184158]},{"pos":[184165,184172],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The integer that is returned contains a packed RGB color as follows:","pos":[184174,184242]},{"content":"The low-order byte contains a value for the relative intensity of red.","pos":[184248,184318]},{"content":"The second byte contains a value for green.","pos":[184323,184366]},{"content":"The third byte contains a value for blue.","pos":[184371,184412]},{"content":"The high-order byte must be zero.","pos":[184417,184450]},{"content":"The maximum value for a single byte is 255.","pos":[184455,184498]},{"pos":[184504,184520],"content":"Method backStyle","linkify":"Method backStyle","nodes":[{"content":"Method backStyle","pos":[0,16]}]},{"content":"Determiness whether the control background can be transparent.","pos":[184522,184584]},{"pos":[184630,184640],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[184642,184647]},{"pos":[184656,184668],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control background can be transparent; otherwise, 0.","pos":[184670,184731]},{"pos":[184737,184753],"content":"Method beginDrag","linkify":"Method beginDrag","nodes":[{"content":"Method beginDrag","pos":[0,16]}]},{"content":"Is called when the user starts to drag a form control.","pos":[184755,184809]},{"pos":[184856,184866],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[184868,184869]},{"content":"An integer value that indicates the y-coordinate of the mouse pointer.","pos":[184872,184942]},{"content":"The coordinate is relative to the upper-left corner of the control.","pos":[184943,185010]},{"content":"y","pos":[185022,185023]},{"content":"An integer value that indicates the y-coordinate of the mouse pointer.","pos":[185026,185096]},{"content":"The coordinate is relative to the upper-left corner of the control.","pos":[185097,185164]},{"pos":[185171,185183],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[185185,185224]},{"pos":[185231,185238],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This event is not raised unless the DragDrop property is enabled for the control.","pos":[185240,185321]},{"content":"To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.","pos":[185322,185426]},{"pos":[185432,185442],"content":"Method big","linkify":"Method big","nodes":[{"content":"Method big","pos":[0,10]}]},{"pos":[185490,185500],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[185502,185507]},{"pos":[185516,185528],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[185534,185545],"content":"Method bold","linkify":"Method bold","nodes":[{"content":"Method bold","pos":[0,11]}]},{"content":"Gets or sets the weight of font used to output text in the control.","pos":[185547,185614]},{"pos":[185655,185665],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[185667,185672]},{"pos":[185681,185693],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value between zero and nine, inclusive.","pos":[185695,185745]},{"pos":[185752,185759],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The integer that is returned contains the weight of the font as follows:","pos":[185761,185833]},{"content":"0 Use the default font weight.","pos":[185839,185869]},{"content":"1 Thin.","pos":[185874,185881]},{"content":"2 Extra-light.","pos":[185886,185900]},{"content":"3 Light.","pos":[185905,185913]},{"content":"4 Normal.","pos":[185918,185927]},{"content":"5 Medium.","pos":[185932,185941]},{"content":"6 Semibold.","pos":[185946,185957]},{"content":"7 Bold.","pos":[185962,185969]},{"content":"8 Extra-bold.","pos":[185974,185987]},{"content":"9 Heavy.","pos":[185992,186000]},{"pos":[186006,186019],"content":"Method border","linkify":"Method border","nodes":[{"content":"Method border","pos":[0,13]}]},{"content":"Gets or sets the style of the borderline of the control.","pos":[186021,186077]},{"pos":[186120,186130],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[186132,186137]},{"pos":[186146,186158],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer between zero and four, inclusive.","pos":[186160,186204]},{"pos":[186211,186218],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The integer that is returned contains the style of the borderline of the control as follows:","pos":[186220,186312]},{"content":"Value.","pos":[186316,186322]},{"content":"Description.","pos":[186325,186337]},{"content":"0","pos":[186368,186369]},{"content":"Auto.","pos":[186377,186382]},{"content":"1","pos":[186394,186395]},{"content":"3D.","pos":[186403,186406]},{"content":"2","pos":[186420,186421]},{"content":"Single line.","pos":[186429,186441]},{"content":"3","pos":[186446,186447]},{"content":"Flat.","pos":[186455,186460]},{"content":"4","pos":[186472,186473]},{"content":"None.","pos":[186481,186486]},{"pos":[186501,186521],"content":"Method buttonDisplay","linkify":"Method buttonDisplay","nodes":[{"content":"Method buttonDisplay","pos":[0,20]}]},{"content":"Gets or sets the appearance of the button control.","pos":[186523,186573]},{"pos":[186623,186633],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[186635,186640]},{"pos":[186649,186661],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer between zero and five, inclusive.","pos":[186663,186707]},{"pos":[186714,186721],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value of the property defines whether the text, the image, or both should be displayed on the button.","pos":[186723,186828]},{"content":"This property also controls relative positions of text and image if both are displayed.The integer value that is returned contains the appearace of the button control as follows:","pos":[186829,187007]},{"content":"Value.","pos":[187011,187017]},{"content":"Description.","pos":[187020,187032]},{"content":"0","pos":[187167,187168]},{"content":"Text only.","pos":[187176,187186]},{"content":"1","pos":[187245,187246]},{"content":"Image Only.","pos":[187254,187265]},{"content":"2","pos":[187323,187324]},{"content":"Text and image; the image is displayed below the text.","pos":[187332,187386]},{"content":"3","pos":[187401,187402]},{"content":"Text and image; the image is displayed above the text.","pos":[187410,187464]},{"content":"4","pos":[187479,187480]},{"content":"Text and image; the image is displayed to the left of the text.","pos":[187488,187551]},{"content":"5","pos":[187557,187558]},{"content":"Text and image; the image is displayed to the right of the text.","pos":[187566,187630]},{"pos":[187638,187660],"content":"Method calcControlSize","linkify":"Method calcControlSize","nodes":[{"content":"Method calcControlSize","pos":[0,22]}]},{"content":"Retrieves the size of the control.","pos":[187662,187696]},{"pos":[187763,187773],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"chars","pos":[187775,187780]},{"content":"The number of lines to use to determine the height.","pos":[187783,187834]},{"content":"lines","pos":[187846,187851]},{"content":"The number of lines to use to determine the height.","pos":[187854,187905]},{"pos":[187912,187924],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The container that holds the width and height.","pos":[187926,187972]},{"pos":[187978,187992],"content":"Method caption","linkify":"Method caption","nodes":[{"content":"Method caption","pos":[0,14]}]},{"content":"Gets or set the caption of the control.","pos":[187994,188033]},{"pos":[188077,188087],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[188089,188094]},{"pos":[188103,188115],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that is used as the caption of the control.","pos":[188117,188171]},{"pos":[188177,188196],"content":"Method characterSet","linkify":"Method characterSet","nodes":[{"content":"Method characterSet","pos":[0,19]}]},{"content":"Gets or sets the character set of the font.","pos":[188198,188241]},{"pos":[188290,188300],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[188302,188307]},{"pos":[188316,188328],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the character set of the font.","pos":[188330,188392]},{"pos":[188399,188406],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The values for the integer that is returned indicate the character set according to the following table:","pos":[188408,188512]},{"content":"Value.","pos":[188516,188522]},{"content":"Description.","pos":[188525,188537]},{"content":"0","pos":[188584,188585]},{"content":"ANSI<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188593,188606],"source":"ANSI\\_CHARSET"},{"content":"1","pos":[188618,188619]},{"content":"DEFAULT<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188627,188643],"source":"DEFAULT\\_CHARSET"},{"content":"2","pos":[188652,188653]},{"content":"SYMBOL<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188661,188676],"source":"SYMBOL\\_CHARSET"},{"content":"77","pos":[188686,188688]},{"content":"MAC<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188695,188707],"source":"MAC\\_CHARSET"},{"content":"128","pos":[188720,188723]},{"content":"SHIFTJIS<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188729,188746],"source":"SHIFTJIS\\_CHARSET"},{"content":"129","pos":[188754,188757]},{"content":"HANGUL<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188763,188778],"source":"HANGUL\\_CHARSET"},{"content":"134","pos":[188788,188791]},{"content":"GB2312<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188797,188812],"source":"GB2312\\_CHARSET"},{"content":"136","pos":[188822,188825]},{"content":"CHINESEBIG5<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188831,188851],"source":"CHINESEBIG5\\_CHARSET"},{"content":"161","pos":[188856,188859]},{"content":"GREEK<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188865,188879],"source":"GREEK\\_CHARSET"},{"content":"162","pos":[188890,188893]},{"content":"TURKISH<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188899,188915],"source":"TURKISH\\_CHARSET"},{"content":"163","pos":[188924,188927]},{"content":"VIETNAMESE<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188933,188952],"source":"VIETNAMESE\\_CHARSET"},{"content":"186","pos":[188958,188961]},{"content":"BALTIC<ph id=\"ph1\">\\_</ph>CHARSET","pos":[188967,188982],"source":"BALTIC\\_CHARSET"},{"content":"204","pos":[188992,188995]},{"content":"RUSSIAN<ph id=\"ph1\">\\_</ph>CHARSET","pos":[189001,189017],"source":"RUSSIAN\\_CHARSET"},{"content":"238","pos":[189026,189029]},{"content":"EASTEUROPE<ph id=\"ph1\">\\_</ph>CHARSET","pos":[189035,189054],"source":"EASTEUROPE\\_CHARSET"},{"content":"255","pos":[189060,189063]},{"content":"OEM<ph id=\"ph1\">\\_</ph>CHARSET","pos":[189069,189081],"source":"OEM\\_CHARSET"},{"content":"The value in the following table is for the Korean language edition of msCoNameWindows.","pos":[189093,189180]},{"content":"Value.","pos":[189184,189190]},{"content":"Description.","pos":[189193,189205]},{"content":"130","pos":[189240,189243]},{"content":"JOHAB<ph id=\"ph1\">\\_</ph>CHARSET","pos":[189249,189263],"source":"JOHAB\\_CHARSET"},{"content":"The values in the following table are for the Middle East language edition of Windows.","pos":[189267,189353]},{"content":"Value.","pos":[189357,189363]},{"content":"Description.","pos":[189366,189378]},{"content":"177","pos":[189415,189418]},{"content":"HEBREW<ph id=\"ph1\">\\_</ph>CHARSET","pos":[189424,189439],"source":"HEBREW\\_CHARSET"},{"content":"178","pos":[189444,189447]},{"content":"ARABIC<ph id=\"ph1\">\\_</ph>CHARSET","pos":[189453,189468],"source":"ARABIC\\_CHARSET"},{"content":"The value in the following table is for the Thai language edition of Windows.","pos":[189472,189549]},{"content":"Value.","pos":[189553,189559]},{"content":"Description.","pos":[189562,189574]},{"content":"222","pos":[189607,189610]},{"content":"THAI<ph id=\"ph1\">\\_</ph>CHARSET","pos":[189616,189629],"source":"THAI\\_CHARSET"},{"content":"The default character set is set to a value based on the current system locale.","pos":[189633,189712]},{"content":"For example, when the system locale is English (United States), it is set as ANSI<ph id=\"ph1\">\\_</ph>CHARSET.","pos":[189713,189804],"source":" For example, when the system locale is English (United States), it is set as ANSI\\_CHARSET."},{"content":"For more information, see the LOGFONT structure on the MSDN website, http://go.microsoft.com/fwlink/?LinkID=85972.","pos":[189805,189919]},{"pos":[189925,189943],"content":"Method colorScheme","linkify":"Method colorScheme","nodes":[{"content":"Method colorScheme","pos":[0,18]}]},{"content":"Gets or sets the color scheme of the control.","pos":[189945,189990]},{"pos":[190038,190048],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[190050,190055]},{"pos":[190064,190076],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer between zero and two, inclusive.","pos":[190078,190121]},{"pos":[190128,190135],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The color scheme is defined according to the following table:","pos":[190137,190198]},{"content":"Value.","pos":[190202,190208]},{"content":"Style.","pos":[190211,190217]},{"content":"0","pos":[190274,190275]},{"content":"Default.","pos":[190283,190291]},{"content":"1","pos":[190310,190311]},{"content":"The Windows palette.","pos":[190319,190339]},{"content":"2","pos":[190346,190347]},{"content":"The true-color scheme.","pos":[190355,190377]},{"pos":[190385,190408],"content":"Method configurationKey","linkify":"Method configurationKey","nodes":[{"content":"Method configurationKey","pos":[0,23]}]},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[190410,190477]},{"pos":[190560,190570],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[190572,190577]},{"content":"The ID of the configuration key to assign to the control; optional.","pos":[190580,190647]},{"pos":[190654,190666],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the configuration key that is assigned to the control.","pos":[190668,190740]},{"pos":[190747,190754],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The configuration key is used to determine whether this control can be displayed.","pos":[190756,190837]},{"content":"If the configuration key is disabled in the system, the control is not displayed in the form.","pos":[190838,190931]},{"pos":[190937,190962],"content":"Method configurationKeyEx","linkify":"Method configurationKeyEx","nodes":[{"content":"Method configurationKeyEx","pos":[0,25]}]},{"content":"Retrieves a list that contains the IDs of configuration keys that are in effect for the control.","pos":[190964,191060]},{"pos":[191105,191117],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list that contains the IDs of configuration keys that are in effect for the control.","pos":[191119,191205]},{"pos":[191212,191219],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The returned list does not contain duplicate IDs.","pos":[191221,191270]},{"content":"If the control is bound to a data source, the returned list of configuration key IDs also includes the configuration key ID for the table and field.","pos":[191271,191419]},{"content":"The returned list also contains any configuration key IDs that are applied to the properties, extended data type, or enumType methods.","pos":[191420,191554]},{"pos":[191560,191582],"content":"Method copyCallerQuery","linkify":"Method copyCallerQuery","nodes":[{"content":"Method copyCallerQuery","pos":[0,22]}]},{"pos":[191634,191644],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[191646,191651]},{"pos":[191660,191672],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[191678,191703],"content":"Method countryRegionCodes","linkify":"Method countryRegionCodes","nodes":[{"content":"Method countryRegionCodes","pos":[0,25]}]},{"content":"Gets or sets the comma-separated list of country/region codes for the control.","pos":[191705,191783]},{"pos":[191838,191848],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[191850,191855]},{"content":"The string that contains the country/region codes to set; optional.","pos":[191858,191925]},{"pos":[191932,191944],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The comma-separated list of country/region codes for the control.","pos":[191946,192011]},{"pos":[192017,192049],"content":"Method countryRegionContextField","linkify":"Method countryRegionContextField","nodes":[{"content":"Method countryRegionContextField","pos":[0,32]}]},{"pos":[192119,192129],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[192131,192136]},{"pos":[192145,192157],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[192163,192186],"content":"Method dataRelationPath","linkify":"Method dataRelationPath","nodes":[{"content":"Method dataRelationPath","pos":[0,23]}]},{"content":"Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[192188,192313]},{"pos":[192366,192376],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[192378,192383]},{"content":"The string that contains the period-delimited list of relations; optional.","pos":[192386,192460]},{"pos":[192467,192479],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[192481,192593]},{"pos":[192600,192607],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is used by the reference group control to track exactly which relations produce the replacement field that is used.","pos":[192609,192736]},{"content":"It enables the reference group control to bind consistently to the controls that it contains.","pos":[192737,192830]},{"pos":[192836,192853],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"content":"Gets or sets a data source to be used by the control or the form.","pos":[192855,192920]},{"pos":[192971,192981],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[192983,192988]},{"pos":[192997,193009],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the data source to be used.","pos":[193011,193056]},{"pos":[193062,193082],"content":"Method defaultButton","linkify":"Method defaultButton","nodes":[{"content":"Method defaultButton","pos":[0,20]}]},{"content":"Determines whether the button should be the default button in the form.","pos":[193084,193155]},{"pos":[193213,193223],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[193225,193230]},{"pos":[193239,193251],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the button should be the default button; otherwise, false.","pos":[193253,193319]},{"pos":[193325,193345],"content":"Method disabledImage","linkify":"Method disabledImage","nodes":[{"content":"Method disabledImage","pos":[0,20]}]},{"content":"Gets or sets the disabled image of the button.","pos":[193347,193393]},{"pos":[193443,193453],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[193455,193460]},{"pos":[193469,193481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The full name of an image file.","pos":[193483,193514]},{"content":"The system supports all of the GDI-supported image formats.","pos":[193515,193574]},{"pos":[193581,193588],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This property has precedence over the disabledResource property.","pos":[193590,193654]},{"content":"It is used if both of these properties are set.","pos":[193655,193702]},{"pos":[193708,193736],"content":"Method disabledImageLocation","linkify":"Method disabledImageLocation","nodes":[{"content":"Method disabledImageLocation","pos":[0,28]}]},{"pos":[193794,193804],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[193806,193811]},{"pos":[193820,193832],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[193838,193861],"content":"Method disabledResource","linkify":"Method disabledResource","nodes":[{"content":"Method disabledResource","pos":[0,23]}]},{"content":"Gets or sets the resource ID of the image to use as the disabled button image.","pos":[193863,193941]},{"pos":[193994,194004],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[194006,194011]},{"pos":[194020,194032],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The resource ID of the image to use as the disabled button image.","pos":[194034,194099]},{"content":"Both icon and bitmap images are supported.","pos":[194100,194142]},{"pos":[194148,194168],"content":"Method displayTarget","linkify":"Method displayTarget","nodes":[{"content":"Method displayTarget","pos":[0,20]}]},{"content":"Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.","pos":[194170,194401]},{"pos":[194451,194461],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[194463,194468]},{"content":"The integer value that indicates where the control is displayed; optional.","pos":[194471,194545]},{"pos":[194552,194564],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise Portal, or in both.","pos":[194566,194726]},{"pos":[194732,194747],"content":"Method dragDrop","linkify":"Method dragDrop","nodes":[{"content":"Method dragDrop","pos":[0,15]}]},{"content":"Determines whether to enable or disable drag-and-drop operations for the control.","pos":[194749,194830]},{"pos":[194875,194885],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[194887,194892]},{"content":"An Integer data type that indicates whether drag-and-drop behavior is enabled; optional.","pos":[194895,194983]},{"pos":[194990,195002],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if drag-and-drop operations are enabled; otherwise, false.","pos":[195004,195064]},{"pos":[195071,195078],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the dragLeave , the dragOver, and the dragOverEx to specify the behavior.","pos":[195080,195157]},{"pos":[195163,195178],"content":"Method dragOver","linkify":"Method dragOver","nodes":[{"content":"Method dragOver","pos":[0,15]}]},{"content":"Raises the dragOver event to indicate that a mouse drag operation is over the current control.","pos":[195180,195274]},{"pos":[195368,195378],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[195380,195390]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[195393,195478]},{"content":"dragMode","pos":[195490,195498]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[195501,195586]},{"content":"x","pos":[195598,195599]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[195602,195687]},{"content":"y","pos":[195699,195700]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[195703,195788]},{"pos":[195795,195807],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A FormDrag enumeration value that indicates the mode of dragging.","pos":[195809,195874]},{"pos":[195880,195897],"content":"Method dragOverEx","linkify":"Method dragOverEx","nodes":[{"content":"Method dragOverEx","pos":[0,17]}]},{"content":"Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.","pos":[195899,195995]},{"pos":[196085,196095],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[196097,196107]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[196110,196195]},{"content":"dragMode","pos":[196207,196215]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[196218,196303]},{"content":"x","pos":[196315,196316]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[196319,196404]},{"content":"y","pos":[196416,196417]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[196420,196505]},{"pos":[196512,196524],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A FormDrag enumeration value that indicates the mode of dragging.","pos":[196526,196591]},{"pos":[196597,196612],"content":"Method dragText","linkify":"Method dragText","nodes":[{"content":"Method dragText","pos":[0,15]}]},{"content":"Retrieves the text that is displayed when the form control is dragged.","pos":[196614,196684]},{"pos":[196718,196730],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The text that is displayed when the control is dragged; an empty string if there is no text to display when the control is dragged.","pos":[196732,196863]},{"pos":[196869,196883],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Determines whether to enable or disable the object.","pos":[196885,196936]},{"pos":[196988,196998],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[197000,197005]},{"content":"A Boolean value that specifies whether the control is enabled; optional.","pos":[197008,197080]},{"pos":[197087,197099],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the object is enabled; otherwise, false.","pos":[197101,197149]},{"pos":[197156,197163],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The enabled property allows controls to be enabled or disabled at run time.","pos":[197165,197240]},{"content":"For example, you can disable objects that do not apply to the current state of the application.","pos":[197241,197336]},{"content":"You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.","pos":[197337,197471]},{"pos":[197477,197488],"content":"Method font","linkify":"Method font","nodes":[{"content":"Method font","pos":[0,11]}]},{"content":"Gets or sets the name of the font for the control to use.","pos":[197490,197547]},{"pos":[197588,197598],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[197600,197605]},{"pos":[197614,197626],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the font to use, such as Tahoma or Verdana.","pos":[197628,197683]},{"pos":[197689,197704],"content":"Method fontSize","linkify":"Method fontSize","nodes":[{"content":"Method fontSize","pos":[0,15]}]},{"content":"Gets or sets the size of the font for the control to use.","pos":[197706,197763]},{"pos":[197808,197818],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[197820,197825]},{"pos":[197834,197846],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of the font in points.","pos":[197848,197881]},{"pos":[197887,197910],"content":"Method forcedToOverflow","linkify":"Method forcedToOverflow","nodes":[{"content":"Method forcedToOverflow","pos":[0,23]}]},{"pos":[197971,197981],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[197983,197988]},{"pos":[197997,198009],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[198015,198037],"content":"Method foregroundColor","linkify":"Method foregroundColor","nodes":[{"content":"Method foregroundColor","pos":[0,22]}]},{"content":"Gets or sets the text color for the control to use.","pos":[198039,198090]},{"pos":[198142,198152],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[198154,198159]},{"pos":[198168,198180],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that contains a packed RGB color.","pos":[198182,198226]},{"pos":[198233,198240],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The integer that is returned contains a packed RGB color as follows:","pos":[198242,198310]},{"content":"The low-order byte contains a value for the relative intensity of red.","pos":[198316,198386]},{"content":"The second byte contains a value for green.","pos":[198391,198434]},{"content":"The third byte contains a value for blue.","pos":[198439,198480]},{"content":"The high-order byte must be zero.","pos":[198485,198518]},{"content":"The maximum value for a single byte is 255.","pos":[198523,198566]},{"pos":[198572,198593],"content":"Method formViewOption","linkify":"Method formViewOption","nodes":[{"content":"Method formViewOption","pos":[0,21]}]},{"pos":[198644,198654],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[198656,198661]},{"pos":[198670,198682],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[198688,198705],"content":"Method hasChanged","linkify":"Method hasChanged","nodes":[{"content":"Method hasChanged","pos":[0,17]}]},{"content":"Sets or returns a value that indicates whether the contents of the control have changed.","pos":[198707,198795]},{"pos":[198848,198858],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"val","pos":[198860,198863]},{"content":"The value to assign as the hasChanged value for the control; optional.","pos":[198866,198936]},{"pos":[198943,198955],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the contents of the control have changed; otherwise, false.","pos":[198957,199024]},{"pos":[199030,199051],"content":"Method hasUserSetting","linkify":"Method hasUserSetting","nodes":[{"content":"Method hasUserSetting","pos":[0,21]}]},{"content":"Indicates whether the control has custom user settings.","pos":[199053,199108]},{"pos":[199152,199164],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control has custom user settings; otherwise, false.","pos":[199166,199229]},{"pos":[199235,199248],"content":"Method height","linkify":"Method height","nodes":[{"content":"Method height","pos":[0,13]}]},{"content":"Gets or sets the height of the control.","pos":[199250,199289]},{"pos":[199342,199352],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[199354,199359]},{"content":"An Integer that indicates how the height is calculated; optional.","pos":[199362,199427]},{"content":"mode","pos":[199439,199443]},{"content":"An Integer that indicates how the height is calculated; optional.","pos":[199446,199511]},{"pos":[199518,199530],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of the control in pixels.","pos":[199532,199568]},{"pos":[199575,199582],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Exact mode is used if the value parameter is omitted.Calculate the height according to the following table:","pos":[199584,199691]},{"content":"Mode.","pos":[199695,199700]},{"content":"Height calculation.","pos":[199714,199733]},{"content":"-1 Exact.","pos":[199921,199930]},{"content":"The exact height in pixels of the controls is used.","pos":[199940,199991]},{"content":"0 Auto.","pos":[200034,200041]},{"content":"The height of the control is calculated automatically and the value parameter is ignored.","pos":[200053,200142]},{"content":"1 Column height.","pos":[200147,200163]},{"content":"The layout of the form determines the height of the control.","pos":[200166,200226]},{"content":"The height and height calculation mode can be set separately.","pos":[200259,200320]},{"pos":[200326,200343],"content":"Method heightMode","linkify":"Method heightMode","nodes":[{"content":"Method heightMode","pos":[0,17]}]},{"content":"Gets or sets a calculation mode for the height of the control.","pos":[200345,200407]},{"pos":[200454,200464],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[200466,200471]},{"content":"An integer value that indicates how control height is calculated; optional.","pos":[200474,200549]},{"pos":[200556,200568],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The calculation mode.","pos":[200570,200591]},{"pos":[200598,200605],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Calculate the height according to the following table:","pos":[200607,200661]},{"content":"Mode.","pos":[200665,200670]},{"content":"Height Calculation.","pos":[200682,200701]},{"content":"Exact.","pos":[200887,200893]},{"content":"The exact height in pixels of the controls is used.","pos":[200904,200955]},{"content":"Auto.","pos":[200998,201003]},{"content":"The height of the control is calculated automatically and the value parameter is ignored.","pos":[201015,201104]},{"content":"Column height.","pos":[201109,201123]},{"content":"The layout of the form determines the height of the control.","pos":[201126,201186]},{"content":"The height of the control might change when the mode is set to auto or column height.","pos":[201219,201304]},{"pos":[201310,201328],"content":"Method heightValue","linkify":"Method heightValue","nodes":[{"content":"Method heightValue","pos":[0,18]}]},{"content":"Gets or sets the height of the control.","pos":[201330,201369]},{"pos":[201417,201427],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[201429,201434]},{"content":"An Integer that specifies the height in pixels; optional.","pos":[201437,201494]},{"pos":[201501,201513],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height in pixels.","pos":[201515,201536]},{"pos":[201543,201550],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The height of the control is not changed unless the exact height calculation mode is used.","pos":[201552,201642]},{"pos":[201648,201664],"content":"Method helpField","linkify":"Method helpField","nodes":[{"content":"Method helpField","pos":[0,16]}]},{"content":"Retrieves the Help text for the control.","pos":[201666,201706]},{"pos":[201741,201753],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Help text for the control; an empty string if there is no Help text for the control.","pos":[201755,201843]},{"pos":[201850,201857],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The helpField method cannot be used to set the value of the Help text.","pos":[201859,201929]},{"content":"Use the helpText method to set the value of the Help text.","pos":[201930,201988]},{"pos":[201994,202009],"content":"Method helpText","linkify":"Method helpText","nodes":[{"content":"Method helpText","pos":[0,15]}]},{"content":"Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.","pos":[202011,202115]},{"pos":[202160,202170],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[202172,202177]},{"content":"The value that is assigned as the Help text for the control.","pos":[202180,202240]},{"pos":[202247,202259],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string to be displayed at the bottom of the screen.","pos":[202261,202316]},{"pos":[202323,202330],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Set the HelpText property for an object by using the property sheet.","pos":[202332,202400]},{"content":"The Help text must not exceed 250 characters.","pos":[202401,202446]},{"pos":[202452,202474],"content":"Method hierarchyParent","linkify":"Method hierarchyParent","nodes":[{"content":"Method hierarchyParent","pos":[0,22]}]},{"content":"Gets or sets the HierarchyParent property value of the control.","pos":[202476,202539]},{"pos":[202591,202601],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[202603,202608]},{"content":"The value to assign to the HierarchyParent property of the control.","pos":[202611,202678]},{"pos":[202685,202697],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The HierarchyParent property value of the control.","pos":[202699,202749]},{"pos":[202755,202766],"content":"Method hWnd","linkify":"Method hWnd","nodes":[{"content":"Method hWnd","pos":[0,11]}]},{"content":"Retrieves the Windows handle for the control.","pos":[202768,202813]},{"pos":[202843,202855],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The handle for the control.","pos":[202857,202884]},{"pos":[202891,202898],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The handle can be used with the Windows API.","pos":[202900,202944]},{"pos":[202950,202970],"content":"Method imageLocation","linkify":"Method imageLocation","nodes":[{"content":"Method imageLocation","pos":[0,20]}]},{"pos":[203020,203030],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[203032,203037]},{"pos":[203046,203058],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[203064,203082],"content":"Method isContainer","linkify":"Method isContainer","nodes":[{"content":"Method isContainer","pos":[0,18]}]},{"pos":[203123,203135],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[203141,203159],"content":"Method isDisplayed","linkify":"Method isDisplayed","nodes":[{"content":"Method isDisplayed","pos":[0,18]}]},{"content":"Retrieves a value that indicates whether the control is displayed.","pos":[203161,203227]},{"pos":[203268,203280],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is displayed; otherwise, false.","pos":[203282,203333]},{"pos":[203340,203347],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To modify the visible state of the control, call the visible method.","pos":[203349,203417]},{"pos":[203423,203442],"content":"Method isRestricted","linkify":"Method isRestricted","nodes":[{"content":"Method isRestricted","pos":[0,19]}]},{"content":"Retrieves a value that indicates whether the control is restricted.","pos":[203444,203511]},{"pos":[203553,203565],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is restricted; otherwise, false.","pos":[203567,203619]},{"pos":[203625,203650],"content":"Method isUserSetupEnabled","linkify":"Method isUserSetupEnabled","nodes":[{"content":"Method isUserSetupEnabled","pos":[0,25]}]},{"content":"Retrieves a value that indicates whether the control allows for the specified level of customization.","pos":[203652,203753]},{"pos":[203822,203832],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"neededSetupRights","pos":[203834,203851]},{"content":"A value from the FormAllowUserSetup enumeration that specifies the level of customization that is being queried for the control.","pos":[203854,203982]},{"pos":[203989,204001],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control, design, and parent containers allow for the level of customization that is specified by the neededSetupRights parameter; otherwise, false.","pos":[204003,204162]},{"pos":[204169,204176],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following table describes the values for the neededSetupRights parameter.","pos":[204178,204255]},{"content":"FormAllowUserSetup::No 0","pos":[204595,204619]},{"content":"No changes can be made to the control.","pos":[204630,204668]},{"content":"If this value is set for the neededSetupRights parameter, the method always returns true.","pos":[204669,204758]},{"content":"FormAllowUserSetup::Restricted 1","pos":[204763,204795]},{"content":"The user can change the editable, visible, skip, label, and width properties of the control.","pos":[204798,204890]},{"content":"The user cannot move the control.","pos":[204891,204924]},{"content":"FormAllowUserSetup::Yes 2","pos":[204931,204956]},{"content":"The user can change the editable, visible, skip, label, and width properties of the control.","pos":[204966,205058]},{"content":"The user can also move the control.","pos":[205059,205094]},{"content":"For this method to return true, the AllowUserSetup property for the design and all parent containers must allow for the level of access that is specified by the neededSetupRights parameter.","pos":[205098,205287]},{"pos":[205293,205306],"content":"Method italic","linkify":"Method italic","nodes":[{"content":"Method italic","pos":[0,13]}]},{"pos":[205357,205367],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[205369,205374]},{"pos":[205383,205395],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[205401,205414],"content":"Method keyTip","linkify":"Method keyTip","nodes":[{"content":"Method keyTip","pos":[0,13]}]},{"pos":[205457,205467],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[205469,205474]},{"pos":[205483,205495],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[205501,205512],"content":"Method left","linkify":"Method left","nodes":[{"content":"Method left","pos":[0,11]}]},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[205514,205578]},{"pos":[205629,205639],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[205641,205646]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[205649,205735]},{"content":"mode","pos":[205747,205751]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[205754,205840]},{"pos":[205847,205859],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal position of the control in the form.","pos":[205861,205912]},{"pos":[205918,205933],"content":"Method leftMode","linkify":"Method leftMode","nodes":[{"content":"Method leftMode","pos":[0,15]}]},{"content":"Sets the horizontal arrange mode for the control in the form.","pos":[205935,205996]},{"pos":[206041,206051],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[206053,206058]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[206061,206147]},{"pos":[206154,206166],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal arrange mode for the control in the form.","pos":[206168,206224]},{"pos":[206230,206246],"content":"Method leftValue","linkify":"Method leftValue","nodes":[{"content":"Method leftValue","pos":[0,16]}]},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[206248,206312]},{"pos":[206358,206368],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[206370,206375]},{"content":"An integer value that indicates the horizontal position of the control; optional.","pos":[206378,206459]},{"pos":[206466,206478],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal position of the control in the form.","pos":[206480,206531]},{"pos":[206537,206557],"content":"Method markAsUserAdd","linkify":"Method markAsUserAdd","nodes":[{"content":"Method markAsUserAdd","pos":[0,20]}]},{"content":"Marks or unmarks the control as a user-added control.","pos":[206559,206612]},{"pos":[206670,206680],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[206682,206687]},{"content":"The Boolean value that indicates whether the control should be marked as a user-added control.","pos":[206690,206784]},{"pos":[206791,206803],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control was marked as a user-added control; otherwise, false.","pos":[206805,206878]},{"pos":[206884,206903],"content":"Method menufunction","linkify":"Method menufunction","nodes":[{"content":"Method menufunction","pos":[0,19]}]},{"pos":[206951,206963],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[206969,206988],"content":"Method menuItemName","linkify":"Method menuItemName","nodes":[{"content":"Method menuItemName","pos":[0,19]}]},{"pos":[207037,207047],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[207049,207054]},{"pos":[207063,207075],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[207081,207100],"content":"Method menuItemType","linkify":"Method menuItemType","nodes":[{"content":"Method menuItemType","pos":[0,19]}]},{"pos":[207167,207177],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[207179,207184]},{"pos":[207193,207205],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[207211,207231],"content":"Method mouseDblClick","linkify":"Method mouseDblClick","nodes":[{"content":"Method mouseDblClick","pos":[0,20]}]},{"content":"Is called when the control is double-clicked by the user.","pos":[207233,207290]},{"pos":[207382,207392],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[207394,207395]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[207398,207459]},{"content":"y","pos":[207471,207472]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[207475,207536]},{"content":"button","pos":[207548,207554]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[207557,207618]},{"content":"Ctrl","pos":[207630,207634]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[207637,207698]},{"content":"Shift","pos":[207710,207715]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[207718,207779]},{"pos":[207786,207798],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[207800,207839]},{"pos":[207846,207853],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[207855,207959]},{"pos":[207965,207981],"content":"Method mouseDown","linkify":"Method mouseDown","nodes":[{"content":"Method mouseDown","pos":[0,16]}]},{"content":"Is called when the user clicks the mouse button over the control.","pos":[207983,208048]},{"pos":[208136,208146],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[208148,208149]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[208152,208213]},{"content":"y","pos":[208225,208226]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[208229,208290]},{"content":"button","pos":[208302,208308]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[208311,208372]},{"content":"Ctrl","pos":[208384,208388]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[208391,208452]},{"content":"Shift","pos":[208464,208469]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[208472,208533]},{"pos":[208540,208552],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[208554,208593]},{"pos":[208600,208607],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[208609,208713]},{"content":"This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.","pos":[208714,208849]},{"pos":[208855,208871],"content":"Method mouseMove","linkify":"Method mouseMove","nodes":[{"content":"Method mouseMove","pos":[0,16]}]},{"content":"Is called when the user moves the mouse pointer over the control.","pos":[208873,208938]},{"pos":[209026,209036],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[209038,209039]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[209042,209103]},{"content":"y","pos":[209115,209116]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[209119,209180]},{"content":"button","pos":[209192,209198]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[209201,209262]},{"content":"Ctrl","pos":[209274,209278]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[209281,209342]},{"content":"Shift","pos":[209354,209359]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[209362,209423]},{"pos":[209430,209442],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[209444,209483]},{"pos":[209490,209497],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[209499,209603]},{"pos":[209609,209623],"content":"Method mouseUp","linkify":"Method mouseUp","nodes":[{"content":"Method mouseUp","pos":[0,14]}]},{"content":"Is called when the user releases the mouse button over the control area.","pos":[209625,209697]},{"pos":[209783,209793],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[209795,209796]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[209799,209860]},{"content":"y","pos":[209872,209873]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[209876,209937]},{"content":"button","pos":[209949,209955]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[209958,210019]},{"content":"Ctrl","pos":[210031,210035]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[210038,210099]},{"content":"Shift","pos":[210111,210116]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[210119,210180]},{"pos":[210187,210199],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[210201,210240]},{"pos":[210247,210254],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[210256,210360]},{"content":"This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.","pos":[210361,210496]},{"pos":[210502,210520],"content":"Method multiSelect","linkify":"Method multiSelect","nodes":[{"content":"Method multiSelect","pos":[0,18]}]},{"pos":[210568,210578],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[210580,210585]},{"pos":[210594,210606],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[210612,210623],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.","pos":[210625,210792]},{"pos":[210833,210843],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[210845,210850]},{"content":"The name to assign to the control.","pos":[210853,210887]},{"pos":[210894,210906],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[210908,210972]},{"pos":[210979,210986],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[210988,211082]},{"content":"It must begin with a letter.","pos":[211088,211116]},{"content":"It cannot exceed 250 characters.","pos":[211121,211153]},{"content":"It can include numbers and underscore (<ph id=\"ph1\">\\_</ph>) characters.","pos":[211158,211212],"source":"It can include numbers and underscore (\\_) characters."},{"content":"It cannot include punctuation or spaces.","pos":[211217,211257]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.","pos":[211262,211372]},{"pos":[211378,211401],"content":"Method neededPermission","linkify":"Method neededPermission","nodes":[{"content":"Method neededPermission","pos":[0,23]}]},{"pos":[211454,211464],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[211466,211471]},{"pos":[211480,211492],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[211498,211516],"content":"Method needsRecord","linkify":"Method needsRecord","nodes":[{"content":"Method needsRecord","pos":[0,18]}]},{"pos":[211564,211574],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[211576,211581]},{"pos":[211590,211602],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[211608,211626],"content":"Method normalImage","linkify":"Method normalImage","nodes":[{"content":"Method normalImage","pos":[0,18]}]},{"pos":[211674,211684],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[211686,211691]},{"pos":[211700,211712],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[211718,211739],"content":"Method normalResource","linkify":"Method normalResource","nodes":[{"content":"Method normalResource","pos":[0,21]}]},{"pos":[211790,211800],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[211802,211807]},{"pos":[211816,211828],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[211834,211849],"content":"Method openMode","linkify":"Method openMode","nodes":[{"content":"Method openMode","pos":[0,15]}]},{"pos":[211894,211904],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[211906,211911]},{"pos":[211920,211932],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[211938,211965],"content":"Method SysObsoleteAttribute","linkify":"Method SysObsoleteAttribute","nodes":[{"content":"Method SysObsoleteAttribute","pos":[0,27]}]},{"pos":[212017,212029],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[212035,212052],"content":"Method parameters","linkify":"Method parameters","nodes":[{"content":"Method parameters","pos":[0,17]}]},{"content":"Gets or sets the list of parameters that are passed to objects taht are run by the MenuFunction class.","pos":[212054,212156]},{"pos":[212203,212213],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[212215,212220]},{"pos":[212229,212241],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The list of parameters that are passed to the object.","pos":[212243,212296]},{"pos":[212303,212310],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The parameters string format is Parameter1=Value1, Parameter2=Value2, and so on.cts ignore passed, unrecognized parameters.","pos":[212312,212435]},{"pos":[212441,212461],"content":"Method parentControl","linkify":"Method parentControl","nodes":[{"content":"Method parentControl","pos":[0,20]}]},{"content":"Retrieves the parent control for the control.","pos":[212463,212508]},{"pos":[212555,212567],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The parent control for the control.","pos":[212569,212604]},{"pos":[212610,212624],"content":"Method primary","linkify":"Method primary","nodes":[{"content":"Method primary","pos":[0,14]}]},{"pos":[212676,212686],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[212688,212693]},{"pos":[212702,212714],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[212720,212737],"content":"Method saveRecord","linkify":"Method saveRecord","nodes":[{"content":"Method saveRecord","pos":[0,17]}]},{"pos":[212792,212802],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[212804,212809]},{"pos":[212818,212830],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[212836,212854],"content":"Method securityKey","linkify":"Method securityKey","nodes":[{"content":"Method securityKey","pos":[0,18]}]},{"content":"Sets or returns the ID of the security key for the control.","pos":[212856,212915]},{"pos":[212983,212993],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[212995,213000]},{"content":"The ID of the security key to assign to the control; optional.","pos":[213003,213065]},{"pos":[213072,213084],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the security key for the control; 0 (zero) if no security key is assigned to the control.","pos":[213086,213185]},{"pos":[213191,213217],"content":"Method sendExternalContext","linkify":"Method sendExternalContext","nodes":[{"content":"Method sendExternalContext","pos":[0,26]}]},{"pos":[213281,213291],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[213293,213298]},{"pos":[213307,213319],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[213325,213340],"content":"Method shortkey","linkify":"Method shortkey","nodes":[{"content":"Method shortkey","pos":[0,15]}]},{"pos":[213385,213395],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[213397,213402]},{"pos":[213411,213423],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[213429,213451],"content":"Method showContextMenu","linkify":"Method showContextMenu","nodes":[{"content":"Method showContextMenu","pos":[0,22]}]},{"content":"Shows the shortcut menu for the control.","pos":[213453,213493]},{"pos":[213548,213558],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"menuHandle","pos":[213560,213570]},{"content":"The ID of the menu to show.","pos":[213573,213600]},{"pos":[213607,213619],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates whether the call succeeded.","pos":[213621,213680]},{"pos":[213686,213705],"content":"Method showShortCut","linkify":"Method showShortCut","nodes":[{"content":"Method showShortCut","pos":[0,19]}]},{"pos":[213762,213772],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[213774,213779]},{"pos":[213788,213800],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[213806,213817],"content":"Method skip","linkify":"Method skip","nodes":[{"content":"Method skip","pos":[0,11]}]},{"content":"Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.","pos":[213819,213946]},{"pos":[213995,214005],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[214007,214012]},{"content":"The value to assign to the skip property of the control; optional.","pos":[214015,214081]},{"pos":[214088,214100],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is skipped when the user presses the TAB key to move to the control; otherwise, false.","pos":[214102,214208]},{"pos":[214215,214222],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the enabled property is true, the allowEdit property is false, and the skip property is true, the user cannot change the contents of the control but can still copy the contents of the control.","pos":[214224,214419]},{"pos":[214425,214436],"content":"Method sort","linkify":"Method sort","nodes":[{"content":"Method sort","pos":[0,11]}]},{"pos":[214491,214501],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sortDirection","pos":[214503,214516]},{"pos":[214525,214537],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[214543,214555],"content":"Method style","linkify":"Method style","nodes":[{"content":"Method style","pos":[0,12]}]},{"pos":[214597,214607],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[214609,214614]},{"pos":[214623,214635],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[214641,214652],"content":"Method text","linkify":"Method text","nodes":[{"content":"Method text","pos":[0,11]}]},{"pos":[214693,214703],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[214705,214710]},{"pos":[214719,214731],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[214737,214751],"content":"Method toolTip","linkify":"Method toolTip","nodes":[{"content":"Method toolTip","pos":[0,14]}]},{"content":"Retrieves the tooltip text for the control.","pos":[214753,214796]},{"pos":[214829,214841],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The tooltip text for the control; an empty string if no tooltip text has been defined for the control.","pos":[214843,214945]},{"pos":[214952,214959],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The method might be overridden to provide a value to the toolTip method.","pos":[214961,215033]},{"pos":[215039,215049],"content":"Method top","linkify":"Method top","nodes":[{"content":"Method top","pos":[0,10]}]},{"content":"Gets or sets the vertical position of the control in the form.","pos":[215051,215113]},{"pos":[215163,215173],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[215175,215180]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[215183,215267]},{"content":"mode","pos":[215279,215283]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[215286,215370]},{"pos":[215377,215389],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical position of the control in the form.","pos":[215391,215440]},{"pos":[215446,215460],"content":"Method topMode","linkify":"Method topMode","nodes":[{"content":"Method topMode","pos":[0,14]}]},{"content":"Sets the vertical arrange mode for the control in the form.","pos":[215462,215521]},{"pos":[215565,215575],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[215577,215582]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[215585,215669]},{"pos":[215676,215688],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical arrange mode for the control in the form.","pos":[215690,215744]},{"pos":[215750,215765],"content":"Method topValue","linkify":"Method topValue","nodes":[{"content":"Method topValue","pos":[0,15]}]},{"content":"Gets or sets the vertical position of the control in the form.","pos":[215767,215829]},{"pos":[215874,215884],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[215886,215891]},{"content":"An integer value that indicates the vertical position of the control; optional.","pos":[215894,215973]},{"pos":[215980,215992],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical position of the control in the form.","pos":[215994,216043]},{"pos":[216049,216060],"content":"Method type","linkify":"Method type","nodes":[{"content":"Method type","pos":[0,11]}]},{"pos":[216101,216111],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[216113,216118]},{"pos":[216127,216139],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[216145,216161],"content":"Method underline","linkify":"Method underline","nodes":[{"content":"Method underline","pos":[0,16]}]},{"pos":[216215,216225],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[216227,216232]},{"pos":[216241,216253],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[216259,216286],"content":"Method SysObsoleteAttribute","linkify":"Method SysObsoleteAttribute","nodes":[{"content":"Method SysObsoleteAttribute","pos":[0,27]}]},{"pos":[216350,216360],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[216362,216366]},{"pos":[216375,216387],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[216393,216408],"content":"Method userData","linkify":"Method userData","nodes":[{"content":"Method userData","pos":[0,15]}]},{"content":"Gets or sets the user data for the control.","pos":[216410,216453]},{"pos":[216498,216508],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[216510,216515]},{"content":"An integer value that indicates the user data for the control; optional.","pos":[216518,216590]},{"pos":[216597,216609],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user data for the control.","pos":[216611,216641]},{"pos":[216647,216666],"content":"Method userDataItem","linkify":"Method userDataItem","nodes":[{"content":"Method userDataItem","pos":[0,19]}]},{"content":"Gets or sets the user data item for the control.","pos":[216668,216716]},{"pos":[216765,216775],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[216777,216782]},{"content":"An integer value that indicates the user data item for the control; optional.","pos":[216785,216862]},{"pos":[216869,216881],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user data item for the control.","pos":[216883,216918]},{"pos":[216924,216944],"content":"Method userDataItems","linkify":"Method userDataItems","nodes":[{"content":"Method userDataItems","pos":[0,20]}]},{"content":"Gets or sets the number of user data items for the control.","pos":[216946,217005]},{"pos":[217055,217065],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[217067,217072]},{"content":"An integer value that indicates the number of user data items for the control; optional.","pos":[217075,217163]},{"pos":[217170,217182],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of user data items for the control.","pos":[217184,217230]},{"pos":[217236,217254],"content":"Method userDisable","linkify":"Method userDisable","nodes":[{"content":"Method userDisable","pos":[0,18]}]},{"content":"Gets or sets the value that indicates whether the control is disabled for the user.","pos":[217256,217339]},{"pos":[217387,217397],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[217399,217404]},{"content":"The value that indicates whether the control is disabled for the user; optional.","pos":[217407,217487]},{"pos":[217494,217506],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control is disabled for the user; otherwise, 0.","pos":[217508,217564]},{"pos":[217570,217587],"content":"Method userHeight","linkify":"Method userHeight","nodes":[{"content":"Method userHeight","pos":[0,17]}]},{"content":"Gets or sets the custom user height for the control.","pos":[217589,217641]},{"pos":[217688,217698],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[217700,217705]},{"content":"The user height for the control; optional.","pos":[217708,217750]},{"pos":[217757,217769],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The custom user height for the control.","pos":[217771,217810]},{"pos":[217816,217831],"content":"Method userHide","linkify":"Method userHide","nodes":[{"content":"Method userHide","pos":[0,15]}]},{"content":"Gets or sets the value that indicates whether the control is hidden from the user.","pos":[217833,217915]},{"pos":[217960,217970],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[217972,217977]},{"content":"The value that indicates whether the control is hidden from the user; optional.","pos":[217980,218059]},{"pos":[218066,218078],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control is hidden from the user; otherwise, 0.","pos":[218080,218135]},{"pos":[218142,218149],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The user specifies whether a control is hidden by right-clicking the control when it is viewable or by right-clicking another control when the original control is hidden.","pos":[218151,218321]},{"content":"A right-click opens a menu that can be used to hide or display the control.","pos":[218322,218397]},{"content":"This method lets you programmatically determine and set the value.","pos":[218398,218464]},{"pos":[218470,218493],"content":"Method userOrgContainer","linkify":"Method userOrgContainer","nodes":[{"content":"Method userOrgContainer","pos":[0,23]}]},{"content":"Gets or sets the organization container for the control.","pos":[218495,218551]},{"pos":[218604,218614],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[218616,218621]},{"content":"The organization container to set for the control; optional.","pos":[218624,218684]},{"pos":[218691,218703],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The organization container for the control.","pos":[218705,218748]},{"pos":[218754,218775],"content":"Method userOrgSibling","linkify":"Method userOrgSibling","nodes":[{"content":"Method userOrgSibling","pos":[0,21]}]},{"content":"Gets or sets the organization sibling for the control.","pos":[218777,218831]},{"pos":[218882,218892],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[218894,218899]},{"content":"The organization sibling to set for the control; optional.","pos":[218902,218960]},{"pos":[218967,218979],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The organization sibling for the control.","pos":[218981,219022]},{"pos":[219028,219049],"content":"Method userPromptText","linkify":"Method userPromptText","nodes":[{"content":"Method userPromptText","pos":[0,21]}]},{"content":"Gets or sets the user label text for the control.","pos":[219051,219100]},{"pos":[219151,219161],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[219163,219168]},{"content":"The user label text to set for the control; optional.","pos":[219171,219224]},{"pos":[219231,219243],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user label text for the control.","pos":[219245,219281]},{"pos":[219287,219311],"content":"Method userSecurityLevel","linkify":"Method userSecurityLevel","nodes":[{"content":"Method userSecurityLevel","pos":[0,24]}]},{"content":"Gets or sets the user security level for the control.","pos":[219313,219366]},{"pos":[219420,219430],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[219432,219437]},{"content":"The user security level to set for the control; optional.","pos":[219440,219497]},{"pos":[219504,219516],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user security level for the control.","pos":[219518,219558]},{"pos":[219564,219579],"content":"Method userSkip","linkify":"Method userSkip","nodes":[{"content":"Method userSkip","pos":[0,15]}]},{"content":"Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.","pos":[219581,219729]},{"pos":[219774,219784],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[219786,219791]},{"content":"The value to assign to the userSkip property; optional.","pos":[219794,219849]},{"content":"The value is 1 if the user setting to skip the control is in effect; otherwise, the value is 0.","pos":[219850,219945]},{"pos":[219952,219964],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the user setting to skip the control is in effect; otherwise, 0.","pos":[219966,220035]},{"pos":[220041,220057],"content":"Method userWidth","linkify":"Method userWidth","nodes":[{"content":"Method userWidth","pos":[0,16]}]},{"content":"Sets or returns the width of the control in pixels.","pos":[220059,220110]},{"pos":[220156,220166],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[220168,220173]},{"content":"The number of pixels to use as the width of the control; optional.","pos":[220176,220242]},{"pos":[220249,220261],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of pixels that the user specified as the width of the control; 0 (zero) if the user did not specify a character width.","pos":[220263,220392]},{"pos":[220399,220406],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The userWidth method returns the width in pixels, based on six times the number of characters.","pos":[220408,220502]},{"content":"For example, if the user has specified 30 characters as the width of the control, the return value is 6 <ph id=\"ph1\">\\*</ph> 30 = 180.","pos":[220503,220619],"source":" For example, if the user has specified 30 characters as the width of the control, the return value is 6 \\* 30 = 180."},{"content":"To specify the width of the control in characters, users can right-click the control to open the setup form where the character specification is made.","pos":[220620,220770]},{"pos":[220776,220788],"content":"Method value","linkify":"Method value","nodes":[{"content":"Method value","pos":[0,12]}]},{"pos":[220838,220848],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[220850,220855]},{"pos":[220864,220876],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[220882,220904],"content":"Method verticalSpacing","linkify":"Method verticalSpacing","nodes":[{"content":"Method verticalSpacing","pos":[0,22]}]},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[220906,220967]},{"pos":[221036,221046],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[221048,221053]},{"content":"An integer value that indicates the AutoMode value for the control; optional.","pos":[221056,221133]},{"content":"mode","pos":[221145,221149]},{"content":"An integer value that indicates the AutoMode value for the control; optional.","pos":[221152,221229]},{"pos":[221236,221248],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing of the control in the form.","pos":[221250,221298]},{"pos":[221304,221330],"content":"Method verticalSpacingMode","linkify":"Method verticalSpacingMode","nodes":[{"content":"Method verticalSpacingMode","pos":[0,26]}]},{"content":"Sets the vertical spacing mode for the control in the form.","pos":[221332,221391]},{"pos":[221456,221466],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[221468,221472]},{"pos":[221481,221493],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing mode for the control in the form.","pos":[221495,221549]},{"pos":[221555,221582],"content":"Method verticalSpacingValue","linkify":"Method verticalSpacingValue","nodes":[{"content":"Method verticalSpacingValue","pos":[0,27]}]},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[221584,221645]},{"pos":[221702,221712],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[221714,221719]},{"content":"An integer value that indicates the vertical spacing of the control; optional.","pos":[221722,221800]},{"pos":[221807,221819],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing of the control in the form.","pos":[221821,221869]},{"pos":[221875,221889],"content":"Method visible","linkify":"Method visible","nodes":[{"content":"Method visible","pos":[0,14]}]},{"content":"Sets or returns a value that indicates whether the control is visible.","pos":[221891,221961]},{"pos":[222013,222023],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[222025,222030]},{"content":"The value to assign to the visibility setting for the control; optional.","pos":[222033,222105]},{"pos":[222112,222124],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is visible; otherwise, false.","pos":[222126,222175]},{"pos":[222181,222193],"content":"Method width","linkify":"Method width","nodes":[{"content":"Method width","pos":[0,12]}]},{"content":"Gets or sets the width of the control.","pos":[222195,222233]},{"pos":[222285,222295],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[222297,222302]},{"content":"An Integer that indicates how the width is calculated; optional.","pos":[222305,222369]},{"content":"mode","pos":[222381,222385]},{"content":"An Integer that indicates how the width is calculated; optional.","pos":[222388,222452]},{"pos":[222459,222471],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width of the control in pixels.","pos":[222473,222508]},{"pos":[222515,222522],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Exact mode is used if the value parameter is omitted.Calculate the width according to the following table:","pos":[222524,222630]},{"content":"Mode.","pos":[222634,222639]},{"content":"Width calculation.","pos":[222652,222670]},{"content":"-1 Exact.","pos":[222856,222865]},{"content":"The exact width in pixels of the controls is used.","pos":[222874,222924]},{"content":"0 Auto.","pos":[222967,222974]},{"content":"The width of the control is calculated automatically and the value parameter is ignored.","pos":[222985,223073]},{"content":"1 Column width.","pos":[223078,223093]},{"content":"The layout of the form determines the width of the control.","pos":[223096,223155]},{"content":"The width and width calculation mode can be set separately.","pos":[223188,223247]},{"pos":[223253,223269],"content":"Method widthMode","linkify":"Method widthMode","nodes":[{"content":"Method widthMode","pos":[0,16]}]},{"content":"Gets or sets the calculation mode of the width of the control.","pos":[223271,223333]},{"pos":[223379,223389],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[223391,223396]},{"content":"An integer value that indicates how control width is calculated; optional.","pos":[223399,223473]},{"pos":[223480,223492],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the current calculation mode.","pos":[223494,223555]},{"pos":[223562,223569],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Calculate the width according to the following table:","pos":[223571,223624]},{"content":"Mode.","pos":[223628,223633]},{"content":"Width Calculation.","pos":[223644,223662]},{"content":"Exact.","pos":[223846,223852]},{"content":"The exact width in pixels of the controls is used.","pos":[223862,223912]},{"content":"Auto.","pos":[223955,223960]},{"content":"The width of the control is calculated automatically and the value parameter is ignored.","pos":[223971,224059]},{"content":"Column width.","pos":[224064,224077]},{"content":"The layout of the form determines the width of the control.","pos":[224080,224139]},{"content":"The width of the control might change when the mode is set to auto or column width.","pos":[224172,224255]},{"pos":[224261,224278],"content":"Method widthValue","linkify":"Method widthValue","nodes":[{"content":"Method widthValue","pos":[0,17]}]},{"content":"Gets or sets the width of the control.","pos":[224280,224318]},{"pos":[224365,224375],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[224377,224382]},{"content":"An Integer that specifies the width in pixels; optional.","pos":[224385,224441]},{"pos":[224448,224460],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width in pixels of the control.","pos":[224462,224497]},{"pos":[224504,224511],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To change the width of the control, use the exact width calculation mode.","pos":[224513,224586]},{"pos":[224592,224613],"content":"Method prefColumnSize","linkify":"Method prefColumnSize","nodes":[{"content":"Method prefColumnSize","pos":[0,21]}]},{"content":"Specifies the preferred column width and height for the form control.","pos":[224615,224684]},{"pos":[224746,224756],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"width","pos":[224758,224763]},{"content":"The preferred height of the control.","pos":[224766,224802]},{"content":"height","pos":[224814,224820]},{"content":"The preferred height of the control.","pos":[224823,224859]},{"pos":[224865,224881],"content":"Method lostFocus","linkify":"Method lostFocus","nodes":[{"content":"Method lostFocus","pos":[0,16]}]},{"content":"Indicates that the control has lost focus.","pos":[224883,224925]},{"pos":[224960,224983],"content":"Method resetUserSetting","linkify":"Method resetUserSetting","nodes":[{"content":"Method resetUserSetting","pos":[0,23]}]},{"content":"Resets the user settings for the control.","pos":[224985,225026]},{"pos":[225068,225082],"content":"Method context","linkify":"Method context","nodes":[{"content":"Method context","pos":[0,14]}]},{"content":"Shows the shortcut menu for the control.","pos":[225084,225124]},{"pos":[225157,225168],"content":"Method drop","linkify":"Method drop","nodes":[{"content":"Method drop","pos":[0,11]}]},{"content":"Raises the drop event to indicate that a drop operation is being performed on the current control.","pos":[225170,225268]},{"pos":[225354,225364],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[225366,225376]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[225379,225464]},{"content":"dragMode","pos":[225476,225484]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[225487,225572]},{"content":"x","pos":[225584,225585]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[225588,225673]},{"content":"y","pos":[225685,225686]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[225689,225774]},{"pos":[225780,225798],"content":"Method OnLostFocus","linkify":"Method OnLostFocus","nodes":[{"content":"Method OnLostFocus","pos":[0,18]}]},{"pos":[225883,225893],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[225895,225901]},{"content":"e","pos":[225915,225916]},{"pos":[225924,225939],"content":"Method gotFocus","linkify":"Method gotFocus","nodes":[{"content":"Method gotFocus","pos":[0,15]}]},{"content":"Indicates that the control has received focus.","pos":[225941,225987]},{"pos":[226021,226038],"content":"Method mouseEnter","linkify":"Method mouseEnter","nodes":[{"content":"Method mouseEnter","pos":[0,17]}]},{"content":"Is called when the user moves the mouse pointer into the control area.","pos":[226040,226110]},{"pos":[226200,226210],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[226212,226213]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[226216,226277]},{"content":"y","pos":[226289,226290]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[226293,226354]},{"content":"button","pos":[226366,226372]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[226375,226436]},{"content":"Ctrl","pos":[226448,226452]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[226455,226516]},{"content":"Shift","pos":[226528,226533]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[226536,226597]},{"pos":[226603,226615],"content":"Method paste","linkify":"Method paste","nodes":[{"content":"Method paste","pos":[0,12]}]},{"content":"Pastes the contents of the clipboard into the control.","pos":[226617,226671]},{"pos":[226702,226719],"content":"Method OnGotFocus","linkify":"Method OnGotFocus","nodes":[{"content":"Method OnGotFocus","pos":[0,17]}]},{"pos":[226803,226813],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[226815,226821]},{"content":"e","pos":[226835,226836]},{"pos":[226844,226858],"content":"Method endDrag","linkify":"Method endDrag","nodes":[{"content":"Method endDrag","pos":[0,14]}]},{"content":"Is called when the user has finished dragging a form control.","pos":[226860,226921]},{"pos":[226955,226962],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This event is not raised unless the DragDrop property is enabled for the control and a beginDrag event has already been started.","pos":[226964,227092]},{"content":"To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.","pos":[227093,227197]},{"pos":[227203,227213],"content":"Method cut","linkify":"Method cut","nodes":[{"content":"Method cut","pos":[0,10]}]},{"content":"Cuts the contents of the control.","pos":[227215,227248]},{"pos":[227277,227290],"content":"Method filter","linkify":"Method filter","nodes":[{"content":"Method filter","pos":[0,13]}]},{"pos":[227338,227348],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filterStr","pos":[227350,227359]},{"pos":[227367,227388],"content":"Method displayControl","linkify":"Method displayControl","nodes":[{"content":"Method displayControl","pos":[0,21]}]},{"content":"Displays the control.","pos":[227390,227411]},{"pos":[227451,227469],"content":"Method inputSearch","linkify":"Method inputSearch","nodes":[{"content":"Method inputSearch","pos":[0,18]}]},{"content":"Performs data filtering for the control, based on the specified string.","pos":[227471,227542]},{"pos":[227593,227603],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"searchStr","pos":[227605,227614]},{"content":"The string value to use to filter data; optional.","pos":[227617,227666]},{"pos":[227672,227683],"content":"Method copy","linkify":"Method copy","nodes":[{"content":"Method copy","pos":[0,11]}]},{"content":"Copies the contents of the control to the clipboard.","pos":[227685,227737]},{"pos":[227767,227781],"content":"Method clicked","linkify":"Method clicked","nodes":[{"content":"Method clicked","pos":[0,14]}]},{"pos":[227814,227830],"content":"Method OnClicked","linkify":"Method OnClicked","nodes":[{"content":"Method OnClicked","pos":[0,16]}]},{"pos":[227913,227923],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[227925,227931]},{"content":"e","pos":[227945,227946]},{"pos":[227954,227967],"content":"Method dropEx","linkify":"Method dropEx","nodes":[{"content":"Method dropEx","pos":[0,13]}]},{"content":"Raises the dropEx event to indicate that a drop operation is being performed on the current control.","pos":[227969,228069]},{"pos":[228151,228161],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[228163,228173]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[228176,228261]},{"content":"dragMode","pos":[228273,228281]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[228284,228369]},{"content":"x","pos":[228381,228382]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[228385,228470]},{"content":"y","pos":[228482,228483]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[228486,228571]},{"pos":[228577,228594],"content":"Method mouseLeave","linkify":"Method mouseLeave","nodes":[{"content":"Method mouseLeave","pos":[0,17]}]},{"content":"Indicates that the mouse pointer has left the control.","pos":[228596,228650]},{"pos":[228686,228701],"content":"Method setFocus","linkify":"Method setFocus","nodes":[{"content":"Method setFocus","pos":[0,15]}]},{"content":"Sets the focus on the control.","pos":[228703,228733]},{"pos":[228767,228783],"content":"Method dragLeave","linkify":"Method dragLeave","nodes":[{"content":"Method dragLeave","pos":[0,16]}]},{"content":"Raises the dragLeave event to indicate that a mouse drag operation has left the current control.","pos":[228785,228881]},{"pos":[228916,228930],"content":"Method jumpRef","linkify":"Method jumpRef","nodes":[{"content":"Method jumpRef","pos":[0,14]}]},{"pos":[228963,228992],"content":"Method registerOverrideMethod","linkify":"Method registerOverrideMethod","nodes":[{"content":"Method registerOverrideMethod","pos":[0,29]}]},{"pos":[229110,229120],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodToOverride","pos":[229122,229138]},{"content":"objectMethodToCall","pos":[229152,229170]},{"content":"overrideObject","pos":[229184,229198]},{"pos":[229205,229226],"content":"Class FormGridControl","linkify":"Class FormGridControl","nodes":[{"content":"Class FormGridControl","pos":[0,21]}]},{"pos":[229278,229285],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[229291,229299],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[229305,229312],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[229316,229322]},{"content":"Description","pos":[229434,229445]},{"content":"public int activeBackColor(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[229896,229937],"source":"public int activeBackColor(\\[int value\\])"},{"content":"public int activeForeColor(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[230186,230227],"source":"public int activeForeColor(\\[int value\\])"},{"content":"public FormControl addControl(FormControlType controlType, str controlName, <ph id=\"ph1\">\\[</ph>FormControl insertAfter<ph id=\"ph2\">\\]</ph>)","pos":[230476,230580],"source":"public FormControl addControl(FormControlType controlType, str controlName, \\[FormControl insertAfter\\])"},{"content":"public FormControl addControlEx(str controlClass, str controlName, <ph id=\"ph1\">\\[</ph>FormControl insertAfter<ph id=\"ph2\">\\]</ph>)","pos":[230766,230861],"source":"public FormControl addControlEx(str controlClass, str controlName, \\[FormControl insertAfter\\])"},{"content":"public FormControl addDataField(int dataSourceId, FieldId fieldId, <ph id=\"ph1\">\\[</ph>FormControl insertAfter<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayIndex<ph id=\"ph4\">\\]</ph>)","pos":[231056,231171],"source":"public FormControl addDataField(int dataSourceId, FieldId fieldId, \\[FormControl insertAfter\\], \\[int arrayIndex\\])"},{"content":"public boolean alignControl(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[231346,231392],"source":"public boolean alignControl(\\[boolean value\\])"},{"content":"Determines whether to align the control.","pos":[231464,231504]},{"content":"public boolean allowEdit(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[231636,231679],"source":"public boolean allowEdit(\\[boolean value\\])"},{"content":"Determines whether the user can change the contents of the control.","pos":[231754,231821]},{"content":"public boolean allowSysSetup()","pos":[231926,231956]},{"content":"Retrieves a value that indicates whether the control is shown in the SysSetup form.","pos":[232044,232127]},{"content":"public int alternateRowShading(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[232216,232261],"source":"public int alternateRowShading(\\[int value\\])"},{"content":"public boolean autoDataGroup(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[232506,232553],"source":"public boolean autoDataGroup(\\[boolean value\\])"},{"content":"public boolean autoDeclaration(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[232796,232845],"source":"public boolean autoDeclaration(\\[boolean value\\])"},{"content":"Determines whether the system can declare a member variable that has the same name as the control.","pos":[232914,233012]},{"content":"public int backgroundColor(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[233086,233127],"source":"public int backgroundColor(\\[int value\\])"},{"content":"Gets or sets the background color of the control.","pos":[233204,233253]},{"content":"public int backStyle(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[233376,233411],"source":"public int backStyle(\\[int value\\])"},{"content":"Determiness whether the control background can be transparent.","pos":[233494,233556]},{"content":"public int beginDrag(int x, int y)","pos":[233666,233700]},{"content":"Is called when the user starts to drag a form control.","pos":[233784,233838]},{"content":"public int border(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[233956,233988],"source":"public int border(\\[int value\\])"},{"content":"Gets or sets the style of the borderline of the control.","pos":[234074,234130]},{"content":"public int bottomMargin(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[234246,234284],"source":"public int bottomMargin(\\[int value\\])"},{"content":"public container calcControlSize(int chars, int lines)","pos":[234536,234590]},{"content":"Retrieves the size of the control.","pos":[234654,234688]},{"content":"public boolean canAddDataField(int dataSourceId, FieldId fieldId, <ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[234826,234911],"source":"public boolean canAddDataField(int dataSourceId, FieldId fieldId, \\[int arrayIndex\\])"},{"content":"public boolean canContain(FormControl control)","pos":[235116,235162]},{"content":"public int colorScheme(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[235406,235443],"source":"public int colorScheme(\\[int value\\])"},{"content":"Gets or sets the color scheme of the control.","pos":[235524,235569]},{"content":"public ConfigurationKeyId configurationKey(<ph id=\"ph1\">\\[</ph>ConfigurationKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[235696,235768],"source":"public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])"},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[235814,235881]},{"content":"public List configurationKeyEx()","pos":[235986,236018]},{"content":"Retrieves a list that contains the IDs of configuration keys that are in effect for the control.","pos":[236104,236200]},{"content":"public boolean contains(FormControl control)","pos":[236276,236320]},{"content":"public int controlCount()","pos":[236566,236591]},{"content":"public FormControl controlNum(int controlNo)","pos":[236856,236900]},{"content":"public str countryRegionCodes(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[237146,237190],"source":"public str countryRegionCodes(\\[str value\\])"},{"content":"Gets or sets the comma-separated list of country/region codes for the control.","pos":[237264,237342]},{"content":"public FieldId countryRegionContextField(<ph id=\"ph1\">\\[</ph>FieldId value<ph id=\"ph2\">\\]</ph>)","pos":[237436,237495],"source":"public FieldId countryRegionContextField(\\[FieldId value\\])"},{"content":"public str dataGroup(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[237726,237761],"source":"public str dataGroup(\\[str value\\])"},{"content":"public str dataRelationPath(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[238016,238058],"source":"public str dataRelationPath(\\[str value\\])"},{"content":"Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[238134,238259]},{"content":"public int dataSource(<ph id=\"ph1\">\\[</ph>AnyType value<ph id=\"ph2\">\\]</ph>)","pos":[238306,238346],"source":"public int dataSource(\\[AnyType value\\])"},{"content":"Gets or sets a data source to be used by the control or the form.","pos":[238424,238489]},{"content":"public str defaultAction(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[238596,238635],"source":"public str defaultAction(\\[str value\\])"},{"content":"public str defaultActionLabel(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[238886,238930],"source":"public str defaultActionLabel(\\[str value\\])"},{"content":"public int displayTarget(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[239176,239215],"source":"public int displayTarget(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.","pos":[239294,239525]},{"content":"public int dragDrop(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[239530,239564],"source":"public int dragDrop(\\[int value\\])"},{"content":"Determines whether to enable or disable drag-and-drop operations for the control.","pos":[239648,239729]},{"content":"public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)","pos":[239820,239901]},{"content":"Raises the dragOver event to indicate that a mouse drag operation is over the current control.","pos":[239938,240032]},{"content":"public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)","pos":[240110,240187]},{"content":"Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.","pos":[240228,240324]},{"content":"public str dragText()","pos":[240400,240421]},{"content":"Retrieves the text that is displayed when the form control is dragged.","pos":[240518,240588]},{"content":"public boolean enabled(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[240690,240731],"source":"public boolean enabled(\\[boolean value\\])"},{"content":"Determines whether to enable or disable the object.","pos":[240808,240859]},{"content":"public boolean exportAllowed(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[240980,241027],"source":"public boolean exportAllowed(\\[boolean value\\])"},{"content":"public str exportLabel(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[241270,241307],"source":"public str exportLabel(\\[str value\\])"},{"content":"public Struct getLineData(int lineNumber)","pos":[241560,241601]},{"content":"public Struct getSelectedData()","pos":[241850,241881]},{"content":"public boolean gridLines(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[242140,242183],"source":"public boolean gridLines(\\[boolean value\\])"},{"content":"public int gridLinesStyle(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[242430,242470],"source":"public int gridLinesStyle(\\[int value\\])"},{"content":"public str groupBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[242720,242753],"source":"public str groupBy(\\[str value\\])"},{"content":"public boolean hasChanged(<ph id=\"ph1\">\\[</ph>boolean val<ph id=\"ph2\">\\]</ph>)","pos":[243010,243052],"source":"public boolean hasChanged(\\[boolean val\\])"},{"content":"Sets or returns a value that indicates whether the contents of the control have changed.","pos":[243128,243216]},{"content":"public boolean hasUserSetting()","pos":[243300,243331]},{"content":"Indicates whether the control has custom user settings.","pos":[243418,243473]},{"content":"public int height(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[243590,243632],"source":"public int height(int value, \\[int mode\\])"},{"content":"Gets or sets the height of the control.","pos":[243708,243747]},{"content":"public int heightMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[243880,243916],"source":"public int heightMode(\\[int value\\])"},{"content":"Gets or sets a calculation mode for the height of the control.","pos":[243998,244060]},{"content":"public int heightValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[244170,244207],"source":"public int heightValue(\\[int value\\])"},{"content":"Gets or sets the height of the control.","pos":[244288,244327]},{"content":"public str helpField()","pos":[244460,244482]},{"content":"Retrieves the Help text for the control.","pos":[244578,244618]},{"content":"public str helpText(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[244750,244784],"source":"public str helpText(\\[str value\\])"},{"content":"Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.","pos":[244868,244972]},{"content":"public str hierarchyParent(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[245040,245081],"source":"public str hierarchyParent(\\[str value\\])"},{"content":"Gets or sets the HierarchyParent property value of the control.","pos":[245158,245221]},{"content":"public boolean highlightActive(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[245330,245379],"source":"public boolean highlightActive(\\[boolean value\\])"},{"content":"public int hWnd()","pos":[245620,245637]},{"content":"Retrieves the Windows handle for the control.","pos":[245738,245783]},{"content":"public boolean isContainer()","pos":[245910,245938]},{"content":"public boolean isDisplayed()","pos":[246200,246228]},{"content":"Retrieves a value that indicates whether the control is displayed.","pos":[246318,246384]},{"content":"public boolean isRestricted()","pos":[246490,246519]},{"content":"Retrieves a value that indicates whether the control is restricted.","pos":[246608,246675]},{"content":"public boolean isUserSetupEnabled(int neededSetupRights)","pos":[246780,246836]},{"content":"Retrieves a value that indicates whether the control allows for the specified level of customization.","pos":[246898,246999]},{"content":"public boolean leave()","pos":[247070,247092]},{"content":"public int left(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[247360,247400],"source":"public int left(int value, \\[int mode\\])"},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[247478,247542]},{"content":"public int leftMargin(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[247650,247686],"source":"public int leftMargin(\\[int value\\])"},{"content":"public int leftMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[247940,247974],"source":"public int leftMode(\\[int value\\])"},{"content":"Sets the horizontal arrange mode for the control in the form.","pos":[248058,248119]},{"content":"public int leftValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[248230,248265],"source":"public int leftValue(\\[int value\\])"},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[248348,248412]},{"content":"public boolean markAsUserAdd(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[248520,248567],"source":"public boolean markAsUserAdd(\\[boolean value\\])"},{"content":"Marks or unmarks the control as a user-added control.","pos":[248638,248691]},{"content":"public int moreRowsIndicator(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[248810,248853],"source":"public int moreRowsIndicator(\\[int value\\])"},{"content":"public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[249100,249179]},{"content":"Is called when the control is double-clicked by the user.","pos":[249218,249275]},{"content":"public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[249390,249465]},{"content":"Is called when the user clicks the mouse button over the control.","pos":[249508,249573]},{"content":"public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[249680,249755]},{"content":"Is called when the user moves the mouse pointer over the control.","pos":[249798,249863]},{"content":"public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[249970,250043]},{"content":"Is called when the user releases the mouse button over the control area.","pos":[250088,250160]},{"content":"public int moveControl(int controlId, <ph id=\"ph1\">\\[</ph>int insertAfterId<ph id=\"ph2\">\\]</ph>)","pos":[250260,250320],"source":"public int moveControl(int controlId, \\[int insertAfterId\\])"},{"content":"public boolean multiSelect(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[250550,250595],"source":"public boolean multiSelect(\\[boolean value\\])"},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[250840,250870],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.","pos":[250958,251125]},{"content":"public int neededPermission(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[251162,251204],"source":"public int neededPermission(\\[int value\\])"},{"content":"public container SysObsoleteAttribute()","pos":[251452,251491]},{"content":"public FormControl parentControl()","pos":[251742,251776]},{"content":"Retrieves the parent control for the control.","pos":[251860,251905]},{"content":"public int rightMargin(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[252032,252069],"source":"public int rightMargin(\\[int value\\])"},{"content":"public int scrollbars(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[252322,252358],"source":"public int scrollbars(\\[int value\\])"},{"content":"public SecurityKeyId securityKey(<ph id=\"ph1\">\\[</ph>SecurityKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[252612,252669],"source":"public SecurityKeyId securityKey(\\[SecurityKeyId value\\])"},{"content":"Sets or returns the ID of the security key for the control.","pos":[252730,252789]},{"content":"public boolean showColLabels(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[252902,252949],"source":"public boolean showColLabels(\\[boolean value\\])"},{"content":"public int showContextMenu(int menuHandle)","pos":[253192,253234]},{"content":"Shows the shortcut menu for the control.","pos":[253310,253350]},{"content":"public boolean showRowLabels(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[253482,253529],"source":"public boolean showRowLabels(\\[boolean value\\])"},{"content":"public boolean skip(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[253772,253810],"source":"public boolean skip(\\[boolean value\\])"},{"content":"Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.","pos":[253890,254017]},{"content":"public int sort(<ph id=\"ph1\">\\[</ph>SortOrder sortDirection<ph id=\"ph2\">\\]</ph>)","pos":[254062,254106],"source":"public int sort(\\[SortOrder sortDirection\\])"},{"content":"public int style(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[254352,254383],"source":"public int style(\\[int value\\])"},{"content":"public str toolTip()","pos":[254642,254662]},{"content":"Retrieves the tooltip text for the control.","pos":[254760,254803]},{"content":"public int top(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[254932,254971],"source":"public int top(int value, \\[int mode\\])"},{"content":"Gets or sets the vertical position of the control in the form.","pos":[255050,255112]},{"content":"public int topMargin(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[255222,255257],"source":"public int topMargin(\\[int value\\])"},{"content":"public int topMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[255512,255545],"source":"public int topMode(\\[int value\\])"},{"content":"Sets the vertical arrange mode for the control in the form.","pos":[255630,255689]},{"content":"public int topValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[255802,255836],"source":"public int topValue(\\[int value\\])"},{"content":"Gets or sets the vertical position of the control in the form.","pos":[255920,255982]},{"content":"public int type(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[256092,256122],"source":"public int type(\\[int value\\])"},{"content":"public boolean SysObsoleteAttribute(container data)","pos":[256382,256433]},{"content":"public int userData(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[256672,256706],"source":"public int userData(\\[int value\\])"},{"content":"Gets or sets the user data for the control.","pos":[256790,256833]},{"content":"public int userDataItem(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[256962,257000],"source":"public int userDataItem(\\[int value\\])"},{"content":"Gets or sets the user data item for the control.","pos":[257080,257128]},{"content":"public int userDataItems(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[257252,257291],"source":"public int userDataItems(\\[int value\\])"},{"content":"Gets or sets the number of user data items for the control.","pos":[257370,257429]},{"content":"public int userDisable(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[257542,257579],"source":"public int userDisable(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is disabled for the user.","pos":[257660,257743]},{"content":"public int userHeight(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[257832,257868],"source":"public int userHeight(\\[int value\\])"},{"content":"Gets or sets the custom user height for the control.","pos":[257950,258002]},{"content":"public int userHide(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[258122,258156],"source":"public int userHide(\\[int value\\])"},{"content":"Gets or sets the value that indicates whether the control is hidden from the user.","pos":[258240,258322]},{"content":"public int userOrgContainer(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[258412,258454],"source":"public int userOrgContainer(\\[int value\\])"},{"content":"Gets or sets the organization container for the control.","pos":[258530,258586]},{"content":"public int userOrgSibling(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[258702,258742],"source":"public int userOrgSibling(\\[int value\\])"},{"content":"Gets or sets the organization sibling for the control.","pos":[258820,258874]},{"content":"public str userPromptText(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[258992,259032],"source":"public str userPromptText(\\[str value\\])"},{"content":"Gets or sets the user label text for the control.","pos":[259110,259159]},{"content":"public int userSecurityLevel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[259282,259325],"source":"public int userSecurityLevel(\\[int value\\])"},{"content":"Gets or sets the user security level for the control.","pos":[259400,259453]},{"content":"public int userSkip(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[259572,259606],"source":"public int userSkip(\\[int value\\])"},{"content":"Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.","pos":[259690,259838]},{"content":"public int userWidth(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[259862,259897],"source":"public int userWidth(\\[int value\\])"},{"content":"Sets or returns the width of the control in pixels.","pos":[259980,260031]},{"content":"public boolean useUserLayout(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[260152,260199],"source":"public boolean useUserLayout(\\[boolean value\\])"},{"content":"public int verticalSpacing(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[260442,260502],"source":"public int verticalSpacing(\\[int value\\], \\[AutoMode mode\\])"},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[260560,260621]},{"content":"public AutoMode verticalSpacingMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[260732,260786],"source":"public AutoMode verticalSpacingMode(\\[AutoMode mode\\])"},{"content":"Sets the vertical spacing mode for the control in the form.","pos":[260850,260909]},{"content":"public int verticalSpacingValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[261022,261068],"source":"public int verticalSpacingValue(\\[int value\\])"},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[261140,261201]},{"content":"public boolean visible(<ph id=\"ph1\">\\[</ph>boolean value<ph id=\"ph2\">\\]</ph>)","pos":[261312,261353],"source":"public boolean visible(\\[boolean value\\])"},{"content":"Sets or returns a value that indicates whether the control is visible.","pos":[261430,261500]},{"content":"public int visibleCols(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[261602,261658],"source":"public int visibleCols(\\[int value\\], \\[AutoMode mode\\])"},{"content":"public AutoMode visibleColsMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[261892,261942],"source":"public AutoMode visibleColsMode(\\[AutoMode mode\\])"},{"content":"public int visibleColsValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[262182,262224],"source":"public int visibleColsValue(\\[int value\\])"},{"content":"public int visibleRows(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>AutoMode mode<ph id=\"ph4\">\\]</ph>)","pos":[262472,262528],"source":"public int visibleRows(\\[int value\\], \\[AutoMode mode\\])"},{"content":"public AutoMode visibleRowsMode(<ph id=\"ph1\">\\[</ph>AutoMode mode<ph id=\"ph2\">\\]</ph>)","pos":[262762,262812],"source":"public AutoMode visibleRowsMode(\\[AutoMode mode\\])"},{"content":"public int visibleRowsValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[263052,263094],"source":"public int visibleRowsValue(\\[int value\\])"},{"content":"public int width(int value, <ph id=\"ph1\">\\[</ph>int mode<ph id=\"ph2\">\\]</ph>)","pos":[263342,263383],"source":"public int width(int value, \\[int mode\\])"},{"content":"Gets or sets the width of the control.","pos":[263460,263498]},{"content":"public int widthMode(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[263632,263667],"source":"public int widthMode(\\[int value\\])"},{"content":"Gets or sets the calculation mode of the width of the control.","pos":[263750,263812]},{"content":"public int widthValue(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[263922,263958],"source":"public int widthValue(\\[int value\\])"},{"content":"Gets or sets the width of the control.","pos":[264040,264078]},{"content":"public void cut()","pos":[264212,264229]},{"content":"Cuts the contents of the control.","pos":[264330,264363]},{"content":"public void applyQuickFilter(<ph id=\"ph1\">\\[</ph>int controlId<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>str filterValue<ph id=\"ph4\">\\]</ph>)","pos":[264502,264570],"source":"public void applyQuickFilter(\\[int controlId\\], \\[str filterValue\\])"},{"content":"public void autoSizeColumns(<ph id=\"ph1\">\\[</ph>boolean autoSizeColumns<ph id=\"ph2\">\\]</ph>)","pos":[264792,264848],"source":"public void autoSizeColumns(\\[boolean autoSizeColumns\\])"},{"content":"public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)","pos":[265082,265155]},{"content":"Raises the drop event to indicate that a drop operation is being performed on the current control.","pos":[265200,265298]},{"content":"public void context()","pos":[265372,265393]},{"content":"Shows the shortcut menu for the control.","pos":[265490,265530]},{"content":"public void jumpRef()","pos":[265662,265683]},{"content":"private void OnLookup(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[265952,266025],"source":"private void OnLookup(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"private void OnLostFocus(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[266242,266318],"source":"private void OnLostFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, <ph id=\"ph1\">\\[</ph>Object overrideObject<ph id=\"ph2\">\\]</ph>)","pos":[266532,266639],"source":"public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, \\[Object overrideObject\\])"},{"content":"public void copy()","pos":[266822,266840]},{"content":"Copies the contents of the control to the clipboard.","pos":[266940,266992]},{"content":"public void enter()","pos":[267112,267131]},{"content":"public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)","pos":[267402,267479]},{"content":"Is called when the user moves the mouse pointer into the control area.","pos":[267520,267590]},{"content":"public void displayControl()","pos":[267692,267720]},{"content":"Displays the control.","pos":[267810,267831]},{"content":"private void OnLeaving(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[267982,268056],"source":"private void OnLeaving(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void paste()","pos":[268272,268291]},{"content":"Pastes the contents of the clipboard into the control.","pos":[268390,268444]},{"content":"public void resetUserSetting()","pos":[268562,268592]},{"content":"Resets the user settings for the control.","pos":[268680,268721]},{"content":"public void quickFilterProvider(<ph id=\"ph1\">\\[</ph>GridQuickFilterProvider quickFilterProvider<ph id=\"ph2\">\\]</ph>)","pos":[268852,268932],"source":"public void quickFilterProvider(\\[GridQuickFilterProvider quickFilterProvider\\])"},{"content":"public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)","pos":[269142,269211]},{"content":"Raises the dropEx event to indicate that a drop operation is being performed on the current control.","pos":[269260,269360]},{"content":"private void OnEnter(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[269432,269504],"source":"private void OnEnter(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void inputSearch(str searchStr)","pos":[269722,269760]},{"content":"Performs data filtering for the control, based on the specified string.","pos":[269840,269911]},{"content":"public void filter(<ph id=\"ph1\">\\[</ph>str filterStr<ph id=\"ph2\">\\]</ph>)","pos":[270012,270049],"source":"public void filter(\\[str filterStr\\])"},{"content":"public void prefColumnSize(int width, int height)","pos":[270302,270351]},{"content":"Specifies the preferred column width and height for the form control.","pos":[270420,270489]},{"content":"public void dragLeave()","pos":[270592,270615]},{"content":"Raises the dragLeave event to indicate that a mouse drag operation has left the current control.","pos":[270710,270806]},{"content":"private void OnGotFocus(<ph id=\"ph1\">\\[</ph>FormControl sender<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>FormControlEventArgs e<ph id=\"ph4\">\\]</ph>)","pos":[270882,270957],"source":"private void OnGotFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])"},{"content":"public void lostFocus()","pos":[271172,271195]},{"content":"Indicates that the control has lost focus.","pos":[271290,271332]},{"content":"public void endDrag()","pos":[271462,271483]},{"content":"Is called when the user has finished dragging a form control.","pos":[271580,271641]},{"content":"public void arrange()","pos":[271752,271773]},{"content":"public void gotFocus()","pos":[272042,272064]},{"content":"Indicates that the control has received focus.","pos":[272160,272206]},{"content":"public void mouseLeave()","pos":[272332,272356]},{"content":"Indicates that the mouse pointer has left the control.","pos":[272450,272504]},{"content":"public void setFocus()","pos":[272622,272644]},{"content":"Sets the focus on the control.","pos":[272740,272770]},{"pos":[272915,272937],"content":"Method activeBackColor","linkify":"Method activeBackColor","nodes":[{"content":"Method activeBackColor","pos":[0,22]}]},{"pos":[272989,272999],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[273001,273006]},{"pos":[273015,273027],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[273033,273055],"content":"Method activeForeColor","linkify":"Method activeForeColor","nodes":[{"content":"Method activeForeColor","pos":[0,22]}]},{"pos":[273107,273117],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[273119,273124]},{"pos":[273133,273145],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[273151,273168],"content":"Method addControl","linkify":"Method addControl","nodes":[{"content":"Method addControl","pos":[0,17]}]},{"pos":[273283,273293],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"controlType","pos":[273295,273306]},{"content":"controlName","pos":[273320,273331]},{"content":"insertAfter","pos":[273345,273356]},{"pos":[273365,273377],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[273383,273402],"content":"Method addControlEx","linkify":"Method addControlEx","nodes":[{"content":"Method addControlEx","pos":[0,19]}]},{"pos":[273508,273518],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"controlClass","pos":[273520,273532]},{"content":"controlName","pos":[273546,273557]},{"content":"insertAfter","pos":[273571,273582]},{"pos":[273591,273603],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[273609,273628],"content":"Method addDataField","linkify":"Method addDataField","nodes":[{"content":"Method addDataField","pos":[0,19]}]},{"pos":[273752,273762],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceId","pos":[273764,273776]},{"content":"fieldId","pos":[273790,273797]},{"content":"insertAfter","pos":[273811,273822]},{"content":"arrayIndex","pos":[273836,273846]},{"pos":[273855,273867],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[273873,273892],"content":"Method alignControl","linkify":"Method alignControl","nodes":[{"content":"Method alignControl","pos":[0,19]}]},{"content":"Determines whether to align the control.","pos":[273894,273934]},{"pos":[273991,274001],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[274003,274008]},{"content":"The new value for the property; optional.","pos":[274011,274052]},{"pos":[274059,274071],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control should be aligned; otherwise, false.","pos":[274073,274129]},{"pos":[274136,274143],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The upper-left corner of the control is aligned according to the longest label.","pos":[274145,274224]},{"pos":[274230,274246],"content":"Method allowEdit","linkify":"Method allowEdit","nodes":[{"content":"Method allowEdit","pos":[0,16]}]},{"content":"Determines whether the user can change the contents of the control.","pos":[274248,274315]},{"pos":[274369,274379],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[274381,274386]},{"content":"The value to assign to the allowEdit property.","pos":[274389,274435]},{"pos":[274442,274454],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control can be edited; otherwise, false.","pos":[274456,274508]},{"pos":[274515,274522],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When this property is set on a container control, modifications are disabled or enabled for all controls within the container.","pos":[274524,274650]},{"pos":[274656,274676],"content":"Method allowSysSetup","linkify":"Method allowSysSetup","nodes":[{"content":"Method allowSysSetup","pos":[0,20]}]},{"content":"Retrieves a value that indicates whether the control is shown in the SysSetup form.","pos":[274678,274761]},{"pos":[274804,274816],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is shown in the SysSetup form; otherwise, false.","pos":[274818,274886]},{"pos":[274892,274918],"content":"Method alternateRowShading","linkify":"Method alternateRowShading","nodes":[{"content":"Method alternateRowShading","pos":[0,26]}]},{"pos":[274974,274984],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[274986,274991]},{"pos":[275000,275012],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[275018,275038],"content":"Method autoDataGroup","linkify":"Method autoDataGroup","nodes":[{"content":"Method autoDataGroup","pos":[0,20]}]},{"pos":[275096,275106],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[275108,275113]},{"pos":[275122,275134],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[275140,275162],"content":"Method autoDeclaration","linkify":"Method autoDeclaration","nodes":[{"content":"Method autoDeclaration","pos":[0,22]}]},{"content":"Determines whether the system can declare a member variable that has the same name as the control.","pos":[275164,275262]},{"pos":[275322,275332],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[275334,275339]},{"content":"The value to assign to the property; optional.","pos":[275342,275388]},{"pos":[275395,275407],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the member variable can be declared for this control; otherwise, false.","pos":[275409,275488]},{"pos":[275495,275502],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Controls cannot have identical names.","pos":[275504,275541]},{"pos":[275547,275569],"content":"Method backgroundColor","linkify":"Method backgroundColor","nodes":[{"content":"Method backgroundColor","pos":[0,22]}]},{"content":"Gets or sets the background color of the control.","pos":[275571,275620]},{"pos":[275672,275682],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[275684,275689]},{"pos":[275698,275710],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that contains a packed RGB color.","pos":[275712,275756]},{"pos":[275763,275770],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The integer that is returned contains a packed RGB color as follows:","pos":[275772,275840]},{"content":"The low-order byte contains a value for the relative intensity of red.","pos":[275846,275916]},{"content":"The second byte contains a value for green.","pos":[275921,275964]},{"content":"The third byte contains a value for blue.","pos":[275969,276010]},{"content":"The high-order byte must be zero.","pos":[276015,276048]},{"content":"The maximum value for a single byte is 255.","pos":[276053,276096]},{"pos":[276102,276118],"content":"Method backStyle","linkify":"Method backStyle","nodes":[{"content":"Method backStyle","pos":[0,16]}]},{"content":"Determiness whether the control background can be transparent.","pos":[276120,276182]},{"pos":[276228,276238],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[276240,276245]},{"pos":[276254,276266],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control background can be transparent; otherwise, 0.","pos":[276268,276329]},{"pos":[276335,276351],"content":"Method beginDrag","linkify":"Method beginDrag","nodes":[{"content":"Method beginDrag","pos":[0,16]}]},{"content":"Is called when the user starts to drag a form control.","pos":[276353,276407]},{"pos":[276454,276464],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[276466,276467]},{"content":"An integer value that indicates the y-coordinate of the mouse pointer.","pos":[276470,276540]},{"content":"The coordinate is relative to the upper-left corner of the control.","pos":[276541,276608]},{"content":"y","pos":[276620,276621]},{"content":"An integer value that indicates the y-coordinate of the mouse pointer.","pos":[276624,276694]},{"content":"The coordinate is relative to the upper-left corner of the control.","pos":[276695,276762]},{"pos":[276769,276781],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[276783,276822]},{"pos":[276829,276836],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This event is not raised unless the DragDrop property is enabled for the control.","pos":[276838,276919]},{"content":"To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.","pos":[276920,277024]},{"pos":[277030,277043],"content":"Method border","linkify":"Method border","nodes":[{"content":"Method border","pos":[0,13]}]},{"content":"Gets or sets the style of the borderline of the control.","pos":[277045,277101]},{"pos":[277144,277154],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[277156,277161]},{"pos":[277170,277182],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer between zero and four, inclusive.","pos":[277184,277228]},{"pos":[277235,277242],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The integer that is returned contains the style of the borderline of the control as follows:","pos":[277244,277336]},{"content":"Value.","pos":[277340,277346]},{"content":"Description.","pos":[277349,277361]},{"content":"0","pos":[277392,277393]},{"content":"Auto.","pos":[277401,277406]},{"content":"1","pos":[277418,277419]},{"content":"3D.","pos":[277427,277430]},{"content":"2","pos":[277444,277445]},{"content":"Single line.","pos":[277453,277465]},{"content":"3","pos":[277470,277471]},{"content":"Flat.","pos":[277479,277484]},{"content":"4","pos":[277496,277497]},{"content":"None.","pos":[277505,277510]},{"pos":[277525,277544],"content":"Method bottomMargin","linkify":"Method bottomMargin","nodes":[{"content":"Method bottomMargin","pos":[0,19]}]},{"pos":[277593,277603],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[277605,277610]},{"pos":[277619,277631],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[277637,277659],"content":"Method calcControlSize","linkify":"Method calcControlSize","nodes":[{"content":"Method calcControlSize","pos":[0,22]}]},{"content":"Retrieves the size of the control.","pos":[277661,277695]},{"pos":[277762,277772],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"chars","pos":[277774,277779]},{"content":"The number of lines to use to determine the height.","pos":[277782,277833]},{"content":"lines","pos":[277845,277850]},{"content":"The number of lines to use to determine the height.","pos":[277853,277904]},{"pos":[277911,277923],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The container that holds the width and height.","pos":[277925,277971]},{"pos":[277977,277999],"content":"Method canAddDataField","linkify":"Method canAddDataField","nodes":[{"content":"Method canAddDataField","pos":[0,22]}]},{"pos":[278095,278105],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceId","pos":[278107,278119]},{"content":"fieldId","pos":[278133,278140]},{"content":"arrayIndex","pos":[278154,278164]},{"pos":[278173,278185],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[278191,278208],"content":"Method canContain","linkify":"Method canContain","nodes":[{"content":"Method canContain","pos":[0,17]}]},{"pos":[278267,278277],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"control","pos":[278279,278286]},{"pos":[278295,278307],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[278313,278331],"content":"Method colorScheme","linkify":"Method colorScheme","nodes":[{"content":"Method colorScheme","pos":[0,18]}]},{"content":"Gets or sets the color scheme of the control.","pos":[278333,278378]},{"pos":[278426,278436],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[278438,278443]},{"pos":[278452,278464],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer between zero and two, inclusive.","pos":[278466,278509]},{"pos":[278516,278523],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The color scheme is defined according to the following table:","pos":[278525,278586]},{"content":"Value.","pos":[278590,278596]},{"content":"Style.","pos":[278599,278605]},{"content":"0","pos":[278676,278677]},{"content":"Default.","pos":[278685,278693]},{"content":"1","pos":[278719,278720]},{"content":"The MicrosoftWindows palette.","pos":[278728,278757]},{"content":"2","pos":[278762,278763]},{"content":"The true-color scheme.","pos":[278771,278793]},{"pos":[278808,278831],"content":"Method configurationKey","linkify":"Method configurationKey","nodes":[{"content":"Method configurationKey","pos":[0,23]}]},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[278833,278900]},{"pos":[278983,278993],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[278995,279000]},{"content":"The ID of the configuration key to assign to the control; optional.","pos":[279003,279070]},{"pos":[279077,279089],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the configuration key that is assigned to the control.","pos":[279091,279163]},{"pos":[279170,279177],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The configuration key is used to determine whether this control can be displayed.","pos":[279179,279260]},{"content":"If the configuration key is disabled in the system, the control is not displayed in the form.","pos":[279261,279354]},{"pos":[279360,279385],"content":"Method configurationKeyEx","linkify":"Method configurationKeyEx","nodes":[{"content":"Method configurationKeyEx","pos":[0,25]}]},{"content":"Retrieves a list that contains the IDs of configuration keys that are in effect for the control.","pos":[279387,279483]},{"pos":[279528,279540],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list that contains the IDs of configuration keys that are in effect for the control.","pos":[279542,279628]},{"pos":[279635,279642],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The returned list does not contain duplicate IDs.","pos":[279644,279693]},{"content":"If the control is bound to a data source, the returned list of configuration key IDs also includes the configuration key ID for the table and field.","pos":[279694,279842]},{"content":"The returned list also contains any configuration key IDs that are applied to the properties, extended data type, or enumType methods.","pos":[279843,279977]},{"pos":[279983,279998],"content":"Method contains","linkify":"Method contains","nodes":[{"content":"Method contains","pos":[0,15]}]},{"pos":[280055,280065],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"control","pos":[280067,280074]},{"pos":[280083,280095],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[280101,280120],"content":"Method controlCount","linkify":"Method controlCount","nodes":[{"content":"Method controlCount","pos":[0,19]}]},{"pos":[280158,280170],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[280176,280193],"content":"Method controlNum","linkify":"Method controlNum","nodes":[{"content":"Method controlNum","pos":[0,17]}]},{"pos":[280250,280260],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"controlNo","pos":[280262,280271]},{"pos":[280280,280292],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[280298,280323],"content":"Method countryRegionCodes","linkify":"Method countryRegionCodes","nodes":[{"content":"Method countryRegionCodes","pos":[0,25]}]},{"content":"Gets or sets the comma-separated list of country/region codes for the control.","pos":[280325,280403]},{"pos":[280458,280468],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[280470,280475]},{"content":"The string that contains the country/region codes to set; optional.","pos":[280478,280545]},{"pos":[280552,280564],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The comma-separated list of country/region codes for the control.","pos":[280566,280631]},{"pos":[280637,280669],"content":"Method countryRegionContextField","linkify":"Method countryRegionContextField","nodes":[{"content":"Method countryRegionContextField","pos":[0,32]}]},{"pos":[280739,280749],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[280751,280756]},{"pos":[280765,280777],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[280783,280799],"content":"Method dataGroup","linkify":"Method dataGroup","nodes":[{"content":"Method dataGroup","pos":[0,16]}]},{"pos":[280845,280855],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[280857,280862]},{"pos":[280871,280883],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[280889,280912],"content":"Method dataRelationPath","linkify":"Method dataRelationPath","nodes":[{"content":"Method dataRelationPath","pos":[0,23]}]},{"content":"Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[280914,281039]},{"pos":[281092,281102],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[281104,281109]},{"content":"The string that contains the period-delimited list of relations; optional.","pos":[281112,281186]},{"pos":[281193,281205],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The period-delimited list of relations that links the field binding of the DataField object to a relative table.","pos":[281207,281319]},{"pos":[281326,281333],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is used by the reference group control to track exactly which relations produce the replacement field that is used.","pos":[281335,281462]},{"content":"It enables the reference group control to bind consistently to the controls that it contains.","pos":[281463,281556]},{"pos":[281562,281579],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"content":"Gets or sets a data source to be used by the control or the form.","pos":[281581,281646]},{"pos":[281697,281707],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[281709,281714]},{"pos":[281723,281735],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the data source that must be used.","pos":[281737,281789]},{"pos":[281795,281815],"content":"Method defaultAction","linkify":"Method defaultAction","nodes":[{"content":"Method defaultAction","pos":[0,20]}]},{"pos":[281865,281875],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[281877,281882]},{"pos":[281891,281903],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[281909,281934],"content":"Method defaultActionLabel","linkify":"Method defaultActionLabel","nodes":[{"content":"Method defaultActionLabel","pos":[0,25]}]},{"pos":[281989,281999],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[282001,282006]},{"pos":[282015,282027],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[282033,282053],"content":"Method displayTarget","linkify":"Method displayTarget","nodes":[{"content":"Method displayTarget","pos":[0,20]}]},{"content":"Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.","pos":[282055,282286]},{"pos":[282336,282346],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[282348,282353]},{"content":"The integer value that indicates where the control is displayed; optional.","pos":[282356,282430]},{"pos":[282437,282449],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise Portal, or in both.","pos":[282451,282611]},{"pos":[282617,282632],"content":"Method dragDrop","linkify":"Method dragDrop","nodes":[{"content":"Method dragDrop","pos":[0,15]}]},{"content":"Determines whether to enable or disable drag-and-drop operations for the control.","pos":[282634,282715]},{"pos":[282760,282770],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[282772,282777]},{"content":"An integer that indicates whether drag-and-drop behavior is enabled; optional.","pos":[282780,282858]},{"pos":[282865,282877],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if drag-and-drop operations are enabled; otherwise, false.","pos":[282879,282939]},{"pos":[282946,282953],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the dragLeave Method, dragOver Method, and dragOverEx Method methods to specify the behavior.","pos":[282955,283052]},{"pos":[283058,283073],"content":"Method dragOver","linkify":"Method dragOver","nodes":[{"content":"Method dragOver","pos":[0,15]}]},{"content":"Raises the dragOver event to indicate that a mouse drag operation is over the current control.","pos":[283075,283169]},{"pos":[283263,283273],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[283275,283285]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[283288,283373]},{"content":"dragMode","pos":[283385,283393]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[283396,283481]},{"content":"x","pos":[283493,283494]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[283497,283582]},{"content":"y","pos":[283594,283595]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[283598,283683]},{"pos":[283690,283702],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A FormDrag enumeration value that indicates the mode of dragging.","pos":[283704,283769]},{"pos":[283775,283792],"content":"Method dragOverEx","linkify":"Method dragOverEx","nodes":[{"content":"Method dragOverEx","pos":[0,17]}]},{"content":"Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.","pos":[283794,283890]},{"pos":[283980,283990],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[283992,284002]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[284005,284090]},{"content":"dragMode","pos":[284102,284110]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[284113,284198]},{"content":"x","pos":[284210,284211]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[284214,284299]},{"content":"y","pos":[284311,284312]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[284315,284400]},{"pos":[284407,284419],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A FormDrag enumeration value that indicates the mode of dragging.","pos":[284421,284486]},{"pos":[284492,284507],"content":"Method dragText","linkify":"Method dragText","nodes":[{"content":"Method dragText","pos":[0,15]}]},{"content":"Retrieves the text that is displayed when the form control is dragged.","pos":[284509,284579]},{"pos":[284613,284625],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The text that is displayed when the control is dragged; an empty string if there is no text to display when the control is dragged.","pos":[284627,284758]},{"pos":[284764,284778],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Determines whether to enable or disable the object.","pos":[284780,284831]},{"pos":[284883,284893],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[284895,284900]},{"content":"A Boolean value that indicates whether the control is enabled; optional.","pos":[284903,284975]},{"pos":[284982,284994],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the object is enabled; otherwise, false.","pos":[284996,285044]},{"pos":[285051,285058],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The enabled property allows controls to be enabled or disabled at run time.","pos":[285060,285135]},{"content":"For example, you can disable objects that do not apply to the current state of the application.","pos":[285136,285231]},{"content":"You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.","pos":[285232,285366]},{"pos":[285372,285392],"content":"Method exportAllowed","linkify":"Method exportAllowed","nodes":[{"content":"Method exportAllowed","pos":[0,20]}]},{"pos":[285450,285460],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[285462,285467]},{"pos":[285476,285488],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[285494,285512],"content":"Method exportLabel","linkify":"Method exportLabel","nodes":[{"content":"Method exportLabel","pos":[0,18]}]},{"pos":[285560,285570],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[285572,285577]},{"pos":[285586,285598],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[285604,285622],"content":"Method getLineData","linkify":"Method getLineData","nodes":[{"content":"Method getLineData","pos":[0,18]}]},{"pos":[285676,285686],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"lineNumber","pos":[285688,285698]},{"pos":[285707,285719],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[285725,285747],"content":"Method getSelectedData","linkify":"Method getSelectedData","nodes":[{"content":"Method getSelectedData","pos":[0,22]}]},{"pos":[285791,285803],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[285809,285825],"content":"Method gridLines","linkify":"Method gridLines","nodes":[{"content":"Method gridLines","pos":[0,16]}]},{"pos":[285879,285889],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[285891,285896]},{"pos":[285905,285917],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[285923,285944],"content":"Method gridLinesStyle","linkify":"Method gridLinesStyle","nodes":[{"content":"Method gridLinesStyle","pos":[0,21]}]},{"pos":[285995,286005],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[286007,286012]},{"pos":[286021,286033],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[286039,286053],"content":"Method groupBy","linkify":"Method groupBy","nodes":[{"content":"Method groupBy","pos":[0,14]}]},{"pos":[286097,286107],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[286109,286114]},{"pos":[286123,286135],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[286141,286158],"content":"Method hasChanged","linkify":"Method hasChanged","nodes":[{"content":"Method hasChanged","pos":[0,17]}]},{"content":"Sets or returns a value that indicates whether the contents of the control have changed.","pos":[286160,286248]},{"pos":[286301,286311],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"val","pos":[286313,286316]},{"content":"The value to assign as the hasChanged value for the control; optional.","pos":[286319,286389]},{"pos":[286396,286408],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the contents of the control have changed; otherwise, false.","pos":[286410,286477]},{"pos":[286483,286504],"content":"Method hasUserSetting","linkify":"Method hasUserSetting","nodes":[{"content":"Method hasUserSetting","pos":[0,21]}]},{"content":"Indicates whether the control has custom user settings.","pos":[286506,286561]},{"pos":[286605,286617],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control has custom user settings; otherwise, false.","pos":[286619,286682]},{"pos":[286688,286701],"content":"Method height","linkify":"Method height","nodes":[{"content":"Method height","pos":[0,13]}]},{"content":"Gets or sets the height of the control.","pos":[286703,286742]},{"pos":[286795,286805],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[286807,286812]},{"content":"An integer that indicates how the height is calculated; optional.","pos":[286815,286880]},{"content":"mode","pos":[286892,286896]},{"content":"An integer that indicates how the height is calculated; optional.","pos":[286899,286964]},{"pos":[286971,286983],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of the control in pixels.","pos":[286985,287021]},{"pos":[287028,287035],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Exact mode is used if the value parameter is omitted.Calculate the height according to the following table:","pos":[287037,287144]},{"content":"Mode.","pos":[287148,287153]},{"content":"Height calculation.","pos":[287167,287186]},{"content":"-1 Exact.","pos":[287374,287383]},{"content":"The exact height in pixels of the controls is used.","pos":[287393,287444]},{"content":"0 Auto.","pos":[287487,287494]},{"content":"The height of the control is calculated automatically and the value parameter is ignored.","pos":[287506,287595]},{"content":"1 Column height.","pos":[287600,287616]},{"content":"The layout of the form determines the height of the control.","pos":[287619,287679]},{"content":"The height and height calculation mode can be set separately.","pos":[287712,287773]},{"pos":[287779,287796],"content":"Method heightMode","linkify":"Method heightMode","nodes":[{"content":"Method heightMode","pos":[0,17]}]},{"content":"Gets or sets a calculation mode for the height of the control.","pos":[287798,287860]},{"pos":[287907,287917],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[287919,287924]},{"content":"An integer value that indicates how control height is calculated; optional.","pos":[287927,288002]},{"pos":[288009,288021],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The calculation mode.","pos":[288023,288044]},{"pos":[288051,288058],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Calculate the height according to the following table:","pos":[288060,288114]},{"content":"Mode.","pos":[288118,288123]},{"content":"Height Calculation.","pos":[288135,288154]},{"content":"Exact.","pos":[288340,288346]},{"content":"The exact height in pixels of the controls is used.","pos":[288357,288408]},{"content":"Auto.","pos":[288451,288456]},{"content":"The height of the control is calculated automatically and the value parameter is ignored.","pos":[288468,288557]},{"content":"Column height.","pos":[288562,288576]},{"content":"The layout of the form determines the height of the control.","pos":[288579,288639]},{"content":"The height of the control might change when the mode is set to auto or column height.","pos":[288672,288757]},{"pos":[288763,288781],"content":"Method heightValue","linkify":"Method heightValue","nodes":[{"content":"Method heightValue","pos":[0,18]}]},{"content":"Gets or sets the height of the control.","pos":[288783,288822]},{"pos":[288870,288880],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[288882,288887]},{"content":"An Integer that specifies the height in pixels; optional.","pos":[288890,288947]},{"pos":[288954,288966],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height in pixels.","pos":[288968,288989]},{"pos":[288996,289003],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The height of the control is not changed unless the exact height calculation mode is used.","pos":[289005,289095]},{"pos":[289101,289117],"content":"Method helpField","linkify":"Method helpField","nodes":[{"content":"Method helpField","pos":[0,16]}]},{"content":"Retrieves the Help text for the control.","pos":[289119,289159]},{"pos":[289194,289206],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Help text for the control; an empty string if there is no Help text for the control.","pos":[289208,289296]},{"pos":[289303,289310],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The helpField method cannot be used to set the value of the Help text.","pos":[289312,289382]},{"content":"Use the helpText method to set the value of the Help text.","pos":[289383,289441]},{"pos":[289447,289462],"content":"Method helpText","linkify":"Method helpText","nodes":[{"content":"Method helpText","pos":[0,15]}]},{"content":"Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.","pos":[289464,289568]},{"pos":[289613,289623],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[289625,289630]},{"content":"The value that is assigned as the Help text for the control.","pos":[289633,289693]},{"pos":[289700,289712],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string to be displayed at the bottom of the screen.","pos":[289714,289769]},{"pos":[289776,289783],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Set the HelpText property for an object by using the property sheet.","pos":[289785,289853]},{"content":"The Help text must not exceed 250 characters.","pos":[289854,289899]},{"pos":[289905,289927],"content":"Method hierarchyParent","linkify":"Method hierarchyParent","nodes":[{"content":"Method hierarchyParent","pos":[0,22]}]},{"content":"Gets or sets the HierarchyParent property value of the control.","pos":[289929,289992]},{"pos":[290044,290054],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[290056,290061]},{"content":"The value to assign to the HierarchyParent property of the control.","pos":[290064,290131]},{"pos":[290138,290150],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The HierarchyParent property value of the control.","pos":[290152,290202]},{"pos":[290208,290230],"content":"Method highlightActive","linkify":"Method highlightActive","nodes":[{"content":"Method highlightActive","pos":[0,22]}]},{"pos":[290290,290300],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[290302,290307]},{"pos":[290316,290328],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[290334,290345],"content":"Method hWnd","linkify":"Method hWnd","nodes":[{"content":"Method hWnd","pos":[0,11]}]},{"content":"Retrieves the Windows handle for the control.","pos":[290347,290392]},{"pos":[290422,290434],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The handle for the control.","pos":[290436,290463]},{"pos":[290470,290477],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The handle can be used with the Windows API.","pos":[290479,290523]},{"pos":[290529,290547],"content":"Method isContainer","linkify":"Method isContainer","nodes":[{"content":"Method isContainer","pos":[0,18]}]},{"pos":[290588,290600],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[290606,290624],"content":"Method isDisplayed","linkify":"Method isDisplayed","nodes":[{"content":"Method isDisplayed","pos":[0,18]}]},{"content":"Retrieves a value that indicates whether the control is displayed.","pos":[290626,290692]},{"pos":[290733,290745],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is displayed; otherwise, false.","pos":[290747,290798]},{"pos":[290805,290812],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To modify the visible state of the control, call the visible method.","pos":[290814,290882]},{"pos":[290888,290907],"content":"Method isRestricted","linkify":"Method isRestricted","nodes":[{"content":"Method isRestricted","pos":[0,19]}]},{"content":"Retrieves a value that indicates whether the control is restricted.","pos":[290909,290976]},{"pos":[291018,291030],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is restricted; otherwise, false.","pos":[291032,291084]},{"pos":[291090,291115],"content":"Method isUserSetupEnabled","linkify":"Method isUserSetupEnabled","nodes":[{"content":"Method isUserSetupEnabled","pos":[0,25]}]},{"content":"Retrieves a value that indicates whether the control allows for the specified level of customization.","pos":[291117,291218]},{"pos":[291287,291297],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"neededSetupRights","pos":[291299,291316]},{"content":"A value from the FormAllowUserSetup enumeration that specifies the level of customization that is being queried for the control.","pos":[291319,291447]},{"pos":[291454,291466],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control, design, and parent containers allow for the level of customization that is specified by the neededSetupRights parameter; otherwise, false.","pos":[291468,291627]},{"content":"For this method to return true, the AllowUserSetup property for the design and all parent containers must allow for the level of access that is specified by the neededSetupRights parameter.","pos":[291628,291817]},{"pos":[291824,291831],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following table describes the values for the neededSetupRights parameter.","pos":[291833,291910]},{"content":"FormAllowUserSetup::No 0","pos":[292250,292274]},{"content":"No changes can be made to the control.","pos":[292285,292323]},{"content":"If this value is set for the neededSetupRights parameter, the method always returns true.","pos":[292324,292413]},{"content":"FormAllowUserSetup::Restricted 1","pos":[292418,292450]},{"content":"The user can change the editable, visible, skip, label, and width properties of the control.","pos":[292453,292545]},{"content":"The user cannot move the control.","pos":[292546,292579]},{"content":"FormAllowUserSetup::Yes 2","pos":[292586,292611]},{"content":"The user can change the editable, visible, skip, label, and width properties of the control.","pos":[292621,292713]},{"content":"The user can also move the control.","pos":[292714,292749]},{"pos":[292757,292769],"content":"Method leave","linkify":"Method leave","nodes":[{"content":"Method leave","pos":[0,12]}]},{"pos":[292804,292816],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[292822,292833],"content":"Method left","linkify":"Method left","nodes":[{"content":"Method left","pos":[0,11]}]},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[292835,292899]},{"pos":[292950,292960],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[292962,292967]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[292970,293056]},{"content":"mode","pos":[293068,293072]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[293075,293161]},{"pos":[293168,293180],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal position of the control in the form.","pos":[293182,293233]},{"pos":[293239,293256],"content":"Method leftMargin","linkify":"Method leftMargin","nodes":[{"content":"Method leftMargin","pos":[0,17]}]},{"pos":[293303,293313],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[293315,293320]},{"pos":[293329,293341],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[293347,293362],"content":"Method leftMode","linkify":"Method leftMode","nodes":[{"content":"Method leftMode","pos":[0,15]}]},{"content":"Sets the horizontal arrange mode for the control in the form.","pos":[293364,293425]},{"pos":[293470,293480],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[293482,293487]},{"content":"An integer value that indicates the horizontal arrange mode for the control; optional.","pos":[293490,293576]},{"pos":[293583,293595],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal arrange mode for the control in the form.","pos":[293597,293653]},{"pos":[293659,293675],"content":"Method leftValue","linkify":"Method leftValue","nodes":[{"content":"Method leftValue","pos":[0,16]}]},{"content":"Gets or sets the horizontal position of the control in the form.","pos":[293677,293741]},{"pos":[293787,293797],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[293799,293804]},{"content":"An integer value that indicates the horizontal position of the control; optional.","pos":[293807,293888]},{"pos":[293895,293907],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal position of the control in the form.","pos":[293909,293960]},{"pos":[293966,293986],"content":"Method markAsUserAdd","linkify":"Method markAsUserAdd","nodes":[{"content":"Method markAsUserAdd","pos":[0,20]}]},{"content":"Marks or unmarks the control as a user-added control.","pos":[293988,294041]},{"pos":[294099,294109],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[294111,294116]},{"content":"The Boolean value that indicates whether the control should be marked as a user-added control.","pos":[294119,294213]},{"pos":[294220,294232],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control was marked as a user-added control; otherwise, false.","pos":[294234,294307]},{"pos":[294313,294337],"content":"Method moreRowsIndicator","linkify":"Method moreRowsIndicator","nodes":[{"content":"Method moreRowsIndicator","pos":[0,24]}]},{"pos":[294391,294401],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[294403,294408]},{"pos":[294417,294429],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[294435,294455],"content":"Method mouseDblClick","linkify":"Method mouseDblClick","nodes":[{"content":"Method mouseDblClick","pos":[0,20]}]},{"content":"Is called when the control is double-clicked by the user.","pos":[294457,294514]},{"pos":[294606,294616],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[294618,294619]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[294622,294683]},{"content":"y","pos":[294695,294696]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[294699,294760]},{"content":"button","pos":[294772,294778]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[294781,294842]},{"content":"Ctrl","pos":[294854,294858]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[294861,294922]},{"content":"Shift","pos":[294934,294939]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[294942,295003]},{"pos":[295010,295022],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[295024,295063]},{"pos":[295070,295077],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[295079,295183]},{"pos":[295189,295205],"content":"Method mouseDown","linkify":"Method mouseDown","nodes":[{"content":"Method mouseDown","pos":[0,16]}]},{"content":"Is called when the user clicks the mouse button over the control.","pos":[295207,295272]},{"pos":[295360,295370],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[295372,295373]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[295376,295437]},{"content":"y","pos":[295449,295450]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[295453,295514]},{"content":"button","pos":[295526,295532]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[295535,295596]},{"content":"Ctrl","pos":[295608,295612]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[295615,295676]},{"content":"Shift","pos":[295688,295693]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[295696,295757]},{"pos":[295764,295776],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[295778,295817]},{"pos":[295824,295831],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[295833,295937]},{"content":"This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.","pos":[295938,296073]},{"pos":[296079,296095],"content":"Method mouseMove","linkify":"Method mouseMove","nodes":[{"content":"Method mouseMove","pos":[0,16]}]},{"content":"Is called when the user moves the mouse pointer over the control.","pos":[296097,296162]},{"pos":[296250,296260],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[296262,296263]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[296266,296327]},{"content":"y","pos":[296339,296340]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[296343,296404]},{"content":"button","pos":[296416,296422]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[296425,296486]},{"content":"Ctrl","pos":[296498,296502]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[296505,296566]},{"content":"Shift","pos":[296578,296583]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[296586,296647]},{"pos":[296654,296666],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[296668,296707]},{"pos":[296714,296721],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[296723,296827]},{"pos":[296833,296847],"content":"Method mouseUp","linkify":"Method mouseUp","nodes":[{"content":"Method mouseUp","pos":[0,14]}]},{"content":"Is called when the user releases the mouse button over the control area.","pos":[296849,296921]},{"pos":[297007,297017],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[297019,297020]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[297023,297084]},{"content":"y","pos":[297096,297097]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[297100,297161]},{"content":"button","pos":[297173,297179]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[297182,297243]},{"content":"Ctrl","pos":[297255,297259]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[297262,297323]},{"content":"Shift","pos":[297335,297340]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[297343,297404]},{"pos":[297411,297423],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 (zero) if the event has been handled.","pos":[297425,297464]},{"pos":[297471,297478],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, when this method is overridden, the return value from a call to the super method is returned.","pos":[297480,297584]},{"content":"This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.","pos":[297585,297720]},{"pos":[297726,297744],"content":"Method moveControl","linkify":"Method moveControl","nodes":[{"content":"Method moveControl","pos":[0,18]}]},{"pos":[297815,297825],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"controlId","pos":[297827,297836]},{"content":"insertAfterId","pos":[297850,297863]},{"pos":[297872,297884],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[297890,297908],"content":"Method multiSelect","linkify":"Method multiSelect","nodes":[{"content":"Method multiSelect","pos":[0,18]}]},{"pos":[297964,297974],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[297976,297981]},{"pos":[297990,298002],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[298008,298019],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.","pos":[298021,298188]},{"pos":[298229,298239],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[298241,298246]},{"content":"The name to assign to the control.","pos":[298249,298283]},{"pos":[298290,298302],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[298304,298368]},{"pos":[298375,298382],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[298384,298478]},{"content":"It must begin with a letter.","pos":[298484,298512]},{"content":"It cannot exceed 250 characters.","pos":[298517,298549]},{"content":"It can include numbers and underscore (<ph id=\"ph1\">\\_</ph>) characters.","pos":[298554,298608],"source":"It can include numbers and underscore (\\_) characters."},{"content":"It cannot include punctuation or spaces.","pos":[298613,298653]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.","pos":[298658,298768]},{"pos":[298774,298797],"content":"Method neededPermission","linkify":"Method neededPermission","nodes":[{"content":"Method neededPermission","pos":[0,23]}]},{"pos":[298850,298860],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[298862,298867]},{"pos":[298876,298888],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[298894,298921],"content":"Method SysObsoleteAttribute","linkify":"Method SysObsoleteAttribute","nodes":[{"content":"Method SysObsoleteAttribute","pos":[0,27]}]},{"pos":[298973,298985],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[298991,299011],"content":"Method parentControl","linkify":"Method parentControl","nodes":[{"content":"Method parentControl","pos":[0,20]}]},{"content":"Retrieves the parent control for the control.","pos":[299013,299058]},{"pos":[299105,299117],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The parent control for the control.","pos":[299119,299154]},{"pos":[299160,299178],"content":"Method rightMargin","linkify":"Method rightMargin","nodes":[{"content":"Method rightMargin","pos":[0,18]}]},{"pos":[299226,299236],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[299238,299243]},{"pos":[299252,299264],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[299270,299287],"content":"Method scrollbars","linkify":"Method scrollbars","nodes":[{"content":"Method scrollbars","pos":[0,17]}]},{"pos":[299334,299344],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[299346,299351]},{"pos":[299360,299372],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[299378,299396],"content":"Method securityKey","linkify":"Method securityKey","nodes":[{"content":"Method securityKey","pos":[0,18]}]},{"content":"Sets or returns the ID of the security key for the control.","pos":[299398,299457]},{"pos":[299525,299535],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[299537,299542]},{"content":"The ID of the security key to assign to the control; optional.","pos":[299545,299607]},{"pos":[299614,299626],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the security key for the control; 0 (zero) if no security key is assigned to the control.","pos":[299628,299727]},{"pos":[299733,299753],"content":"Method showColLabels","linkify":"Method showColLabels","nodes":[{"content":"Method showColLabels","pos":[0,20]}]},{"pos":[299811,299821],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[299823,299828]},{"pos":[299837,299849],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[299855,299877],"content":"Method showContextMenu","linkify":"Method showContextMenu","nodes":[{"content":"Method showContextMenu","pos":[0,22]}]},{"content":"Shows the shortcut menu for the control.","pos":[299879,299919]},{"pos":[299974,299984],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"menuHandle","pos":[299986,299996]},{"content":"The ID of the menu to show.","pos":[299999,300026]},{"pos":[300033,300045],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates whether the call succeeded.","pos":[300047,300106]},{"pos":[300112,300132],"content":"Method showRowLabels","linkify":"Method showRowLabels","nodes":[{"content":"Method showRowLabels","pos":[0,20]}]},{"pos":[300190,300200],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[300202,300207]},{"pos":[300216,300228],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[300234,300245],"content":"Method skip","linkify":"Method skip","nodes":[{"content":"Method skip","pos":[0,11]}]},{"content":"Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.","pos":[300247,300374]},{"pos":[300423,300433],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[300435,300440]},{"content":"The value to assign to the skip property of the control; optional.","pos":[300443,300509]},{"pos":[300516,300528],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is skipped when the user presses the TAB key to move to the control; otherwise, false.","pos":[300530,300636]},{"pos":[300642,300653],"content":"Method sort","linkify":"Method sort","nodes":[{"content":"Method sort","pos":[0,11]}]},{"pos":[300708,300718],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sortDirection","pos":[300720,300733]},{"pos":[300742,300754],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[300760,300772],"content":"Method style","linkify":"Method style","nodes":[{"content":"Method style","pos":[0,12]}]},{"pos":[300814,300824],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[300826,300831]},{"pos":[300840,300852],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[300858,300872],"content":"Method toolTip","linkify":"Method toolTip","nodes":[{"content":"Method toolTip","pos":[0,14]}]},{"content":"Retrieves the tooltip text for the control.","pos":[300874,300917]},{"pos":[300950,300962],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The tooltip text for the control; an empty string if no tooltip text has been defined for the control.","pos":[300964,301066]},{"pos":[301073,301080],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The method might be overridden to provide a value to the toolTip method.","pos":[301082,301154]},{"pos":[301160,301170],"content":"Method top","linkify":"Method top","nodes":[{"content":"Method top","pos":[0,10]}]},{"content":"Gets or sets the vertical position of the control in the form.","pos":[301172,301234]},{"pos":[301284,301294],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[301296,301301]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[301304,301388]},{"content":"mode","pos":[301400,301404]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[301407,301491]},{"pos":[301498,301510],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical position of the control in the form.","pos":[301512,301561]},{"pos":[301567,301583],"content":"Method topMargin","linkify":"Method topMargin","nodes":[{"content":"Method topMargin","pos":[0,16]}]},{"pos":[301629,301639],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[301641,301646]},{"pos":[301655,301667],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[301673,301687],"content":"Method topMode","linkify":"Method topMode","nodes":[{"content":"Method topMode","pos":[0,14]}]},{"content":"Sets the vertical arrange mode for the control in the form.","pos":[301689,301748]},{"pos":[301792,301802],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[301804,301809]},{"content":"An integer value that indicates the vertical arrange mode for the control; optional.","pos":[301812,301896]},{"pos":[301903,301915],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical arrange mode for the control in the form.","pos":[301917,301971]},{"pos":[301977,301992],"content":"Method topValue","linkify":"Method topValue","nodes":[{"content":"Method topValue","pos":[0,15]}]},{"content":"Gets or sets the vertical position of the control in the form.","pos":[301994,302056]},{"pos":[302101,302111],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[302113,302118]},{"content":"An integer value that indicates the vertical position of the control; optional.","pos":[302121,302200]},{"pos":[302207,302219],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical position of the control in the form.","pos":[302221,302270]},{"pos":[302276,302287],"content":"Method type","linkify":"Method type","nodes":[{"content":"Method type","pos":[0,11]}]},{"pos":[302328,302338],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[302340,302345]},{"pos":[302354,302366],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[302372,302399],"content":"Method SysObsoleteAttribute","linkify":"Method SysObsoleteAttribute","nodes":[{"content":"Method SysObsoleteAttribute","pos":[0,27]}]},{"pos":[302463,302473],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[302475,302479]},{"pos":[302488,302500],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[302506,302521],"content":"Method userData","linkify":"Method userData","nodes":[{"content":"Method userData","pos":[0,15]}]},{"content":"Gets or sets the user data for the control.","pos":[302523,302566]},{"pos":[302611,302621],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[302623,302628]},{"content":"An integer value that indicates the user data for the control; optional.","pos":[302631,302703]},{"pos":[302710,302722],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user data for the control.","pos":[302724,302754]},{"pos":[302760,302779],"content":"Method userDataItem","linkify":"Method userDataItem","nodes":[{"content":"Method userDataItem","pos":[0,19]}]},{"content":"Gets or sets the user data item for the control.","pos":[302781,302829]},{"pos":[302878,302888],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[302890,302895]},{"content":"An integer value that indicates the user data item for the control; optional.","pos":[302898,302975]},{"pos":[302982,302994],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user data item for the control.","pos":[302996,303031]},{"pos":[303037,303057],"content":"Method userDataItems","linkify":"Method userDataItems","nodes":[{"content":"Method userDataItems","pos":[0,20]}]},{"content":"Gets or sets the number of user data items for the control.","pos":[303059,303118]},{"pos":[303168,303178],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[303180,303185]},{"content":"An integer value that indicates the number of user data items for the control; optional.","pos":[303188,303276]},{"pos":[303283,303295],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of user data items for the control.","pos":[303297,303343]},{"pos":[303349,303367],"content":"Method userDisable","linkify":"Method userDisable","nodes":[{"content":"Method userDisable","pos":[0,18]}]},{"content":"Gets or sets the value that indicates whether the control is disabled for the user.","pos":[303369,303452]},{"pos":[303500,303510],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[303512,303517]},{"content":"The value that indicates whether the control is disabled for the user; optional.","pos":[303520,303600]},{"pos":[303607,303619],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control is disabled for the user; otherwise, 0.","pos":[303621,303677]},{"pos":[303683,303700],"content":"Method userHeight","linkify":"Method userHeight","nodes":[{"content":"Method userHeight","pos":[0,17]}]},{"content":"Gets or sets the custom user height for the control.","pos":[303702,303754]},{"pos":[303801,303811],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[303813,303818]},{"content":"The user height for the control; optional.","pos":[303821,303863]},{"pos":[303870,303882],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The custom user height for the control.","pos":[303884,303923]},{"pos":[303929,303944],"content":"Method userHide","linkify":"Method userHide","nodes":[{"content":"Method userHide","pos":[0,15]}]},{"content":"Gets or sets the value that indicates whether the control is hidden from the user.","pos":[303946,304028]},{"pos":[304073,304083],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[304085,304090]},{"content":"The value that indicates whether the control is hidden from the user; optional.","pos":[304093,304172]},{"pos":[304179,304191],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the control is hidden from the user; otherwise, 0.","pos":[304193,304248]},{"pos":[304255,304262],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The user specifies whether a control is hidden by right-clicking the control when it is viewable or by right-clicking another control when the original control is hidden.","pos":[304264,304434]},{"content":"A right-click opens a menu that can be used to hide or display the control.","pos":[304435,304510]},{"content":"This method lets you programmatically determine and set the value.","pos":[304511,304577]},{"pos":[304583,304606],"content":"Method userOrgContainer","linkify":"Method userOrgContainer","nodes":[{"content":"Method userOrgContainer","pos":[0,23]}]},{"content":"Gets or sets the organization container for the control.","pos":[304608,304664]},{"pos":[304717,304727],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[304729,304734]},{"content":"The organization container to set for the control; optional.","pos":[304737,304797]},{"pos":[304804,304816],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The organization container for the control.","pos":[304818,304861]},{"pos":[304867,304888],"content":"Method userOrgSibling","linkify":"Method userOrgSibling","nodes":[{"content":"Method userOrgSibling","pos":[0,21]}]},{"content":"Gets or sets the organization sibling for the control.","pos":[304890,304944]},{"pos":[304995,305005],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[305007,305012]},{"content":"The organization sibling to set for the control; optional.","pos":[305015,305073]},{"pos":[305080,305092],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The organization sibling for the control.","pos":[305094,305135]},{"pos":[305141,305162],"content":"Method userPromptText","linkify":"Method userPromptText","nodes":[{"content":"Method userPromptText","pos":[0,21]}]},{"content":"Gets or sets the user label text for the control.","pos":[305164,305213]},{"pos":[305264,305274],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[305276,305281]},{"content":"The user label text to set for the control; optional.","pos":[305284,305337]},{"pos":[305344,305356],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user label text for the control.","pos":[305358,305394]},{"pos":[305400,305424],"content":"Method userSecurityLevel","linkify":"Method userSecurityLevel","nodes":[{"content":"Method userSecurityLevel","pos":[0,24]}]},{"content":"Gets or sets the user security level for the control.","pos":[305426,305479]},{"pos":[305533,305543],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[305545,305550]},{"content":"The user security level to set for the control; optional.","pos":[305553,305610]},{"pos":[305617,305629],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user security level for the control.","pos":[305631,305671]},{"pos":[305677,305692],"content":"Method userSkip","linkify":"Method userSkip","nodes":[{"content":"Method userSkip","pos":[0,15]}]},{"content":"Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.","pos":[305694,305842]},{"pos":[305887,305897],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[305899,305904]},{"content":"The value to assign to the userSkip property; optional.","pos":[305907,305962]},{"content":"The value is 1 if the user setting to skip the control is in effect; otherwise, the value is 0.","pos":[305963,306058]},{"pos":[306065,306077],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the user setting to skip the control is in effect; otherwise, 0.","pos":[306079,306148]},{"pos":[306154,306170],"content":"Method userWidth","linkify":"Method userWidth","nodes":[{"content":"Method userWidth","pos":[0,16]}]},{"content":"Sets or returns the width of the control in pixels.","pos":[306172,306223]},{"pos":[306269,306279],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[306281,306286]},{"content":"The number of pixels to use as the width of the control; optional.","pos":[306289,306355]},{"pos":[306362,306374],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of pixels that the user specified as the width of the control; 0 (zero) if the user did not specify a character width.","pos":[306376,306505]},{"pos":[306512,306519],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The userWidth method returns the width in pixels, based on six times the number of characters.","pos":[306521,306615]},{"content":"For example, if the user has specified 30 characters as the width of the control, the return value is 6 <ph id=\"ph1\">\\*</ph> 30 = 180.","pos":[306616,306732],"source":" For example, if the user has specified 30 characters as the width of the control, the return value is 6 \\* 30 = 180."},{"content":"To specify the width of the control in characters, users can right-click the control to open the setup form where the character specification is made.","pos":[306733,306883]},{"pos":[306889,306909],"content":"Method useUserLayout","linkify":"Method useUserLayout","nodes":[{"content":"Method useUserLayout","pos":[0,20]}]},{"pos":[306967,306977],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[306979,306984]},{"pos":[306993,307005],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[307011,307033],"content":"Method verticalSpacing","linkify":"Method verticalSpacing","nodes":[{"content":"Method verticalSpacing","pos":[0,22]}]},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[307035,307096]},{"pos":[307165,307175],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[307177,307182]},{"content":"An integer value that indicates the AutoMode value for the control; optional.","pos":[307185,307262]},{"content":"mode","pos":[307274,307278]},{"content":"An integer value that indicates the AutoMode value for the control; optional.","pos":[307281,307358]},{"pos":[307365,307377],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing of the control in the form.","pos":[307379,307427]},{"pos":[307433,307459],"content":"Method verticalSpacingMode","linkify":"Method verticalSpacingMode","nodes":[{"content":"Method verticalSpacingMode","pos":[0,26]}]},{"content":"Sets the vertical spacing mode for the control in the form.","pos":[307461,307520]},{"pos":[307585,307595],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[307597,307601]},{"pos":[307610,307622],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing mode for the control in the form.","pos":[307624,307678]},{"pos":[307684,307711],"content":"Method verticalSpacingValue","linkify":"Method verticalSpacingValue","nodes":[{"content":"Method verticalSpacingValue","pos":[0,27]}]},{"content":"Gets or sets the vertical spacing of the control in the form.","pos":[307713,307774]},{"pos":[307831,307841],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[307843,307848]},{"content":"An integer value that indicates the vertical spacing of the control; optional.","pos":[307851,307929]},{"pos":[307936,307948],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical spacing of the control in the form.","pos":[307950,307998]},{"pos":[308004,308018],"content":"Method visible","linkify":"Method visible","nodes":[{"content":"Method visible","pos":[0,14]}]},{"content":"Sets or returns a value that indicates whether the control is visible.","pos":[308020,308090]},{"pos":[308142,308152],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[308154,308159]},{"content":"The value to assign to the visibility setting for the control; optional.","pos":[308162,308234]},{"pos":[308241,308253],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the control is visible; otherwise, false.","pos":[308255,308304]},{"pos":[308310,308328],"content":"Method visibleCols","linkify":"Method visibleCols","nodes":[{"content":"Method visibleCols","pos":[0,18]}]},{"pos":[308393,308403],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[308405,308410]},{"content":"mode","pos":[308424,308428]},{"pos":[308437,308449],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[308455,308477],"content":"Method visibleColsMode","linkify":"Method visibleColsMode","nodes":[{"content":"Method visibleColsMode","pos":[0,22]}]},{"pos":[308538,308548],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[308550,308554]},{"pos":[308563,308575],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[308581,308604],"content":"Method visibleColsValue","linkify":"Method visibleColsValue","nodes":[{"content":"Method visibleColsValue","pos":[0,23]}]},{"pos":[308657,308667],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[308669,308674]},{"pos":[308683,308695],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[308701,308719],"content":"Method visibleRows","linkify":"Method visibleRows","nodes":[{"content":"Method visibleRows","pos":[0,18]}]},{"pos":[308784,308794],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[308796,308801]},{"content":"mode","pos":[308815,308819]},{"pos":[308828,308840],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[308846,308868],"content":"Method visibleRowsMode","linkify":"Method visibleRowsMode","nodes":[{"content":"Method visibleRowsMode","pos":[0,22]}]},{"pos":[308929,308939],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mode","pos":[308941,308945]},{"pos":[308954,308966],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[308972,308995],"content":"Method visibleRowsValue","linkify":"Method visibleRowsValue","nodes":[{"content":"Method visibleRowsValue","pos":[0,23]}]},{"pos":[309048,309058],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[309060,309065]},{"pos":[309074,309086],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[309092,309104],"content":"Method width","linkify":"Method width","nodes":[{"content":"Method width","pos":[0,12]}]},{"content":"Gets or sets the width of the control.","pos":[309106,309144]},{"pos":[309196,309206],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[309208,309213]},{"content":"An Integer that indicates how the width is calculated; optional.","pos":[309216,309280]},{"content":"mode","pos":[309292,309296]},{"content":"An Integer that indicates how the width is calculated; optional.","pos":[309299,309363]},{"pos":[309370,309382],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width of the control in pixels.","pos":[309384,309419]},{"pos":[309426,309433],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Exact mode is used if the value parameter is omitted.","pos":[309435,309488]},{"content":"Calculate the width according to the following table:","pos":[309489,309542]},{"content":"Mode.","pos":[309546,309551]},{"content":"Width calculation.","pos":[309564,309582]},{"content":"-1 Exact.","pos":[309768,309777]},{"content":"The exact width in pixels of the controls is used.","pos":[309786,309836]},{"content":"0 Auto.","pos":[309879,309886]},{"content":"The width of the control is calculated automatically and the value parameter is ignored.","pos":[309897,309985]},{"content":"1 Column width.","pos":[309990,310005]},{"content":"The layout of the form determines the width of the control.","pos":[310008,310067]},{"content":"The width and width calculation mode can be set separately.","pos":[310100,310159]},{"pos":[310165,310181],"content":"Method widthMode","linkify":"Method widthMode","nodes":[{"content":"Method widthMode","pos":[0,16]}]},{"content":"Gets or sets the calculation mode of the width of the control.","pos":[310183,310245]},{"pos":[310291,310301],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[310303,310308]},{"content":"An integer value that indicates how control width is calculated; optional.","pos":[310311,310385]},{"pos":[310392,310404],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the current calculation mode.","pos":[310406,310467]},{"pos":[310474,310481],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Calculate the width according to the following table:","pos":[310483,310536]},{"content":"Mode.","pos":[310540,310545]},{"content":"Width Calculation.","pos":[310556,310574]},{"content":"Exact.","pos":[310758,310764]},{"content":"The exact width in pixels of the controls is used.","pos":[310774,310824]},{"content":"Auto.","pos":[310867,310872]},{"content":"The width of the control is calculated automatically and the value parameter is ignored.","pos":[310883,310971]},{"content":"Column width.","pos":[310976,310989]},{"content":"The layout of the form determines the width of the control.","pos":[310992,311051]},{"content":"The width of the control might change when the mode is set to auto or column width.","pos":[311084,311167]},{"pos":[311173,311190],"content":"Method widthValue","linkify":"Method widthValue","nodes":[{"content":"Method widthValue","pos":[0,17]}]},{"content":"Gets or sets the width of the control.","pos":[311192,311230]},{"pos":[311277,311287],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[311289,311294]},{"content":"An Integer that specifies the width in pixels; optional.","pos":[311297,311353]},{"pos":[311360,311372],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width in pixels of the control.","pos":[311374,311409]},{"pos":[311416,311423],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To change the width of the control, use the exact width calculation mode.","pos":[311425,311498]},{"pos":[311504,311514],"content":"Method cut","linkify":"Method cut","nodes":[{"content":"Method cut","pos":[0,10]}]},{"content":"Cuts the contents of the control.","pos":[311516,311549]},{"pos":[311578,311601],"content":"Method applyQuickFilter","linkify":"Method applyQuickFilter","nodes":[{"content":"Method applyQuickFilter","pos":[0,23]}]},{"pos":[311678,311688],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"controlId","pos":[311690,311699]},{"content":"filterValue","pos":[311713,311724]},{"pos":[311732,311754],"content":"Method autoSizeColumns","linkify":"Method autoSizeColumns","nodes":[{"content":"Method autoSizeColumns","pos":[0,22]}]},{"pos":[311821,311831],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"autoSizeColumns","pos":[311833,311848]},{"pos":[311856,311867],"content":"Method drop","linkify":"Method drop","nodes":[{"content":"Method drop","pos":[0,11]}]},{"content":"Raises the drop event to indicate that a drop operation is being performed on the current control.","pos":[311869,311967]},{"pos":[312053,312063],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[312065,312075]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[312078,312163]},{"content":"dragMode","pos":[312175,312183]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[312186,312271]},{"content":"x","pos":[312283,312284]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[312287,312372]},{"content":"y","pos":[312384,312385]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[312388,312473]},{"pos":[312479,312493],"content":"Method context","linkify":"Method context","nodes":[{"content":"Method context","pos":[0,14]}]},{"content":"Shows the shortcut menu for the control.","pos":[312495,312535]},{"pos":[312568,312582],"content":"Method jumpRef","linkify":"Method jumpRef","nodes":[{"content":"Method jumpRef","pos":[0,14]}]},{"pos":[312615,312630],"content":"Method OnLookup","linkify":"Method OnLookup","nodes":[{"content":"Method OnLookup","pos":[0,15]}]},{"pos":[312712,312722],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[312724,312730]},{"content":"e","pos":[312744,312745]},{"pos":[312753,312771],"content":"Method OnLostFocus","linkify":"Method OnLostFocus","nodes":[{"content":"Method OnLostFocus","pos":[0,18]}]},{"pos":[312856,312866],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[312868,312874]},{"content":"e","pos":[312888,312889]},{"pos":[312897,312926],"content":"Method registerOverrideMethod","linkify":"Method registerOverrideMethod","nodes":[{"content":"Method registerOverrideMethod","pos":[0,29]}]},{"pos":[313044,313054],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodToOverride","pos":[313056,313072]},{"content":"objectMethodToCall","pos":[313086,313104]},{"content":"overrideObject","pos":[313118,313132]},{"pos":[313140,313151],"content":"Method copy","linkify":"Method copy","nodes":[{"content":"Method copy","pos":[0,11]}]},{"content":"Copies the contents of the control to the clipboard.","pos":[313153,313205]},{"pos":[313235,313247],"content":"Method enter","linkify":"Method enter","nodes":[{"content":"Method enter","pos":[0,12]}]},{"pos":[313278,313295],"content":"Method mouseEnter","linkify":"Method mouseEnter","nodes":[{"content":"Method mouseEnter","pos":[0,17]}]},{"content":"Is called when the user moves the mouse pointer into the control area.","pos":[313297,313367]},{"pos":[313457,313467],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"x","pos":[313469,313470]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[313473,313534]},{"content":"y","pos":[313546,313547]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[313550,313611]},{"content":"button","pos":[313623,313629]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[313632,313693]},{"content":"Ctrl","pos":[313705,313709]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[313712,313773]},{"content":"Shift","pos":[313785,313790]},{"content":"A Boolean value that indicates whether the SHIFT key is down.","pos":[313793,313854]},{"pos":[313860,313881],"content":"Method displayControl","linkify":"Method displayControl","nodes":[{"content":"Method displayControl","pos":[0,21]}]},{"content":"Displays the control.","pos":[313883,313904]},{"pos":[313944,313960],"content":"Method OnLeaving","linkify":"Method OnLeaving","nodes":[{"content":"Method OnLeaving","pos":[0,16]}]},{"pos":[314043,314053],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[314055,314061]},{"content":"e","pos":[314075,314076]},{"pos":[314084,314096],"content":"Method paste","linkify":"Method paste","nodes":[{"content":"Method paste","pos":[0,12]}]},{"content":"Pastes the contents of the clipboard into the control.","pos":[314098,314152]},{"pos":[314183,314206],"content":"Method resetUserSetting","linkify":"Method resetUserSetting","nodes":[{"content":"Method resetUserSetting","pos":[0,23]}]},{"content":"Resets the user settings for the control.","pos":[314208,314249]},{"pos":[314291,314317],"content":"Method quickFilterProvider","linkify":"Method quickFilterProvider","nodes":[{"content":"Method quickFilterProvider","pos":[0,26]}]},{"pos":[314408,314418],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"quickFilterProvider","pos":[314420,314439]},{"pos":[314447,314460],"content":"Method dropEx","linkify":"Method dropEx","nodes":[{"content":"Method dropEx","pos":[0,13]}]},{"content":"Raises the dropEx event to indicate that a drop operation is being performed on the current control.","pos":[314462,314562]},{"pos":[314644,314654],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dragSource","pos":[314656,314666]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[314669,314754]},{"content":"dragMode","pos":[314766,314774]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[314777,314862]},{"content":"x","pos":[314874,314875]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[314878,314963]},{"content":"y","pos":[314975,314976]},{"content":"An integer value that indicates the vertical client coordinate of the mouse position.","pos":[314979,315064]},{"pos":[315070,315084],"content":"Method OnEnter","linkify":"Method OnEnter","nodes":[{"content":"Method OnEnter","pos":[0,14]}]},{"pos":[315165,315175],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[315177,315183]},{"content":"e","pos":[315197,315198]},{"pos":[315206,315224],"content":"Method inputSearch","linkify":"Method inputSearch","nodes":[{"content":"Method inputSearch","pos":[0,18]}]},{"content":"Performs data filtering for the control, based on the specified string.","pos":[315226,315297]},{"pos":[315348,315358],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"searchStr","pos":[315360,315369]},{"content":"The string value to use to filter data; optional.","pos":[315372,315421]},{"pos":[315427,315440],"content":"Method filter","linkify":"Method filter","nodes":[{"content":"Method filter","pos":[0,13]}]},{"pos":[315488,315498],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filterStr","pos":[315500,315509]},{"pos":[315517,315538],"content":"Method prefColumnSize","linkify":"Method prefColumnSize","nodes":[{"content":"Method prefColumnSize","pos":[0,21]}]},{"content":"Specifies the preferred column width and height for the form control.","pos":[315540,315609]},{"pos":[315671,315681],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"width","pos":[315683,315688]},{"content":"The preferred height of the control.","pos":[315691,315727]},{"content":"height","pos":[315739,315745]},{"content":"The preferred height of the control.","pos":[315748,315784]},{"pos":[315790,315806],"content":"Method dragLeave","linkify":"Method dragLeave","nodes":[{"content":"Method dragLeave","pos":[0,16]}]},{"content":"Raises the dragLeave event to indicate that a mouse drag operation has left the current control.","pos":[315808,315904]},{"pos":[315939,315956],"content":"Method OnGotFocus","linkify":"Method OnGotFocus","nodes":[{"content":"Method OnGotFocus","pos":[0,17]}]},{"pos":[316040,316050],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sender","pos":[316052,316058]},{"content":"e","pos":[316072,316073]},{"pos":[316081,316097],"content":"Method lostFocus","linkify":"Method lostFocus","nodes":[{"content":"Method lostFocus","pos":[0,16]}]},{"content":"Indicates that the control has lost focus.","pos":[316099,316141]},{"pos":[316176,316190],"content":"Method endDrag","linkify":"Method endDrag","nodes":[{"content":"Method endDrag","pos":[0,14]}]},{"content":"Is called when the user has finished dragging a form control.","pos":[316192,316253]},{"pos":[316287,316294],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This event is not raised unless the DragDrop property is enabled for the control and a beginDrag event has already been started.","pos":[316296,316424]},{"content":"To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.","pos":[316425,316529]},{"pos":[316535,316549],"content":"Method arrange","linkify":"Method arrange","nodes":[{"content":"Method arrange","pos":[0,14]}]},{"pos":[316582,316597],"content":"Method gotFocus","linkify":"Method gotFocus","nodes":[{"content":"Method gotFocus","pos":[0,15]}]},{"content":"Indicates that the control has received focus.","pos":[316599,316645]},{"pos":[316679,316696],"content":"Method mouseLeave","linkify":"Method mouseLeave","nodes":[{"content":"Method mouseLeave","pos":[0,17]}]},{"content":"Indicates that the mouse pointer has left the control.","pos":[316698,316752]},{"pos":[316788,316803],"content":"Method setFocus","linkify":"Method setFocus","nodes":[{"content":"Method setFocus","pos":[0,15]}]},{"content":"Sets the focus on the control.","pos":[316805,316835]}],"content":"---\n# required metadata\n\ntitle: F Classes - FormFastTabSummarySeparator to FormGridControl\ndescription: API reference for classes from FormFastTabSummarySeparator to FormGridControl.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-03-08 22 - 59 - 04\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 63473\nms.assetid: 95c712f2-d71d-4dd1-a9fd-f1b88fe21807\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# F Classes - FormFastTabSummarySeparator to FormGridControl\n\nAPI reference for classes from FormFastTabSummarySeparator to FormGridControl.\n\nClass FormFastTabSummarySeparator\n---------------------------------\n\n    class FormFastTabSummarySeparator extends FormControl\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                      | Description                                                                                                                                                             |\n|-------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| public boolean alignControl(\\[boolean value\\])                                                              | Determines whether to align the control.                                                                                                                                |\n| public boolean allowEdit(\\[boolean value\\])                                                                 | Determines whether the user can change the contents of the control.                                                                                                     |\n| public boolean allowSysSetup()                                                                              | Retrieves a value that indicates whether the control is shown in the SysSetup form.                                                                                     |\n| public boolean autoDeclaration(\\[boolean value\\])                                                           | Determines whether the system can declare a member variable that has the same name as the control.                                                                      |\n| public int backgroundColor(\\[int value\\])                                                                   | Gets or sets the background color of the control.                                                                                                                       |\n| public int backStyle(\\[int value\\])                                                                         | Determiness whether the control background can be transparent.                                                                                                          |\n| public int beginDrag(int x, int y)                                                                          | Is called when the user starts to drag a form control.                                                                                                                  |\n| public int bold(\\[int value\\])                                                                              | Gets or sets the weight of font used to output text in the control.                                                                                                     |\n| public container calcControlSize(int chars, int lines)                                                      | Retrieves the size of the control.                                                                                                                                      |\n| public int characterSet(\\[int value\\])                                                                      | Gets or sets the character set of the font.                                                                                                                             |\n| public int colorScheme(\\[int value\\])                                                                       | Gets or sets the color scheme of the control.                                                                                                                           |\n| public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])                                    | Gets or sets the configuration key that is assigned to the control.                                                                                                     |\n| public List configurationKeyEx()                                                                            | Retrieves a list that contains the IDs of configuration keys that are in effect for the control.                                                                        |\n| public str countryRegionCodes(\\[str value\\])                                                                | Gets or sets the comma-separated list of country/region codes for the control.                                                                                          |\n| public str dataRelationPath(\\[str value\\])                                                                  | Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.                                           |\n| public int displayTarget(\\[int value\\])                                                                     | Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both. |\n| public int dragDrop(\\[int value\\])                                                                          | Determines whether to enable or disable drag-and-drop operations for the control.                                                                                       |\n| public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)                           | Raises the dragOver event to indicate that a mouse drag operation is over the current control.                                                                          |\n| public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)                               | Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.                                                                        |\n| public str dragText()                                                                                       | Retrieves the text that is displayed when the form control is dragged.                                                                                                  |\n| public boolean enabled(\\[boolean value\\])                                                                   | Determines whether to enable or disable the object.                                                                                                                     |\n| public str font(\\[str value\\])                                                                              | Gets or sets the name of the font for the control to use.                                                                                                               |\n| public int fontSize(\\[int value\\])                                                                          | Gets or sets the size of the font for the control to use.                                                                                                               |\n| public boolean hasChanged(\\[boolean val\\])                                                                  | Sets or returns a value that indicates whether the contents of the control have changed.                                                                                |\n| public boolean hasUserSetting()                                                                             | Indicates whether the control has custom user settings.                                                                                                                 |\n| public int height(int value, \\[int mode\\])                                                                  | Gets or sets the height of the control.                                                                                                                                 |\n| public int heightMode(\\[int value\\])                                                                        | Gets or sets a calculation mode for the height of the control.                                                                                                          |\n| public int heightValue(\\[int value\\])                                                                       | Gets or sets the height of the control.                                                                                                                                 |\n| public str helpField()                                                                                      | Retrieves the Help text for the control.                                                                                                                                |\n| public str helpText(\\[str value\\])                                                                          | Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.                                                                |\n| public str hierarchyParent(\\[str value\\])                                                                   | Gets or sets the HierarchyParent property value of the control.                                                                                                         |\n| public int hWnd()                                                                                           | Retrieves the Windows handle for the control.                                                                                                                           |\n| public boolean isContainer()                                                                                |                                                                                                                                                                         |\n| public boolean isDisplayed()                                                                                | Retrieves a value that indicates whether the control is displayed.                                                                                                      |\n| public boolean isRestricted()                                                                               | Retrieves a value that indicates whether the control is restricted.                                                                                                     |\n| public boolean isUserSetupEnabled(int neededSetupRights)                                                    | Retrieves a value that indicates whether the control allows for the specified level of customization.                                                                   |\n| public boolean italic(\\[boolean value\\])                                                                    |                                                                                                                                                                         |\n| public int left(int value, \\[int mode\\])                                                                    | Gets or sets the horizontal position of the control in the form.                                                                                                        |\n| public int leftMode(\\[int value\\])                                                                          | Sets the horizontal arrange mode for the control in the form.                                                                                                           |\n| public int leftValue(\\[int value\\])                                                                         | Gets or sets the horizontal position of the control in the form.                                                                                                        |\n| public boolean markAsUserAdd(\\[boolean value\\])                                                             | Marks or unmarks the control as a user-added control.                                                                                                                   |\n| public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)                             | Is called when the control is double-clicked by the user.                                                                                                               |\n| public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)                                 | Is called when the user clicks the mouse button over the control.                                                                                                       |\n| public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)                                 | Is called when the user moves the mouse pointer over the control.                                                                                                       |\n| public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)                                   | Is called when the user releases the mouse button over the control area.                                                                                                |\n| public str name(\\[str value\\])                                                                              | Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.                                 |\n| public int neededPermission(\\[int value\\])                                                                  |                                                                                                                                                                         |\n| public container SysObsoleteAttribute()                                                                     |                                                                                                                                                                         |\n| public FormControl parentControl()                                                                          | Retrieves the parent control for the control.                                                                                                                           |\n| public SecurityKeyId securityKey(\\[SecurityKeyId value\\])                                                   | Sets or returns the ID of the security key for the control.                                                                                                             |\n| public int showContextMenu(int menuHandle)                                                                  | Shows the shortcut menu for the control.                                                                                                                                |\n| public boolean skip(\\[boolean value\\])                                                                      | Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.                                         |\n| public str toolTip()                                                                                        | Retrieves the tooltip text for the control.                                                                                                                             |\n| public int top(int value, \\[int mode\\])                                                                     | Gets or sets the vertical position of the control in the form.                                                                                                          |\n| public int topMode(\\[int value\\])                                                                           | Sets the vertical arrange mode for the control in the form.                                                                                                             |\n| public int topValue(\\[int value\\])                                                                          | Gets or sets the vertical position of the control in the form.                                                                                                          |\n| public int type(\\[int value\\])                                                                              |                                                                                                                                                                         |\n| public boolean underline(\\[boolean value\\])                                                                 |                                                                                                                                                                         |\n| public boolean SysObsoleteAttribute(container data)                                                         |                                                                                                                                                                         |\n| public int userData(\\[int value\\])                                                                          | Gets or sets the user data for the control.                                                                                                                             |\n| public int userDataItem(\\[int value\\])                                                                      | Gets or sets the user data item for the control.                                                                                                                        |\n| public int userDataItems(\\[int value\\])                                                                     | Gets or sets the number of user data items for the control.                                                                                                             |\n| public int userDisable(\\[int value\\])                                                                       | Gets or sets the value that indicates whether the control is disabled for the user.                                                                                     |\n| public int userHeight(\\[int value\\])                                                                        | Gets or sets the custom user height for the control.                                                                                                                    |\n| public int userHide(\\[int value\\])                                                                          | Gets or sets the value that indicates whether the control is hidden from the user.                                                                                      |\n| public int userOrgContainer(\\[int value\\])                                                                  | Gets or sets the organization container for the control.                                                                                                                |\n| public int userOrgSibling(\\[int value\\])                                                                    | Gets or sets the organization sibling for the control.                                                                                                                  |\n| public str userPromptText(\\[str value\\])                                                                    | Gets or sets the user label text for the control.                                                                                                                       |\n| public int userSecurityLevel(\\[int value\\])                                                                 | Gets or sets the user security level for the control.                                                                                                                   |\n| public int userSkip(\\[int value\\])                                                                          | Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.                    |\n| public int userWidth(\\[int value\\])                                                                         | Sets or returns the width of the control in pixels.                                                                                                                     |\n| public int verticalSpacing(\\[int value\\], \\[AutoMode mode\\])                                                | Gets or sets the vertical spacing of the control in the form.                                                                                                           |\n| public AutoMode verticalSpacingMode(\\[AutoMode mode\\])                                                      | Sets the vertical spacing mode for the control in the form.                                                                                                             |\n| public int verticalSpacingValue(\\[int value\\])                                                              | Gets or sets the vertical spacing of the control in the form.                                                                                                           |\n| public boolean visible(\\[boolean value\\])                                                                   | Sets or returns a value that indicates whether the control is visible.                                                                                                  |\n| public int width(int value, \\[int mode\\])                                                                   | Gets or sets the width of the control.                                                                                                                                  |\n| public int widthMode(\\[int value\\])                                                                         | Gets or sets the calculation mode of the width of the control.                                                                                                          |\n| public int widthValue(\\[int value\\])                                                                        | Gets or sets the width of the control.                                                                                                                                  |\n| public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)                                   | Raises the drop event to indicate that a drop operation is being performed on the current control.                                                                      |\n| public void copy()                                                                                          | Copies the contents of the control to the clipboard.                                                                                                                    |\n| public void cut()                                                                                           | Cuts the contents of the control.                                                                                                                                       |\n| public void setFocus()                                                                                      | Sets the focus on the control.                                                                                                                                          |\n| public void mouseLeave()                                                                                    | Indicates that the mouse pointer has left the control.                                                                                                                  |\n| public void endDrag()                                                                                       | Is called when the user has finished dragging a form control.                                                                                                           |\n| public void context()                                                                                       | Shows the shortcut menu for the control.                                                                                                                                |\n| public void gotFocus()                                                                                      | Indicates that the control has received focus.                                                                                                                          |\n| public void prefColumnSize(int width, int height)                                                           | Specifies the preferred column width and height for the form control.                                                                                                   |\n| public void lostFocus()                                                                                     | Indicates that the control has lost focus.                                                                                                                              |\n| public void displayControl()                                                                                | Displays the control.                                                                                                                                                   |\n| public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, \\[Object overrideObject\\]) |                                                                                                                                                                         |\n| public void paste()                                                                                         | Pastes the contents of the clipboard into the control.                                                                                                                  |\n| public void resetUserSetting()                                                                              | Resets the user settings for the control.                                                                                                                               |\n| public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)                                       | Raises the dropEx event to indicate that a drop operation is being performed on the current control.                                                                    |\n| public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)                               | Is called when the user moves the mouse pointer into the control area.                                                                                                  |\n| public void inputSearch(str searchStr)                                                                      | Performs data filtering for the control, based on the specified string.                                                                                                 |\n| public void dragLeave()                                                                                     | Raises the dragLeave event to indicate that a mouse drag operation has left the current control.                                                                        |\n\n### Method alignControl\n\nDetermines whether to align the control.\n\n    public boolean alignControl([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the control should be aligned; otherwise, false.\n\n#### Remarks\n\nThe upper-left corner of the control is aligned according to the longest label.\n\n### Method allowEdit\n\nDetermines whether the user can change the contents of the control.\n\n    public boolean allowEdit([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the control can be edited; otherwise, false.\n\n#### Remarks\n\nWhen this property is set on a container control, modifications are disabled or enabled for all controls within the container.\n\n### Method allowSysSetup\n\nRetrieves a value that indicates whether the control is shown in the SysSetup form.\n\n    public boolean allowSysSetup()\n\n#### Return Value\n\ntrue if the control is shown in the SysSetup form; otherwise, false.\n\n### Method autoDeclaration\n\nDetermines whether the system can declare a member variable that has the same name as the control.\n\n    public boolean autoDeclaration([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the member variable can be declared for this control; otherwise, false.\n\n#### Remarks\n\nControls cannot have identical names.\n\n### Method backgroundColor\n\nGets or sets the background color of the control.\n\n    public int backgroundColor([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer that contains a packed RGB color.\n\n#### Remarks\n\nThe integer that is returned contains a packed RGB color as follows:\n\n-   The low-order byte contains a value for the relative intensity of red.\n-   The second byte contains a value for green.\n-   The third byte contains a value for blue.\n-   The high-order byte must be zero.\n-   The maximum value for a single byte is 255.\n\n### Method backStyle\n\nDeterminess whether the control background can be transparent.\n\n    public int backStyle([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n1 if the control background can be transparent; otherwise, 0.\n\n### Method beginDrag\n\nIs called when the user starts to drag a form control.\n\n    public int beginDrag(int x, int y)\n\n#### Parameters\n\nx  \nAn integer value that indicates the y-coordinate of the mouse pointer. The coordinate is relative to the upper-left corner of the control.\n\n<!-- -->\n\ny  \nAn integer value that indicates the y-coordinate of the mouse pointer. The coordinate is relative to the upper-left corner of the control.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nThis event is not raised unless the DragDrop property is enabled for the control. To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.\n\n### Method bold\n\nGets or sets the weight of font used to output text in the control.\n\n    public int bold([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer value between zero and nine, inclusive.\n\n#### Remarks\n\nThe integer that is returned contains the weight of the font as follows:\n\n-   0 Use the default font weight.\n-   1 Thin.\n-   2 Extra-light.\n-   3 Light.\n-   4 Normal.\n-   5 Medium.\n-   6 Semibold.\n-   7 Bold.\n-   8 Extra-bold.\n-   9 Heavy.\n\n### Method calcControlSize\n\nRetrieves the size of the control.\n\n    public container calcControlSize(int chars, int lines)\n\n#### Parameters\n\nchars  \nThe number of lines to use to determine the height.\n\n<!-- -->\n\nlines  \nThe number of lines to use to determine the height.\n\n#### Return Value\n\nThe container that holds the width and height.\n\n### Method characterSet\n\nGets or sets the character set of the font.\n\n    public int characterSet([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer value that indicates the character set of the font.\n\n#### Remarks\n\nThe values for the integer that is returned indicate the character set according to the following table:\n\n| Value. | Description.         |\n|--------|----------------------|\n| 0      | ANSI\\_CHARSET        |\n| 1      | DEFAULT\\_CHARSET     |\n| 2      | SYMBOL\\_CHARSET      |\n| 77     | MAC\\_CHARSET         |\n| 128    | SHIFTJIS\\_CHARSET    |\n| 129    | HANGUL\\_CHARSET      |\n| 134    | GB2312\\_CHARSET      |\n| 136    | CHINESEBIG5\\_CHARSET |\n| 161    | GREEK\\_CHARSET       |\n| 162    | TURKISH\\_CHARSET     |\n| 163    | VIETNAMESE\\_CHARSET  |\n| 186    | BALTIC\\_CHARSET      |\n| 204    | RUSSIAN\\_CHARSET     |\n| 238    | EASTEUROPE\\_CHARSET  |\n| 255    | OEM\\_CHARSET         |\n\nThe value in the following table is for the Korean language edition of MicrosoftWindows.\n\n| Value. | Description.   |\n|--------|----------------|\n| 130    | JOHAB\\_CHARSET |\n\nThe values in the following table are for the Middle East language edition of Windows.\n\n| Value. | Description.    |\n|--------|-----------------|\n| 177    | HEBREW\\_CHARSET |\n| 178    | ARABIC\\_CHARSET |\n\nThe value in the following table is for the Thai language edition of Windows.\n\n| Value. | Description.  |\n|--------|---------------|\n| 222    | THAI\\_CHARSET |\n\nThe default character set is set to a value based on the current system locale. For example, when the system locale is English (United States), it is set as ANSI\\_CHARSET. For more information, see the LOGFONT structure on the MSDN website, http://go.microsoft.com/fwlink/?LinkID=85972.\n\n### Method colorScheme\n\nGets or sets the color scheme of the control.\n\n    public int colorScheme([int value])\n\n#### Parameters\n\nvalue  \nThe value to set; optional.\n\n#### Return Value\n\nAn integer between zero and two, inclusive.\n\n#### Remarks\n\nThe color scheme is defined according to the following table:\n\n| Value. | Style.                 |\n|--------|------------------------|\n| 0      | Default.               |\n| 1      | The Windows palette.   |\n| 2      | The true-color scheme. |\n\n### Method configurationKey\n\nGets or sets the configuration key that is assigned to the control.\n\n    public ConfigurationKeyId configurationKey([ConfigurationKeyId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe identifier of the configuration key that is assigned to the control.\n\n#### Remarks\n\nThe configuration key is used to determine whether this control can be displayed. If the configuration key is disabled in the system, the control is not displayed in the form.\n\n### Method configurationKeyEx\n\nRetrieves a list that contains the IDs of configuration keys that are in effect for the control.\n\n    public List configurationKeyEx()\n\n#### Return Value\n\nA list that contains the IDs of configuration keys that are in effect for the control.\n\n#### Remarks\n\nThe returned list does not contain duplicate IDs. If the control is bound to a data source, the returned list of configuration key IDs also includes the configuration key ID for the table and field. The returned list also contains any configuration key IDs that are applied to the properties, extended data type, or enumType methods.\n\n### Method countryRegionCodes\n\nGets or sets the comma-separated list of country/region codes for the control.\n\n    public str countryRegionCodes([str value])\n\n#### Parameters\n\nvalue  \nThe string that contains the country/region codes to set; optional.\n\n#### Return Value\n\nThe comma-separated list of country/region codes for the control.\n\n### Method dataRelationPath\n\nGets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.\n\n    public str dataRelationPath([str value])\n\n#### Parameters\n\nvalue  \nThe string that contains the period-delimited list of relations; optional.\n\n#### Return Value\n\nThe period-delimited list of relations that links the field binding of the DataField object to a relative table.\n\n#### Remarks\n\nThis method is used by the reference group control to track exactly which relations produce the replacement field that is used. It enables the reference group control to bind consistently to the controls that it contains.\n\n### Method displayTarget\n\nGets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.\n\n    public int displayTarget([int value])\n\n#### Parameters\n\nvalue  \nThe integer value that indicates where the control is displayed; optional.\n\n#### Return Value\n\nThe value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise Portal, or in both.\n\n### Method dragDrop\n\nDetermines whether to enable or disable drag-and-drop operations for the control.\n\n    public int dragDrop([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n1 if drag-and-drop operations are enabled; otherwise, false.\n\n### Method dragOver\n\nRaises the dragOver event to indicate that a mouse drag operation is over the current control.\n\n    public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n#### Return Value\n\nA FormDrag enumeration value that indicates the mode of dragging.\n\n### Method dragOverEx\n\nRaises the dragOverEx event to indicate that a mouse drag operation is over the current control.\n\n    public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n#### Return Value\n\nA FormDrag enumeration value that indicates the mode of dragging.\n\n### Method dragText\n\nRetrieves the text that is displayed when the form control is dragged.\n\n    public str dragText()\n\n#### Return Value\n\nThe text that is displayed when the control is dragged; an empty string if there is no text to display when the control is dragged.\n\n### Method enabled\n\nDetermines whether to enable or disable the object.\n\n    public boolean enabled([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the object is enabled; otherwise, false.\n\n#### Remarks\n\nThe enabled property allows controls to be enabled or disabled at run time. For example, you can disable objects that do not apply to the current state of the application. You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.\n\n### Method font\n\nGets or sets the name of the font for the control to use.\n\n    public str font([str value])\n\n#### Parameters\n\nvalue  \nThe value to set; optional.\n\n#### Return Value\n\nThe name of the font to use, such as Tahoma or Verdana.\n\n### Method fontSize\n\nGets or sets the size of the font for the control to use.\n\n    public int fontSize([int value])\n\n#### Parameters\n\nvalue  \nThe value to set; optional.\n\n#### Return Value\n\nThe height of the font in points.\n\n### Method hasChanged\n\nSets or returns a value that indicates whether the contents of the control have changed.\n\n    public boolean hasChanged([boolean val])\n\n#### Parameters\n\nval  \nThe value to assign as the hasChanged value for the control; optional.\n\n#### Return Value\n\ntrue if the contents of the control have changed; otherwise, false.\n\n### Method hasUserSetting\n\nIndicates whether the control has custom user settings.\n\n    public boolean hasUserSetting()\n\n#### Return Value\n\ntrue if the control has custom user settings; otherwise, false.\n\n### Method height\n\nGets or sets the height of the control.\n\n    public int height(int value, [int mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\nThe height of the control in pixels.\n\n#### Remarks\n\nExact mode is used if the value parameter is omitted.Calculate the height according to the following table:\n\n| Mode.            | Height calculation.                                                                       |\n|------------------|-------------------------------------------------------------------------------------------|\n| -1 Exact.        | The exact height in pixels of the controls is used.                                       |\n| 0 Auto.          | The height of the control is calculated automatically and the value parameter is ignored. |\n| 1 Column height. | The layout of the form determines the height of the control.                              |\n\nThe height and height calculation mode can be set separately.\n\n### Method heightMode\n\nGets or sets a calculation mode for the height of the control.\n\n    public int heightMode([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe calculation mode.\n\n#### Remarks\n\nCalculate the height according to the following table:\n\n| Mode.          | Height Calculation.                                                                       |\n|----------------|-------------------------------------------------------------------------------------------|\n| Exact.         | The exact height in pixels of the controls is used.                                       |\n| Auto.          | The height of the control is calculated automatically and the value parameter is ignored. |\n| Column height. | The layout of the form determines the height of the control.                              |\n\nThe height of the control might change when the mode is set to auto or column height.\n\n### Method heightValue\n\nGets or sets the height of the control.\n\n    public int heightValue([int value])\n\n#### Parameters\n\nvalue  \nThe value to set; optional.\n\n#### Return Value\n\nThe height in pixels.\n\n#### Remarks\n\nThe height of the control is not changed unless the exact height calculation mode is used.\n\n### Method helpField\n\nRetrieves the Help text for the control.\n\n    public str helpField()\n\n#### Return Value\n\nThe Help text for the control; an empty string if there is no Help text for the control.\n\n#### Remarks\n\nThe helpField method cannot be used to set the value of the Help text. Use the helpText method to set the value of the Help text.\n\n### Method helpText\n\nGets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.\n\n    public str helpText([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe string to be displayed at the bottom of the screen.\n\n#### Remarks\n\nSet the HelpText property for an object by using the property sheet. The Help text must not exceed 250 characters.\n\n### Method hierarchyParent\n\nGets or sets the HierarchyParent property value of the control.\n\n    public str hierarchyParent([str value])\n\n#### Parameters\n\nvalue  \nThe value to assign the HierarchyParent property of the control.\n\n#### Return Value\n\nThe HierarchyParent property value of the control.\n\n### Method hWnd\n\nRetrieves the Windows handle for the control.\n\n    public int hWnd()\n\n#### Return Value\n\nThe handle for the control.\n\n#### Remarks\n\nThe handle can be used with the Windows API.\n\n### Method isContainer\n\n    public boolean isContainer()\n\n#### Return Value\n\n### Method isDisplayed\n\nRetrieves a value that indicates whether the control is displayed.\n\n    public boolean isDisplayed()\n\n#### Return Value\n\ntrue if the control is displayed; otherwise, false.\n\n#### Remarks\n\nTo modify the visible state of the control, call the visible method.\n\n### Method isRestricted\n\nRetrieves a value that indicates whether the control is restricted.\n\n    public boolean isRestricted()\n\n#### Return Value\n\ntrue if the control is restricted; otherwise, false.\n\n### Method isUserSetupEnabled\n\nRetrieves a value that indicates whether the control allows for the specified level of customization.\n\n    public boolean isUserSetupEnabled(int neededSetupRights)\n\n#### Parameters\n\nneededSetupRights  \nA value from the FormAllowUserSetup enumeration that specifies the level of customization that is being queried for the control.\n\n#### Return Value\n\ntrue if the control, design, and parent containers allow for the level of customization that is specified by the neededSetupRights parameter; otherwise, false.\n\n#### Remarks\n\nThe following table describes the values for the neededSetupRights parameter.\n\n|                                  |                                                                                                                                  |\n|----------------------------------|----------------------------------------------------------------------------------------------------------------------------------|\n| FormAllowUserSetup::No 0         | No changes can be made to the control. If this value is set for the neededSetupRights parameter, the method always returns true. |\n| FormAllowUserSetup::Restricted 1 | The user can change the editable, visible, skip, label, and width properties of the control. The user cannot move the control.   |\n| FormAllowUserSetup::Yes 2        | The user can change the editable, visible, skip, label, and width properties of the control. The user can also move the control. |\n\nFor this method to return true, the AllowUserSetup property for the design and all parent containers must allow for the level of access that is specified by the neededSetupRights parameter.\n\n### Method italic\n\n    public boolean italic([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method left\n\nGets or sets the horizontal position of the control in the form.\n\n    public int left(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n#### Return Value\n\nThe horizontal position of the control in the form.\n\n### Method leftMode\n\nSets the horizontal arrange mode for the control in the form.\n\n    public int leftMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n#### Return Value\n\nThe horizontal arrange mode for the control in the form.\n\n### Method leftValue\n\nGets or sets the horizontal position of the control in the form.\n\n    public int leftValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal position of the control; optional.\n\n#### Return Value\n\nThe horizontal position of the control in the form.\n\n### Method markAsUserAdd\n\nMarks or unmarks the control as a user-added control.\n\n    public boolean markAsUserAdd([boolean value])\n\n#### Parameters\n\nvalue  \nThe Boolean value that indicates whether the control should be marked as a user-added control.\n\n#### Return Value\n\ntrue if the control was marked as a user-added control; otherwise, false.\n\n### Method mouseDblClick\n\nIs called when the control is double-clicked by the user.\n\n    public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned.\n\n### Method mouseDown\n\nIs called when the user clicks the mouse button over the control.\n\n    public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned. This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.\n\n### Method mouseMove\n\nIs called when the user moves the mouse pointer over the control.\n\n    public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned.\n\n### Method mouseUp\n\nIs called when the user releases the mouse button over the control area.\n\n    public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned. This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \nThe name to assign to the control.\n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   It must begin with a letter.\n-   It cannot exceed 250 characters.\n-   It can include numbers and underscore (\\_) characters.\n-   It cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.\n\n### Method neededPermission\n\n    public int neededPermission([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method SysObsoleteAttribute\n\n    public container SysObsoleteAttribute()\n\n#### Return Value\n\n### Method parentControl\n\nRetrieves the parent control for the control.\n\n    public FormControl parentControl()\n\n#### Return Value\n\nThe parent control for the control.\n\n### Method securityKey\n\nSets or returns the ID of the security key for the control.\n\n    public SecurityKeyId securityKey([SecurityKeyId value])\n\n#### Parameters\n\nvalue  \nThe ID of the security key to assign to the control; optional.\n\n#### Return Value\n\nThe ID of the security key for the control; 0 (zero) if no security key is assigned to the control.\n\n### Method showContextMenu\n\nShows the shortcut menu for the control.\n\n    public int showContextMenu(int menuHandle)\n\n#### Parameters\n\nmenuHandle  \nThe ID of the menu to show.\n\n#### Return Value\n\nAn integer value that indicates whether the call succeeded.\n\n### Method skip\n\nSets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.\n\n    public boolean skip([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the skip property of the control; optional.\n\n#### Return Value\n\ntrue if the control is skipped when the user presses the TAB key to move to the control; otherwise, false.\n\n#### Remarks\n\nIf the enabled property is true, the allowEdit property is false, and the skip property is true, the user cannot change the contents of the control but can still copy the contents of the control.\n\n### Method toolTip\n\nRetrieves the tooltip text for the control.\n\n    public str toolTip()\n\n#### Return Value\n\nThe tooltip text for the control; an empty string if no tooltip text has been defined for the control.\n\n#### Remarks\n\nThe method might be overridden to provide a value to the toolTip method.\n\n### Method top\n\nGets or sets the vertical position of the control in the form.\n\n    public int top(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n#### Return Value\n\nThe vertical position of the control in the form.\n\n### Method topMode\n\nSets the vertical arrange mode for the control in the form.\n\n    public int topMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n#### Return Value\n\nThe vertical arrange mode for the control in the form.\n\n### Method topValue\n\nGets or sets the vertical position of the control in the form.\n\n    public int topValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical position of the control; optional.\n\n#### Return Value\n\nThe vertical position of the control in the form.\n\n### Method type\n\n    public int type([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method underline\n\n    public boolean underline([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method SysObsoleteAttribute\n\n    public boolean SysObsoleteAttribute(container data)\n\n#### Parameters\n\ndata  \n\n#### Return Value\n\n### Method userData\n\nGets or sets the user data for the control.\n\n    public int userData([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the user data for the control; optional.\n\n#### Return Value\n\nThe user data for the control.\n\n### Method userDataItem\n\nGets or sets the user data item for the control.\n\n    public int userDataItem([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the user data item for the control; optional.\n\n#### Return Value\n\nThe user data item for the control.\n\n### Method userDataItems\n\nGets or sets the number of user data items for the control.\n\n    public int userDataItems([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the number of user data items for the control; optional.\n\n#### Return Value\n\nThe number of user data items for the control.\n\n### Method userDisable\n\nGets or sets the value that indicates whether the control is disabled for the user.\n\n    public int userDisable([int value])\n\n#### Parameters\n\nvalue  \nThe value that indicates whether the control is disabled for the user; optional.\n\n#### Return Value\n\n1 if the control is disabled for the user; otherwise, 0.\n\n### Method userHeight\n\nGets or sets the custom user height for the control.\n\n    public int userHeight([int value])\n\n#### Parameters\n\nvalue  \nThe user height for the control; optional.\n\n#### Return Value\n\nThe custom user height for the control.\n\n### Method userHide\n\nGets or sets the value that indicates whether the control is hidden from the user.\n\n    public int userHide([int value])\n\n#### Parameters\n\nvalue  \nThe value that indicates whether the control is hidden from the user; optional.\n\n#### Return Value\n\n1 if the control is hidden from the user; otherwise, 0.\n\n#### Remarks\n\nThe user specifies whether a control is hidden by right-clicking the control when it is viewable or by right-clicking another control when the original control is hidden. A right-click opens a menu that can be used to hide or display the control. This method lets you programmatically determine and set the value.\n\n### Method userOrgContainer\n\nGets or sets the organization container for the control.\n\n    public int userOrgContainer([int value])\n\n#### Parameters\n\nvalue  \nThe organization container to set for the control; optional.\n\n#### Return Value\n\nThe organization container for the control.\n\n### Method userOrgSibling\n\nGets or sets the organization sibling for the control.\n\n    public int userOrgSibling([int value])\n\n#### Parameters\n\nvalue  \nThe organization sibling to set for the control; optional.\n\n#### Return Value\n\nThe organization sibling for the control.\n\n### Method userPromptText\n\nGets or sets the user label text for the control.\n\n    public str userPromptText([str value])\n\n#### Parameters\n\nvalue  \nThe user label text to set for the control; optional.\n\n#### Return Value\n\nThe user label text for the control.\n\n### Method userSecurityLevel\n\nGets or sets the user security level for the control.\n\n    public int userSecurityLevel([int value])\n\n#### Parameters\n\nvalue  \nThe user security level to set for the control; optional.\n\n#### Return Value\n\nThe user security level for the control.\n\n### Method userSkip\n\nSets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.\n\n    public int userSkip([int value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the userSkip property; optional. The value is 1 if the user setting to skip the control is in effect; otherwise, the value is 0.\n\n#### Return Value\n\n1 if the user setting to skip the control is in effect; otherwise, 0.\n\n### Method userWidth\n\nSets or returns the width of the control in pixels.\n\n    public int userWidth([int value])\n\n#### Parameters\n\nvalue  \nThe number of pixels to use as the width of the control; optional.\n\n#### Return Value\n\nThe number of pixels that the user specified as the width of the control; 0 (zero) if the user did not specify a character width.\n\n#### Remarks\n\nThe userWidth method returns the width in pixels, based on six times the number of characters. For example, if the user has specified 30 characters as the width of the control, the return value is 6 \\* 30 = 180. To specify the width of the control in characters, users can right-click the control to open the setup form where the character specification is made.\n\n### Method verticalSpacing\n\nGets or sets the vertical spacing of the control in the form.\n\n    public int verticalSpacing([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the AutoMode value for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the AutoMode value for the control; optional.\n\n#### Return Value\n\nThe vertical spacing of the control in the form.\n\n### Method verticalSpacingMode\n\nSets the vertical spacing mode for the control in the form.\n\n    public AutoMode verticalSpacingMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\nThe vertical spacing mode for the control in the form.\n\n### Method verticalSpacingValue\n\nGets or sets the vertical spacing of the control in the form.\n\n    public int verticalSpacingValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical spacing of the control; optional.\n\n#### Return Value\n\nThe vertical spacing of the control in the form.\n\n### Method visible\n\nSets or returns a value that indicates whether the control is visible.\n\n    public boolean visible([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the visibility setting for the control; optional.\n\n#### Return Value\n\ntrue if the control is visible; otherwise, false.\n\n### Method width\n\nGets or sets the width of the control.\n\n    public int width(int value, [int mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\nThe width of the control in pixels.\n\n#### Remarks\n\nExact mode is used if the value parameter is omitted.Calculate the width according to the following table:\n\n| Mode.           | Width calculation.                                                                       |\n|-----------------|------------------------------------------------------------------------------------------|\n| -1 Exact.       | The exact width in pixels of the controls is used.                                       |\n| 0 Auto.         | The width of the control is calculated automatically and the value parameter is ignored. |\n| 1 Column width. | The layout of the form determines the width of the control.                              |\n\nThe width and width calculation mode can be set separately.\n\n### Method widthMode\n\nGets or sets the calculation mode of the width of the control.\n\n    public int widthMode([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer value that indicates the current calculation mode.\n\n#### Remarks\n\nCalculate the width according to the following table:\n\n| Mode.         | Width Calculation.                                                                       |\n|---------------|------------------------------------------------------------------------------------------|\n| Exact.        | The exact width in pixels of the controls is used.                                       |\n| Auto.         | The width of the control is calculated automatically and the value parameter is ignored. |\n| Column width. | The layout of the form determines the width of the control.                              |\n\nThe width of the control might change when the mode is set to auto or column width.\n\n### Method widthValue\n\nGets or sets the width of the control.\n\n    public int widthValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe width in pixels of the control.\n\n#### Remarks\n\nTo change the width of the control, use the exact width calculation mode.\n\n### Method drop\n\nRaises the drop event to indicate that a drop operation is being performed on the current control.\n\n    public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n### Method copy\n\nCopies the contents of the control to the clipboard.\n\n    public void copy()\n\n### Method cut\n\nCuts the contents of the control.\n\n    public void cut()\n\n### Method setFocus\n\nSets the focus on the control.\n\n    public void setFocus()\n\n### Method mouseLeave\n\nIndicates that the mouse pointer has left the control.\n\n    public void mouseLeave()\n\n### Method endDrag\n\nIs called when the user has finished dragging a form control.\n\n    public void endDrag()\n\n#### Remarks\n\nThis event is not raised unless the DragDrop property is enabled for the control and a beginDrag event has already been started. To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.\n\n### Method context\n\nShows the shortcut menu for the control.\n\n    public void context()\n\n### Method gotFocus\n\nIndicates that the control has received focus.\n\n    public void gotFocus()\n\n### Method prefColumnSize\n\nSpecifies the preferred column width and height for the form control.\n\n    public void prefColumnSize(int width, int height)\n\n#### Parameters\n\nwidth  \nThe preferred height of the control.\n\n<!-- -->\n\nheight  \nThe preferred height of the control.\n\n### Method lostFocus\n\nIndicates that the control has lost focus.\n\n    public void lostFocus()\n\n### Method displayControl\n\nDisplays the control.\n\n    public void displayControl()\n\n### Method registerOverrideMethod\n\n    public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, [Object overrideObject])\n\n#### Parameters\n\nmethodToOverride  \n\n<!-- -->\n\nobjectMethodToCall  \n\n<!-- -->\n\noverrideObject  \n\n### Method paste\n\nPastes the contents of the clipboard into the control.\n\n    public void paste()\n\n### Method resetUserSetting\n\nResets the user settings for the control.\n\n    public void resetUserSetting()\n\n### Method dropEx\n\nRaises the dropEx event to indicate that a drop operation is being performed on the current control.\n\n    public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n### Method mouseEnter\n\nIs called when the user moves the mouse pointer into the control area.\n\n    public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n### Method inputSearch\n\nPerforms data filtering for the control, based on the specified string.\n\n    public void inputSearch(str searchStr)\n\n#### Parameters\n\nsearchStr  \nThe string value to use to filter data; optional.\n\n### Method dragLeave\n\nRaises the dragLeave event to indicate that a mouse drag operation has left the current control.\n\n    public void dragLeave()\n\n## Class FormFilterPaneControl\n    class FormFilterPaneControl extends FormControl\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                      | Description                                                                                                                                                             |\n|-------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| public boolean alignChild(\\[boolean value\\])                                                                |                                                                                                                                                                         |\n| public boolean alignChildren(\\[boolean value\\])                                                             |                                                                                                                                                                         |\n| public boolean alignControl(\\[boolean value\\])                                                              | Determines whether to align the control.                                                                                                                                |\n| public boolean allowEdit(\\[boolean value\\])                                                                 | Determines whether the user can change the contents of the control.                                                                                                     |\n| public boolean allowSysSetup()                                                                              | Retrieves a value that indicates whether the control is shown in the SysSetup form.                                                                                     |\n| public int allowUserSetup(\\[int value\\])                                                                    |                                                                                                                                                                         |\n| public int arrangeGuide(\\[int value\\])                                                                      |                                                                                                                                                                         |\n| public int arrangeMethod(\\[int value\\])                                                                     |                                                                                                                                                                         |\n| public int arrangeWhen(\\[int value\\])                                                                       |                                                                                                                                                                         |\n| public boolean autoDeclaration(\\[boolean value\\])                                                           | Determines whether the system can declare a member variable that has the same name as the control.                                                                      |\n| public int beginDrag(int x, int y)                                                                          | Is called when the user starts to drag a form control.                                                                                                                  |\n| public int bottomMargin(\\[int value\\], \\[AutoMode mode\\])                                                   |                                                                                                                                                                         |\n| public AutoMode bottomMarginMode(\\[AutoMode mode\\])                                                         |                                                                                                                                                                         |\n| public int bottomMarginValue(\\[int value\\])                                                                 |                                                                                                                                                                         |\n| public container calcControlSize(int chars, int lines)                                                      | Retrieves the size of the control.                                                                                                                                      |\n| public str caption(\\[str value\\])                                                                           | Gets or set the caption of the control.                                                                                                                                 |\n| public int columns(\\[int value\\], \\[AutoMode mode\\])                                                        |                                                                                                                                                                         |\n| public AutoMode columnsMode(\\[AutoMode mode\\])                                                              |                                                                                                                                                                         |\n| public int columnspace(\\[int value\\], \\[AutoMode mode\\])                                                    |                                                                                                                                                                         |\n| public AutoMode columnspaceMode(\\[AutoMode mode\\])                                                          |                                                                                                                                                                         |\n| public int columnspaceValue(\\[int value\\])                                                                  |                                                                                                                                                                         |\n| public int columnsValue(\\[int value\\])                                                                      |                                                                                                                                                                         |\n| public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])                                    | Gets or sets the configuration key that is assigned to the control.                                                                                                     |\n| public List configurationKeyEx()                                                                            | Retrieves a list that contains the IDs of configuration keys that are in effect for the control.                                                                        |\n| public str countryRegionCodes(\\[str value\\])                                                                | Gets or sets the comma-separated list of country/region codes for the control.                                                                                          |\n| public FieldId countryRegionContextField(\\[FieldId value\\])                                                 |                                                                                                                                                                         |\n| public str dataRelationPath(\\[str value\\])                                                                  | Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.                                           |\n| public int dataSource(\\[AnyType value\\])                                                                    | Gets or sets a data source to be used by the control or the form.                                                                                                       |\n| public int displayTarget(\\[int value\\])                                                                     | Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both. |\n| public int dragDrop(\\[int value\\])                                                                          | Determines whether to enable or disable drag-and-drop operations for the control.                                                                                       |\n| public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)                           | Raises the dragOver event to indicate that a mouse drag operation is over the current control.                                                                          |\n| public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)                               | Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.                                                                        |\n| public str dragText()                                                                                       | Retrieves the text that is displayed when the form control is dragged.                                                                                                  |\n| public boolean enabled(\\[boolean value\\])                                                                   | Determines whether to enable or disable the object.                                                                                                                     |\n| public boolean hasChanged(\\[boolean val\\])                                                                  | Sets or returns a value that indicates whether the contents of the control have changed.                                                                                |\n| public boolean hasUserSetting()                                                                             | Indicates whether the control has custom user settings.                                                                                                                 |\n| public int height(int value, \\[int mode\\])                                                                  | Gets or sets the height of the control.                                                                                                                                 |\n| public int heightMode(\\[int value\\])                                                                        | Gets or sets a calculation mode for the height of the control.                                                                                                          |\n| public int heightValue(\\[int value\\])                                                                       | Gets or sets the height of the control.                                                                                                                                 |\n| public str helpField()                                                                                      | Retrieves the Help text for the control.                                                                                                                                |\n| public str helpText(\\[str value\\])                                                                          | Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.                                                                |\n| public boolean hideIfEmpty(\\[boolean value\\])                                                               |                                                                                                                                                                         |\n| public str hierarchyParent(\\[str value\\])                                                                   | Gets or sets the HierarchyParent property value of the control.                                                                                                         |\n| public int hWnd()                                                                                           | Retrieves the Windows handle for the control.                                                                                                                           |\n| public boolean isContainer()                                                                                |                                                                                                                                                                         |\n| public boolean isDisplayed()                                                                                | Retrieves a value that indicates whether the control is displayed.                                                                                                      |\n| public boolean isRestricted()                                                                               | Retrieves a value that indicates whether the control is restricted.                                                                                                     |\n| public boolean isUserSetupEnabled(int neededSetupRights)                                                    | Retrieves a value that indicates whether the control allows for the specified level of customization.                                                                   |\n| public boolean leave()                                                                                      |                                                                                                                                                                         |\n| public int left(int value, \\[int mode\\])                                                                    | Gets or sets the horizontal position of the control in the form.                                                                                                        |\n| public int leftMargin(\\[int value\\], \\[AutoMode mode\\])                                                     |                                                                                                                                                                         |\n| public AutoMode leftMarginMode(\\[AutoMode mode\\])                                                           |                                                                                                                                                                         |\n| public int leftMarginValue(\\[int value\\])                                                                   |                                                                                                                                                                         |\n| public int leftMode(\\[int value\\])                                                                          | Sets the horizontal arrange mode for the control in the form.                                                                                                           |\n| public int leftValue(\\[int value\\])                                                                         | Gets or sets the horizontal position of the control in the form.                                                                                                        |\n| public boolean markAsUserAdd(\\[boolean value\\])                                                             | Marks or unmarks the control as a user-added control.                                                                                                                   |\n| public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)                             | Is called when the control is double-clicked by the user.                                                                                                               |\n| public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)                                 | Is called when the user clicks the mouse button over the control.                                                                                                       |\n| public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)                                 | Is called when the user moves the mouse pointer over the control.                                                                                                       |\n| public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)                                   | Is called when the user releases the mouse button over the control area.                                                                                                |\n| public str name(\\[str value\\])                                                                              | Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.                                 |\n| public int neededPermission(\\[int value\\])                                                                  |                                                                                                                                                                         |\n| public container SysObsoleteAttribute()                                                                     |                                                                                                                                                                         |\n| public FormControl parentControl()                                                                          | Retrieves the parent control for the control.                                                                                                                           |\n| public int rightMargin(\\[int value\\], \\[AutoMode mode\\])                                                    |                                                                                                                                                                         |\n| public AutoMode rightMarginMode(\\[AutoMode mode\\])                                                          |                                                                                                                                                                         |\n| public int rightMarginValue(\\[int value\\])                                                                  |                                                                                                                                                                         |\n| public SecurityKeyId securityKey(\\[SecurityKeyId value\\])                                                   | Sets or returns the ID of the security key for the control.                                                                                                             |\n| public int showContextMenu(int menuHandle)                                                                  | Shows the shortcut menu for the control.                                                                                                                                |\n| public boolean skip(\\[boolean value\\])                                                                      | Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.                                         |\n| public int sort(\\[SortOrder sortDirection\\])                                                                |                                                                                                                                                                         |\n| public str toolTip()                                                                                        | Retrieves the tooltip text for the control.                                                                                                                             |\n| public int top(int value, \\[int mode\\])                                                                     | Gets or sets the vertical position of the control in the form.                                                                                                          |\n| public int topMargin(\\[int value\\], \\[AutoMode mode\\])                                                      |                                                                                                                                                                         |\n| public AutoMode topMarginMode(\\[AutoMode mode\\])                                                            |                                                                                                                                                                         |\n| public int topMarginValue(\\[int value\\])                                                                    |                                                                                                                                                                         |\n| public int topMode(\\[int value\\])                                                                           | Sets the vertical arrange mode for the control in the form.                                                                                                             |\n| public int topValue(\\[int value\\])                                                                          | Gets or sets the vertical position of the control in the form.                                                                                                          |\n| public int type(\\[int value\\])                                                                              |                                                                                                                                                                         |\n| public boolean SysObsoleteAttribute(container data)                                                         |                                                                                                                                                                         |\n| public int userData(\\[int value\\])                                                                          | Gets or sets the user data for the control.                                                                                                                             |\n| public int userDataItem(\\[int value\\])                                                                      | Gets or sets the user data item for the control.                                                                                                                        |\n| public int userDataItems(\\[int value\\])                                                                     | Gets or sets the number of user data items for the control.                                                                                                             |\n| public int userDisable(\\[int value\\])                                                                       | Gets or sets the value that indicates whether the control is disabled for the user.                                                                                     |\n| public int userHeight(\\[int value\\])                                                                        | Gets or sets the custom user height for the control.                                                                                                                    |\n| public int userHide(\\[int value\\])                                                                          | Gets or sets the value that indicates whether the control is hidden from the user.                                                                                      |\n| public int userOrgContainer(\\[int value\\])                                                                  | Gets or sets the organization container for the control.                                                                                                                |\n| public int userOrgSibling(\\[int value\\])                                                                    | Gets or sets the organization sibling for the control.                                                                                                                  |\n| public str userPromptText(\\[str value\\])                                                                    | Gets or sets the user label text for the control.                                                                                                                       |\n| public int userSecurityLevel(\\[int value\\])                                                                 | Gets or sets the user security level for the control.                                                                                                                   |\n| public int userSkip(\\[int value\\])                                                                          | Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.                    |\n| public int userWidth(\\[int value\\])                                                                         | Sets or returns the width of the control in pixels.                                                                                                                     |\n| public int verticalSpacing(\\[int value\\], \\[AutoMode mode\\])                                                | Gets or sets the vertical spacing of the control in the form.                                                                                                           |\n| public AutoMode verticalSpacingMode(\\[AutoMode mode\\])                                                      | Sets the vertical spacing mode for the control in the form.                                                                                                             |\n| public int verticalSpacingValue(\\[int value\\])                                                              | Gets or sets the vertical spacing of the control in the form.                                                                                                           |\n| public boolean visible(\\[boolean value\\])                                                                   | Sets or returns a value that indicates whether the control is visible.                                                                                                  |\n| public int width(int value, \\[int mode\\])                                                                   | Gets or sets the width of the control.                                                                                                                                  |\n| public int widthMode(\\[int value\\])                                                                         | Gets or sets the calculation mode of the width of the control.                                                                                                          |\n| public int widthValue(\\[int value\\])                                                                        | Gets or sets the width of the control.                                                                                                                                  |\n| private void OnEnter(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                    |                                                                                                                                                                         |\n| public void lostFocus()                                                                                     | Indicates that the control has lost focus.                                                                                                                              |\n| public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)                                   | Raises the drop event to indicate that a drop operation is being performed on the current control.                                                                      |\n| public void paste()                                                                                         | Pastes the contents of the clipboard into the control.                                                                                                                  |\n| public void setFocus()                                                                                      | Sets the focus on the control.                                                                                                                                          |\n| private void OnLeaving(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                  |                                                                                                                                                                         |\n| public void mouseLeave()                                                                                    | Indicates that the mouse pointer has left the control.                                                                                                                  |\n| public void gotFocus()                                                                                      | Indicates that the control has received focus.                                                                                                                          |\n| public void dragLeave()                                                                                     | Raises the dragLeave event to indicate that a mouse drag operation has left the current control.                                                                        |\n| public void enter()                                                                                         |                                                                                                                                                                         |\n| public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)                                       | Raises the dropEx event to indicate that a drop operation is being performed on the current control.                                                                    |\n| public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)                               | Is called when the user moves the mouse pointer into the control area.                                                                                                  |\n| public void jumpRef()                                                                                       |                                                                                                                                                                         |\n| private void OnLostFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                |                                                                                                                                                                         |\n| private void OnGotFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                 |                                                                                                                                                                         |\n| public void prefColumnSize(int width, int height)                                                           | Specifies the preferred column width and height for the form control.                                                                                                   |\n| public void cut()                                                                                           | Cuts the contents of the control.                                                                                                                                       |\n| public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, \\[Object overrideObject\\]) |                                                                                                                                                                         |\n| public void displayControl()                                                                                | Displays the control.                                                                                                                                                   |\n| public void copy()                                                                                          | Copies the contents of the control to the clipboard.                                                                                                                    |\n| public void context()                                                                                       | Shows the shortcut menu for the control.                                                                                                                                |\n| public void resetUserSetting()                                                                              | Resets the user settings for the control.                                                                                                                               |\n| public void inputSearch(str searchStr)                                                                      | Performs data filtering for the control, based on the specified string.                                                                                                 |\n| public void filter(\\[str filterStr\\])                                                                       |                                                                                                                                                                         |\n| public void endDrag()                                                                                       | Is called when the user has finished dragging a form control.                                                                                                           |\n\n### Method alignChild\n\n    public boolean alignChild([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method alignChildren\n\n    public boolean alignChildren([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method alignControl\n\nDetermines whether to align the control.\n\n    public boolean alignControl([boolean value])\n\n#### Parameters\n\nvalue  \nThe new value for the property; optional.\n\n#### Return Value\n\ntrue if the control should be aligned; otherwise, false.\n\n#### Remarks\n\nThe upper-left corner of the control is aligned according to the longest label.\n\n### Method allowEdit\n\nDetermines whether the user can change the contents of the control.\n\n    public boolean allowEdit([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the allowEdit property.\n\n#### Return Value\n\ntrue if the control can be edited; otherwise, false.\n\n#### Remarks\n\nWhen this property is set on a container control, modifications are disabled or enabled for all controls within the container.\n\n### Method allowSysSetup\n\nRetrieves a value that indicates whether the control is shown in the SysSetup form.\n\n    public boolean allowSysSetup()\n\n#### Return Value\n\ntrue if the control is shown in the SysSetup form; otherwise, false.\n\n### Method allowUserSetup\n\n    public int allowUserSetup([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method arrangeGuide\n\n    public int arrangeGuide([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method arrangeMethod\n\n    public int arrangeMethod([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method arrangeWhen\n\n    public int arrangeWhen([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method autoDeclaration\n\nDetermines whether the system can declare a member variable that has the same name as the control.\n\n    public boolean autoDeclaration([boolean value])\n\n#### Parameters\n\nvalue  \nThe new value for the property; optional.\n\n#### Return Value\n\ntrue if the member variable can be declared for this control; otherwise, false.\n\n#### Remarks\n\nControls cannot have identical names.\n\n### Method beginDrag\n\nIs called when the user starts to drag a form control.\n\n    public int beginDrag(int x, int y)\n\n#### Parameters\n\nx  \nAn integer value that indicates the y-coordinate of the mouse pointer. The coordinate is relative to the upper-left corner of the control.\n\n<!-- -->\n\ny  \nAn integer value that indicates the y-coordinate of the mouse pointer. The coordinate is relative to the upper-left corner of the control.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nThis event is not raised unless the DragDrop property is enabled for the control. To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.\n\n### Method bottomMargin\n\n    public int bottomMargin([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\n### Method bottomMarginMode\n\n    public AutoMode bottomMarginMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method bottomMarginValue\n\n    public int bottomMarginValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method calcControlSize\n\nRetrieves the size of the control.\n\n    public container calcControlSize(int chars, int lines)\n\n#### Parameters\n\nchars  \nThe number of lines to use to determine the height.\n\n<!-- -->\n\nlines  \nThe number of lines to use to determine the height.\n\n#### Return Value\n\nThe container that holds the width and height.\n\n### Method caption\n\nGets or set the caption of the control.\n\n    public str caption([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe string that is used as the caption of the control.\n\n### Method columns\n\n    public int columns([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\n### Method columnsMode\n\n    public AutoMode columnsMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method columnspace\n\n    public int columnspace([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\n### Method columnspaceMode\n\n    public AutoMode columnspaceMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method columnspaceValue\n\n    public int columnspaceValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method columnsValue\n\n    public int columnsValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method configurationKey\n\nGets or sets the configuration key that is assigned to the control.\n\n    public ConfigurationKeyId configurationKey([ConfigurationKeyId value])\n\n#### Parameters\n\nvalue  \nThe ID of the configuration key being assigned to the control; optional.\n\n#### Return Value\n\nThe identifier of the configuration key that is assigned to the control.\n\n#### Remarks\n\nThe configuration key is used to determine whether this control can be displayed. If the configuration key is disabled in the system, the control is not displayed in the form.\n\n### Method configurationKeyEx\n\nRetrieves a list that contains the IDs of configuration keys that are in effect for the control.\n\n    public List configurationKeyEx()\n\n#### Return Value\n\nA list that contains the IDs of configuration keys that are in effect for the control.\n\n#### Remarks\n\nThe returned list does not contain duplicate IDs. If the control is bound to a data source, the returned list of configuration key IDs also includes the configuration key ID for the table and field. The returned list also contains any configuration key IDs that are applied to the properties, extended data type, or enumType methods.\n\n### Method countryRegionCodes\n\nGets or sets the comma-separated list of country/region codes for the control.\n\n    public str countryRegionCodes([str value])\n\n#### Parameters\n\nvalue  \nThe string that contains the country/region codes to set; optional.\n\n#### Return Value\n\nThe comma-separated list of country/region codes for the control.\n\n### Method countryRegionContextField\n\n    public FieldId countryRegionContextField([FieldId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataRelationPath\n\nGets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.\n\n    public str dataRelationPath([str value])\n\n#### Parameters\n\nvalue  \nThe string that contains the period-delimited list of relations; optional.\n\n#### Return Value\n\nThe period-delimited list of relations that links the field binding of the DataField object to a relative table.\n\n#### Remarks\n\nThis method is used by the reference group control to track exactly which relations produce the replacement field that is used. It enables the reference group control to bind consistently to the controls that it contains.\n\n### Method dataSource\n\nGets or sets a data source to be used by the control or the form.\n\n    public int dataSource([AnyType value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe identifier of the data source to be used.\n\n### Method displayTarget\n\nGets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.\n\n    public int displayTarget([int value])\n\n#### Parameters\n\nvalue  \nThe integer value that indicates where the control is displayed; optional.\n\n#### Return Value\n\nThe value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise Portal, or in both.\n\n### Method dragDrop\n\nDetermines whether to enable or disable drag-and-drop operations for the control.\n\n    public int dragDrop([int value])\n\n#### Parameters\n\nvalue  \nAn Integer that indicates whether drag-and-drop behavior is enabled; optional.\n\n#### Return Value\n\n1 if drag-and-drop operations are enabled; otherwise, false.\n\n#### Remarks\n\nUse the dragLeave , the dragOver, and the dragOverEx to specify the behavior.\n\n### Method dragOver\n\nRaises the dragOver event to indicate that a mouse drag operation is over the current control.\n\n    public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n#### Return Value\n\nA FormDrag enumeration value that indicates the mode of dragging.\n\n### Method dragOverEx\n\nRaises the dragOverEx event to indicate that a mouse drag operation is over the current control.\n\n    public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n#### Return Value\n\nA FormDrag enumeration value that indicates the mode of dragging.\n\n### Method dragText\n\nRetrieves the text that is displayed when the form control is dragged.\n\n    public str dragText()\n\n#### Return Value\n\nThe text that is displayed when the control is dragged; an empty string if there is no text to display when the control is dragged.\n\n### Method enabled\n\nDetermines whether to enable or disable the object.\n\n    public boolean enabled([boolean value])\n\n#### Parameters\n\nvalue  \nA Boolean value that indicates whether the control is enabled; optional.\n\n#### Return Value\n\ntrue if the object is enabled; otherwise, false.\n\n#### Remarks\n\nThe enabled property allows controls to be enabled or disabled at run time. For example, you can disable objects that do not apply to the current state of the application. You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.\n\n### Method hasChanged\n\nSets or returns a value that indicates whether the contents of the control have changed.\n\n    public boolean hasChanged([boolean val])\n\n#### Parameters\n\nval  \nThe value to assign as the hasChanged value for the control; optional.\n\n#### Return Value\n\ntrue if the contents of the control have changed; otherwise, false.\n\n### Method hasUserSetting\n\nIndicates whether the control has custom user settings.\n\n    public boolean hasUserSetting()\n\n#### Return Value\n\ntrue if the control has custom user settings; otherwise, false.\n\n### Method height\n\nGets or sets the height of the control.\n\n    public int height(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn Integer that indicates how the height is calculated; optional.\n\n<!-- -->\n\nmode  \nAn Integer that indicates how the height is calculated; optional.\n\n#### Return Value\n\nThe height of the control in pixels.\n\n#### Remarks\n\nExact mode is used if the value parameter is omitted.Calculate the height according to the following table:\n\n| Mode.            | Height calculation.                                                                       |\n|------------------|-------------------------------------------------------------------------------------------|\n| -1 Exact.        | The exact height in pixels of the controls is used.                                       |\n| 0 Auto.          | The height of the control is calculated automatically and the value parameter is ignored. |\n| 1 Column height. | The layout of the form determines the height of the control.                              |\n\nThe height and height calculation mode can be set separately.\n\n### Method heightMode\n\nGets or sets a calculation mode for the height of the control.\n\n    public int heightMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates how control height is calculated; optional.\n\n#### Return Value\n\nThe calculation mode.\n\n#### Remarks\n\nCalculate the height according to the following table:\n\n| Mode.          | Height Calculation.                                                                       |\n|----------------|-------------------------------------------------------------------------------------------|\n| Exact.         | The exact height in pixels of the controls is used.                                       |\n| Auto.          | The height of the control is calculated automatically and the value parameter is ignored. |\n| Column height. | The layout of the form determines the height of the control.                              |\n\nThe height of the control might change when the mode is set to auto or column height.\n\n### Method heightValue\n\nGets or sets the height of the control.\n\n    public int heightValue([int value])\n\n#### Parameters\n\nvalue  \nAn Integer that specifies the height in pixels; optional.\n\n#### Return Value\n\nThe height in pixels.\n\n#### Remarks\n\nThe height of the control is not changed unless the exact height calculation mode is used.\n\n### Method helpField\n\nRetrieves the Help text for the control.\n\n    public str helpField()\n\n#### Return Value\n\nThe Help text for the control; an empty string if there is no Help text for the control.\n\n#### Remarks\n\nThe helpField method cannot be used to set the value of the Help text. Use the helpText method to set the value of the Help text.\n\n### Method helpText\n\nGets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.\n\n    public str helpText([str value])\n\n#### Parameters\n\nvalue  \nThe value that is assigned as the Help text for the control.\n\n#### Return Value\n\nThe string to be displayed at the bottom of the screen.\n\n#### Remarks\n\nSet the HelpText property for an object by using the property sheet. The Help text must not exceed 250 characters.\n\n### Method hideIfEmpty\n\n    public boolean hideIfEmpty([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method hierarchyParent\n\nGets or sets the HierarchyParent property value of the control.\n\n    public str hierarchyParent([str value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the HierarchyParent property of the control.\n\n#### Return Value\n\nThe HierarchyParent property value of the control.\n\n### Method hWnd\n\nRetrieves the Windows handle for the control.\n\n    public int hWnd()\n\n#### Return Value\n\nThe handle for the control.\n\n#### Remarks\n\nThe handle can be used with the Windows API.\n\n### Method isContainer\n\n    public boolean isContainer()\n\n#### Return Value\n\n### Method isDisplayed\n\nRetrieves a value that indicates whether the control is displayed.\n\n    public boolean isDisplayed()\n\n#### Return Value\n\ntrue if the control is displayed; otherwise, false.\n\n#### Remarks\n\nTo modify the visible state of the control, call the visible method.\n\n### Method isRestricted\n\nRetrieves a value that indicates whether the control is restricted.\n\n    public boolean isRestricted()\n\n#### Return Value\n\ntrue if the control is restricted; otherwise, false.\n\n### Method isUserSetupEnabled\n\nRetrieves a value that indicates whether the control allows for the specified level of customization.\n\n    public boolean isUserSetupEnabled(int neededSetupRights)\n\n#### Parameters\n\nneededSetupRights  \nA value from the FormAllowUserSetup enumeration that specifies the level of customization that is being queried for the control.\n\n#### Return Value\n\ntrue if the control, design, and parent containers allow for the level of customization that is specified by the neededSetupRights parameter; otherwise, false.\n\n#### Remarks\n\nThe following table describes the values for the neededSetupRights parameter.\n\n|                                  |                                                                                                                                  |\n|----------------------------------|----------------------------------------------------------------------------------------------------------------------------------|\n| FormAllowUserSetup::No 0         | No changes can be made to the control. If this value is set for the neededSetupRights parameter, the method always returns true. |\n| FormAllowUserSetup::Restricted 1 | The user can change the editable, visible, skip, label, and width properties of the control. The user cannot move the control.   |\n| FormAllowUserSetup::Yes 2        | The user can change the editable, visible, skip, label, and width properties of the control. The user can also move the control. |\n\nFor this method to return true, the AllowUserSetup property for the design and all parent containers must allow for the level of access that is specified by the neededSetupRights parameter.\n\n### Method leave\n\n    public boolean leave()\n\n#### Return Value\n\n### Method left\n\nGets or sets the horizontal position of the control in the form.\n\n    public int left(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n#### Return Value\n\nThe horizontal position of the control in the form.\n\n### Method leftMargin\n\n    public int leftMargin([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\n### Method leftMarginMode\n\n    public AutoMode leftMarginMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method leftMarginValue\n\n    public int leftMarginValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method leftMode\n\nSets the horizontal arrange mode for the control in the form.\n\n    public int leftMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n#### Return Value\n\nThe horizontal arrange mode for the control in the form.\n\n### Method leftValue\n\nGets or sets the horizontal position of the control in the form.\n\n    public int leftValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal position of the control; optional.\n\n#### Return Value\n\nThe horizontal position of the control in the form.\n\n### Method markAsUserAdd\n\nMarks or unmarks the control as a user-added control.\n\n    public boolean markAsUserAdd([boolean value])\n\n#### Parameters\n\nvalue  \nThe Boolean value that indicates whether the control should be marked as a user-added control.\n\n#### Return Value\n\ntrue if the control was marked as a user-added control; otherwise, false.\n\n### Method mouseDblClick\n\nIs called when the control is double-clicked by the user.\n\n    public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned.\n\n### Method mouseDown\n\nIs called when the user clicks the mouse button over the control.\n\n    public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned. This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.\n\n### Method mouseMove\n\nIs called when the user moves the mouse pointer over the control.\n\n    public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned.\n\n### Method mouseUp\n\nIs called when the user releases the mouse button over the control area.\n\n    public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned. This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \nThe name to assign to the control.\n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   It must begin with a letter.\n-   It cannot exceed 250 characters.\n-   It can include numbers and underscore (\\_) characters.\n-   It cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.\n\n### Method neededPermission\n\n    public int neededPermission([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method SysObsoleteAttribute\n\n    public container SysObsoleteAttribute()\n\n#### Return Value\n\n### Method parentControl\n\nRetrieves the parent control for the control.\n\n    public FormControl parentControl()\n\n#### Return Value\n\nThe parent control for the control.\n\n### Method rightMargin\n\n    public int rightMargin([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\n### Method rightMarginMode\n\n    public AutoMode rightMarginMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method rightMarginValue\n\n    public int rightMarginValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method securityKey\n\nSets or returns the ID of the security key for the control.\n\n    public SecurityKeyId securityKey([SecurityKeyId value])\n\n#### Parameters\n\nvalue  \nThe ID of the security key to assign to the control; optional.\n\n#### Return Value\n\nThe ID of the security key for the control; 0 (zero) if no security key is assigned to the control.\n\n### Method showContextMenu\n\nShows the shortcut menu for the control.\n\n    public int showContextMenu(int menuHandle)\n\n#### Parameters\n\nmenuHandle  \nThe ID of the menu to show.\n\n#### Return Value\n\nAn integer value that indicates whether the call succeeded.\n\n### Method skip\n\nSets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.\n\n    public boolean skip([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the skip property of the control; optional.\n\n#### Return Value\n\ntrue if the control is skipped when the user presses the TAB key to move to the control; otherwise, false.\n\n#### Remarks\n\nIf the enabled property is true, the allowEdit property is false, and the skip property is true, the user cannot change the contents of the control but can still copy the contents of the control.\n\n### Method sort\n\n    public int sort([SortOrder sortDirection])\n\n#### Parameters\n\nsortDirection  \n\n#### Return Value\n\n### Method toolTip\n\nRetrieves the tooltip text for the control.\n\n    public str toolTip()\n\n#### Return Value\n\nThe tooltip text for the control; an empty string if no tooltip text has been defined for the control.\n\n#### Remarks\n\nThe method might be overridden to provide a value to the toolTip method.\n\n### Method top\n\nGets or sets the vertical position of the control in the form.\n\n    public int top(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n#### Return Value\n\nThe vertical position of the control in the form.\n\n### Method topMargin\n\n    public int topMargin([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\n### Method topMarginMode\n\n    public AutoMode topMarginMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method topMarginValue\n\n    public int topMarginValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method topMode\n\nSets the vertical arrange mode for the control in the form.\n\n    public int topMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n#### Return Value\n\nThe vertical arrange mode for the control in the form.\n\n### Method topValue\n\nGets or sets the vertical position of the control in the form.\n\n    public int topValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical position of the control; optional.\n\n#### Return Value\n\nThe vertical position of the control in the form.\n\n### Method type\n\n    public int type([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method SysObsoleteAttribute\n\n    public boolean SysObsoleteAttribute(container data)\n\n#### Parameters\n\ndata  \n\n#### Return Value\n\n### Method userData\n\nGets or sets the user data for the control.\n\n    public int userData([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the user data for the control; optional.\n\n#### Return Value\n\nThe user data for the control.\n\n### Method userDataItem\n\nGets or sets the user data item for the control.\n\n    public int userDataItem([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the user data item for the control; optional.\n\n#### Return Value\n\nThe user data item for the control.\n\n### Method userDataItems\n\nGets or sets the number of user data items for the control.\n\n    public int userDataItems([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the number of user data items for the control; optional.\n\n#### Return Value\n\nThe number of user data items for the control.\n\n### Method userDisable\n\nGets or sets the value that indicates whether the control is disabled for the user.\n\n    public int userDisable([int value])\n\n#### Parameters\n\nvalue  \nThe value that indicates whether the control is disabled for the user; optional.\n\n#### Return Value\n\n1 if the control is disabled for the user; otherwise, 0.\n\n### Method userHeight\n\nGets or sets the custom user height for the control.\n\n    public int userHeight([int value])\n\n#### Parameters\n\nvalue  \nThe user height for the control; optional.\n\n#### Return Value\n\nThe custom user height for the control.\n\n### Method userHide\n\nGets or sets the value that indicates whether the control is hidden from the user.\n\n    public int userHide([int value])\n\n#### Parameters\n\nvalue  \nThe value that indicates whether the control is hidden from the user; optional.\n\n#### Return Value\n\n1 if the control is hidden from the user; otherwise, 0.\n\n#### Remarks\n\nThe user specifies whether a control is hidden by right-clicking the control when it is viewable or by right-clicking another control when the original control is hidden. A right-click opens a menu that can be used to hide or display the control. This method lets you programmatically determine and set the value.\n\n### Method userOrgContainer\n\nGets or sets the organization container for the control.\n\n    public int userOrgContainer([int value])\n\n#### Parameters\n\nvalue  \nThe organization container to set for the control; optional.\n\n#### Return Value\n\nThe organization container for the control.\n\n### Method userOrgSibling\n\nGets or sets the organization sibling for the control.\n\n    public int userOrgSibling([int value])\n\n#### Parameters\n\nvalue  \nThe organization sibling to set for the control; optional.\n\n#### Return Value\n\nThe organization sibling for the control.\n\n### Method userPromptText\n\nGets or sets the user label text for the control.\n\n    public str userPromptText([str value])\n\n#### Parameters\n\nvalue  \nThe user label text to set for the control; optional.\n\n#### Return Value\n\nThe user label text for the control.\n\n### Method userSecurityLevel\n\nGets or sets the user security level for the control.\n\n    public int userSecurityLevel([int value])\n\n#### Parameters\n\nvalue  \nThe user security level to set for the control; optional.\n\n#### Return Value\n\nThe user security level for the control.\n\n### Method userSkip\n\nSets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.\n\n    public int userSkip([int value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the userSkip property; optional. The value is 1 if the user setting to skip the control is in effect; otherwise, the value is 0.\n\n#### Return Value\n\n1 if the user setting to skip the control is in effect; otherwise, 0.\n\n### Method userWidth\n\nSets or returns the width of the control in pixels.\n\n    public int userWidth([int value])\n\n#### Parameters\n\nvalue  \nThe number of pixels to use as the width of the control; optional.\n\n#### Return Value\n\nThe number of pixels that the user specified as the width of the control; 0 (zero) if the user did not specify a character width.\n\n#### Remarks\n\nThe userWidth method returns the width in pixels, based on six times the number of characters. For example, if the user has specified 30 characters as the width of the control, the return value is 6 \\* 30 = 180. To specify the width of the control in characters, users can right-click the control to open the setup form where the character specification is made.\n\n### Method verticalSpacing\n\nGets or sets the vertical spacing of the control in the form.\n\n    public int verticalSpacing([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the AutoMode value for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the AutoMode value for the control; optional.\n\n#### Return Value\n\nThe vertical spacing of the control in the form.\n\n### Method verticalSpacingMode\n\nSets the vertical spacing mode for the control in the form.\n\n    public AutoMode verticalSpacingMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\nThe vertical spacing mode for the control in the form.\n\n### Method verticalSpacingValue\n\nGets or sets the vertical spacing of the control in the form.\n\n    public int verticalSpacingValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical spacing of the control; optional.\n\n#### Return Value\n\nThe vertical spacing of the control in the form.\n\n### Method visible\n\nSets or returns a value that indicates whether the control is visible.\n\n    public boolean visible([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the visibility setting for the control; optional.\n\n#### Return Value\n\ntrue if the control is visible; otherwise, false.\n\n### Method width\n\nGets or sets the width of the control.\n\n    public int width(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn Integer that indicates how the width is calculated; optional.\n\n<!-- -->\n\nmode  \nAn Integer that indicates how the width is calculated; optional.\n\n#### Return Value\n\nThe width of the control in pixels.\n\n#### Remarks\n\nExact mode is used if the value parameter is omitted.Calculate the width according to the following table:\n\n| Mode.           | Width calculation.                                                                       |\n|-----------------|------------------------------------------------------------------------------------------|\n| -1 Exact.       | The exact width in pixels of the controls is used.                                       |\n| 0 Auto.         | The width of the control is calculated automatically and the value parameter is ignored. |\n| 1 Column width. | The layout of the form determines the width of the control.                              |\n\nThe width and width calculation mode can be set separately.\n\n### Method widthMode\n\nGets or sets the calculation mode of the width of the control.\n\n    public int widthMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates how control width is calculated; optional.\n\n#### Return Value\n\nAn integer value that indicates the current calculation mode.\n\n#### Remarks\n\nCalculate the width according to the following table:\n\n| Mode.         | Width Calculation.                                                                       |\n|---------------|------------------------------------------------------------------------------------------|\n| Exact.        | The exact width in pixels of the controls is used.                                       |\n| Auto.         | The width of the control is calculated automatically and the value parameter is ignored. |\n| Column width. | The layout of the form determines the width of the control.                              |\n\nThe width of the control might change when the mode is set to auto or column width.\n\n### Method widthValue\n\nGets or sets the width of the control.\n\n    public int widthValue([int value])\n\n#### Parameters\n\nvalue  \nAn Integer that specifies the width in pixels; optional.\n\n#### Return Value\n\nThe width in pixels of the control.\n\n#### Remarks\n\nTo change the width of the control, use the exact width calculation mode.\n\n### Method OnEnter\n\n    private void OnEnter([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method lostFocus\n\nIndicates that the control has lost focus.\n\n    public void lostFocus()\n\n### Method drop\n\nRaises the drop event to indicate that a drop operation is being performed on the current control.\n\n    public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n### Method paste\n\nPastes the contents of the clipboard into the control.\n\n    public void paste()\n\n### Method setFocus\n\nSets the focus on the control.\n\n    public void setFocus()\n\n### Method OnLeaving\n\n    private void OnLeaving([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method mouseLeave\n\nIndicates that the mouse pointer has left the control.\n\n    public void mouseLeave()\n\n### Method gotFocus\n\nIndicates that the control has received focus.\n\n    public void gotFocus()\n\n### Method dragLeave\n\nRaises the dragLeave event to indicate that a mouse drag operation has left the current control.\n\n    public void dragLeave()\n\n### Method enter\n\n    public void enter()\n\n### Method dropEx\n\nRaises the dropEx event to indicate that a drop operation is being performed on the current control.\n\n    public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n### Method mouseEnter\n\nIs called when the user moves the mouse pointer into the control area.\n\n    public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n### Method jumpRef\n\n    public void jumpRef()\n\n### Method OnLostFocus\n\n    private void OnLostFocus([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method OnGotFocus\n\n    private void OnGotFocus([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method prefColumnSize\n\nSpecifies the preferred column width and height for the form control.\n\n    public void prefColumnSize(int width, int height)\n\n#### Parameters\n\nwidth  \nThe preferred height of the control.\n\n<!-- -->\n\nheight  \nThe preferred height of the control.\n\n### Method cut\n\nCuts the contents of the control.\n\n    public void cut()\n\n### Method registerOverrideMethod\n\n    public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, [Object overrideObject])\n\n#### Parameters\n\nmethodToOverride  \n\n<!-- -->\n\nobjectMethodToCall  \n\n<!-- -->\n\noverrideObject  \n\n### Method displayControl\n\nDisplays the control.\n\n    public void displayControl()\n\n### Method copy\n\nCopies the contents of the control to the clipboard.\n\n    public void copy()\n\n### Method context\n\nShows the shortcut menu for the control.\n\n    public void context()\n\n### Method resetUserSetting\n\nResets the user settings for the control.\n\n    public void resetUserSetting()\n\n### Method inputSearch\n\nPerforms data filtering for the control, based on the specified string.\n\n    public void inputSearch(str searchStr)\n\n#### Parameters\n\nsearchStr  \nThe string value to use to filter data; optional.\n\n### Method filter\n\n    public void filter([str filterStr])\n\n#### Parameters\n\nfilterStr  \n\n### Method endDrag\n\nIs called when the user has finished dragging a form control.\n\n    public void endDrag()\n\n#### Remarks\n\nThis event is not raised unless the DragDrop property is enabled for the control and a beginDrag event has already been started. To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.\n\n## Class FormFunctionButtonControl\n    class FormFunctionButtonControl extends FormControl\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                      | Description                                                                                                                                                             |\n|-------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| public boolean alignControl(\\[boolean value\\])                                                              | Determines whether to align the control.                                                                                                                                |\n| public int alignment(\\[int value\\])                                                                         |                                                                                                                                                                         |\n| public boolean allowEdit(\\[boolean value\\])                                                                 | Determines whether the user can change the contents of the control.                                                                                                     |\n| public boolean allowSysSetup()                                                                              | Retrieves a value that indicates whether the control is shown in the SysSetup form.                                                                                     |\n| public boolean autoDeclaration(\\[boolean value\\])                                                           | Determines whether the system can declare a member variable that has the same name as the control.                                                                      |\n| public boolean autoRefreshData(\\[boolean value\\])                                                           |                                                                                                                                                                         |\n| public int backgroundColor(\\[int value\\])                                                                   | Gets or sets the background color of the control.                                                                                                                       |\n| public int backStyle(\\[int value\\])                                                                         | Determiness whether the control background can be transparent.                                                                                                          |\n| public int beginDrag(int x, int y)                                                                          | Is called when the user starts to drag a form control.                                                                                                                  |\n| public boolean big(\\[boolean value\\])                                                                       |                                                                                                                                                                         |\n| public int bold(\\[int value\\])                                                                              | Gets or sets the weight of font used to output text in the control.                                                                                                     |\n| public int border(\\[int value\\])                                                                            | Gets or sets the style of the borderline of the control.                                                                                                                |\n| public int buttonDisplay(\\[int value\\])                                                                     | Gets or sets the appearance of the button control.                                                                                                                      |\n| public container calcControlSize(int chars, int lines)                                                      | Retrieves the size of the control.                                                                                                                                      |\n| public str caption(\\[str value\\])                                                                           | Gets or set the caption of the control.                                                                                                                                 |\n| public int characterSet(\\[int value\\])                                                                      | Gets or sets the character set of the font.                                                                                                                             |\n| public int colorScheme(\\[int value\\])                                                                       | Gets or sets the color scheme of the control.                                                                                                                           |\n| public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])                                    | Gets or sets the configuration key that is assigned to the control.                                                                                                     |\n| public List configurationKeyEx()                                                                            | Retrieves a list that contains the IDs of configuration keys that are in effect for the control.                                                                        |\n| public int copyCallerQuery(\\[int value\\])                                                                   |                                                                                                                                                                         |\n| public str countryRegionCodes(\\[str value\\])                                                                | Gets or sets the comma-separated list of country/region codes for the control.                                                                                          |\n| public FieldId countryRegionContextField(\\[FieldId value\\])                                                 |                                                                                                                                                                         |\n| public str dataRelationPath(\\[str value\\])                                                                  | Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.                                           |\n| public int dataSource(\\[AnyType value\\])                                                                    | Gets or sets a data source to be used by the control or the form.                                                                                                       |\n| public boolean defaultButton(\\[boolean value\\])                                                             | Determines whether the button should be the default button in the form.                                                                                                 |\n| public str disabledImage(\\[str value\\])                                                                     | Gets or sets the disabled image of the button.                                                                                                                          |\n| public int disabledImageLocation(\\[int value\\])                                                             |                                                                                                                                                                         |\n| public int disabledResource(\\[int value\\])                                                                  | Gets or sets the resource ID of the image to use as the disabled button image.                                                                                          |\n| public int displayTarget(\\[int value\\])                                                                     | Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both. |\n| public int dragDrop(\\[int value\\])                                                                          | Determines whether to enable or disable drag-and-drop operations for the control.                                                                                       |\n| public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)                           | Raises the dragOver event to indicate that a mouse drag operation is over the current control.                                                                          |\n| public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)                               | Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.                                                                        |\n| public str dragText()                                                                                       | Retrieves the text that is displayed when the form control is dragged.                                                                                                  |\n| public boolean enabled(\\[boolean value\\])                                                                   | Determines whether to enable or disable the object.                                                                                                                     |\n| public str font(\\[str value\\])                                                                              | Gets or sets the name of the font for the control to use.                                                                                                               |\n| public int fontSize(\\[int value\\])                                                                          | Gets or sets the size of the font for the control to use.                                                                                                               |\n| public boolean forcedToOverflow(\\[boolean value\\])                                                          |                                                                                                                                                                         |\n| public int foregroundColor(\\[int value\\])                                                                   | Gets or sets the text color for the control to use.                                                                                                                     |\n| public int formViewOption(\\[int value\\])                                                                    |                                                                                                                                                                         |\n| public boolean hasChanged(\\[boolean val\\])                                                                  | Sets or returns a value that indicates whether the contents of the control have changed.                                                                                |\n| public boolean hasUserSetting()                                                                             | Indicates whether the control has custom user settings.                                                                                                                 |\n| public int height(int value, \\[int mode\\])                                                                  | Gets or sets the height of the control.                                                                                                                                 |\n| public int heightMode(\\[int value\\])                                                                        | Gets or sets a calculation mode for the height of the control.                                                                                                          |\n| public int heightValue(\\[int value\\])                                                                       | Gets or sets the height of the control.                                                                                                                                 |\n| public str helpField()                                                                                      | Retrieves the Help text for the control.                                                                                                                                |\n| public str helpText(\\[str value\\])                                                                          | Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.                                                                |\n| public str hierarchyParent(\\[str value\\])                                                                   | Gets or sets the HierarchyParent property value of the control.                                                                                                         |\n| public int hWnd()                                                                                           | Retrieves the Windows handle for the control.                                                                                                                           |\n| public int imageLocation(\\[int value\\])                                                                     |                                                                                                                                                                         |\n| public boolean isContainer()                                                                                |                                                                                                                                                                         |\n| public boolean isDisplayed()                                                                                | Retrieves a value that indicates whether the control is displayed.                                                                                                      |\n| public boolean isRestricted()                                                                               | Retrieves a value that indicates whether the control is restricted.                                                                                                     |\n| public boolean isUserSetupEnabled(int neededSetupRights)                                                    | Retrieves a value that indicates whether the control allows for the specified level of customization.                                                                   |\n| public boolean italic(\\[boolean value\\])                                                                    |                                                                                                                                                                         |\n| public str keyTip(\\[str value\\])                                                                            |                                                                                                                                                                         |\n| public int left(int value, \\[int mode\\])                                                                    | Gets or sets the horizontal position of the control in the form.                                                                                                        |\n| public int leftMode(\\[int value\\])                                                                          | Sets the horizontal arrange mode for the control in the form.                                                                                                           |\n| public int leftValue(\\[int value\\])                                                                         | Gets or sets the horizontal position of the control in the form.                                                                                                        |\n| public boolean markAsUserAdd(\\[boolean value\\])                                                             | Marks or unmarks the control as a user-added control.                                                                                                                   |\n| public xMenuFunction menufunction()                                                                         |                                                                                                                                                                         |\n| public str menuItemName(\\[str value\\])                                                                      |                                                                                                                                                                         |\n| public MenuItemType menuItemType(\\[MenuItemType value\\])                                                    |                                                                                                                                                                         |\n| public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)                             | Is called when the control is double-clicked by the user.                                                                                                               |\n| public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)                                 | Is called when the user clicks the mouse button over the control.                                                                                                       |\n| public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)                                 | Is called when the user moves the mouse pointer over the control.                                                                                                       |\n| public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)                                   | Is called when the user releases the mouse button over the control area.                                                                                                |\n| public int multiSelect(\\[int value\\])                                                                       |                                                                                                                                                                         |\n| public str name(\\[str value\\])                                                                              | Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.                                 |\n| public int neededPermission(\\[int value\\])                                                                  |                                                                                                                                                                         |\n| public int needsRecord(\\[int value\\])                                                                       |                                                                                                                                                                         |\n| public str normalImage(\\[str value\\])                                                                       |                                                                                                                                                                         |\n| public int normalResource(\\[int value\\])                                                                    |                                                                                                                                                                         |\n| public int openMode(\\[int value\\])                                                                          |                                                                                                                                                                         |\n| public container SysObsoleteAttribute()                                                                     |                                                                                                                                                                         |\n| public str parameters(\\[str value\\])                                                                        | Gets or sets the list of parameters that are passed to objects taht are run by the MenuFunction class.                                                                  |\n| public FormControl parentControl()                                                                          | Retrieves the parent control for the control.                                                                                                                           |\n| public boolean primary(\\[boolean value\\])                                                                   |                                                                                                                                                                         |\n| public boolean saveRecord(\\[boolean value\\])                                                                |                                                                                                                                                                         |\n| public SecurityKeyId securityKey(\\[SecurityKeyId value\\])                                                   | Sets or returns the ID of the security key for the control.                                                                                                             |\n| public boolean sendExternalContext(\\[boolean value\\])                                                       |                                                                                                                                                                         |\n| public int shortkey(\\[int value\\])                                                                          |                                                                                                                                                                         |\n| public int showContextMenu(int menuHandle)                                                                  | Shows the shortcut menu for the control.                                                                                                                                |\n| public boolean showShortCut(\\[boolean value\\])                                                              |                                                                                                                                                                         |\n| public boolean skip(\\[boolean value\\])                                                                      | Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.                                         |\n| public int sort(\\[SortOrder sortDirection\\])                                                                |                                                                                                                                                                         |\n| public int style(\\[int value\\])                                                                             |                                                                                                                                                                         |\n| public str text(\\[str value\\])                                                                              |                                                                                                                                                                         |\n| public str toolTip()                                                                                        | Retrieves the tooltip text for the control.                                                                                                                             |\n| public int top(int value, \\[int mode\\])                                                                     | Gets or sets the vertical position of the control in the form.                                                                                                          |\n| public int topMode(\\[int value\\])                                                                           | Sets the vertical arrange mode for the control in the form.                                                                                                             |\n| public int topValue(\\[int value\\])                                                                          | Gets or sets the vertical position of the control in the form.                                                                                                          |\n| public int type(\\[int value\\])                                                                              |                                                                                                                                                                         |\n| public boolean underline(\\[boolean value\\])                                                                 |                                                                                                                                                                         |\n| public boolean SysObsoleteAttribute(container data)                                                         |                                                                                                                                                                         |\n| public int userData(\\[int value\\])                                                                          | Gets or sets the user data for the control.                                                                                                                             |\n| public int userDataItem(\\[int value\\])                                                                      | Gets or sets the user data item for the control.                                                                                                                        |\n| public int userDataItems(\\[int value\\])                                                                     | Gets or sets the number of user data items for the control.                                                                                                             |\n| public int userDisable(\\[int value\\])                                                                       | Gets or sets the value that indicates whether the control is disabled for the user.                                                                                     |\n| public int userHeight(\\[int value\\])                                                                        | Gets or sets the custom user height for the control.                                                                                                                    |\n| public int userHide(\\[int value\\])                                                                          | Gets or sets the value that indicates whether the control is hidden from the user.                                                                                      |\n| public int userOrgContainer(\\[int value\\])                                                                  | Gets or sets the organization container for the control.                                                                                                                |\n| public int userOrgSibling(\\[int value\\])                                                                    | Gets or sets the organization sibling for the control.                                                                                                                  |\n| public str userPromptText(\\[str value\\])                                                                    | Gets or sets the user label text for the control.                                                                                                                       |\n| public int userSecurityLevel(\\[int value\\])                                                                 | Gets or sets the user security level for the control.                                                                                                                   |\n| public int userSkip(\\[int value\\])                                                                          | Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.                    |\n| public int userWidth(\\[int value\\])                                                                         | Sets or returns the width of the control in pixels.                                                                                                                     |\n| public boolean value(\\[boolean value\\])                                                                     |                                                                                                                                                                         |\n| public int verticalSpacing(\\[int value\\], \\[AutoMode mode\\])                                                | Gets or sets the vertical spacing of the control in the form.                                                                                                           |\n| public AutoMode verticalSpacingMode(\\[AutoMode mode\\])                                                      | Sets the vertical spacing mode for the control in the form.                                                                                                             |\n| public int verticalSpacingValue(\\[int value\\])                                                              | Gets or sets the vertical spacing of the control in the form.                                                                                                           |\n| public boolean visible(\\[boolean value\\])                                                                   | Sets or returns a value that indicates whether the control is visible.                                                                                                  |\n| public int width(int value, \\[int mode\\])                                                                   | Gets or sets the width of the control.                                                                                                                                  |\n| public int widthMode(\\[int value\\])                                                                         | Gets or sets the calculation mode of the width of the control.                                                                                                          |\n| public int widthValue(\\[int value\\])                                                                        | Gets or sets the width of the control.                                                                                                                                  |\n| public void prefColumnSize(int width, int height)                                                           | Specifies the preferred column width and height for the form control.                                                                                                   |\n| public void lostFocus()                                                                                     | Indicates that the control has lost focus.                                                                                                                              |\n| public void resetUserSetting()                                                                              | Resets the user settings for the control.                                                                                                                               |\n| public void context()                                                                                       | Shows the shortcut menu for the control.                                                                                                                                |\n| public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)                                   | Raises the drop event to indicate that a drop operation is being performed on the current control.                                                                      |\n| private void OnLostFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                |                                                                                                                                                                         |\n| public void gotFocus()                                                                                      | Indicates that the control has received focus.                                                                                                                          |\n| public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)                               | Is called when the user moves the mouse pointer into the control area.                                                                                                  |\n| public void paste()                                                                                         | Pastes the contents of the clipboard into the control.                                                                                                                  |\n| private void OnGotFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                 |                                                                                                                                                                         |\n| public void endDrag()                                                                                       | Is called when the user has finished dragging a form control.                                                                                                           |\n| public void cut()                                                                                           | Cuts the contents of the control.                                                                                                                                       |\n| public void filter(\\[str filterStr\\])                                                                       |                                                                                                                                                                         |\n| public void displayControl()                                                                                | Displays the control.                                                                                                                                                   |\n| public void inputSearch(str searchStr)                                                                      | Performs data filtering for the control, based on the specified string.                                                                                                 |\n| public void copy()                                                                                          | Copies the contents of the control to the clipboard.                                                                                                                    |\n| public void clicked()                                                                                       |                                                                                                                                                                         |\n| private void OnClicked(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                  |                                                                                                                                                                         |\n| public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)                                       | Raises the dropEx event to indicate that a drop operation is being performed on the current control.                                                                    |\n| public void mouseLeave()                                                                                    | Indicates that the mouse pointer has left the control.                                                                                                                  |\n| public void setFocus()                                                                                      | Sets the focus on the control.                                                                                                                                          |\n| public void dragLeave()                                                                                     | Raises the dragLeave event to indicate that a mouse drag operation has left the current control.                                                                        |\n| public void jumpRef()                                                                                       |                                                                                                                                                                         |\n| public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, \\[Object overrideObject\\]) |                                                                                                                                                                         |\n\n### Method alignControl\n\nDetermines whether to align the control.\n\n    public boolean alignControl([boolean value])\n\n#### Parameters\n\nvalue  \nThe new value for the property; optional.\n\n#### Return Value\n\ntrue if the control should be aligned; otherwise, false.\n\n#### Remarks\n\nThe upper-left corner of the control is aligned according to the longest label.\n\n### Method alignment\n\n    public int alignment([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method allowEdit\n\nDetermines whether the user can change the contents of the control.\n\n    public boolean allowEdit([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the allowEdit property.\n\n#### Return Value\n\ntrue if the control can be edited; otherwise, false.\n\n#### Remarks\n\nWhen this property is set on a container control, modifications are disabled or enabled for all controls within the container.\n\n### Method allowSysSetup\n\nRetrieves a value that indicates whether the control is shown in the SysSetup form.\n\n    public boolean allowSysSetup()\n\n#### Return Value\n\ntrue if the control is shown in the SysSetup form; otherwise, false.\n\n### Method autoDeclaration\n\nDetermines whether the system can declare a member variable that has the same name as the control.\n\n    public boolean autoDeclaration([boolean value])\n\n#### Parameters\n\nvalue  \nThe new value for the property; optional.\n\n#### Return Value\n\ntrue if the member variable can be declared for this control; otherwise, false.\n\n#### Remarks\n\nControls cannot have identical names.\n\n### Method autoRefreshData\n\n    public boolean autoRefreshData([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method backgroundColor\n\nGets or sets the background color of the control.\n\n    public int backgroundColor([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer that contains a packed RGB color.\n\n#### Remarks\n\nThe integer that is returned contains a packed RGB color as follows:\n\n-   The low-order byte contains a value for the relative intensity of red.\n-   The second byte contains a value for green.\n-   The third byte contains a value for blue.\n-   The high-order byte must be zero.\n-   The maximum value for a single byte is 255.\n\n### Method backStyle\n\nDeterminess whether the control background can be transparent.\n\n    public int backStyle([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n1 if the control background can be transparent; otherwise, 0.\n\n### Method beginDrag\n\nIs called when the user starts to drag a form control.\n\n    public int beginDrag(int x, int y)\n\n#### Parameters\n\nx  \nAn integer value that indicates the y-coordinate of the mouse pointer. The coordinate is relative to the upper-left corner of the control.\n\n<!-- -->\n\ny  \nAn integer value that indicates the y-coordinate of the mouse pointer. The coordinate is relative to the upper-left corner of the control.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nThis event is not raised unless the DragDrop property is enabled for the control. To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.\n\n### Method big\n\n    public boolean big([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method bold\n\nGets or sets the weight of font used to output text in the control.\n\n    public int bold([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer value between zero and nine, inclusive.\n\n#### Remarks\n\nThe integer that is returned contains the weight of the font as follows:\n\n-   0 Use the default font weight.\n-   1 Thin.\n-   2 Extra-light.\n-   3 Light.\n-   4 Normal.\n-   5 Medium.\n-   6 Semibold.\n-   7 Bold.\n-   8 Extra-bold.\n-   9 Heavy.\n\n### Method border\n\nGets or sets the style of the borderline of the control.\n\n    public int border([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer between zero and four, inclusive.\n\n#### Remarks\n\nThe integer that is returned contains the style of the borderline of the control as follows:\n\n| Value. | Description. |\n|--------|--------------|\n| 0      | Auto.        |\n| 1      | 3D.          |\n| 2      | Single line. |\n| 3      | Flat.        |\n| 4      | None.        |\n\n### Method buttonDisplay\n\nGets or sets the appearance of the button control.\n\n    public int buttonDisplay([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer between zero and five, inclusive.\n\n#### Remarks\n\nThe value of the property defines whether the text, the image, or both should be displayed on the button. This property also controls relative positions of text and image if both are displayed.The integer value that is returned contains the appearace of the button control as follows:\n\n| Value. | Description.                                                     |\n|--------|------------------------------------------------------------------|\n| 0      | Text only.                                                       |\n| 1      | Image Only.                                                      |\n| 2      | Text and image; the image is displayed below the text.           |\n| 3      | Text and image; the image is displayed above the text.           |\n| 4      | Text and image; the image is displayed to the left of the text.  |\n| 5      | Text and image; the image is displayed to the right of the text. |\n\n### Method calcControlSize\n\nRetrieves the size of the control.\n\n    public container calcControlSize(int chars, int lines)\n\n#### Parameters\n\nchars  \nThe number of lines to use to determine the height.\n\n<!-- -->\n\nlines  \nThe number of lines to use to determine the height.\n\n#### Return Value\n\nThe container that holds the width and height.\n\n### Method caption\n\nGets or set the caption of the control.\n\n    public str caption([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe string that is used as the caption of the control.\n\n### Method characterSet\n\nGets or sets the character set of the font.\n\n    public int characterSet([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer value that indicates the character set of the font.\n\n#### Remarks\n\nThe values for the integer that is returned indicate the character set according to the following table:\n\n| Value. | Description.         |\n|--------|----------------------|\n| 0      | ANSI\\_CHARSET        |\n| 1      | DEFAULT\\_CHARSET     |\n| 2      | SYMBOL\\_CHARSET      |\n| 77     | MAC\\_CHARSET         |\n| 128    | SHIFTJIS\\_CHARSET    |\n| 129    | HANGUL\\_CHARSET      |\n| 134    | GB2312\\_CHARSET      |\n| 136    | CHINESEBIG5\\_CHARSET |\n| 161    | GREEK\\_CHARSET       |\n| 162    | TURKISH\\_CHARSET     |\n| 163    | VIETNAMESE\\_CHARSET  |\n| 186    | BALTIC\\_CHARSET      |\n| 204    | RUSSIAN\\_CHARSET     |\n| 238    | EASTEUROPE\\_CHARSET  |\n| 255    | OEM\\_CHARSET         |\n\nThe value in the following table is for the Korean language edition of msCoNameWindows.\n\n| Value. | Description.   |\n|--------|----------------|\n| 130    | JOHAB\\_CHARSET |\n\nThe values in the following table are for the Middle East language edition of Windows.\n\n| Value. | Description.    |\n|--------|-----------------|\n| 177    | HEBREW\\_CHARSET |\n| 178    | ARABIC\\_CHARSET |\n\nThe value in the following table is for the Thai language edition of Windows.\n\n| Value. | Description.  |\n|--------|---------------|\n| 222    | THAI\\_CHARSET |\n\nThe default character set is set to a value based on the current system locale. For example, when the system locale is English (United States), it is set as ANSI\\_CHARSET. For more information, see the LOGFONT structure on the MSDN website, http://go.microsoft.com/fwlink/?LinkID=85972.\n\n### Method colorScheme\n\nGets or sets the color scheme of the control.\n\n    public int colorScheme([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer between zero and two, inclusive.\n\n#### Remarks\n\nThe color scheme is defined according to the following table:\n\n| Value. | Style.                 |\n|--------|------------------------|\n| 0      | Default.               |\n| 1      | The Windows palette.   |\n| 2      | The true-color scheme. |\n\n### Method configurationKey\n\nGets or sets the configuration key that is assigned to the control.\n\n    public ConfigurationKeyId configurationKey([ConfigurationKeyId value])\n\n#### Parameters\n\nvalue  \nThe ID of the configuration key to assign to the control; optional.\n\n#### Return Value\n\nThe identifier of the configuration key that is assigned to the control.\n\n#### Remarks\n\nThe configuration key is used to determine whether this control can be displayed. If the configuration key is disabled in the system, the control is not displayed in the form.\n\n### Method configurationKeyEx\n\nRetrieves a list that contains the IDs of configuration keys that are in effect for the control.\n\n    public List configurationKeyEx()\n\n#### Return Value\n\nA list that contains the IDs of configuration keys that are in effect for the control.\n\n#### Remarks\n\nThe returned list does not contain duplicate IDs. If the control is bound to a data source, the returned list of configuration key IDs also includes the configuration key ID for the table and field. The returned list also contains any configuration key IDs that are applied to the properties, extended data type, or enumType methods.\n\n### Method copyCallerQuery\n\n    public int copyCallerQuery([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method countryRegionCodes\n\nGets or sets the comma-separated list of country/region codes for the control.\n\n    public str countryRegionCodes([str value])\n\n#### Parameters\n\nvalue  \nThe string that contains the country/region codes to set; optional.\n\n#### Return Value\n\nThe comma-separated list of country/region codes for the control.\n\n### Method countryRegionContextField\n\n    public FieldId countryRegionContextField([FieldId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataRelationPath\n\nGets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.\n\n    public str dataRelationPath([str value])\n\n#### Parameters\n\nvalue  \nThe string that contains the period-delimited list of relations; optional.\n\n#### Return Value\n\nThe period-delimited list of relations that links the field binding of the DataField object to a relative table.\n\n#### Remarks\n\nThis method is used by the reference group control to track exactly which relations produce the replacement field that is used. It enables the reference group control to bind consistently to the controls that it contains.\n\n### Method dataSource\n\nGets or sets a data source to be used by the control or the form.\n\n    public int dataSource([AnyType value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe identifier of the data source to be used.\n\n### Method defaultButton\n\nDetermines whether the button should be the default button in the form.\n\n    public boolean defaultButton([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\ntrue if the button should be the default button; otherwise, false.\n\n### Method disabledImage\n\nGets or sets the disabled image of the button.\n\n    public str disabledImage([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe full name of an image file. The system supports all of the GDI-supported image formats.\n\n#### Remarks\n\nThis property has precedence over the disabledResource property. It is used if both of these properties are set.\n\n### Method disabledImageLocation\n\n    public int disabledImageLocation([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method disabledResource\n\nGets or sets the resource ID of the image to use as the disabled button image.\n\n    public int disabledResource([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe resource ID of the image to use as the disabled button image. Both icon and bitmap images are supported.\n\n### Method displayTarget\n\nGets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.\n\n    public int displayTarget([int value])\n\n#### Parameters\n\nvalue  \nThe integer value that indicates where the control is displayed; optional.\n\n#### Return Value\n\nThe value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise Portal, or in both.\n\n### Method dragDrop\n\nDetermines whether to enable or disable drag-and-drop operations for the control.\n\n    public int dragDrop([int value])\n\n#### Parameters\n\nvalue  \nAn Integer data type that indicates whether drag-and-drop behavior is enabled; optional.\n\n#### Return Value\n\n1 if drag-and-drop operations are enabled; otherwise, false.\n\n#### Remarks\n\nUse the dragLeave , the dragOver, and the dragOverEx to specify the behavior.\n\n### Method dragOver\n\nRaises the dragOver event to indicate that a mouse drag operation is over the current control.\n\n    public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n#### Return Value\n\nA FormDrag enumeration value that indicates the mode of dragging.\n\n### Method dragOverEx\n\nRaises the dragOverEx event to indicate that a mouse drag operation is over the current control.\n\n    public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n#### Return Value\n\nA FormDrag enumeration value that indicates the mode of dragging.\n\n### Method dragText\n\nRetrieves the text that is displayed when the form control is dragged.\n\n    public str dragText()\n\n#### Return Value\n\nThe text that is displayed when the control is dragged; an empty string if there is no text to display when the control is dragged.\n\n### Method enabled\n\nDetermines whether to enable or disable the object.\n\n    public boolean enabled([boolean value])\n\n#### Parameters\n\nvalue  \nA Boolean value that specifies whether the control is enabled; optional.\n\n#### Return Value\n\ntrue if the object is enabled; otherwise, false.\n\n#### Remarks\n\nThe enabled property allows controls to be enabled or disabled at run time. For example, you can disable objects that do not apply to the current state of the application. You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.\n\n### Method font\n\nGets or sets the name of the font for the control to use.\n\n    public str font([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name of the font to use, such as Tahoma or Verdana.\n\n### Method fontSize\n\nGets or sets the size of the font for the control to use.\n\n    public int fontSize([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe height of the font in points.\n\n### Method forcedToOverflow\n\n    public boolean forcedToOverflow([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method foregroundColor\n\nGets or sets the text color for the control to use.\n\n    public int foregroundColor([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer that contains a packed RGB color.\n\n#### Remarks\n\nThe integer that is returned contains a packed RGB color as follows:\n\n-   The low-order byte contains a value for the relative intensity of red.\n-   The second byte contains a value for green.\n-   The third byte contains a value for blue.\n-   The high-order byte must be zero.\n-   The maximum value for a single byte is 255.\n\n### Method formViewOption\n\n    public int formViewOption([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method hasChanged\n\nSets or returns a value that indicates whether the contents of the control have changed.\n\n    public boolean hasChanged([boolean val])\n\n#### Parameters\n\nval  \nThe value to assign as the hasChanged value for the control; optional.\n\n#### Return Value\n\ntrue if the contents of the control have changed; otherwise, false.\n\n### Method hasUserSetting\n\nIndicates whether the control has custom user settings.\n\n    public boolean hasUserSetting()\n\n#### Return Value\n\ntrue if the control has custom user settings; otherwise, false.\n\n### Method height\n\nGets or sets the height of the control.\n\n    public int height(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn Integer that indicates how the height is calculated; optional.\n\n<!-- -->\n\nmode  \nAn Integer that indicates how the height is calculated; optional.\n\n#### Return Value\n\nThe height of the control in pixels.\n\n#### Remarks\n\nExact mode is used if the value parameter is omitted.Calculate the height according to the following table:\n\n| Mode.            | Height calculation.                                                                       |\n|------------------|-------------------------------------------------------------------------------------------|\n| -1 Exact.        | The exact height in pixels of the controls is used.                                       |\n| 0 Auto.          | The height of the control is calculated automatically and the value parameter is ignored. |\n| 1 Column height. | The layout of the form determines the height of the control.                              |\n\nThe height and height calculation mode can be set separately.\n\n### Method heightMode\n\nGets or sets a calculation mode for the height of the control.\n\n    public int heightMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates how control height is calculated; optional.\n\n#### Return Value\n\nThe calculation mode.\n\n#### Remarks\n\nCalculate the height according to the following table:\n\n| Mode.          | Height Calculation.                                                                       |\n|----------------|-------------------------------------------------------------------------------------------|\n| Exact.         | The exact height in pixels of the controls is used.                                       |\n| Auto.          | The height of the control is calculated automatically and the value parameter is ignored. |\n| Column height. | The layout of the form determines the height of the control.                              |\n\nThe height of the control might change when the mode is set to auto or column height.\n\n### Method heightValue\n\nGets or sets the height of the control.\n\n    public int heightValue([int value])\n\n#### Parameters\n\nvalue  \nAn Integer that specifies the height in pixels; optional.\n\n#### Return Value\n\nThe height in pixels.\n\n#### Remarks\n\nThe height of the control is not changed unless the exact height calculation mode is used.\n\n### Method helpField\n\nRetrieves the Help text for the control.\n\n    public str helpField()\n\n#### Return Value\n\nThe Help text for the control; an empty string if there is no Help text for the control.\n\n#### Remarks\n\nThe helpField method cannot be used to set the value of the Help text. Use the helpText method to set the value of the Help text.\n\n### Method helpText\n\nGets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.\n\n    public str helpText([str value])\n\n#### Parameters\n\nvalue  \nThe value that is assigned as the Help text for the control.\n\n#### Return Value\n\nThe string to be displayed at the bottom of the screen.\n\n#### Remarks\n\nSet the HelpText property for an object by using the property sheet. The Help text must not exceed 250 characters.\n\n### Method hierarchyParent\n\nGets or sets the HierarchyParent property value of the control.\n\n    public str hierarchyParent([str value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the HierarchyParent property of the control.\n\n#### Return Value\n\nThe HierarchyParent property value of the control.\n\n### Method hWnd\n\nRetrieves the Windows handle for the control.\n\n    public int hWnd()\n\n#### Return Value\n\nThe handle for the control.\n\n#### Remarks\n\nThe handle can be used with the Windows API.\n\n### Method imageLocation\n\n    public int imageLocation([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method isContainer\n\n    public boolean isContainer()\n\n#### Return Value\n\n### Method isDisplayed\n\nRetrieves a value that indicates whether the control is displayed.\n\n    public boolean isDisplayed()\n\n#### Return Value\n\ntrue if the control is displayed; otherwise, false.\n\n#### Remarks\n\nTo modify the visible state of the control, call the visible method.\n\n### Method isRestricted\n\nRetrieves a value that indicates whether the control is restricted.\n\n    public boolean isRestricted()\n\n#### Return Value\n\ntrue if the control is restricted; otherwise, false.\n\n### Method isUserSetupEnabled\n\nRetrieves a value that indicates whether the control allows for the specified level of customization.\n\n    public boolean isUserSetupEnabled(int neededSetupRights)\n\n#### Parameters\n\nneededSetupRights  \nA value from the FormAllowUserSetup enumeration that specifies the level of customization that is being queried for the control.\n\n#### Return Value\n\ntrue if the control, design, and parent containers allow for the level of customization that is specified by the neededSetupRights parameter; otherwise, false.\n\n#### Remarks\n\nThe following table describes the values for the neededSetupRights parameter.\n\n|                                  |                                                                                                                                  |\n|----------------------------------|----------------------------------------------------------------------------------------------------------------------------------|\n| FormAllowUserSetup::No 0         | No changes can be made to the control. If this value is set for the neededSetupRights parameter, the method always returns true. |\n| FormAllowUserSetup::Restricted 1 | The user can change the editable, visible, skip, label, and width properties of the control. The user cannot move the control.   |\n| FormAllowUserSetup::Yes 2        | The user can change the editable, visible, skip, label, and width properties of the control. The user can also move the control. |\n\nFor this method to return true, the AllowUserSetup property for the design and all parent containers must allow for the level of access that is specified by the neededSetupRights parameter.\n\n### Method italic\n\n    public boolean italic([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method keyTip\n\n    public str keyTip([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method left\n\nGets or sets the horizontal position of the control in the form.\n\n    public int left(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n#### Return Value\n\nThe horizontal position of the control in the form.\n\n### Method leftMode\n\nSets the horizontal arrange mode for the control in the form.\n\n    public int leftMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n#### Return Value\n\nThe horizontal arrange mode for the control in the form.\n\n### Method leftValue\n\nGets or sets the horizontal position of the control in the form.\n\n    public int leftValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal position of the control; optional.\n\n#### Return Value\n\nThe horizontal position of the control in the form.\n\n### Method markAsUserAdd\n\nMarks or unmarks the control as a user-added control.\n\n    public boolean markAsUserAdd([boolean value])\n\n#### Parameters\n\nvalue  \nThe Boolean value that indicates whether the control should be marked as a user-added control.\n\n#### Return Value\n\ntrue if the control was marked as a user-added control; otherwise, false.\n\n### Method menufunction\n\n    public xMenuFunction menufunction()\n\n#### Return Value\n\n### Method menuItemName\n\n    public str menuItemName([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method menuItemType\n\n    public MenuItemType menuItemType([MenuItemType value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method mouseDblClick\n\nIs called when the control is double-clicked by the user.\n\n    public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned.\n\n### Method mouseDown\n\nIs called when the user clicks the mouse button over the control.\n\n    public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned. This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.\n\n### Method mouseMove\n\nIs called when the user moves the mouse pointer over the control.\n\n    public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned.\n\n### Method mouseUp\n\nIs called when the user releases the mouse button over the control area.\n\n    public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned. This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.\n\n### Method multiSelect\n\n    public int multiSelect([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \nThe name to assign to the control.\n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   It must begin with a letter.\n-   It cannot exceed 250 characters.\n-   It can include numbers and underscore (\\_) characters.\n-   It cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.\n\n### Method neededPermission\n\n    public int neededPermission([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method needsRecord\n\n    public int needsRecord([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method normalImage\n\n    public str normalImage([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method normalResource\n\n    public int normalResource([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method openMode\n\n    public int openMode([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method SysObsoleteAttribute\n\n    public container SysObsoleteAttribute()\n\n#### Return Value\n\n### Method parameters\n\nGets or sets the list of parameters that are passed to objects taht are run by the MenuFunction class.\n\n    public str parameters([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe list of parameters that are passed to the object.\n\n#### Remarks\n\nThe parameters string format is Parameter1=Value1, Parameter2=Value2, and so on.cts ignore passed, unrecognized parameters.\n\n### Method parentControl\n\nRetrieves the parent control for the control.\n\n    public FormControl parentControl()\n\n#### Return Value\n\nThe parent control for the control.\n\n### Method primary\n\n    public boolean primary([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method saveRecord\n\n    public boolean saveRecord([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method securityKey\n\nSets or returns the ID of the security key for the control.\n\n    public SecurityKeyId securityKey([SecurityKeyId value])\n\n#### Parameters\n\nvalue  \nThe ID of the security key to assign to the control; optional.\n\n#### Return Value\n\nThe ID of the security key for the control; 0 (zero) if no security key is assigned to the control.\n\n### Method sendExternalContext\n\n    public boolean sendExternalContext([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method shortkey\n\n    public int shortkey([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method showContextMenu\n\nShows the shortcut menu for the control.\n\n    public int showContextMenu(int menuHandle)\n\n#### Parameters\n\nmenuHandle  \nThe ID of the menu to show.\n\n#### Return Value\n\nAn integer value that indicates whether the call succeeded.\n\n### Method showShortCut\n\n    public boolean showShortCut([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method skip\n\nSets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.\n\n    public boolean skip([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the skip property of the control; optional.\n\n#### Return Value\n\ntrue if the control is skipped when the user presses the TAB key to move to the control; otherwise, false.\n\n#### Remarks\n\nIf the enabled property is true, the allowEdit property is false, and the skip property is true, the user cannot change the contents of the control but can still copy the contents of the control.\n\n### Method sort\n\n    public int sort([SortOrder sortDirection])\n\n#### Parameters\n\nsortDirection  \n\n#### Return Value\n\n### Method style\n\n    public int style([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method text\n\n    public str text([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method toolTip\n\nRetrieves the tooltip text for the control.\n\n    public str toolTip()\n\n#### Return Value\n\nThe tooltip text for the control; an empty string if no tooltip text has been defined for the control.\n\n#### Remarks\n\nThe method might be overridden to provide a value to the toolTip method.\n\n### Method top\n\nGets or sets the vertical position of the control in the form.\n\n    public int top(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n#### Return Value\n\nThe vertical position of the control in the form.\n\n### Method topMode\n\nSets the vertical arrange mode for the control in the form.\n\n    public int topMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n#### Return Value\n\nThe vertical arrange mode for the control in the form.\n\n### Method topValue\n\nGets or sets the vertical position of the control in the form.\n\n    public int topValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical position of the control; optional.\n\n#### Return Value\n\nThe vertical position of the control in the form.\n\n### Method type\n\n    public int type([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method underline\n\n    public boolean underline([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method SysObsoleteAttribute\n\n    public boolean SysObsoleteAttribute(container data)\n\n#### Parameters\n\ndata  \n\n#### Return Value\n\n### Method userData\n\nGets or sets the user data for the control.\n\n    public int userData([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the user data for the control; optional.\n\n#### Return Value\n\nThe user data for the control.\n\n### Method userDataItem\n\nGets or sets the user data item for the control.\n\n    public int userDataItem([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the user data item for the control; optional.\n\n#### Return Value\n\nThe user data item for the control.\n\n### Method userDataItems\n\nGets or sets the number of user data items for the control.\n\n    public int userDataItems([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the number of user data items for the control; optional.\n\n#### Return Value\n\nThe number of user data items for the control.\n\n### Method userDisable\n\nGets or sets the value that indicates whether the control is disabled for the user.\n\n    public int userDisable([int value])\n\n#### Parameters\n\nvalue  \nThe value that indicates whether the control is disabled for the user; optional.\n\n#### Return Value\n\n1 if the control is disabled for the user; otherwise, 0.\n\n### Method userHeight\n\nGets or sets the custom user height for the control.\n\n    public int userHeight([int value])\n\n#### Parameters\n\nvalue  \nThe user height for the control; optional.\n\n#### Return Value\n\nThe custom user height for the control.\n\n### Method userHide\n\nGets or sets the value that indicates whether the control is hidden from the user.\n\n    public int userHide([int value])\n\n#### Parameters\n\nvalue  \nThe value that indicates whether the control is hidden from the user; optional.\n\n#### Return Value\n\n1 if the control is hidden from the user; otherwise, 0.\n\n#### Remarks\n\nThe user specifies whether a control is hidden by right-clicking the control when it is viewable or by right-clicking another control when the original control is hidden. A right-click opens a menu that can be used to hide or display the control. This method lets you programmatically determine and set the value.\n\n### Method userOrgContainer\n\nGets or sets the organization container for the control.\n\n    public int userOrgContainer([int value])\n\n#### Parameters\n\nvalue  \nThe organization container to set for the control; optional.\n\n#### Return Value\n\nThe organization container for the control.\n\n### Method userOrgSibling\n\nGets or sets the organization sibling for the control.\n\n    public int userOrgSibling([int value])\n\n#### Parameters\n\nvalue  \nThe organization sibling to set for the control; optional.\n\n#### Return Value\n\nThe organization sibling for the control.\n\n### Method userPromptText\n\nGets or sets the user label text for the control.\n\n    public str userPromptText([str value])\n\n#### Parameters\n\nvalue  \nThe user label text to set for the control; optional.\n\n#### Return Value\n\nThe user label text for the control.\n\n### Method userSecurityLevel\n\nGets or sets the user security level for the control.\n\n    public int userSecurityLevel([int value])\n\n#### Parameters\n\nvalue  \nThe user security level to set for the control; optional.\n\n#### Return Value\n\nThe user security level for the control.\n\n### Method userSkip\n\nSets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.\n\n    public int userSkip([int value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the userSkip property; optional. The value is 1 if the user setting to skip the control is in effect; otherwise, the value is 0.\n\n#### Return Value\n\n1 if the user setting to skip the control is in effect; otherwise, 0.\n\n### Method userWidth\n\nSets or returns the width of the control in pixels.\n\n    public int userWidth([int value])\n\n#### Parameters\n\nvalue  \nThe number of pixels to use as the width of the control; optional.\n\n#### Return Value\n\nThe number of pixels that the user specified as the width of the control; 0 (zero) if the user did not specify a character width.\n\n#### Remarks\n\nThe userWidth method returns the width in pixels, based on six times the number of characters. For example, if the user has specified 30 characters as the width of the control, the return value is 6 \\* 30 = 180. To specify the width of the control in characters, users can right-click the control to open the setup form where the character specification is made.\n\n### Method value\n\n    public boolean value([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method verticalSpacing\n\nGets or sets the vertical spacing of the control in the form.\n\n    public int verticalSpacing([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the AutoMode value for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the AutoMode value for the control; optional.\n\n#### Return Value\n\nThe vertical spacing of the control in the form.\n\n### Method verticalSpacingMode\n\nSets the vertical spacing mode for the control in the form.\n\n    public AutoMode verticalSpacingMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\nThe vertical spacing mode for the control in the form.\n\n### Method verticalSpacingValue\n\nGets or sets the vertical spacing of the control in the form.\n\n    public int verticalSpacingValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical spacing of the control; optional.\n\n#### Return Value\n\nThe vertical spacing of the control in the form.\n\n### Method visible\n\nSets or returns a value that indicates whether the control is visible.\n\n    public boolean visible([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the visibility setting for the control; optional.\n\n#### Return Value\n\ntrue if the control is visible; otherwise, false.\n\n### Method width\n\nGets or sets the width of the control.\n\n    public int width(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn Integer that indicates how the width is calculated; optional.\n\n<!-- -->\n\nmode  \nAn Integer that indicates how the width is calculated; optional.\n\n#### Return Value\n\nThe width of the control in pixels.\n\n#### Remarks\n\nExact mode is used if the value parameter is omitted.Calculate the width according to the following table:\n\n| Mode.           | Width calculation.                                                                       |\n|-----------------|------------------------------------------------------------------------------------------|\n| -1 Exact.       | The exact width in pixels of the controls is used.                                       |\n| 0 Auto.         | The width of the control is calculated automatically and the value parameter is ignored. |\n| 1 Column width. | The layout of the form determines the width of the control.                              |\n\nThe width and width calculation mode can be set separately.\n\n### Method widthMode\n\nGets or sets the calculation mode of the width of the control.\n\n    public int widthMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates how control width is calculated; optional.\n\n#### Return Value\n\nAn integer value that indicates the current calculation mode.\n\n#### Remarks\n\nCalculate the width according to the following table:\n\n| Mode.         | Width Calculation.                                                                       |\n|---------------|------------------------------------------------------------------------------------------|\n| Exact.        | The exact width in pixels of the controls is used.                                       |\n| Auto.         | The width of the control is calculated automatically and the value parameter is ignored. |\n| Column width. | The layout of the form determines the width of the control.                              |\n\nThe width of the control might change when the mode is set to auto or column width.\n\n### Method widthValue\n\nGets or sets the width of the control.\n\n    public int widthValue([int value])\n\n#### Parameters\n\nvalue  \nAn Integer that specifies the width in pixels; optional.\n\n#### Return Value\n\nThe width in pixels of the control.\n\n#### Remarks\n\nTo change the width of the control, use the exact width calculation mode.\n\n### Method prefColumnSize\n\nSpecifies the preferred column width and height for the form control.\n\n    public void prefColumnSize(int width, int height)\n\n#### Parameters\n\nwidth  \nThe preferred height of the control.\n\n<!-- -->\n\nheight  \nThe preferred height of the control.\n\n### Method lostFocus\n\nIndicates that the control has lost focus.\n\n    public void lostFocus()\n\n### Method resetUserSetting\n\nResets the user settings for the control.\n\n    public void resetUserSetting()\n\n### Method context\n\nShows the shortcut menu for the control.\n\n    public void context()\n\n### Method drop\n\nRaises the drop event to indicate that a drop operation is being performed on the current control.\n\n    public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n### Method OnLostFocus\n\n    private void OnLostFocus([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method gotFocus\n\nIndicates that the control has received focus.\n\n    public void gotFocus()\n\n### Method mouseEnter\n\nIs called when the user moves the mouse pointer into the control area.\n\n    public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n### Method paste\n\nPastes the contents of the clipboard into the control.\n\n    public void paste()\n\n### Method OnGotFocus\n\n    private void OnGotFocus([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method endDrag\n\nIs called when the user has finished dragging a form control.\n\n    public void endDrag()\n\n#### Remarks\n\nThis event is not raised unless the DragDrop property is enabled for the control and a beginDrag event has already been started. To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.\n\n### Method cut\n\nCuts the contents of the control.\n\n    public void cut()\n\n### Method filter\n\n    public void filter([str filterStr])\n\n#### Parameters\n\nfilterStr  \n\n### Method displayControl\n\nDisplays the control.\n\n    public void displayControl()\n\n### Method inputSearch\n\nPerforms data filtering for the control, based on the specified string.\n\n    public void inputSearch(str searchStr)\n\n#### Parameters\n\nsearchStr  \nThe string value to use to filter data; optional.\n\n### Method copy\n\nCopies the contents of the control to the clipboard.\n\n    public void copy()\n\n### Method clicked\n\n    public void clicked()\n\n### Method OnClicked\n\n    private void OnClicked([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method dropEx\n\nRaises the dropEx event to indicate that a drop operation is being performed on the current control.\n\n    public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n### Method mouseLeave\n\nIndicates that the mouse pointer has left the control.\n\n    public void mouseLeave()\n\n### Method setFocus\n\nSets the focus on the control.\n\n    public void setFocus()\n\n### Method dragLeave\n\nRaises the dragLeave event to indicate that a mouse drag operation has left the current control.\n\n    public void dragLeave()\n\n### Method jumpRef\n\n    public void jumpRef()\n\n### Method registerOverrideMethod\n\n    public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, [Object overrideObject])\n\n#### Parameters\n\nmethodToOverride  \n\n<!-- -->\n\nobjectMethodToCall  \n\n<!-- -->\n\noverrideObject  \n\n## Class FormGridControl\n    class FormGridControl extends FormControl\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                              | Description                                                                                                                                                             |\n|---------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| public int activeBackColor(\\[int value\\])                                                                           |                                                                                                                                                                         |\n| public int activeForeColor(\\[int value\\])                                                                           |                                                                                                                                                                         |\n| public FormControl addControl(FormControlType controlType, str controlName, \\[FormControl insertAfter\\])            |                                                                                                                                                                         |\n| public FormControl addControlEx(str controlClass, str controlName, \\[FormControl insertAfter\\])                     |                                                                                                                                                                         |\n| public FormControl addDataField(int dataSourceId, FieldId fieldId, \\[FormControl insertAfter\\], \\[int arrayIndex\\]) |                                                                                                                                                                         |\n| public boolean alignControl(\\[boolean value\\])                                                                      | Determines whether to align the control.                                                                                                                                |\n| public boolean allowEdit(\\[boolean value\\])                                                                         | Determines whether the user can change the contents of the control.                                                                                                     |\n| public boolean allowSysSetup()                                                                                      | Retrieves a value that indicates whether the control is shown in the SysSetup form.                                                                                     |\n| public int alternateRowShading(\\[int value\\])                                                                       |                                                                                                                                                                         |\n| public boolean autoDataGroup(\\[boolean value\\])                                                                     |                                                                                                                                                                         |\n| public boolean autoDeclaration(\\[boolean value\\])                                                                   | Determines whether the system can declare a member variable that has the same name as the control.                                                                      |\n| public int backgroundColor(\\[int value\\])                                                                           | Gets or sets the background color of the control.                                                                                                                       |\n| public int backStyle(\\[int value\\])                                                                                 | Determiness whether the control background can be transparent.                                                                                                          |\n| public int beginDrag(int x, int y)                                                                                  | Is called when the user starts to drag a form control.                                                                                                                  |\n| public int border(\\[int value\\])                                                                                    | Gets or sets the style of the borderline of the control.                                                                                                                |\n| public int bottomMargin(\\[int value\\])                                                                              |                                                                                                                                                                         |\n| public container calcControlSize(int chars, int lines)                                                              | Retrieves the size of the control.                                                                                                                                      |\n| public boolean canAddDataField(int dataSourceId, FieldId fieldId, \\[int arrayIndex\\])                               |                                                                                                                                                                         |\n| public boolean canContain(FormControl control)                                                                      |                                                                                                                                                                         |\n| public int colorScheme(\\[int value\\])                                                                               | Gets or sets the color scheme of the control.                                                                                                                           |\n| public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])                                            | Gets or sets the configuration key that is assigned to the control.                                                                                                     |\n| public List configurationKeyEx()                                                                                    | Retrieves a list that contains the IDs of configuration keys that are in effect for the control.                                                                        |\n| public boolean contains(FormControl control)                                                                        |                                                                                                                                                                         |\n| public int controlCount()                                                                                           |                                                                                                                                                                         |\n| public FormControl controlNum(int controlNo)                                                                        |                                                                                                                                                                         |\n| public str countryRegionCodes(\\[str value\\])                                                                        | Gets or sets the comma-separated list of country/region codes for the control.                                                                                          |\n| public FieldId countryRegionContextField(\\[FieldId value\\])                                                         |                                                                                                                                                                         |\n| public str dataGroup(\\[str value\\])                                                                                 |                                                                                                                                                                         |\n| public str dataRelationPath(\\[str value\\])                                                                          | Gets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.                                           |\n| public int dataSource(\\[AnyType value\\])                                                                            | Gets or sets a data source to be used by the control or the form.                                                                                                       |\n| public str defaultAction(\\[str value\\])                                                                             |                                                                                                                                                                         |\n| public str defaultActionLabel(\\[str value\\])                                                                        |                                                                                                                                                                         |\n| public int displayTarget(\\[int value\\])                                                                             | Gets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both. |\n| public int dragDrop(\\[int value\\])                                                                                  | Determines whether to enable or disable drag-and-drop operations for the control.                                                                                       |\n| public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)                                   | Raises the dragOver event to indicate that a mouse drag operation is over the current control.                                                                          |\n| public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)                                       | Raises the dragOverEx event to indicate that a mouse drag operation is over the current control.                                                                        |\n| public str dragText()                                                                                               | Retrieves the text that is displayed when the form control is dragged.                                                                                                  |\n| public boolean enabled(\\[boolean value\\])                                                                           | Determines whether to enable or disable the object.                                                                                                                     |\n| public boolean exportAllowed(\\[boolean value\\])                                                                     |                                                                                                                                                                         |\n| public str exportLabel(\\[str value\\])                                                                               |                                                                                                                                                                         |\n| public Struct getLineData(int lineNumber)                                                                           |                                                                                                                                                                         |\n| public Struct getSelectedData()                                                                                     |                                                                                                                                                                         |\n| public boolean gridLines(\\[boolean value\\])                                                                         |                                                                                                                                                                         |\n| public int gridLinesStyle(\\[int value\\])                                                                            |                                                                                                                                                                         |\n| public str groupBy(\\[str value\\])                                                                                   |                                                                                                                                                                         |\n| public boolean hasChanged(\\[boolean val\\])                                                                          | Sets or returns a value that indicates whether the contents of the control have changed.                                                                                |\n| public boolean hasUserSetting()                                                                                     | Indicates whether the control has custom user settings.                                                                                                                 |\n| public int height(int value, \\[int mode\\])                                                                          | Gets or sets the height of the control.                                                                                                                                 |\n| public int heightMode(\\[int value\\])                                                                                | Gets or sets a calculation mode for the height of the control.                                                                                                          |\n| public int heightValue(\\[int value\\])                                                                               | Gets or sets the height of the control.                                                                                                                                 |\n| public str helpField()                                                                                              | Retrieves the Help text for the control.                                                                                                                                |\n| public str helpText(\\[str value\\])                                                                                  | Gets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.                                                                |\n| public str hierarchyParent(\\[str value\\])                                                                           | Gets or sets the HierarchyParent property value of the control.                                                                                                         |\n| public boolean highlightActive(\\[boolean value\\])                                                                   |                                                                                                                                                                         |\n| public int hWnd()                                                                                                   | Retrieves the Windows handle for the control.                                                                                                                           |\n| public boolean isContainer()                                                                                        |                                                                                                                                                                         |\n| public boolean isDisplayed()                                                                                        | Retrieves a value that indicates whether the control is displayed.                                                                                                      |\n| public boolean isRestricted()                                                                                       | Retrieves a value that indicates whether the control is restricted.                                                                                                     |\n| public boolean isUserSetupEnabled(int neededSetupRights)                                                            | Retrieves a value that indicates whether the control allows for the specified level of customization.                                                                   |\n| public boolean leave()                                                                                              |                                                                                                                                                                         |\n| public int left(int value, \\[int mode\\])                                                                            | Gets or sets the horizontal position of the control in the form.                                                                                                        |\n| public int leftMargin(\\[int value\\])                                                                                |                                                                                                                                                                         |\n| public int leftMode(\\[int value\\])                                                                                  | Sets the horizontal arrange mode for the control in the form.                                                                                                           |\n| public int leftValue(\\[int value\\])                                                                                 | Gets or sets the horizontal position of the control in the form.                                                                                                        |\n| public boolean markAsUserAdd(\\[boolean value\\])                                                                     | Marks or unmarks the control as a user-added control.                                                                                                                   |\n| public int moreRowsIndicator(\\[int value\\])                                                                         |                                                                                                                                                                         |\n| public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)                                     | Is called when the control is double-clicked by the user.                                                                                                               |\n| public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)                                         | Is called when the user clicks the mouse button over the control.                                                                                                       |\n| public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)                                         | Is called when the user moves the mouse pointer over the control.                                                                                                       |\n| public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)                                           | Is called when the user releases the mouse button over the control area.                                                                                                |\n| public int moveControl(int controlId, \\[int insertAfterId\\])                                                        |                                                                                                                                                                         |\n| public boolean multiSelect(\\[boolean value\\])                                                                       |                                                                                                                                                                         |\n| public str name(\\[str value\\])                                                                                      | Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.                                 |\n| public int neededPermission(\\[int value\\])                                                                          |                                                                                                                                                                         |\n| public container SysObsoleteAttribute()                                                                             |                                                                                                                                                                         |\n| public FormControl parentControl()                                                                                  | Retrieves the parent control for the control.                                                                                                                           |\n| public int rightMargin(\\[int value\\])                                                                               |                                                                                                                                                                         |\n| public int scrollbars(\\[int value\\])                                                                                |                                                                                                                                                                         |\n| public SecurityKeyId securityKey(\\[SecurityKeyId value\\])                                                           | Sets or returns the ID of the security key for the control.                                                                                                             |\n| public boolean showColLabels(\\[boolean value\\])                                                                     |                                                                                                                                                                         |\n| public int showContextMenu(int menuHandle)                                                                          | Shows the shortcut menu for the control.                                                                                                                                |\n| public boolean showRowLabels(\\[boolean value\\])                                                                     |                                                                                                                                                                         |\n| public boolean skip(\\[boolean value\\])                                                                              | Sets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.                                         |\n| public int sort(\\[SortOrder sortDirection\\])                                                                        |                                                                                                                                                                         |\n| public int style(\\[int value\\])                                                                                     |                                                                                                                                                                         |\n| public str toolTip()                                                                                                | Retrieves the tooltip text for the control.                                                                                                                             |\n| public int top(int value, \\[int mode\\])                                                                             | Gets or sets the vertical position of the control in the form.                                                                                                          |\n| public int topMargin(\\[int value\\])                                                                                 |                                                                                                                                                                         |\n| public int topMode(\\[int value\\])                                                                                   | Sets the vertical arrange mode for the control in the form.                                                                                                             |\n| public int topValue(\\[int value\\])                                                                                  | Gets or sets the vertical position of the control in the form.                                                                                                          |\n| public int type(\\[int value\\])                                                                                      |                                                                                                                                                                         |\n| public boolean SysObsoleteAttribute(container data)                                                                 |                                                                                                                                                                         |\n| public int userData(\\[int value\\])                                                                                  | Gets or sets the user data for the control.                                                                                                                             |\n| public int userDataItem(\\[int value\\])                                                                              | Gets or sets the user data item for the control.                                                                                                                        |\n| public int userDataItems(\\[int value\\])                                                                             | Gets or sets the number of user data items for the control.                                                                                                             |\n| public int userDisable(\\[int value\\])                                                                               | Gets or sets the value that indicates whether the control is disabled for the user.                                                                                     |\n| public int userHeight(\\[int value\\])                                                                                | Gets or sets the custom user height for the control.                                                                                                                    |\n| public int userHide(\\[int value\\])                                                                                  | Gets or sets the value that indicates whether the control is hidden from the user.                                                                                      |\n| public int userOrgContainer(\\[int value\\])                                                                          | Gets or sets the organization container for the control.                                                                                                                |\n| public int userOrgSibling(\\[int value\\])                                                                            | Gets or sets the organization sibling for the control.                                                                                                                  |\n| public str userPromptText(\\[str value\\])                                                                            | Gets or sets the user label text for the control.                                                                                                                       |\n| public int userSecurityLevel(\\[int value\\])                                                                         | Gets or sets the user security level for the control.                                                                                                                   |\n| public int userSkip(\\[int value\\])                                                                                  | Sets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.                    |\n| public int userWidth(\\[int value\\])                                                                                 | Sets or returns the width of the control in pixels.                                                                                                                     |\n| public boolean useUserLayout(\\[boolean value\\])                                                                     |                                                                                                                                                                         |\n| public int verticalSpacing(\\[int value\\], \\[AutoMode mode\\])                                                        | Gets or sets the vertical spacing of the control in the form.                                                                                                           |\n| public AutoMode verticalSpacingMode(\\[AutoMode mode\\])                                                              | Sets the vertical spacing mode for the control in the form.                                                                                                             |\n| public int verticalSpacingValue(\\[int value\\])                                                                      | Gets or sets the vertical spacing of the control in the form.                                                                                                           |\n| public boolean visible(\\[boolean value\\])                                                                           | Sets or returns a value that indicates whether the control is visible.                                                                                                  |\n| public int visibleCols(\\[int value\\], \\[AutoMode mode\\])                                                            |                                                                                                                                                                         |\n| public AutoMode visibleColsMode(\\[AutoMode mode\\])                                                                  |                                                                                                                                                                         |\n| public int visibleColsValue(\\[int value\\])                                                                          |                                                                                                                                                                         |\n| public int visibleRows(\\[int value\\], \\[AutoMode mode\\])                                                            |                                                                                                                                                                         |\n| public AutoMode visibleRowsMode(\\[AutoMode mode\\])                                                                  |                                                                                                                                                                         |\n| public int visibleRowsValue(\\[int value\\])                                                                          |                                                                                                                                                                         |\n| public int width(int value, \\[int mode\\])                                                                           | Gets or sets the width of the control.                                                                                                                                  |\n| public int widthMode(\\[int value\\])                                                                                 | Gets or sets the calculation mode of the width of the control.                                                                                                          |\n| public int widthValue(\\[int value\\])                                                                                | Gets or sets the width of the control.                                                                                                                                  |\n| public void cut()                                                                                                   | Cuts the contents of the control.                                                                                                                                       |\n| public void applyQuickFilter(\\[int controlId\\], \\[str filterValue\\])                                                |                                                                                                                                                                         |\n| public void autoSizeColumns(\\[boolean autoSizeColumns\\])                                                            |                                                                                                                                                                         |\n| public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)                                           | Raises the drop event to indicate that a drop operation is being performed on the current control.                                                                      |\n| public void context()                                                                                               | Shows the shortcut menu for the control.                                                                                                                                |\n| public void jumpRef()                                                                                               |                                                                                                                                                                         |\n| private void OnLookup(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                           |                                                                                                                                                                         |\n| private void OnLostFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                        |                                                                                                                                                                         |\n| public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, \\[Object overrideObject\\])         |                                                                                                                                                                         |\n| public void copy()                                                                                                  | Copies the contents of the control to the clipboard.                                                                                                                    |\n| public void enter()                                                                                                 |                                                                                                                                                                         |\n| public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)                                       | Is called when the user moves the mouse pointer into the control area.                                                                                                  |\n| public void displayControl()                                                                                        | Displays the control.                                                                                                                                                   |\n| private void OnLeaving(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                          |                                                                                                                                                                         |\n| public void paste()                                                                                                 | Pastes the contents of the clipboard into the control.                                                                                                                  |\n| public void resetUserSetting()                                                                                      | Resets the user settings for the control.                                                                                                                               |\n| public void quickFilterProvider(\\[GridQuickFilterProvider quickFilterProvider\\])                                    |                                                                                                                                                                         |\n| public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)                                               | Raises the dropEx event to indicate that a drop operation is being performed on the current control.                                                                    |\n| private void OnEnter(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                            |                                                                                                                                                                         |\n| public void inputSearch(str searchStr)                                                                              | Performs data filtering for the control, based on the specified string.                                                                                                 |\n| public void filter(\\[str filterStr\\])                                                                               |                                                                                                                                                                         |\n| public void prefColumnSize(int width, int height)                                                                   | Specifies the preferred column width and height for the form control.                                                                                                   |\n| public void dragLeave()                                                                                             | Raises the dragLeave event to indicate that a mouse drag operation has left the current control.                                                                        |\n| private void OnGotFocus(\\[FormControl sender\\], \\[FormControlEventArgs e\\])                                         |                                                                                                                                                                         |\n| public void lostFocus()                                                                                             | Indicates that the control has lost focus.                                                                                                                              |\n| public void endDrag()                                                                                               | Is called when the user has finished dragging a form control.                                                                                                           |\n| public void arrange()                                                                                               |                                                                                                                                                                         |\n| public void gotFocus()                                                                                              | Indicates that the control has received focus.                                                                                                                          |\n| public void mouseLeave()                                                                                            | Indicates that the mouse pointer has left the control.                                                                                                                  |\n| public void setFocus()                                                                                              | Sets the focus on the control.                                                                                                                                          |\n\n### Method activeBackColor\n\n    public int activeBackColor([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method activeForeColor\n\n    public int activeForeColor([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method addControl\n\n    public FormControl addControl(FormControlType controlType, str controlName, [FormControl insertAfter])\n\n#### Parameters\n\ncontrolType  \n\n<!-- -->\n\ncontrolName  \n\n<!-- -->\n\ninsertAfter  \n\n#### Return Value\n\n### Method addControlEx\n\n    public FormControl addControlEx(str controlClass, str controlName, [FormControl insertAfter])\n\n#### Parameters\n\ncontrolClass  \n\n<!-- -->\n\ncontrolName  \n\n<!-- -->\n\ninsertAfter  \n\n#### Return Value\n\n### Method addDataField\n\n    public FormControl addDataField(int dataSourceId, FieldId fieldId, [FormControl insertAfter], [int arrayIndex])\n\n#### Parameters\n\ndataSourceId  \n\n<!-- -->\n\nfieldId  \n\n<!-- -->\n\ninsertAfter  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method alignControl\n\nDetermines whether to align the control.\n\n    public boolean alignControl([boolean value])\n\n#### Parameters\n\nvalue  \nThe new value for the property; optional.\n\n#### Return Value\n\ntrue if the control should be aligned; otherwise, false.\n\n#### Remarks\n\nThe upper-left corner of the control is aligned according to the longest label.\n\n### Method allowEdit\n\nDetermines whether the user can change the contents of the control.\n\n    public boolean allowEdit([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the allowEdit property.\n\n#### Return Value\n\ntrue if the control can be edited; otherwise, false.\n\n#### Remarks\n\nWhen this property is set on a container control, modifications are disabled or enabled for all controls within the container.\n\n### Method allowSysSetup\n\nRetrieves a value that indicates whether the control is shown in the SysSetup form.\n\n    public boolean allowSysSetup()\n\n#### Return Value\n\ntrue if the control is shown in the SysSetup form; otherwise, false.\n\n### Method alternateRowShading\n\n    public int alternateRowShading([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method autoDataGroup\n\n    public boolean autoDataGroup([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method autoDeclaration\n\nDetermines whether the system can declare a member variable that has the same name as the control.\n\n    public boolean autoDeclaration([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the property; optional.\n\n#### Return Value\n\ntrue if the member variable can be declared for this control; otherwise, false.\n\n#### Remarks\n\nControls cannot have identical names.\n\n### Method backgroundColor\n\nGets or sets the background color of the control.\n\n    public int backgroundColor([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer that contains a packed RGB color.\n\n#### Remarks\n\nThe integer that is returned contains a packed RGB color as follows:\n\n-   The low-order byte contains a value for the relative intensity of red.\n-   The second byte contains a value for green.\n-   The third byte contains a value for blue.\n-   The high-order byte must be zero.\n-   The maximum value for a single byte is 255.\n\n### Method backStyle\n\nDeterminess whether the control background can be transparent.\n\n    public int backStyle([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n1 if the control background can be transparent; otherwise, 0.\n\n### Method beginDrag\n\nIs called when the user starts to drag a form control.\n\n    public int beginDrag(int x, int y)\n\n#### Parameters\n\nx  \nAn integer value that indicates the y-coordinate of the mouse pointer. The coordinate is relative to the upper-left corner of the control.\n\n<!-- -->\n\ny  \nAn integer value that indicates the y-coordinate of the mouse pointer. The coordinate is relative to the upper-left corner of the control.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nThis event is not raised unless the DragDrop property is enabled for the control. To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.\n\n### Method border\n\nGets or sets the style of the borderline of the control.\n\n    public int border([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer between zero and four, inclusive.\n\n#### Remarks\n\nThe integer that is returned contains the style of the borderline of the control as follows:\n\n| Value. | Description. |\n|--------|--------------|\n| 0      | Auto.        |\n| 1      | 3D.          |\n| 2      | Single line. |\n| 3      | Flat.        |\n| 4      | None.        |\n\n### Method bottomMargin\n\n    public int bottomMargin([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method calcControlSize\n\nRetrieves the size of the control.\n\n    public container calcControlSize(int chars, int lines)\n\n#### Parameters\n\nchars  \nThe number of lines to use to determine the height.\n\n<!-- -->\n\nlines  \nThe number of lines to use to determine the height.\n\n#### Return Value\n\nThe container that holds the width and height.\n\n### Method canAddDataField\n\n    public boolean canAddDataField(int dataSourceId, FieldId fieldId, [int arrayIndex])\n\n#### Parameters\n\ndataSourceId  \n\n<!-- -->\n\nfieldId  \n\n<!-- -->\n\narrayIndex  \n\n#### Return Value\n\n### Method canContain\n\n    public boolean canContain(FormControl control)\n\n#### Parameters\n\ncontrol  \n\n#### Return Value\n\n### Method colorScheme\n\nGets or sets the color scheme of the control.\n\n    public int colorScheme([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nAn integer between zero and two, inclusive.\n\n#### Remarks\n\nThe color scheme is defined according to the following table:\n\n| Value. | Style.                        |\n|--------|-------------------------------|\n| 0      | Default.                      |\n| 1      | The MicrosoftWindows palette. |\n| 2      | The true-color scheme.        |\n\n### Method configurationKey\n\nGets or sets the configuration key that is assigned to the control.\n\n    public ConfigurationKeyId configurationKey([ConfigurationKeyId value])\n\n#### Parameters\n\nvalue  \nThe ID of the configuration key to assign to the control; optional.\n\n#### Return Value\n\nThe identifier of the configuration key that is assigned to the control.\n\n#### Remarks\n\nThe configuration key is used to determine whether this control can be displayed. If the configuration key is disabled in the system, the control is not displayed in the form.\n\n### Method configurationKeyEx\n\nRetrieves a list that contains the IDs of configuration keys that are in effect for the control.\n\n    public List configurationKeyEx()\n\n#### Return Value\n\nA list that contains the IDs of configuration keys that are in effect for the control.\n\n#### Remarks\n\nThe returned list does not contain duplicate IDs. If the control is bound to a data source, the returned list of configuration key IDs also includes the configuration key ID for the table and field. The returned list also contains any configuration key IDs that are applied to the properties, extended data type, or enumType methods.\n\n### Method contains\n\n    public boolean contains(FormControl control)\n\n#### Parameters\n\ncontrol  \n\n#### Return Value\n\n### Method controlCount\n\n    public int controlCount()\n\n#### Return Value\n\n### Method controlNum\n\n    public FormControl controlNum(int controlNo)\n\n#### Parameters\n\ncontrolNo  \n\n#### Return Value\n\n### Method countryRegionCodes\n\nGets or sets the comma-separated list of country/region codes for the control.\n\n    public str countryRegionCodes([str value])\n\n#### Parameters\n\nvalue  \nThe string that contains the country/region codes to set; optional.\n\n#### Return Value\n\nThe comma-separated list of country/region codes for the control.\n\n### Method countryRegionContextField\n\n    public FieldId countryRegionContextField([FieldId value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataGroup\n\n    public str dataGroup([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataRelationPath\n\nGets or sets the period-delimited list of relations that links the field binding of the DataField object to a relative table.\n\n    public str dataRelationPath([str value])\n\n#### Parameters\n\nvalue  \nThe string that contains the period-delimited list of relations; optional.\n\n#### Return Value\n\nThe period-delimited list of relations that links the field binding of the DataField object to a relative table.\n\n#### Remarks\n\nThis method is used by the reference group control to track exactly which relations produce the replacement field that is used. It enables the reference group control to bind consistently to the controls that it contains.\n\n### Method dataSource\n\nGets or sets a data source to be used by the control or the form.\n\n    public int dataSource([AnyType value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe identifier of the data source that must be used.\n\n### Method defaultAction\n\n    public str defaultAction([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method defaultActionLabel\n\n    public str defaultActionLabel([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method displayTarget\n\nGets or sets the value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise PortaDynamics 365 for Operationssoft Dynamics 365 for Operations, or in both.\n\n    public int displayTarget([int value])\n\n#### Parameters\n\nvalue  \nThe integer value that indicates where the control is displayed; optional.\n\n#### Return Value\n\nThe value that indicates whether the control is displayed in the Microsoft Dynamics 365 for Operations5 for Operations client, in Enterprise Portal, or in both.\n\n### Method dragDrop\n\nDetermines whether to enable or disable drag-and-drop operations for the control.\n\n    public int dragDrop([int value])\n\n#### Parameters\n\nvalue  \nAn integer that indicates whether drag-and-drop behavior is enabled; optional.\n\n#### Return Value\n\n1 if drag-and-drop operations are enabled; otherwise, false.\n\n#### Remarks\n\nUse the dragLeave Method, dragOver Method, and dragOverEx Method methods to specify the behavior.\n\n### Method dragOver\n\nRaises the dragOver event to indicate that a mouse drag operation is over the current control.\n\n    public FormDrag dragOver(FormControl dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n#### Return Value\n\nA FormDrag enumeration value that indicates the mode of dragging.\n\n### Method dragOverEx\n\nRaises the dragOverEx event to indicate that a mouse drag operation is over the current control.\n\n    public FormDrag dragOverEx(Array dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n#### Return Value\n\nA FormDrag enumeration value that indicates the mode of dragging.\n\n### Method dragText\n\nRetrieves the text that is displayed when the form control is dragged.\n\n    public str dragText()\n\n#### Return Value\n\nThe text that is displayed when the control is dragged; an empty string if there is no text to display when the control is dragged.\n\n### Method enabled\n\nDetermines whether to enable or disable the object.\n\n    public boolean enabled([boolean value])\n\n#### Parameters\n\nvalue  \nA Boolean value that indicates whether the control is enabled; optional.\n\n#### Return Value\n\ntrue if the object is enabled; otherwise, false.\n\n#### Remarks\n\nThe enabled property allows controls to be enabled or disabled at run time. For example, you can disable objects that do not apply to the current state of the application. You can also disable a control that is used only for display purposes, such as an error message, which provides read-only information.\n\n### Method exportAllowed\n\n    public boolean exportAllowed([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method exportLabel\n\n    public str exportLabel([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method getLineData\n\n    public Struct getLineData(int lineNumber)\n\n#### Parameters\n\nlineNumber  \n\n#### Return Value\n\n### Method getSelectedData\n\n    public Struct getSelectedData()\n\n#### Return Value\n\n### Method gridLines\n\n    public boolean gridLines([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method gridLinesStyle\n\n    public int gridLinesStyle([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method groupBy\n\n    public str groupBy([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method hasChanged\n\nSets or returns a value that indicates whether the contents of the control have changed.\n\n    public boolean hasChanged([boolean val])\n\n#### Parameters\n\nval  \nThe value to assign as the hasChanged value for the control; optional.\n\n#### Return Value\n\ntrue if the contents of the control have changed; otherwise, false.\n\n### Method hasUserSetting\n\nIndicates whether the control has custom user settings.\n\n    public boolean hasUserSetting()\n\n#### Return Value\n\ntrue if the control has custom user settings; otherwise, false.\n\n### Method height\n\nGets or sets the height of the control.\n\n    public int height(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn integer that indicates how the height is calculated; optional.\n\n<!-- -->\n\nmode  \nAn integer that indicates how the height is calculated; optional.\n\n#### Return Value\n\nThe height of the control in pixels.\n\n#### Remarks\n\nExact mode is used if the value parameter is omitted.Calculate the height according to the following table:\n\n| Mode.            | Height calculation.                                                                       |\n|------------------|-------------------------------------------------------------------------------------------|\n| -1 Exact.        | The exact height in pixels of the controls is used.                                       |\n| 0 Auto.          | The height of the control is calculated automatically and the value parameter is ignored. |\n| 1 Column height. | The layout of the form determines the height of the control.                              |\n\nThe height and height calculation mode can be set separately.\n\n### Method heightMode\n\nGets or sets a calculation mode for the height of the control.\n\n    public int heightMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates how control height is calculated; optional.\n\n#### Return Value\n\nThe calculation mode.\n\n#### Remarks\n\nCalculate the height according to the following table:\n\n| Mode.          | Height Calculation.                                                                       |\n|----------------|-------------------------------------------------------------------------------------------|\n| Exact.         | The exact height in pixels of the controls is used.                                       |\n| Auto.          | The height of the control is calculated automatically and the value parameter is ignored. |\n| Column height. | The layout of the form determines the height of the control.                              |\n\nThe height of the control might change when the mode is set to auto or column height.\n\n### Method heightValue\n\nGets or sets the height of the control.\n\n    public int heightValue([int value])\n\n#### Parameters\n\nvalue  \nAn Integer that specifies the height in pixels; optional.\n\n#### Return Value\n\nThe height in pixels.\n\n#### Remarks\n\nThe height of the control is not changed unless the exact height calculation mode is used.\n\n### Method helpField\n\nRetrieves the Help text for the control.\n\n    public str helpField()\n\n#### Return Value\n\nThe Help text for the control; an empty string if there is no Help text for the control.\n\n#### Remarks\n\nThe helpField method cannot be used to set the value of the Help text. Use the helpText method to set the value of the Help text.\n\n### Method helpText\n\nGets or sets the Help text to display at the bottom of the screen when a field or control is pointed to.\n\n    public str helpText([str value])\n\n#### Parameters\n\nvalue  \nThe value that is assigned as the Help text for the control.\n\n#### Return Value\n\nThe string to be displayed at the bottom of the screen.\n\n#### Remarks\n\nSet the HelpText property for an object by using the property sheet. The Help text must not exceed 250 characters.\n\n### Method hierarchyParent\n\nGets or sets the HierarchyParent property value of the control.\n\n    public str hierarchyParent([str value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the HierarchyParent property of the control.\n\n#### Return Value\n\nThe HierarchyParent property value of the control.\n\n### Method highlightActive\n\n    public boolean highlightActive([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method hWnd\n\nRetrieves the Windows handle for the control.\n\n    public int hWnd()\n\n#### Return Value\n\nThe handle for the control.\n\n#### Remarks\n\nThe handle can be used with the Windows API.\n\n### Method isContainer\n\n    public boolean isContainer()\n\n#### Return Value\n\n### Method isDisplayed\n\nRetrieves a value that indicates whether the control is displayed.\n\n    public boolean isDisplayed()\n\n#### Return Value\n\ntrue if the control is displayed; otherwise, false.\n\n#### Remarks\n\nTo modify the visible state of the control, call the visible method.\n\n### Method isRestricted\n\nRetrieves a value that indicates whether the control is restricted.\n\n    public boolean isRestricted()\n\n#### Return Value\n\ntrue if the control is restricted; otherwise, false.\n\n### Method isUserSetupEnabled\n\nRetrieves a value that indicates whether the control allows for the specified level of customization.\n\n    public boolean isUserSetupEnabled(int neededSetupRights)\n\n#### Parameters\n\nneededSetupRights  \nA value from the FormAllowUserSetup enumeration that specifies the level of customization that is being queried for the control.\n\n#### Return Value\n\ntrue if the control, design, and parent containers allow for the level of customization that is specified by the neededSetupRights parameter; otherwise, false. For this method to return true, the AllowUserSetup property for the design and all parent containers must allow for the level of access that is specified by the neededSetupRights parameter.\n\n#### Remarks\n\nThe following table describes the values for the neededSetupRights parameter.\n\n|                                  |                                                                                                                                  |\n|----------------------------------|----------------------------------------------------------------------------------------------------------------------------------|\n| FormAllowUserSetup::No 0         | No changes can be made to the control. If this value is set for the neededSetupRights parameter, the method always returns true. |\n| FormAllowUserSetup::Restricted 1 | The user can change the editable, visible, skip, label, and width properties of the control. The user cannot move the control.   |\n| FormAllowUserSetup::Yes 2        | The user can change the editable, visible, skip, label, and width properties of the control. The user can also move the control. |\n\n### Method leave\n\n    public boolean leave()\n\n#### Return Value\n\n### Method left\n\nGets or sets the horizontal position of the control in the form.\n\n    public int left(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n#### Return Value\n\nThe horizontal position of the control in the form.\n\n### Method leftMargin\n\n    public int leftMargin([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method leftMode\n\nSets the horizontal arrange mode for the control in the form.\n\n    public int leftMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal arrange mode for the control; optional.\n\n#### Return Value\n\nThe horizontal arrange mode for the control in the form.\n\n### Method leftValue\n\nGets or sets the horizontal position of the control in the form.\n\n    public int leftValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the horizontal position of the control; optional.\n\n#### Return Value\n\nThe horizontal position of the control in the form.\n\n### Method markAsUserAdd\n\nMarks or unmarks the control as a user-added control.\n\n    public boolean markAsUserAdd([boolean value])\n\n#### Parameters\n\nvalue  \nThe Boolean value that indicates whether the control should be marked as a user-added control.\n\n#### Return Value\n\ntrue if the control was marked as a user-added control; otherwise, false.\n\n### Method moreRowsIndicator\n\n    public int moreRowsIndicator([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method mouseDblClick\n\nIs called when the control is double-clicked by the user.\n\n    public int mouseDblClick(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned.\n\n### Method mouseDown\n\nIs called when the user clicks the mouse button over the control.\n\n    public int mouseDown(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned. This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.\n\n### Method mouseMove\n\nIs called when the user moves the mouse pointer over the control.\n\n    public int mouseMove(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned.\n\n### Method mouseUp\n\nIs called when the user releases the mouse button over the control area.\n\n    public int mouseUp(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n#### Return Value\n\n0 (zero) if the event has been handled.\n\n#### Remarks\n\nTypically, when this method is overridden, the return value from a call to the super method is returned. This event is called only if a value is specified for the label of the control and the ShowLabel property of the control is set to Yes.\n\n### Method moveControl\n\n    public int moveControl(int controlId, [int insertAfterId])\n\n#### Parameters\n\ncontrolId  \n\n<!-- -->\n\ninsertAfterId  \n\n#### Return Value\n\n### Method multiSelect\n\n    public boolean multiSelect([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics 365 for Operations5 for Operations application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \nThe name to assign to the control.\n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   It must begin with a letter.\n-   It cannot exceed 250 characters.\n-   It can include numbers and underscore (\\_) characters.\n-   It cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, or classes.\n\n### Method neededPermission\n\n    public int neededPermission([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method SysObsoleteAttribute\n\n    public container SysObsoleteAttribute()\n\n#### Return Value\n\n### Method parentControl\n\nRetrieves the parent control for the control.\n\n    public FormControl parentControl()\n\n#### Return Value\n\nThe parent control for the control.\n\n### Method rightMargin\n\n    public int rightMargin([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method scrollbars\n\n    public int scrollbars([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method securityKey\n\nSets or returns the ID of the security key for the control.\n\n    public SecurityKeyId securityKey([SecurityKeyId value])\n\n#### Parameters\n\nvalue  \nThe ID of the security key to assign to the control; optional.\n\n#### Return Value\n\nThe ID of the security key for the control; 0 (zero) if no security key is assigned to the control.\n\n### Method showColLabels\n\n    public boolean showColLabels([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method showContextMenu\n\nShows the shortcut menu for the control.\n\n    public int showContextMenu(int menuHandle)\n\n#### Parameters\n\nmenuHandle  \nThe ID of the menu to show.\n\n#### Return Value\n\nAn integer value that indicates whether the call succeeded.\n\n### Method showRowLabels\n\n    public boolean showRowLabels([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method skip\n\nSets or returns a value that indicates whether the control is skipped when the user presses the TAB key to move to the control.\n\n    public boolean skip([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the skip property of the control; optional.\n\n#### Return Value\n\ntrue if the control is skipped when the user presses the TAB key to move to the control; otherwise, false.\n\n### Method sort\n\n    public int sort([SortOrder sortDirection])\n\n#### Parameters\n\nsortDirection  \n\n#### Return Value\n\n### Method style\n\n    public int style([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method toolTip\n\nRetrieves the tooltip text for the control.\n\n    public str toolTip()\n\n#### Return Value\n\nThe tooltip text for the control; an empty string if no tooltip text has been defined for the control.\n\n#### Remarks\n\nThe method might be overridden to provide a value to the toolTip method.\n\n### Method top\n\nGets or sets the vertical position of the control in the form.\n\n    public int top(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n#### Return Value\n\nThe vertical position of the control in the form.\n\n### Method topMargin\n\n    public int topMargin([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method topMode\n\nSets the vertical arrange mode for the control in the form.\n\n    public int topMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical arrange mode for the control; optional.\n\n#### Return Value\n\nThe vertical arrange mode for the control in the form.\n\n### Method topValue\n\nGets or sets the vertical position of the control in the form.\n\n    public int topValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical position of the control; optional.\n\n#### Return Value\n\nThe vertical position of the control in the form.\n\n### Method type\n\n    public int type([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method SysObsoleteAttribute\n\n    public boolean SysObsoleteAttribute(container data)\n\n#### Parameters\n\ndata  \n\n#### Return Value\n\n### Method userData\n\nGets or sets the user data for the control.\n\n    public int userData([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the user data for the control; optional.\n\n#### Return Value\n\nThe user data for the control.\n\n### Method userDataItem\n\nGets or sets the user data item for the control.\n\n    public int userDataItem([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the user data item for the control; optional.\n\n#### Return Value\n\nThe user data item for the control.\n\n### Method userDataItems\n\nGets or sets the number of user data items for the control.\n\n    public int userDataItems([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the number of user data items for the control; optional.\n\n#### Return Value\n\nThe number of user data items for the control.\n\n### Method userDisable\n\nGets or sets the value that indicates whether the control is disabled for the user.\n\n    public int userDisable([int value])\n\n#### Parameters\n\nvalue  \nThe value that indicates whether the control is disabled for the user; optional.\n\n#### Return Value\n\n1 if the control is disabled for the user; otherwise, 0.\n\n### Method userHeight\n\nGets or sets the custom user height for the control.\n\n    public int userHeight([int value])\n\n#### Parameters\n\nvalue  \nThe user height for the control; optional.\n\n#### Return Value\n\nThe custom user height for the control.\n\n### Method userHide\n\nGets or sets the value that indicates whether the control is hidden from the user.\n\n    public int userHide([int value])\n\n#### Parameters\n\nvalue  \nThe value that indicates whether the control is hidden from the user; optional.\n\n#### Return Value\n\n1 if the control is hidden from the user; otherwise, 0.\n\n#### Remarks\n\nThe user specifies whether a control is hidden by right-clicking the control when it is viewable or by right-clicking another control when the original control is hidden. A right-click opens a menu that can be used to hide or display the control. This method lets you programmatically determine and set the value.\n\n### Method userOrgContainer\n\nGets or sets the organization container for the control.\n\n    public int userOrgContainer([int value])\n\n#### Parameters\n\nvalue  \nThe organization container to set for the control; optional.\n\n#### Return Value\n\nThe organization container for the control.\n\n### Method userOrgSibling\n\nGets or sets the organization sibling for the control.\n\n    public int userOrgSibling([int value])\n\n#### Parameters\n\nvalue  \nThe organization sibling to set for the control; optional.\n\n#### Return Value\n\nThe organization sibling for the control.\n\n### Method userPromptText\n\nGets or sets the user label text for the control.\n\n    public str userPromptText([str value])\n\n#### Parameters\n\nvalue  \nThe user label text to set for the control; optional.\n\n#### Return Value\n\nThe user label text for the control.\n\n### Method userSecurityLevel\n\nGets or sets the user security level for the control.\n\n    public int userSecurityLevel([int value])\n\n#### Parameters\n\nvalue  \nThe user security level to set for the control; optional.\n\n#### Return Value\n\nThe user security level for the control.\n\n### Method userSkip\n\nSets or returns the value that indicates whether the form control is skipped when the user presses the TAB key to navigate the controls in the form.\n\n    public int userSkip([int value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the userSkip property; optional. The value is 1 if the user setting to skip the control is in effect; otherwise, the value is 0.\n\n#### Return Value\n\n1 if the user setting to skip the control is in effect; otherwise, 0.\n\n### Method userWidth\n\nSets or returns the width of the control in pixels.\n\n    public int userWidth([int value])\n\n#### Parameters\n\nvalue  \nThe number of pixels to use as the width of the control; optional.\n\n#### Return Value\n\nThe number of pixels that the user specified as the width of the control; 0 (zero) if the user did not specify a character width.\n\n#### Remarks\n\nThe userWidth method returns the width in pixels, based on six times the number of characters. For example, if the user has specified 30 characters as the width of the control, the return value is 6 \\* 30 = 180. To specify the width of the control in characters, users can right-click the control to open the setup form where the character specification is made.\n\n### Method useUserLayout\n\n    public boolean useUserLayout([boolean value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method verticalSpacing\n\nGets or sets the vertical spacing of the control in the form.\n\n    public int verticalSpacing([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the AutoMode value for the control; optional.\n\n<!-- -->\n\nmode  \nAn integer value that indicates the AutoMode value for the control; optional.\n\n#### Return Value\n\nThe vertical spacing of the control in the form.\n\n### Method verticalSpacingMode\n\nSets the vertical spacing mode for the control in the form.\n\n    public AutoMode verticalSpacingMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\nThe vertical spacing mode for the control in the form.\n\n### Method verticalSpacingValue\n\nGets or sets the vertical spacing of the control in the form.\n\n    public int verticalSpacingValue([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates the vertical spacing of the control; optional.\n\n#### Return Value\n\nThe vertical spacing of the control in the form.\n\n### Method visible\n\nSets or returns a value that indicates whether the control is visible.\n\n    public boolean visible([boolean value])\n\n#### Parameters\n\nvalue  \nThe value to assign to the visibility setting for the control; optional.\n\n#### Return Value\n\ntrue if the control is visible; otherwise, false.\n\n### Method visibleCols\n\n    public int visibleCols([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\n### Method visibleColsMode\n\n    public AutoMode visibleColsMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method visibleColsValue\n\n    public int visibleColsValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method visibleRows\n\n    public int visibleRows([int value], [AutoMode mode])\n\n#### Parameters\n\nvalue  \n\n<!-- -->\n\nmode  \n\n#### Return Value\n\n### Method visibleRowsMode\n\n    public AutoMode visibleRowsMode([AutoMode mode])\n\n#### Parameters\n\nmode  \n\n#### Return Value\n\n### Method visibleRowsValue\n\n    public int visibleRowsValue([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method width\n\nGets or sets the width of the control.\n\n    public int width(int value, [int mode])\n\n#### Parameters\n\nvalue  \nAn Integer that indicates how the width is calculated; optional.\n\n<!-- -->\n\nmode  \nAn Integer that indicates how the width is calculated; optional.\n\n#### Return Value\n\nThe width of the control in pixels.\n\n#### Remarks\n\nExact mode is used if the value parameter is omitted. Calculate the width according to the following table:\n\n| Mode.           | Width calculation.                                                                       |\n|-----------------|------------------------------------------------------------------------------------------|\n| -1 Exact.       | The exact width in pixels of the controls is used.                                       |\n| 0 Auto.         | The width of the control is calculated automatically and the value parameter is ignored. |\n| 1 Column width. | The layout of the form determines the width of the control.                              |\n\nThe width and width calculation mode can be set separately.\n\n### Method widthMode\n\nGets or sets the calculation mode of the width of the control.\n\n    public int widthMode([int value])\n\n#### Parameters\n\nvalue  \nAn integer value that indicates how control width is calculated; optional.\n\n#### Return Value\n\nAn integer value that indicates the current calculation mode.\n\n#### Remarks\n\nCalculate the width according to the following table:\n\n| Mode.         | Width Calculation.                                                                       |\n|---------------|------------------------------------------------------------------------------------------|\n| Exact.        | The exact width in pixels of the controls is used.                                       |\n| Auto.         | The width of the control is calculated automatically and the value parameter is ignored. |\n| Column width. | The layout of the form determines the width of the control.                              |\n\nThe width of the control might change when the mode is set to auto or column width.\n\n### Method widthValue\n\nGets or sets the width of the control.\n\n    public int widthValue([int value])\n\n#### Parameters\n\nvalue  \nAn Integer that specifies the width in pixels; optional.\n\n#### Return Value\n\nThe width in pixels of the control.\n\n#### Remarks\n\nTo change the width of the control, use the exact width calculation mode.\n\n### Method cut\n\nCuts the contents of the control.\n\n    public void cut()\n\n### Method applyQuickFilter\n\n    public void applyQuickFilter([int controlId], [str filterValue])\n\n#### Parameters\n\ncontrolId  \n\n<!-- -->\n\nfilterValue  \n\n### Method autoSizeColumns\n\n    public void autoSizeColumns([boolean autoSizeColumns])\n\n#### Parameters\n\nautoSizeColumns  \n\n### Method drop\n\nRaises the drop event to indicate that a drop operation is being performed on the current control.\n\n    public void drop(FormControl dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n### Method context\n\nShows the shortcut menu for the control.\n\n    public void context()\n\n### Method jumpRef\n\n    public void jumpRef()\n\n### Method OnLookup\n\n    private void OnLookup([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method OnLostFocus\n\n    private void OnLostFocus([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method registerOverrideMethod\n\n    public void registerOverrideMethod(str methodToOverride, str objectMethodToCall, [Object overrideObject])\n\n#### Parameters\n\nmethodToOverride  \n\n<!-- -->\n\nobjectMethodToCall  \n\n<!-- -->\n\noverrideObject  \n\n### Method copy\n\nCopies the contents of the control to the clipboard.\n\n    public void copy()\n\n### Method enter\n\n    public void enter()\n\n### Method mouseEnter\n\nIs called when the user moves the mouse pointer into the control area.\n\n    public void mouseEnter(int x, int y, int button, boolean Ctrl, boolean Shift)\n\n#### Parameters\n\nx  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\ny  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nbutton  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nCtrl  \nA Boolean value that indicates whether the SHIFT key is down.\n\n<!-- -->\n\nShift  \nA Boolean value that indicates whether the SHIFT key is down.\n\n### Method displayControl\n\nDisplays the control.\n\n    public void displayControl()\n\n### Method OnLeaving\n\n    private void OnLeaving([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method paste\n\nPastes the contents of the clipboard into the control.\n\n    public void paste()\n\n### Method resetUserSetting\n\nResets the user settings for the control.\n\n    public void resetUserSetting()\n\n### Method quickFilterProvider\n\n    public void quickFilterProvider([GridQuickFilterProvider quickFilterProvider])\n\n#### Parameters\n\nquickFilterProvider  \n\n### Method dropEx\n\nRaises the dropEx event to indicate that a drop operation is being performed on the current control.\n\n    public void dropEx(Array dragSource, FormDrag dragMode, int x, int y)\n\n#### Parameters\n\ndragSource  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ndragMode  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\nx  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n<!-- -->\n\ny  \nAn integer value that indicates the vertical client coordinate of the mouse position.\n\n### Method OnEnter\n\n    private void OnEnter([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method inputSearch\n\nPerforms data filtering for the control, based on the specified string.\n\n    public void inputSearch(str searchStr)\n\n#### Parameters\n\nsearchStr  \nThe string value to use to filter data; optional.\n\n### Method filter\n\n    public void filter([str filterStr])\n\n#### Parameters\n\nfilterStr  \n\n### Method prefColumnSize\n\nSpecifies the preferred column width and height for the form control.\n\n    public void prefColumnSize(int width, int height)\n\n#### Parameters\n\nwidth  \nThe preferred height of the control.\n\n<!-- -->\n\nheight  \nThe preferred height of the control.\n\n### Method dragLeave\n\nRaises the dragLeave event to indicate that a mouse drag operation has left the current control.\n\n    public void dragLeave()\n\n### Method OnGotFocus\n\n    private void OnGotFocus([FormControl sender], [FormControlEventArgs e])\n\n#### Parameters\n\nsender  \n\n<!-- -->\n\ne  \n\n### Method lostFocus\n\nIndicates that the control has lost focus.\n\n    public void lostFocus()\n\n### Method endDrag\n\nIs called when the user has finished dragging a form control.\n\n    public void endDrag()\n\n#### Remarks\n\nThis event is not raised unless the DragDrop property is enabled for the control and a beginDrag event has already been started. To drag a control, a user presses the mouse button in the control area and then moves the mouse pointer.\n\n### Method arrange\n\n    public void arrange()\n\n### Method gotFocus\n\nIndicates that the control has received focus.\n\n    public void gotFocus()\n\n### Method mouseLeave\n\nIndicates that the mouse pointer has left the control.\n\n    public void mouseLeave()\n\n### Method setFocus\n\nSets the focus on the control.\n\n    public void setFocus()\n\n"}