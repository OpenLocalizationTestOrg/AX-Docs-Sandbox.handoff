{"nodes":[{"pos":[32,71],"content":"Cross company behavior | Microsoft Docs","needQuote":true,"needEscape":true,"nodes":[{"content":"Cross company behavior | Microsoft Docs","pos":[0,39]}]},{"pos":[85,467],"content":"This article provides information about how data entities interact with the cross-company concept as it's implemented in Microsoft Dynamics AX. To understand this aspect of data entities, you must understand how tables and views apply the cross-company concept. Therefore, this article begins with a brief review of tables and views, and then explains how data entities are related.","needQuote":true,"needEscape":true,"nodes":[{"content":"This article provides information about how data entities interact with the cross-company concept as it's implemented in Microsoft Dynamics AX. To understand this aspect of data entities, you must understand how tables and views apply the cross-company concept. Therefore, this article begins with a brief review of tables and views, and then explains how data entities are related.","pos":[0,382],"nodes":[{"content":"This article provides information about how data entities interact with the cross-company concept as it's implemented in Microsoft Dynamics AX.","pos":[0,143]},{"content":"To understand this aspect of data entities, you must understand how tables and views apply the cross-company concept.","pos":[144,261]},{"content":"Therefore, this article begins with a brief review of tables and views, and then explains how data entities are related.","pos":[262,382]}]}]},{"pos":[881,903],"content":"Cross company behavior","linkify":"Cross company behavior","nodes":[{"content":"Cross company behavior","pos":[0,22]}]},{"pos":[905,949],"content":"Review of tables and views for cross-company","linkify":"Review of tables and views for cross-company","nodes":[{"content":"Review of tables and views for cross-company","pos":[0,44]}]},{"content":"In Microsoft Dynamics AX, each table has a <bpt id=\"p1\">**</bpt>SaveDataPerCompany<ept id=\"p1\">**</ept> property, and each view has a <bpt id=\"p2\">**</bpt>AllowCrossCompany<ept id=\"p2\">**</ept> property.","pos":[996,1123],"source":"In Microsoft Dynamics AX, each table has a **SaveDataPerCompany** property, and each view has a **AllowCrossCompany** property."},{"content":"The following table describes these two properties.","pos":[1124,1175]},{"content":"Table","pos":[1204,1209]},{"content":"View","pos":[1590,1594]},{"content":"Property name","pos":[2659,2672]},{"content":"SaveDataPerCompany","pos":[2684,2702]},{"content":"AllowCrossCompany","pos":[3070,3087]},{"content":"Relevant CRUD mode","pos":[3399,3417]},{"content":"CUD","pos":[3424,3427]},{"content":"R","pos":[3810,3811]},{"content":"Timing of effect","pos":[4139,4155]},{"content":"Run time, Design time","pos":[4164,4185]},{"content":"Run time, mostly.","pos":[4550,4567]},{"content":"At design time, this setting causes the view to have <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> in its list of selected fields.","pos":[4568,4667],"source":" At design time, this setting causes the view to have **dataAreaId** in its list of selected fields."},{"content":"However, the filter for a specific <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> value is added later, at run time.","pos":[4668,4752],"source":" However, the filter for a specific **dataAreaId** value is added later, at run time."},{"content":"Meaning of value = Yes","pos":[4879,4901]},{"content":"At design time, the system automatically <bpt id=\"p1\">*</bpt>adds<ept id=\"p1\">*</ept> a <bpt id=\"p2\">**</bpt>dataAreaId<ept id=\"p2\">**</ept> field to the table, even though the field isn't displayed in the Application Object Tree (AOT).","pos":[4904,5064],"source":"At design time, the system automatically *adds* a **dataAreaId** field to the table, even though the field isn't displayed in the Application Object Tree (AOT)."},{"content":"Every record in the table is tagged with the company (or legal entity) that it belongs to.","pos":[5065,5155]},{"content":"The system automatically <bpt id=\"p1\">*</bpt>adds<ept id=\"p1\">*</ept> a filter to the SQL <bpt id=\"p2\">**</bpt>Where<ept id=\"p2\">**</ept> clause to limit the returned set of rows to one <bpt id=\"p3\">**</bpt>dataAreaId<ept id=\"p3\">**</ept> value.","pos":[5156,5287],"source":" The system automatically *adds* a filter to the SQL **Where** clause to limit the returned set of rows to one **dataAreaId** value."},{"content":"At run time, the system does <bpt id=\"p1\">*</bpt>not<ept id=\"p1\">*</ept> automatically add a filter for <bpt id=\"p2\">**</bpt>dataAreaId<ept id=\"p2\">**</ept> on the <bpt id=\"p3\">**</bpt>Where<ept id=\"p3\">**</ept> clause of the SQL <bpt id=\"p4\">**</bpt>Select<ept id=\"p4\">**</ept> statement that it sends to the underlying Microsoft SQL Server system.","pos":[5290,5487],"source":"At run time, the system does *not* automatically add a filter for **dataAreaId** on the **Where** clause of the SQL **Select** statement that it sends to the underlying Microsoft SQL Server system."},{"content":"Therefore, SQL <bpt id=\"p1\">**</bpt>Select<ept id=\"p1\">**</ept> statements from the view can return a set of records that contains records for <bpt id=\"p2\">*</bpt>multiple<ept id=\"p2\">*</ept> companies.","pos":[5488,5614],"source":" Therefore, SQL **Select** statements from the view can return a set of records that contains records for *multiple* companies."},{"content":"Meaning of value = No","pos":[5619,5640]},{"content":"The system does <bpt id=\"p1\">*</bpt>not<ept id=\"p1\">*</ept> add a <bpt id=\"p2\">**</bpt>dataAreaId<ept id=\"p2\">**</ept> field to the table.","pos":[5644,5706],"source":"The system does *not* add a **dataAreaId** field to the table."},{"content":"The table is said to be a shared table, because none of its records contain any formal company-specific data.","pos":[5707,5816]},{"content":"The system automatically <bpt id=\"p1\">*</bpt>adds<ept id=\"p1\">*</ept> a filter to the SQL <bpt id=\"p2\">**</bpt>Where<ept id=\"p2\">**</ept> clause to limit the returned set of rows to one <bpt id=\"p3\">**</bpt>dataAreaId<ept id=\"p3\">**</ept> value.","pos":[6030,6161],"source":"The system automatically *adds* a filter to the SQL **Where** clause to limit the returned set of rows to one **dataAreaId** value."},{"content":"However, the <bpt id=\"p1\">**</bpt>AllowCrossCompany<ept id=\"p1\">**</ept> property is ignored if the <bpt id=\"p2\">*</bpt>root<ept id=\"p2\">*</ept> data source of the view is a shared table.","pos":[6162,6273],"source":" However, the **AllowCrossCompany** property is ignored if the *root* data source of the view is a shared table."},{"pos":[6361,6402],"content":"Comparisons within AllowCrossCompany = No","linkify":"Comparisons within AllowCrossCompany = No","nodes":[{"content":"Comparisons within AllowCrossCompany = No","pos":[0,41]}]},{"pos":[6403,6480],"content":"In the following screen shot, the <bpt id=\"p1\">**</bpt>CustomerList<ept id=\"p1\">**</ept> view has two data sources:","source":"In the following screen shot, the **CustomerList** view has two data sources:"},{"pos":[6486,6569],"content":"<bpt id=\"p1\">**</bpt>Root<ept id=\"p1\">**</ept> – CustTable, which has its <bpt id=\"p2\">**</bpt>SaveDataPerCompany<ept id=\"p2\">**</ept> property set to <bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>.","source":"**Root** – CustTable, which has its **SaveDataPerCompany** property set to **Yes**."},{"pos":[6574,6664],"content":"<bpt id=\"p1\">**</bpt>Non-root<ept id=\"p1\">**</ept> – DirPartyTable, which has its <bpt id=\"p2\">**</bpt>SaveDataPerCompany<ept id=\"p2\">**</ept> property set to <bpt id=\"p3\">**</bpt>No<ept id=\"p3\">**</ept>.","source":"**Non-root** – DirPartyTable, which has its **SaveDataPerCompany** property set to **No**."},{"content":"![root] The <bpt id=\"p1\">**</bpt>CustomerList<ept id=\"p1\">**</ept> view has its <bpt id=\"p2\">**</bpt>AllowCrossCompany<ept id=\"p2\">**</ept> property set to <bpt id=\"p3\">**</bpt>No<ept id=\"p3\">**</ept>, as shown in the following screen shot.","pos":[6666,6792],"source":"![root] The **CustomerList** view has its **AllowCrossCompany** property set to **No**, as shown in the following screen shot."},{"content":"![crosscomp] Given the preceding information about the <bpt id=\"p1\">**</bpt>CustomerList<ept id=\"p1\">**</ept> view, the system creates the view in the underlying SQL Server system by generating and then running the following SQL <bpt id=\"p2\">**</bpt>Create View<ept id=\"p2\">**</ept> statement.","pos":[6793,7010],"source":" ![crosscomp] Given the preceding information about the **CustomerList** view, the system creates the view in the underlying SQL Server system by generating and then running the following SQL **Create View** statement."},{"pos":[7511,7552],"content":"Making DirPartyTable the root data source","linkify":"Making DirPartyTable the root data source","nodes":[{"content":"Making DirPartyTable the root data source","pos":[0,41]}]},{"pos":[7554,7704],"content":"![dirpar] By swapping the positions of the two data source tables in the <bpt id=\"p1\">**</bpt>CustomerList<ept id=\"p1\">**</ept> view, you make the DirPartyTable table the root data source.","source":"![dirpar] By swapping the positions of the two data source tables in the **CustomerList** view, you make the DirPartyTable table the root data source."},{"pos":[8129,8231],"content":"In this case, the SQL <bpt id=\"p1\">**</bpt>Create View<ept id=\"p1\">**</ept> statement is the same, except for the following two differences:","source":"In this case, the SQL **Create View** statement is the same, except for the following two differences:"},{"pos":[8237,8307],"content":"The <bpt id=\"p1\">**</bpt>FROM<ept id=\"p1\">**</ept> clause mentions DirPartyTable first and CustTable second.","source":"The **FROM** clause mentions DirPartyTable first and CustTable second."},{"pos":[8312,8464],"content":"The <bpt id=\"p1\">**</bpt>SELECT<ept id=\"p1\">**</ept> column list does <bpt id=\"p2\">*</bpt>not<ept id=\"p2\">*</ept> include the line for <bpt id=\"p3\">**</bpt>dataAreaId<ept id=\"p3\">**</ept> (because DirPartyTable has its <bpt id=\"p4\">**</bpt>SaveDataPerCompany<ept id=\"p4\">**</ept> property set to <bpt id=\"p5\">**</bpt>No<ept id=\"p5\">**</ept>.)","source":"The **SELECT** column list does *not* include the line for **dataAreaId** (because DirPartyTable has its **SaveDataPerCompany** property set to **No**.)"},{"pos":[8469,8500],"content":"Limitations of tables and views","linkify":"Limitations of tables and views","nodes":[{"content":"Limitations of tables and views","pos":[0,31]}]},{"content":"In some cases, the cross-company control features of tables and views aren't as granular control as you might require.","pos":[8501,8619]},{"content":"Here are the limitations:","pos":[8620,8645]},{"pos":[8651,8805],"content":"Company or legal entity fields other than the system <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> field can’t be recognized or treated automatically in the that way <bpt id=\"p2\">**</bpt>dataAreaId<ept id=\"p2\">**</ept> can.","source":"Company or legal entity fields other than the system **dataAreaId** field can’t be recognized or treated automatically in the that way **dataAreaId** can."},{"pos":[8810,8968],"content":"The cross-company behavior for views is too restricted to the properties of the root data source, even when non-root data sources have a <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> field.","source":"The cross-company behavior for views is too restricted to the properties of the root data source, even when non-root data sources have a **dataAreaId** field."},{"pos":[8970,9116],"content":"For example, this might happen if the legal entity information is in <bpt id=\"p1\">**</bpt>LegalEntityRecId<ept id=\"p1\">**</ept>, or if shared tables don't have a <bpt id=\"p2\">**</bpt>dataAreaId<ept id=\"p2\">**</ept> column.","source":"For example, this might happen if the legal entity information is in **LegalEntityRecId**, or if shared tables don't have a **dataAreaId** column."},{"pos":[9121,9176],"content":"Design time: Setting the PrimaryCompanyContext property","linkify":"Design time: Setting the PrimaryCompanyContext property","nodes":[{"content":"Design time: Setting the PrimaryCompanyContext property","pos":[0,55]}]},{"content":"Data entities help you overcome the limitations of tables and view where cross-company functionality is concerned.","pos":[9177,9291]},{"content":"Data entities have a <bpt id=\"p1\">**</bpt>PrimaryCompanyContext<ept id=\"p1\">**</ept> property, where you can specify the entity field to use for company identification.","pos":[9292,9422],"source":" Data entities have a **PrimaryCompanyContext** property, where you can specify the entity field to use for company identification."},{"content":"This property provides flexibility and granular control in the following ways:","pos":[9423,9501]},{"content":"The field can be from any data source of the entity and isn't limited to fields of the root data source.","pos":[9507,9611]},{"pos":[9616,9773],"content":"The field can be any field that is extended from the <bpt id=\"p1\">**</bpt>DataAreaId<ept id=\"p1\">**</ept> extended data type (EDT), and isn't limited to an underlying system <bpt id=\"p2\">**</bpt>dataAreaId<ept id=\"p2\">**</ept> field.","source":"The field can be any field that is extended from the **DataAreaId** extended data type (EDT), and isn't limited to an underlying system **dataAreaId** field."},{"pos":[9778,9942],"content":"You can use the <bpt id=\"p1\">**</bpt>PrimaryCompanyContext<ept id=\"p1\">**</ept> property even when the entity has only shared tables as its data sources, if this makes sense for your specific situation.","source":"You can use the **PrimaryCompanyContext** property even when the entity has only shared tables as its data sources, if this makes sense for your specific situation."},{"content":"The following screen shot shows the value set for the <bpt id=\"p1\">**</bpt>PrimaryCompanyContext<ept id=\"p1\">**</ept> property on the <bpt id=\"p2\">**</bpt>FMCustGroupEntity<ept id=\"p2\">**</ept> entity.","pos":[9944,10069],"source":"The following screen shot shows the value set for the **PrimaryCompanyContext** property on the **FMCustGroupEntity** entity."},{"content":"![prim1] When the <bpt id=\"p1\">**</bpt>PrimaryCompanyContext<ept id=\"p1\">**</ept> value is set to a non-empty value, the entity can't behave as a shared entity.","pos":[10070,10192],"source":" ![prim1] When the **PrimaryCompanyContext** value is set to a non-empty value, the entity can't behave as a shared entity."},{"content":"The <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> field is added to the SQL <bpt id=\"p2\">**</bpt>Create View<ept id=\"p2\">**</ept> statement.","pos":[10193,10264],"source":" The **dataAreaId** field is added to the SQL **Create View** statement."},{"pos":[10633,10689],"content":"Run time: The behavior of data entities for crosscompany","linkify":"Run time: The behavior of data entities for crosscompany","nodes":[{"content":"Run time: The behavior of data entities for crosscompany","pos":[0,56]}]},{"content":"In the context of X++ code, the cross-company behavior of data entities resembles the behavior of tables.","pos":[10690,10795]},{"content":"If the <bpt id=\"p1\">**</bpt>PrimaryCompanyContext<ept id=\"p1\">**</ept> property for an entity has no value and is empty, the entity behaves like a shared table.","pos":[10796,10918],"source":" If the **PrimaryCompanyContext** property for an entity has no value and is empty, the entity behaves like a shared table."},{"pos":[10924,10961],"content":"X++ when PrimaryCompanyContext is set","linkify":"X++ when PrimaryCompanyContext is set","nodes":[{"content":"X++ when PrimaryCompanyContext is set","pos":[0,37]}]},{"content":"The following table describes the behavior of a data entity under CRUD access when the <bpt id=\"p1\">**</bpt>PrimaryCompanyContext<ept id=\"p1\">**</ept> property is set to a field value.","pos":[10963,11109],"source":"The following table describes the behavior of a data entity under CRUD access when the **PrimaryCompanyContext** property is set to a field value."},{"content":"Both X++ and OData accesses are described.","pos":[11110,11152]},{"content":"X++","pos":[11170,11173]},{"content":"OData","pos":[11345,11350]},{"content":"Read (R)","pos":[11970,11978]},{"pos":[11984,12138],"content":"By default, results are <bpt id=\"p1\">*</bpt>always<ept id=\"p1\">*</ept> filtered by <bpt id=\"p2\">**</bpt>dataAreaId<ept id=\"p2\">**</ept> = current company, and cross-company data can be fetched by using the <bpt id=\"p3\">**</bpt>crosscompany<ept id=\"p3\">**</ept> option.","source":"By default, results are *always* filtered by **dataAreaId** = current company, and cross-company data can be fetched by using the **crosscompany** option."},{"content":"Results are <bpt id=\"p1\">*</bpt>not<ept id=\"p1\">*</ept> filtered by <bpt id=\"p2\">**</bpt>dataAreaId<ept id=\"p2\">**</ept>.","pos":[12159,12204],"source":"Results are *not* filtered by **dataAreaId**."},{"content":"The consumer must filter explicitly.","pos":[12205,12241]},{"content":"Write (CUD)","pos":[12377,12388]},{"content":"CUD access to the data entity always occurs in the context of the current company.","pos":[12391,12473]},{"content":"If cross-company CUD access to the entity is required, use the <bpt id=\"p1\">**</bpt>changeCompany<ept id=\"p1\">**</ept> keyword.","pos":[12474,12563],"source":" If cross-company CUD access to the entity is required, use the **changeCompany** keyword."},{"content":"CUD access to the entity can be accomplished by the consumer for any company by setting the value of the <bpt id=\"p1\">**</bpt>PrimaryCompanyContext(myDataAreaId)<ept id=\"p1\">**</ept> field.","pos":[12566,12717],"source":"CUD access to the entity can be accomplished by the consumer for any company by setting the value of the **PrimaryCompanyContext(myDataAreaId)** field."},{"content":"The framework handles the necessary <bpt id=\"p1\">**</bpt>ChangeCompany<ept id=\"p1\">**</ept> action.","pos":[12718,12779],"source":" The framework handles the necessary **ChangeCompany** action."},{"content":"The following X++ code example accesses <bpt id=\"p1\">**</bpt>FMCustGroupEntity<ept id=\"p1\">**</ept>, which has its <bpt id=\"p2\">**</bpt>PrimaryCompanyContext<ept id=\"p2\">**</ept> property set to <bpt id=\"p3\">**</bpt>dataAreaId<ept id=\"p3\">**</ept>.","pos":[12783,12917],"source":"The following X++ code example accesses **FMCustGroupEntity**, which has its **PrimaryCompanyContext** property set to **dataAreaId**."},{"content":"![FMCust] <ph id=\"ph1\">![</ph>Snip<ph id=\"ph2\">](media/Snip-550x1024.png)</ph>","pos":[12918,12960],"source":" ![FMCust] ![Snip](media/Snip-550x1024.png)"},{"pos":[12966,13005],"content":"X++ when PrimaryCompanyContext is empty","linkify":"X++ when PrimaryCompanyContext is empty","nodes":[{"content":"X++ when PrimaryCompanyContext is empty","pos":[0,39]}]},{"content":"When the <bpt id=\"p1\">**</bpt>PrimaryCompanyContext<ept id=\"p1\">**</ept> property is set on the data entity, a <bpt id=\"p2\">**</bpt>dataAreaId<ept id=\"p2\">**</ept> field is created in the view schema and mapped to the <bpt id=\"p3\">**</bpt>PrimaryCompanyContext<ept id=\"p3\">**</ept> field.","pos":[13007,13181],"source":"When the **PrimaryCompanyContext** property is set on the data entity, a **dataAreaId** field is created in the view schema and mapped to the **PrimaryCompanyContext** field."},{"content":"The following table describes the behavior of a data entity under CRUD access when the <bpt id=\"p1\">**</bpt>PrimaryCompanyContext<ept id=\"p1\">**</ept> property is empty.","pos":[13182,13313],"source":" The following table describes the behavior of a data entity under CRUD access when the **PrimaryCompanyContext** property is empty."},{"content":"Both X++ and OData accesses are described.","pos":[13314,13356]},{"content":"X++","pos":[13374,13377]},{"content":"OData","pos":[13505,13510]},{"content":"Read (R)","pos":[13720,13728]},{"pos":[13734,13828],"content":"Results aren't filtered, because no system <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> field is created on the view schema.","source":"Results aren't filtered, because no system **dataAreaId** field is created on the view schema."},{"content":"(The same as for R with X++)","pos":[13865,13893]},{"content":"Write (CUD)","pos":[13900,13911]},{"content":"There is no primary company context to set.","pos":[13914,13957]},{"content":"Therefore, CUD access to the entity is always in the context of the current company.","pos":[13958,14042]},{"content":"(The same as for CUD with X++)","pos":[14045,14075]},{"content":"In the current example, the <bpt id=\"p1\">**</bpt>FMCustomerGroupGlobalEntity<ept id=\"p1\">**</ept> entity has no value assigned to its <bpt id=\"p2\">**</bpt>PrimaryCompanyContext<ept id=\"p2\">**</ept> property.","pos":[14079,14210],"source":"In the current example, the **FMCustomerGroupGlobalEntity** entity has no value assigned to its **PrimaryCompanyContext** property."},{"content":"![ent1] However, a <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> field from the FMCustGroup table is mapped to the <bpt id=\"p2\">**</bpt>FMCustomerGroupGlobalEntity<ept id=\"p2\">**</ept> entity as a regular field that is named <bpt id=\"p3\">**</bpt>LegalEntity<ept id=\"p3\">**</ept>.","pos":[14211,14383],"source":" ![ent1] However, a **dataAreaId** field from the FMCustGroup table is mapped to the **FMCustomerGroupGlobalEntity** entity as a regular field that is named **LegalEntity**."},{"content":"In this example, the FMCustGroup table is the root data source for <bpt id=\"p1\">**</bpt>FMCustomerGroupGlobalEntity<ept id=\"p1\">**</ept>.","pos":[14384,14483],"source":" In this example, the FMCustGroup table is the root data source for **FMCustomerGroupGlobalEntity**."},{"content":"However, we are using this <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> field in an informal way that bypasses the automatic mechanisms of the system.","pos":[14484,14604],"source":" However, we are using this **dataAreaId** field in an informal way that bypasses the automatic mechanisms of the system."},{"content":"All these details are shown in the following screen shot of the <bpt id=\"p1\">**</bpt>LegalEntity<ept id=\"p1\">**</ept> field.","pos":[14605,14691],"source":" All these details are shown in the following screen shot of the **LegalEntity** field."},{"content":"![ent2] <bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Although the terms <bpt id=\"p2\">*</bpt>legal entity<ept id=\"p2\">*</ept> and <bpt id=\"p3\">*</bpt>data entity<ept id=\"p3\">*</ept> both use the word <bpt id=\"p4\">*</bpt>entity<ept id=\"p4\">*</ept>, don't confuse them.","pos":[14692,14809],"source":" ![ent2] **Note:** Although the terms *legal entity* and *data entity* both use the word *entity*, don't confuse them."},{"content":"Legal entities and data entities are two entirely different concepts.","pos":[14810,14879]},{"content":"When the <bpt id=\"p1\">**</bpt>PrimaryCompanyContext<ept id=\"p1\">**</ept> property is empty, the SQL <bpt id=\"p2\">**</bpt>Create View<ept id=\"p2\">**</ept> statement usually contains no mention of a system <bpt id=\"p3\">**</bpt>dataAreaId<ept id=\"p3\">**</ept> column.","pos":[14880,15030],"source":" When the **PrimaryCompanyContext** property is empty, the SQL **Create View** statement usually contains no mention of a system **dataAreaId** column."},{"content":"However, in the current example, <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> is \"half-mentioned\" because of the <bpt id=\"p2\">**</bpt>LegalEntity<ept id=\"p2\">**</ept> regular field on the data entity.","pos":[15031,15163],"source":" However, in the current example, **dataAreaId** is \"half-mentioned\" because of the **LegalEntity** regular field on the data entity."},{"content":"This field is shown in the following SQL statement.","pos":[15164,15215]},{"pos":[15604,15627],"content":"Purpose of this example","linkify":"Purpose of this example","nodes":[{"content":"Purpose of this example","pos":[0,23]}]},{"content":"This example has two purposes:","pos":[15629,15659]},{"content":"Show shared data by default, even though the backing table might be company-specific.","pos":[15665,15750]},{"pos":[15755,15909],"content":"Enable the consumer of the data entity to filter on or apply <bpt id=\"p1\">**</bpt>dataAreaId<ept id=\"p1\">**</ept> if this is required, by using the regular field that is named <bpt id=\"p2\">**</bpt>LegalEntity<ept id=\"p2\">**</ept>.","source":"Enable the consumer of the data entity to filter on or apply **dataAreaId** if this is required, by using the regular field that is named **LegalEntity**."},{"pos":[15915,15924],"content":"Test data","linkify":"Test data","nodes":[{"content":"Test data","pos":[0,9]}]},{"content":"The following screen shot of the <bpt id=\"p1\">**</bpt>Table browser<ept id=\"p1\">**</ept> page shows the test data that is in the <bpt id=\"p2\">**</bpt>FMCustomerGroupGlobalEntity<ept id=\"p2\">**</ept> entity before the X++ test code is run.","pos":[15926,16088],"source":"The following screen shot of the **Table browser** page shows the test data that is in the **FMCustomerGroupGlobalEntity** entity before the X++ test code is run."},{"content":"![ent3]","pos":[16089,16096]},{"pos":[16102,16110],"content":"X++ code","linkify":"X++ code","nodes":[{"content":"X++ code","pos":[0,8]}]},{"content":"Here's how the X++ test code works with the shared entity:","pos":[16112,16170]},{"content":"It accesses the data entity in shared mode for reads.","pos":[16176,16229]},{"content":"It accesses the data entity with one specific company when a new record is created.","pos":[16234,16317]},{"content":"![snip2]","pos":[16319,16327]}],"content":"---\n# required metadata\n\ntitle: Cross company behavior | Microsoft Docs\ndescription: This article provides information about how data entities interact with the cross-company concept as it's implemented in Microsoft Dynamics AX. To understand this aspect of data entities, you must understand how tables and views apply the cross-company concept. Therefore, this article begins with a brief review of tables and views, and then explains how data entities are related.\nauthor: annbe\nmanager: AnnBe\nms.date: 2015-12-12 20:12:19\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# keywords: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \n# ms.reviewer: \nms.suite: Released- Dynamics AX 7.0.0\n# ms.tgt_pltfrm: \nms.custom: 25371\nms.assetid: 6fd46b1d-31e9-4b58-9c21-6581859e9605\n# ms.region: \n# ms.industry: \nms.author: RobinARH\n\n---\n\n# Cross company behavior\n\nReview of tables and views for cross-company\n--------------------------------------------\n\nIn Microsoft Dynamics AX, each table has a **SaveDataPerCompany** property, and each view has a **AllowCrossCompany** property. The following table describes these two properties.\n\n|                        | Table                                                                                                                                                                                                                                                                                                                                                                                           | View                                                                                                                                                                                                                                                                                                                                 |\n|------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Property name          | SaveDataPerCompany                                                                                                                                                                                                                                                                                                                                                                              | AllowCrossCompany                                                                                                                                                                                                                                                                                                                    |\n| Relevant CRUD mode     | CUD                                                                                                                                                                                                                                                                                                                                                                                             | R                                                                                                                                                                                                                                                                                                                                    |\n| Timing of effect       | Run time, Design time                                                                                                                                                                                                                                                                                                                                                                           | Run time, mostly. At design time, this setting causes the view to have **dataAreaId** in its list of selected fields. However, the filter for a specific **dataAreaId** value is added later, at run time.                                                                                                                           |\n| Meaning of value = Yes | At design time, the system automatically *adds* a **dataAreaId** field to the table, even though the field isn't displayed in the Application Object Tree (AOT). Every record in the table is tagged with the company (or legal entity) that it belongs to. The system automatically *adds* a filter to the SQL **Where** clause to limit the returned set of rows to one **dataAreaId** value. | At run time, the system does *not* automatically add a filter for **dataAreaId** on the **Where** clause of the SQL **Select** statement that it sends to the underlying Microsoft SQL Server system. Therefore, SQL **Select** statements from the view can return a set of records that contains records for *multiple* companies. |\n| Meaning of value = No  | The system does *not* add a **dataAreaId** field to the table. The table is said to be a shared table, because none of its records contain any formal company-specific data.                                                                                                                                                                                                                    | The system automatically *adds* a filter to the SQL **Where** clause to limit the returned set of rows to one **dataAreaId** value. However, the **AllowCrossCompany** property is ignored if the *root* data source of the view is a shared table.                                                                                  |\n\n## Comparisons within AllowCrossCompany = No\nIn the following screen shot, the **CustomerList** view has two data sources:\n\n-   **Root** – CustTable, which has its **SaveDataPerCompany** property set to **Yes**.\n-   **Non-root** – DirPartyTable, which has its **SaveDataPerCompany** property set to **No**.\n\n![root] The **CustomerList** view has its **AllowCrossCompany** property set to **No**, as shown in the following screen shot. ![crosscomp] Given the preceding information about the **CustomerList** view, the system creates the view in the underlying SQL Server system by generating and then running the following SQL **Create View** statement.\n\n    CREATE VIEW [dbo].[CUSTOMERLIST] \n    AS \n      SELECT T1.accountnum AS ACCOUNTNUM, \n             T1.dataareaid AS DATAAREAID,  -- AllowCrossCompany =No caused this line.\n             T1.partition  AS PARTITION, \n             T1.recid      AS RECID, \n             T2.partition  AS PARTITION#2, \n             T2.name       AS NAME \n      FROM   custtable T1 \n             CROSS JOIN dirpartytable T2 \n      WHERE  ( T1.party = T2.recid \n               AND ( T1.partition = T2.partition ) ) \n\n### Making DirPartyTable the root data source\n\n![dirpar] By swapping the positions of the two data source tables in the **CustomerList** view, you make the DirPartyTable table the root data source.\n\n    CREATE VIEW [dbo].[CUSTOMERLISTPARTY] \n    AS \n      SELECT T1.name       AS NAME, \n             T1.partition  AS PARTITION, \n             T1.recid      AS RECID, \n             T2.partition  AS PARTITION#2, \n             T2.accountnum AS ACCOUNTNUM \n      FROM   dirpartytable T1 \n             CROSS JOIN custtable T2 \n      WHERE  ( T2.party = T1.recid \n               AND ( T2.partition = T1.partition ) ) \n\n    go \n\nIn this case, the SQL **Create View** statement is the same, except for the following two differences:\n\n-   The **FROM** clause mentions DirPartyTable first and CustTable second.\n-   The **SELECT** column list does *not* include the line for **dataAreaId** (because DirPartyTable has its **SaveDataPerCompany** property set to **No**.)\n\n## Limitations of tables and views\nIn some cases, the cross-company control features of tables and views aren't as granular control as you might require. Here are the limitations:\n\n-   Company or legal entity fields other than the system **dataAreaId** field can’t be recognized or treated automatically in the that way **dataAreaId** can.\n-   The cross-company behavior for views is too restricted to the properties of the root data source, even when non-root data sources have a **dataAreaId** field.\n\nFor example, this might happen if the legal entity information is in **LegalEntityRecId**, or if shared tables don't have a **dataAreaId** column.\n\n## Design time: Setting the PrimaryCompanyContext property\nData entities help you overcome the limitations of tables and view where cross-company functionality is concerned. Data entities have a **PrimaryCompanyContext** property, where you can specify the entity field to use for company identification. This property provides flexibility and granular control in the following ways:\n\n-   The field can be from any data source of the entity and isn't limited to fields of the root data source.\n-   The field can be any field that is extended from the **DataAreaId** extended data type (EDT), and isn't limited to an underlying system **dataAreaId** field.\n-   You can use the **PrimaryCompanyContext** property even when the entity has only shared tables as its data sources, if this makes sense for your specific situation.\n\nThe following screen shot shows the value set for the **PrimaryCompanyContext** property on the **FMCustGroupEntity** entity. ![prim1] When the **PrimaryCompanyContext** value is set to a non-empty value, the entity can't behave as a shared entity. The **dataAreaId** field is added to the SQL **Create View** statement.\n\n    CREATE VIEW [dbo].[FMCUSTGROUPENTITY] \n    AS \n      SELECT T1.custgroup   AS GROUPNAME, \n             T1.description AS DESCRIPTION, \n             T1.dataareaid  AS DATAAREAID,   -- dataAreaId is added. \n             T1.recversion  AS RECVERSION, \n             T1.partition   AS PARTITION, \n             T1.recid       AS RECID \n      FROM   fmcustgroup T1 \n\n## Run time: The behavior of data entities for crosscompany\nIn the context of X++ code, the cross-company behavior of data entities resembles the behavior of tables. If the **PrimaryCompanyContext** property for an entity has no value and is empty, the entity behaves like a shared table.\n\n### X++ when PrimaryCompanyContext is set\n\nThe following table describes the behavior of a data entity under CRUD access when the **PrimaryCompanyContext** property is set to a field value. Both X++ and OData accesses are described.\n\n|             | X++                                                                                                                                                                          | OData                                                                                                                                                                                                                 |\n|-------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Read (R)    | By default, results are *always* filtered by **dataAreaId** = current company, and cross-company data can be fetched by using the **crosscompany** option.                   | Results are *not* filtered by **dataAreaId**. The consumer must filter explicitly.                                                                                                                                    |\n| Write (CUD) | CUD access to the data entity always occurs in the context of the current company. If cross-company CUD access to the entity is required, use the **changeCompany** keyword. | CUD access to the entity can be accomplished by the consumer for any company by setting the value of the **PrimaryCompanyContext(myDataAreaId)** field. The framework handles the necessary **ChangeCompany** action. |\n\nThe following X++ code example accesses **FMCustGroupEntity**, which has its **PrimaryCompanyContext** property set to **dataAreaId**. ![FMCust] ![Snip](media/Snip-550x1024.png)\n\n### X++ when PrimaryCompanyContext is empty\n\nWhen the **PrimaryCompanyContext** property is set on the data entity, a **dataAreaId** field is created in the view schema and mapped to the **PrimaryCompanyContext** field. The following table describes the behavior of a data entity under CRUD access when the **PrimaryCompanyContext** property is empty. Both X++ and OData accesses are described.\n\n|             | X++                                                                                                                              | OData                          |\n|-------------|----------------------------------------------------------------------------------------------------------------------------------|--------------------------------|\n| Read (R)    | Results aren't filtered, because no system **dataAreaId** field is created on the view schema.                                   | (The same as for R with X++)   |\n| Write (CUD) | There is no primary company context to set. Therefore, CUD access to the entity is always in the context of the current company. | (The same as for CUD with X++) |\n\nIn the current example, the **FMCustomerGroupGlobalEntity** entity has no value assigned to its **PrimaryCompanyContext** property. ![ent1] However, a **dataAreaId** field from the FMCustGroup table is mapped to the **FMCustomerGroupGlobalEntity** entity as a regular field that is named **LegalEntity**. In this example, the FMCustGroup table is the root data source for **FMCustomerGroupGlobalEntity**. However, we are using this **dataAreaId** field in an informal way that bypasses the automatic mechanisms of the system. All these details are shown in the following screen shot of the **LegalEntity** field. ![ent2] **Note:** Although the terms *legal entity* and *data entity* both use the word *entity*, don't confuse them. Legal entities and data entities are two entirely different concepts. When the **PrimaryCompanyContext** property is empty, the SQL **Create View** statement usually contains no mention of a system **dataAreaId** column. However, in the current example, **dataAreaId** is \"half-mentioned\" because of the **LegalEntity** regular field on the data entity. This field is shown in the following SQL statement.\n\n    CREATE VIEW [dbo].[FMCUSTOMERGROUPGLOBALENTITY] \n    AS \n      SELECT T1.custgroup   AS NAME, \n             T1.description AS DESCRIPTION, \n             T1.dataareaid  AS LEGALENTITY,   -- dataAreadId is named LegalEntity. \n             T1.recversion  AS RECVERSION, \n             T1.partition   AS PARTITION, \n             T1.recid       AS RECID \n      FROM   fmcustgroup T1 \n\n### Purpose of this example\n\nThis example has two purposes:\n\n-   Show shared data by default, even though the backing table might be company-specific.\n-   Enable the consumer of the data entity to filter on or apply **dataAreaId** if this is required, by using the regular field that is named **LegalEntity**.\n\n### Test data\n\nThe following screen shot of the **Table browser** page shows the test data that is in the **FMCustomerGroupGlobalEntity** entity before the X++ test code is run. ![ent3]\n\n### X++ code\n\nHere's how the X++ test code works with the shared entity:\n\n-   It accesses the data entity in shared mode for reads.\n-   It accesses the data entity with one specific company when a new record is created.\n\n![snip2]\n\n"}