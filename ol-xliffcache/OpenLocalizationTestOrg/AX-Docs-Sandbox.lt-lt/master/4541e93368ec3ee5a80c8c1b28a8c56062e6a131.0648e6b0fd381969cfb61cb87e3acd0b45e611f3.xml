{"nodes":[{"pos":[32,52],"content":"Retail SDK packaging","needQuote":true,"needEscape":true,"nodes":[{"content":"Retail SDK packaging","pos":[0,20]}]},{"pos":[66,208],"content":"This topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail.","needQuote":true,"needEscape":true,"nodes":[{"content":"This topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail.","pos":[0,142]}]},{"pos":[714,734],"content":"Retail SDK packaging","linkify":"Retail SDK packaging","nodes":[{"content":"Retail SDK packaging","pos":[0,20]}]},{"content":"This topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail.","pos":[736,878]},{"pos":[880,893],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"For detailed information about how the Retail software development kit (SDK) is designed for customization and to generate customized deployable packages, see <bpt id=\"p1\">[</bpt>Retail SDK overview<ept id=\"p1\">](retail-sdk-overview.md)</ept>.","pos":[909,1114],"source":"For detailed information about how the Retail software development kit (SDK) is designed for customization and to generate customized deployable packages, see [Retail SDK overview](retail-sdk-overview.md)."},{"content":"This topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail:","pos":[1115,1257]},{"content":"Commerce runtime (CRT)","pos":[1263,1285]},{"content":"Retail Server","pos":[1290,1303]},{"content":"Modern POS","pos":[1308,1318]},{"content":"Cloud POS","pos":[1323,1332]},{"content":"Hardware station","pos":[1337,1353]},{"content":"The article then explains how to deploy these packages to either an existing Microsoft Dynamics Lifecycle Services (LCS) cloud-deployed environment or a new environment.","pos":[1355,1524]},{"pos":[1529,1548],"content":"Deployable packages","linkify":"Deployable packages","nodes":[{"content":"Deployable packages","pos":[0,19]}]},{"content":"A deployable package is an asset that can be consumed by the LCS deployment service.","pos":[1549,1633]},{"content":"A deployable package can also be consumed manually to service or install a customization.","pos":[1634,1723]},{"content":"The Retail SDK generates the same package that is developed for Microsoft hotfixes or updates, so that there is just one way to install updates and customizations to the existing solution.","pos":[1724,1912]},{"pos":[1918,1954],"content":"Steps to create a deployable package","linkify":"Steps to create a deployable package","nodes":[{"content":"Steps to create a deployable package","pos":[0,36]}]},{"content":"Host the Retail SDK in Microsoft Visual Studio Online (VSO) or the source control system that your organization uses.","pos":[1960,2077]},{"content":"Customize or add functionality to the Retail stack.","pos":[2082,2133]},{"content":"Use the build tools to give an identity to the customized installation package, code-sign it, and specify the customized CRT assemblies, the customized Retail Server assemblies, the customized Hardware station assemblies, and the customized database scripts.","pos":[2138,2396]},{"pos":[2401,2538],"content":"After all the settings have been specified, run <bpt id=\"p1\">**</bpt>msbuild /t:rebuild<ept id=\"p1\">**</ept> on the root of the Retail SDK to generate all deployable packages.","source":"After all the settings have been specified, run **msbuild /t:rebuild** on the root of the Retail SDK to generate all deployable packages."},{"pos":[2543,2590],"content":"Retail SDK build tools – Customization settings","linkify":"Retail SDK build tools – Customization settings","nodes":[{"content":"Retail SDK build tools – Customization settings","pos":[0,47]}]},{"content":"BuildTools<ph id=\"ph1\">\\\\</ph>Customization.settings is where most of the configuration values for the Retail SDK are set.","pos":[2591,2695],"source":"BuildTools\\\\Customization.settings is where most of the configuration values for the Retail SDK are set."},{"content":"These values control how built binaries, components, and packages are named, versioned, and code-signed.","pos":[2696,2800]},{"content":"After you define this metadata, The Retail SDK build system uses it to give an identity to the assets, and to package the customization assets for all the Retail components.","pos":[2801,2974]},{"content":"<bpt id=\"p1\">**</bpt>AssemblyNamePrefix <ept id=\"p1\">**</ept>– Specify the prefix name for the assembly.","pos":[2980,3046],"source":"**AssemblyNamePrefix **– Specify the prefix name for the assembly."},{"content":"When you build the Retail SDK, all the assemblies are prefixed with this name.","pos":[3047,3125]},{"pos":[3130,3252],"content":"<bpt id=\"p1\">**</bpt>CustomAssemblyVersion <ept id=\"p1\">**</ept>– Specify the custom assembly version for all assemblies that are built by using the Retail SDK.","source":"**CustomAssemblyVersion **– Specify the custom assembly version for all assemblies that are built by using the Retail SDK."},{"pos":[3257,3367],"content":"<bpt id=\"p1\">**</bpt>CustomVersion <ept id=\"p1\">**</ept>– Specify the custom file version for all assemblies that are built by using the Retail SDK.","source":"**CustomVersion **– Specify the custom file version for all assemblies that are built by using the Retail SDK."},{"pos":[3372,3430],"content":"<bpt id=\"p1\">**</bpt>CustomName <ept id=\"p1\">**</ept>– Specify the custom name for the assembly.","source":"**CustomName **– Specify the custom name for the assembly."},{"pos":[3435,3500],"content":"<bpt id=\"p1\">**</bpt>CustomDescription <ept id=\"p1\">**</ept>– Specify the description for the assembly.","source":"**CustomDescription **– Specify the description for the assembly."},{"pos":[3505,3568],"content":"<bpt id=\"p1\">**</bpt>CustomDescription <ept id=\"p1\">**</ept>– Specify the publisher for the assembly.","source":"**CustomDescription **– Specify the publisher for the assembly."},{"pos":[3573,3636],"content":"<bpt id=\"p1\">**</bpt>CustomDescription <ept id=\"p1\">**</ept>– Specify the copyright for the assembly.","source":"**CustomDescription **– Specify the copyright for the assembly."},{"pos":[3641,3727],"content":"<bpt id=\"p1\">**</bpt>SignAssembly <ept id=\"p1\">**</ept>– Specify <bpt id=\"p2\">**</bpt>True<ept id=\"p2\">**</ept> if you want to sign the assembly during the build.","source":"**SignAssembly **– Specify **True** if you want to sign the assembly during the build."},{"pos":[3732,3825],"content":"<bpt id=\"p1\">**</bpt>DelaySign <ept id=\"p1\">**</ept>– Specify <bpt id=\"p2\">**</bpt>True<ept id=\"p2\">**</ept> if you want to delay signing of the assets during the build.","source":"**DelaySign **– Specify **True** if you want to delay signing of the assets during the build."},{"pos":[3830,3918],"content":"<bpt id=\"p1\">**</bpt>AssemblyOriginatorKeyFile <ept id=\"p1\">**</ept>– Specify the strong name key to use to sign the assembly.","source":"**AssemblyOriginatorKeyFile **– Specify the strong name key to use to sign the assembly."},{"pos":[3923,4032],"content":"<bpt id=\"p1\">**</bpt>ModernPOSPackageCertificateKeyFile <ept id=\"p1\">**</ept>– Specify the PFX file to use to sign Modern POS and Hardware station.","source":"**ModernPOSPackageCertificateKeyFile **– Specify the PFX file to use to sign Modern POS and Hardware station."},{"pos":[4037,4191],"content":"<bpt id=\"p1\">**</bpt>RetailServerLibraryPathForProxyGeneration <ept id=\"p1\">**</ept>– Specify the customized Retail Server assembly to use for proxy generation (both TypeScript and C<ph id=\"ph1\">\\#</ph> proxy).","source":"**RetailServerLibraryPathForProxyGeneration **– Specify the customized Retail Server assembly to use for proxy generation (both TypeScript and C\\# proxy)."},{"pos":[4196,4225],"content":"In the <bpt id=\"p1\">**</bpt>ItemGroup<ept id=\"p1\">**</ept> section:","source":"In the **ItemGroup** section:"},{"content":"<bpt id=\"p1\">**</bpt>ISV<ph id=\"ph1\">\\_</ph>CommerceRuntime<ph id=\"ph2\">\\_</ph>CustomizableFile <ept id=\"p1\">**</ept>– Specify the customized CRT assembly.","pos":[4234,4315],"source":"**ISV\\_CommerceRuntime\\_CustomizableFile **– Specify the customized CRT assembly."},{"content":"You can have multiple entries, one for each customized CRT assembly.","pos":[4316,4384]},{"content":"<bpt id=\"p1\">**</bpt>ISV<ph id=\"ph1\">\\_</ph>RetailServer<ph id=\"ph2\">\\_</ph>CustomizableFile <ept id=\"p1\">**</ept>– Specify the customized Retail Server assembly.","pos":[4393,4481],"source":"**ISV\\_RetailServer\\_CustomizableFile **– Specify the customized Retail Server assembly."},{"content":"You can have multiple entries, one for each customized Retail Server assembly.","pos":[4482,4560]},{"content":"<bpt id=\"p1\">**</bpt>ISV<ph id=\"ph1\">\\_</ph>HardwareStation<ph id=\"ph2\">\\_</ph>CustomizableFile <ept id=\"p1\">**</ept>– Specify the customized Hardware station assembly.","pos":[4569,4663],"source":"**ISV\\_HardwareStation\\_CustomizableFile **– Specify the customized Hardware station assembly."},{"content":"You can have multiple entries, one for each customized Hardware station assembly.","pos":[4664,4745]},{"pos":[4754,4841],"content":"<bpt id=\"p1\">**</bpt>ISV<ph id=\"ph1\">\\_</ph>CustomDatabaseFile<ph id=\"ph2\">\\_</ph>Upgrade<ph id=\"ph3\">\\_</ph>Custom <ept id=\"p1\">**</ept>– Specify the customized database scripts.","source":"**ISV\\_CustomDatabaseFile\\_Upgrade\\_Custom **– Specify the customized database scripts."},{"pos":[4846,4901],"content":"Building a deployable package for each Retail component","linkify":"Building a deployable package for each Retail component","nodes":[{"content":"Building a deployable package for each Retail component","pos":[0,55]}]},{"pos":[4906,4932],"content":"Build a deployable package","linkify":"Build a deployable package","nodes":[{"content":"Build a deployable package","pos":[0,26]}]},{"content":"The Retail SDK fully supports msbuild.","pos":[4934,4972]},{"content":"To build the Retail SDK, open a <bpt id=\"p1\">**</bpt>MSBuild Command Prompt for VS2015<ept id=\"p1\">**</ept> window as an administrator, and run <bpt id=\"p2\">**</bpt>msbuild<ept id=\"p2\">**</ept> (or, for a non-debug version, run <bpt id=\"p3\">**</bpt>msbuild /p:Configuration=Release<ept id=\"p3\">**</ept>).","pos":[4973,5163],"source":" To build the Retail SDK, open a **MSBuild Command Prompt for VS2015** window as an administrator, and run **msbuild** (or, for a non-debug version, run **msbuild /p:Configuration=Release**)."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>msbuild2<ept id=\"p1\">](./media/msbuild2.png)](./media/msbuild2.png)</ept>","pos":[5164,5221],"source":"[![msbuild2](./media/msbuild2.png)](./media/msbuild2.png)"},{"pos":[5227,5235],"content":"Packages","linkify":"Packages","nodes":[{"content":"Packages","pos":[0,8]}]},{"content":"After the build is completed, all deployable packages are generated in the Retail SDK/Packages folder.","pos":[5237,5339]},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>packages<ept id=\"p1\">](./media/packages.png)](./media/packages.png)</ept>","pos":[5340,5397],"source":"[![packages](./media/packages.png)](./media/packages.png)"},{"pos":[5404,5415],"content":"CRT package","linkify":"CRT package","nodes":[{"content":"CRT package","pos":[0,11]}]},{"content":"By default, there is no separate package for CRT, because CRT isn't deployed individually.","pos":[5417,5507]},{"content":"Instead, CRT assets are packaged together with other application components, such as Modern POS, Retail Server, and Microsoft Dynamics 365 for Operations HQ.","pos":[5508,5665]},{"content":"In order for the Retail SDK build tools to package CRT in all the components where it's used, you must make the following configuration entries:","pos":[5666,5810]},{"content":"<bpt id=\"p1\">**</bpt>CRT extension assemblies<ept id=\"p1\">**</ept> – These will be the new assemblies where you've written CRT extensions.","pos":[5816,5916],"source":"**CRT extension assemblies** – These will be the new assemblies where you've written CRT extensions."},{"content":"Specify an entry for CRT extension assemblies in Retail SDK<ph id=\"ph1\">\\\\</ph>BuildTools<ph id=\"ph2\">\\\\</ph>Customization.settings.","pos":[5917,6013],"source":" Specify an entry for CRT extension assemblies in Retail SDK\\\\BuildTools\\\\Customization.settings."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>crt-customization settings<ept id=\"p1\">](./media/crt-customization-settings.png)](./media/crt-customization-settings.png)</ept>","pos":[6014,6125],"source":"[![crt-customization settings](./media/crt-customization-settings.png)](./media/crt-customization-settings.png)"},{"content":"<bpt id=\"p1\">**</bpt>CRT commerceruntime.config file<ept id=\"p1\">**</ept> – If you have a new CRT assembly, you must add it to the CRT configuration file so that the runtime can load it.","pos":[6130,6278],"source":"**CRT commerceruntime.config file** – If you have a new CRT assembly, you must add it to the CRT configuration file so that the runtime can load it."},{"content":"Specify an entry for CRT extension assemblies in Retail SDK<ph id=\"ph1\">\\\\</ph>References<ph id=\"ph2\">\\\\</ph>commerceruntime.config.","pos":[6279,6375],"source":" Specify an entry for CRT extension assemblies in Retail SDK\\\\References\\\\commerceruntime.config."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>crt-config<ept id=\"p1\">](./media/crt-config.png)](./media/crt-config.png)</ept>","pos":[6376,6439],"source":"[![crt-config](./media/crt-config.png)](./media/crt-config.png)"},{"pos":[6446,6462],"content":"Database package","linkify":"Database package","nodes":[{"content":"Database package","pos":[0,16]}]},{"content":"As a part of a customization, you might have to upgrade a channel database in addition to a Modern POS offline database.","pos":[6464,6584]},{"content":"Currently, you use upgrade SQL scripts to upgrade the channel and Modern POS offline databases.","pos":[6585,6680]},{"content":"You can write an upgrade SQL script and put it at Retail SDK<ph id=\"ph1\">\\\\</ph>Database<ph id=\"ph2\">\\\\</ph>Upgrade<ph id=\"ph3\">\\\\</ph>Custom, so that packaging tools can pick it up and include it in the deployable package for the correct components (Retail Server and Modern POS Offline).","pos":[6681,6916],"source":" You can write an upgrade SQL script and put it at Retail SDK\\\\Database\\\\Upgrade\\\\Custom, so that packaging tools can pick it up and include it in the deployable package for the correct components (Retail Server and Modern POS Offline)."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>custom db script<ept id=\"p1\">](./media/custom-db-script.png)](./media/custom-db-script.png)</ept> You must also update Retail SDK<ph id=\"ph2\">\\\\</ph>BuildTools<ph id=\"ph3\">\\\\</ph>Customization.settings to instruct the build tools which files to package for the database.","pos":[6917,7135],"source":"[![custom db script](./media/custom-db-script.png)](./media/custom-db-script.png) You must also update Retail SDK\\\\BuildTools\\\\Customization.settings to instruct the build tools which files to package for the database."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>database upgrade customization setting<ept id=\"p1\">](./media/database-upgrade-customization-setting-1024x311.png)](./media/database-upgrade-customization-setting.png)</ept>","pos":[7136,7292],"source":"[![database upgrade customization setting](./media/database-upgrade-customization-setting-1024x311.png)](./media/database-upgrade-customization-setting.png)"},{"pos":[7300,7330],"content":"Deployment of database scripts","linkify":"Deployment of database scripts","nodes":[{"content":"Deployment of database scripts","pos":[0,30]}]},{"content":"Database scripts are packaged together with the Retail Server and Modern POS Offline packages, and are run when Retail Server and Modern POS are installed.","pos":[7332,7487]},{"content":"If there are multiple custom database scripts, they are run in alphabetical order.","pos":[7488,7570]},{"content":"Therefore, if you want to run the scripts in a specific order, you must name them accordingly.","pos":[7571,7665]},{"content":"The CRT.RETAILUPGRADEHISTORY table keeps track of which scripts are already applied to the database.","pos":[7666,7766]},{"content":"Therefore, the next database upgrade will run only those upgrade scripts that don't have an entry in the CRT.RETAILUPGRADEHISTORY table.","pos":[7767,7903]},{"pos":[7910,7931],"content":"Retail Server package","linkify":"Retail Server package","nodes":[{"content":"Retail Server package","pos":[0,21]}]},{"content":"In order for the Retail SDK build tools to package Retail Server, you must make the following configuration entries:","pos":[7933,8049]},{"content":"<bpt id=\"p1\">**</bpt>Retail Server extension assemblies <ept id=\"p1\">**</ept>– These will be the new assemblies where you've written Retail Server customizations.","pos":[8055,8179],"source":"**Retail Server extension assemblies **– These will be the new assemblies where you've written Retail Server customizations."},{"content":"Specify an entry for CRT extension assemblies in Retail SDK<ph id=\"ph1\">\\\\</ph>BuildTools<ph id=\"ph2\">\\\\</ph>Customization.settings.","pos":[8180,8276],"source":" Specify an entry for CRT extension assemblies in Retail SDK\\\\BuildTools\\\\Customization.settings."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>retail server customization setting<ept id=\"p1\">](./media/retail-server-customization-setting.png)](./media/retail-server-customization-setting.png)</ept>","pos":[8277,8415],"source":"[![retail server customization setting](./media/retail-server-customization-setting.png)](./media/retail-server-customization-setting.png)"},{"content":"<bpt id=\"p1\">**</bpt>Retail Server web.config file<ept id=\"p1\">**</ept> – You must add an entry for Retail Server extension assemblies to the Retail Server web.config file, so that they are loaded and used.","pos":[8420,8588],"source":"**Retail Server web.config file** – You must add an entry for Retail Server extension assemblies to the Retail Server web.config file, so that they are loaded and used."},{"content":"Specify an entry for Retail Server Extension assemblies in Retail SDK<ph id=\"ph1\">\\\\</ph>Packages<ph id=\"ph2\">\\\\</ph>RetailServer<ph id=\"ph3\">\\\\</ph>Code<ph id=\"ph4\">\\\\</ph>web.config.","pos":[8589,8701],"source":" Specify an entry for Retail Server Extension assemblies in Retail SDK\\\\Packages\\\\RetailServer\\\\Code\\\\web.config."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>retail server web config<ept id=\"p1\">](./media/retail-server-web-config.png)](./media/retail-server-web-config.png)</ept>","pos":[8702,8807],"source":"[![retail server web config](./media/retail-server-web-config.png)](./media/retail-server-web-config.png)"},{"content":"After you've specified these settings, you can run MSBuild on the root to build everything and generate deployable packages for all Retail components.","pos":[8809,8959]},{"content":"The Retail Server deployable package will be generated at Retail SDK<ph id=\"ph1\">\\\\</ph>Packages<ph id=\"ph2\">\\\\</ph>RetailServer<ph id=\"ph3\">\\\\</ph>content.zip.","pos":[8960,9066],"source":" The Retail Server deployable package will be generated at Retail SDK\\\\Packages\\\\RetailServer\\\\content.zip."},{"content":"This zip file contains everything that is required in order to deploy Retail Server.","pos":[9067,9151]},{"content":"You can upload this zip file to LCS and then use it to deploy a new environment.","pos":[9152,9232]},{"content":"For an existing environment, you currently have to manually copy the zip file, extract it, and then run <bpt id=\"p1\">**</bpt>content.zip<ph id=\"ph1\">\\\\</ph>RetailServer<ph id=\"ph2\">\\\\</ph>Scripts<ph id=\"ph3\">\\\\</ph>Upgrade<ph id=\"ph4\">\\\\</ph>Core<ph id=\"ph5\">\\\\</ph>UpdateRetailServer.ps1<ept id=\"p1\">**</ept> in admin mode in Microsoft Windows PowerShell.","pos":[9233,9461],"source":" For an existing environment, you currently have to manually copy the zip file, extract it, and then run **content.zip\\\\RetailServer\\\\Scripts\\\\Upgrade\\\\Core\\\\UpdateRetailServer.ps1** in admin mode in Microsoft Windows PowerShell."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>update retail server<ept id=\"p1\">](./media/update-retail-server-1024x169.png)](./media/update-retail-server.png)</ept>","pos":[9462,9564],"source":"[![update retail server](./media/update-retail-server-1024x169.png)](./media/update-retail-server.png)"},{"pos":[9571,9580],"content":"Cloud POS","linkify":"Cloud POS","nodes":[{"content":"Cloud POS","pos":[0,9]}]},{"content":"When you run MSBuild on the root SDK folder, a CloudPOS package is created together with the other Retail components.","pos":[9582,9699]},{"content":"The Cloud POS deployable package is generated at Retail SDK<ph id=\"ph1\">\\\\</ph>Packages<ph id=\"ph2\">\\\\</ph>CloudPos<ph id=\"ph3\">\\\\</ph>content.zip.","pos":[9700,9793],"source":" The Cloud POS deployable package is generated at Retail SDK\\\\Packages\\\\CloudPos\\\\content.zip."},{"content":"This zip file contains everything that is required in order to deploy Cloud POS.","pos":[9794,9874]},{"content":"You can upload this zip file to LCS and then use it to deploy a new environment.","pos":[9875,9955]},{"content":"For an existing environment, you currently have to manually copy the zip file, extract it, and then run <bpt id=\"p1\">**</bpt>content.zip<ph id=\"ph1\">\\\\</ph>RetailCloudPos<ph id=\"ph2\">\\\\</ph>Scripts<ph id=\"ph3\">\\\\</ph>Upgrade<ph id=\"ph4\">\\\\</ph>Core<ph id=\"ph5\">\\\\</ph>UpdateCloudPos.ps1<ept id=\"p1\">**</ept> in admin mode in Windows PowerShell.","pos":[9956,10172],"source":" For an existing environment, you currently have to manually copy the zip file, extract it, and then run **content.zip\\\\RetailCloudPos\\\\Scripts\\\\Upgrade\\\\Core\\\\UpdateCloudPos.ps1** in admin mode in Windows PowerShell."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>UpdateCloudPOS<ept id=\"p1\">](./media/updatecloudpos.png)](./media/updatecloudpos.png)</ept>","pos":[10173,10248],"source":"[![UpdateCloudPOS](./media/updatecloudpos.png)](./media/updatecloudpos.png)"},{"pos":[10255,10283],"content":"Retail self-service packages","linkify":"Retail self-service packages","nodes":[{"content":"Retail self-service packages","pos":[0,28]}]},{"content":"Both Modern POS and Hardware station are self-service components.","pos":[10285,10350]},{"content":"To deploy self-service components, you upload them to the tenant-specific storage, so that they can appear for self-service in Dynamics 365 for Operations.","pos":[10351,10506]},{"content":"When you run MSBuild on the root SDK folder, a RetailSelfService package is created together with the other Retail components.","pos":[10507,10633]},{"content":"The RetailSelfService deployable package is generated at RetailSDK<ph id=\"ph1\">\\\\</ph>Packages<ph id=\"ph2\">\\\\</ph>RetailSelfService<ph id=\"ph3\">\\\\</ph>content.zip.","pos":[10634,10743],"source":" The RetailSelfService deployable package is generated at RetailSDK\\\\Packages\\\\RetailSelfService\\\\content.zip."},{"content":"This zip file contains everything that is required in order to deploy Retail self-service.","pos":[10744,10834]},{"content":"You can upload this zip file to LCS and then use it to deploy a new environment.","pos":[10835,10915]},{"content":"For an existing environment, you currently have to manually copy the zip file, extract it, and then run <bpt id=\"p1\">**</bpt>content.zip<ph id=\"ph1\">\\\\</ph>RetailSelfService<ph id=\"ph2\">\\\\</ph>Scripts<ph id=\"ph3\">\\\\</ph>Upgrade<ph id=\"ph4\">\\\\</ph>UpdateRetailSelfService.ps1<ept id=\"p1\">**</ept> in admin mode in Windows PowerShell.","pos":[10916,11138],"source":" For an existing environment, you currently have to manually copy the zip file, extract it, and then run **content.zip\\\\RetailSelfService\\\\Scripts\\\\Upgrade\\\\UpdateRetailSelfService.ps1** in admin mode in Windows PowerShell."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>UpdateRetailSelfService<ept id=\"p1\">](./media/updateretailselfservice.png)](./media/updateretailselfservice.png)</ept> After Retail self-service is updated, you can go to Dynamics 365 for Operations to verify that the new customized self-service packages are available.","pos":[11139,11392],"source":"[![UpdateRetailSelfService](./media/updateretailselfservice.png)](./media/updateretailselfservice.png) After Retail self-service is updated, you can go to Dynamics 365 for Operations to verify that the new customized self-service packages are available."},{"pos":[11400,11410],"content":"Modern POS","linkify":"Modern POS","nodes":[{"content":"Modern POS","pos":[0,10]}]},{"content":"Open the <bpt id=\"p1\">**</bpt>All retail stores<ept id=\"p1\">**</ept> page, and notice that the new customized Modern POS package is available for selection.","pos":[11412,11530],"source":"Open the **All retail stores** page, and notice that the new customized Modern POS package is available for selection."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>CustomizedModernPOS<ept id=\"p1\">](./media/customizedmodernpos-1024x452.png)](./media/customizedmodernpos.png)</ept>","pos":[11531,11630],"source":"[![CustomizedModernPOS](./media/customizedmodernpos-1024x452.png)](./media/customizedmodernpos.png)"},{"pos":[11638,11654],"content":"Hardware station","linkify":"Hardware station","nodes":[{"content":"Hardware station","pos":[0,16]}]},{"pos":[11656,11884],"content":"Open the <bpt id=\"p1\">**</bpt>Hardware station profiles<ept id=\"p1\">**</ept> page, and notice that the customized hardware profile is available for selection <bpt id=\"p2\">[</bpt><ph id=\"ph1\">![</ph>CustomizedHardwareStation<ept id=\"p2\">](./media/customizedhardwarestation.png)](./media/customizedhardwarestation.png)</ept>","source":"Open the **Hardware station profiles** page, and notice that the customized hardware profile is available for selection [![CustomizedHardwareStation](./media/customizedhardwarestation.png)](./media/customizedhardwarestation.png)"},{"pos":[11889,11944],"content":"Creating a new environment by using customized packages","linkify":"Creating a new environment by using customized packages","nodes":[{"content":"Creating a new environment by using customized packages","pos":[0,55]}]},{"content":"Before you can use LCS to deploy a new environment by using customized packages, you must first upload all the packages to the project's Asset library.","pos":[11945,12096]},{"content":"These packages are software packages, and you will see options for Cloud POS, Retail Server, and Retail self-service.","pos":[12097,12214]},{"pos":[12220,12226],"content":"Step 1","linkify":"Step 1","nodes":[{"content":"Step 1","pos":[0,6]}]},{"content":"In the Asset library for the project, upload the customized Retail Server, Retail self-service, and Cloud POS deployable packages to LCS.","pos":[12228,12365]},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>ProjectAssetLibrary<ept id=\"p1\">](./media/projectassetlibrary-1024x421.png)](./media/projectassetlibrary.png)</ept> <bpt id=\"p2\">[</bpt><ph id=\"ph2\">![</ph>UploadCustomizedRetailServerPackage<ept id=\"p2\">](./media/uploadcustomizedretailserverpackage-1024x506.png)](./media/uploadcustomizedretailserverpackage.png)</ept> <bpt id=\"p3\">[</bpt><ph id=\"ph3\">![</ph>LCSSoftwarePackages<ept id=\"p3\">](./media/lcssoftwarepackages.png)](./media/lcssoftwarepackages.png)</ept>","pos":[12366,12704],"source":"[![ProjectAssetLibrary](./media/projectassetlibrary-1024x421.png)](./media/projectassetlibrary.png) [![UploadCustomizedRetailServerPackage](./media/uploadcustomizedretailserverpackage-1024x506.png)](./media/uploadcustomizedretailserverpackage.png) [![LCSSoftwarePackages](./media/lcssoftwarepackages.png)](./media/lcssoftwarepackages.png)"},{"pos":[12710,12716],"content":"Step 2","linkify":"Step 2","nodes":[{"content":"Step 2","pos":[0,6]}]},{"content":"Request a new LCS topology by going to the <bpt id=\"p1\">**</bpt>Environments<ept id=\"p1\">**</ept> section and requesting a new environment.","pos":[12718,12819],"source":"Request a new LCS topology by going to the **Environments** section and requesting a new environment."},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">![</ph>LCSDeployment<ept id=\"p1\">](./media/lcsdeployment-1024x530.png)](./media/lcsdeployment.png)</ept> <bpt id=\"p2\">[</bpt><ph id=\"ph2\">![</ph>LCSAXBaseVersion<ept id=\"p2\">](./media/lcsaxbaseversion.png)](./media/lcsaxbaseversion.png)</ept> <bpt id=\"p3\">[</bpt><ph id=\"ph3\">![</ph>SelectCustomizedPackage<ept id=\"p3\">](./media/selectcustomizedpackage.png)](./media/selectcustomizedpackage.png)</ept>","pos":[12820,13086],"source":"[![LCSDeployment](./media/lcsdeployment-1024x530.png)](./media/lcsdeployment.png) [![LCSAXBaseVersion](./media/lcsaxbaseversion.png)](./media/lcsaxbaseversion.png) [![SelectCustomizedPackage](./media/selectcustomizedpackage.png)](./media/selectcustomizedpackage.png)"}],"content":"---\n# required metadata\n\ntitle: Retail SDK packaging\ndescription: This topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2015-12-17 19 - 43 - 46\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \n# ms.reviewer: 61\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 28021\nms.assetid: 764e664d-64d3-4932-aec9-bd1877b78d98\nms.search.region: Global\n# ms.search.industry: \nms.author: sijoshi\nms.dyn365.ops.intro: Feb-16\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# Retail SDK packaging\n\nThis topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail.\n\nPrerequisites\n-------------\n\nFor detailed information about how the Retail software development kit (SDK) is designed for customization and to generate customized deployable packages, see [Retail SDK overview](retail-sdk-overview.md). This topic explains how to create a deployable package for each of the following components of Microsoft Dynamics 365 for Operations - Retail:\n\n-   Commerce runtime (CRT)\n-   Retail Server\n-   Modern POS\n-   Cloud POS\n-   Hardware station\n\nThe article then explains how to deploy these packages to either an existing Microsoft Dynamics Lifecycle Services (LCS) cloud-deployed environment or a new environment.\n\n## Deployable packages\nA deployable package is an asset that can be consumed by the LCS deployment service. A deployable package can also be consumed manually to service or install a customization. The Retail SDK generates the same package that is developed for Microsoft hotfixes or updates, so that there is just one way to install updates and customizations to the existing solution.\n\n### Steps to create a deployable package\n\n1.  Host the Retail SDK in Microsoft Visual Studio Online (VSO) or the source control system that your organization uses.\n2.  Customize or add functionality to the Retail stack.\n3.  Use the build tools to give an identity to the customized installation package, code-sign it, and specify the customized CRT assemblies, the customized Retail Server assemblies, the customized Hardware station assemblies, and the customized database scripts.\n4.  After all the settings have been specified, run **msbuild /t:rebuild** on the root of the Retail SDK to generate all deployable packages.\n\n## Retail SDK build tools – Customization settings\nBuildTools\\\\Customization.settings is where most of the configuration values for the Retail SDK are set. These values control how built binaries, components, and packages are named, versioned, and code-signed. After you define this metadata, The Retail SDK build system uses it to give an identity to the assets, and to package the customization assets for all the Retail components.\n\n-   **AssemblyNamePrefix **– Specify the prefix name for the assembly. When you build the Retail SDK, all the assemblies are prefixed with this name.\n-   **CustomAssemblyVersion **– Specify the custom assembly version for all assemblies that are built by using the Retail SDK.\n-   **CustomVersion **– Specify the custom file version for all assemblies that are built by using the Retail SDK.\n-   **CustomName **– Specify the custom name for the assembly.\n-   **CustomDescription **– Specify the description for the assembly.\n-   **CustomDescription **– Specify the publisher for the assembly.\n-   **CustomDescription **– Specify the copyright for the assembly.\n-   **SignAssembly **– Specify **True** if you want to sign the assembly during the build.\n-   **DelaySign **– Specify **True** if you want to delay signing of the assets during the build.\n-   **AssemblyOriginatorKeyFile **– Specify the strong name key to use to sign the assembly.\n-   **ModernPOSPackageCertificateKeyFile **– Specify the PFX file to use to sign Modern POS and Hardware station.\n-   **RetailServerLibraryPathForProxyGeneration **– Specify the customized Retail Server assembly to use for proxy generation (both TypeScript and C\\# proxy).\n-   In the **ItemGroup** section:\n    -   **ISV\\_CommerceRuntime\\_CustomizableFile **– Specify the customized CRT assembly. You can have multiple entries, one for each customized CRT assembly.\n    -   **ISV\\_RetailServer\\_CustomizableFile **– Specify the customized Retail Server assembly. You can have multiple entries, one for each customized Retail Server assembly.\n    -   **ISV\\_HardwareStation\\_CustomizableFile **– Specify the customized Hardware station assembly. You can have multiple entries, one for each customized Hardware station assembly.\n    -   **ISV\\_CustomDatabaseFile\\_Upgrade\\_Custom **– Specify the customized database scripts.\n\n## Building a deployable package for each Retail component\n### Build a deployable package\n\nThe Retail SDK fully supports msbuild. To build the Retail SDK, open a **MSBuild Command Prompt for VS2015** window as an administrator, and run **msbuild** (or, for a non-debug version, run **msbuild /p:Configuration=Release**). [![msbuild2](./media/msbuild2.png)](./media/msbuild2.png)\n\n### Packages\n\nAfter the build is completed, all deployable packages are generated in the Retail SDK/Packages folder. [![packages](./media/packages.png)](./media/packages.png)\n\n#### CRT package\n\nBy default, there is no separate package for CRT, because CRT isn't deployed individually. Instead, CRT assets are packaged together with other application components, such as Modern POS, Retail Server, and Microsoft Dynamics 365 for Operations HQ. In order for the Retail SDK build tools to package CRT in all the components where it's used, you must make the following configuration entries:\n\n1.  **CRT extension assemblies** – These will be the new assemblies where you've written CRT extensions. Specify an entry for CRT extension assemblies in Retail SDK\\\\BuildTools\\\\Customization.settings. [![crt-customization settings](./media/crt-customization-settings.png)](./media/crt-customization-settings.png)\n2.  **CRT commerceruntime.config file** – If you have a new CRT assembly, you must add it to the CRT configuration file so that the runtime can load it. Specify an entry for CRT extension assemblies in Retail SDK\\\\References\\\\commerceruntime.config. [![crt-config](./media/crt-config.png)](./media/crt-config.png)\n\n#### Database package\n\nAs a part of a customization, you might have to upgrade a channel database in addition to a Modern POS offline database. Currently, you use upgrade SQL scripts to upgrade the channel and Modern POS offline databases. You can write an upgrade SQL script and put it at Retail SDK\\\\Database\\\\Upgrade\\\\Custom, so that packaging tools can pick it up and include it in the deployable package for the correct components (Retail Server and Modern POS Offline). [![custom db script](./media/custom-db-script.png)](./media/custom-db-script.png) You must also update Retail SDK\\\\BuildTools\\\\Customization.settings to instruct the build tools which files to package for the database. [![database upgrade customization setting](./media/database-upgrade-customization-setting-1024x311.png)](./media/database-upgrade-customization-setting.png)\n\n##### Deployment of database scripts\n\nDatabase scripts are packaged together with the Retail Server and Modern POS Offline packages, and are run when Retail Server and Modern POS are installed. If there are multiple custom database scripts, they are run in alphabetical order. Therefore, if you want to run the scripts in a specific order, you must name them accordingly. The CRT.RETAILUPGRADEHISTORY table keeps track of which scripts are already applied to the database. Therefore, the next database upgrade will run only those upgrade scripts that don't have an entry in the CRT.RETAILUPGRADEHISTORY table.\n\n#### Retail Server package\n\nIn order for the Retail SDK build tools to package Retail Server, you must make the following configuration entries:\n\n1.  **Retail Server extension assemblies **– These will be the new assemblies where you've written Retail Server customizations. Specify an entry for CRT extension assemblies in Retail SDK\\\\BuildTools\\\\Customization.settings. [![retail server customization setting](./media/retail-server-customization-setting.png)](./media/retail-server-customization-setting.png)\n2.  **Retail Server web.config file** – You must add an entry for Retail Server extension assemblies to the Retail Server web.config file, so that they are loaded and used. Specify an entry for Retail Server Extension assemblies in Retail SDK\\\\Packages\\\\RetailServer\\\\Code\\\\web.config. [![retail server web config](./media/retail-server-web-config.png)](./media/retail-server-web-config.png)\n\nAfter you've specified these settings, you can run MSBuild on the root to build everything and generate deployable packages for all Retail components. The Retail Server deployable package will be generated at Retail SDK\\\\Packages\\\\RetailServer\\\\content.zip. This zip file contains everything that is required in order to deploy Retail Server. You can upload this zip file to LCS and then use it to deploy a new environment. For an existing environment, you currently have to manually copy the zip file, extract it, and then run **content.zip\\\\RetailServer\\\\Scripts\\\\Upgrade\\\\Core\\\\UpdateRetailServer.ps1** in admin mode in Microsoft Windows PowerShell. [![update retail server](./media/update-retail-server-1024x169.png)](./media/update-retail-server.png)\n\n#### Cloud POS\n\nWhen you run MSBuild on the root SDK folder, a CloudPOS package is created together with the other Retail components. The Cloud POS deployable package is generated at Retail SDK\\\\Packages\\\\CloudPos\\\\content.zip. This zip file contains everything that is required in order to deploy Cloud POS. You can upload this zip file to LCS and then use it to deploy a new environment. For an existing environment, you currently have to manually copy the zip file, extract it, and then run **content.zip\\\\RetailCloudPos\\\\Scripts\\\\Upgrade\\\\Core\\\\UpdateCloudPos.ps1** in admin mode in Windows PowerShell. [![UpdateCloudPOS](./media/updatecloudpos.png)](./media/updatecloudpos.png)\n\n#### Retail self-service packages\n\nBoth Modern POS and Hardware station are self-service components. To deploy self-service components, you upload them to the tenant-specific storage, so that they can appear for self-service in Dynamics 365 for Operations. When you run MSBuild on the root SDK folder, a RetailSelfService package is created together with the other Retail components. The RetailSelfService deployable package is generated at RetailSDK\\\\Packages\\\\RetailSelfService\\\\content.zip. This zip file contains everything that is required in order to deploy Retail self-service. You can upload this zip file to LCS and then use it to deploy a new environment. For an existing environment, you currently have to manually copy the zip file, extract it, and then run **content.zip\\\\RetailSelfService\\\\Scripts\\\\Upgrade\\\\UpdateRetailSelfService.ps1** in admin mode in Windows PowerShell. [![UpdateRetailSelfService](./media/updateretailselfservice.png)](./media/updateretailselfservice.png) After Retail self-service is updated, you can go to Dynamics 365 for Operations to verify that the new customized self-service packages are available.\n\n##### Modern POS\n\nOpen the **All retail stores** page, and notice that the new customized Modern POS package is available for selection. [![CustomizedModernPOS](./media/customizedmodernpos-1024x452.png)](./media/customizedmodernpos.png)\n\n##### Hardware station\n\nOpen the **Hardware station profiles** page, and notice that the customized hardware profile is available for selection [![CustomizedHardwareStation](./media/customizedhardwarestation.png)](./media/customizedhardwarestation.png)\n\n## Creating a new environment by using customized packages\nBefore you can use LCS to deploy a new environment by using customized packages, you must first upload all the packages to the project's Asset library. These packages are software packages, and you will see options for Cloud POS, Retail Server, and Retail self-service.\n\n### Step 1\n\nIn the Asset library for the project, upload the customized Retail Server, Retail self-service, and Cloud POS deployable packages to LCS. [![ProjectAssetLibrary](./media/projectassetlibrary-1024x421.png)](./media/projectassetlibrary.png) [![UploadCustomizedRetailServerPackage](./media/uploadcustomizedretailserverpackage-1024x506.png)](./media/uploadcustomizedretailserverpackage.png) [![LCSSoftwarePackages](./media/lcssoftwarepackages.png)](./media/lcssoftwarepackages.png)\n\n### Step 2\n\nRequest a new LCS topology by going to the **Environments** section and requesting a new environment. [![LCSDeployment](./media/lcsdeployment-1024x530.png)](./media/lcsdeployment.png) [![LCSAXBaseVersion](./media/lcsaxbaseversion.png)](./media/lcsaxbaseversion.png) [![SelectCustomizedPackage](./media/selectcustomizedpackage.png)](./media/selectcustomizedpackage.png)\n\n"}