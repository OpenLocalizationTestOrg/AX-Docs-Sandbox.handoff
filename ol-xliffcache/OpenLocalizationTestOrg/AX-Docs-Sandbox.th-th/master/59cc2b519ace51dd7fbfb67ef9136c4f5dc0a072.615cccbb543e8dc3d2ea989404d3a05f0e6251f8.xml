{"nodes":[{"pos":[32,41],"content":"E Classes","needQuote":true,"needEscape":true,"nodes":[{"content":"E Classes","pos":[0,9]}]},{"pos":[55,103],"content":"System API classes that start with the letter E.","needQuote":true,"needEscape":true,"nodes":[{"content":"System API classes that start with the letter E.","pos":[0,48]}]},{"pos":[612,621],"content":"E Classes","linkify":"E Classes","nodes":[{"content":"E Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter E.","pos":[623,671]},{"pos":[673,685],"content":"Class Editor","linkify":"Class Editor","nodes":[{"content":"Class Editor","pos":[0,12]}]},{"pos":[737,744],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[750,758],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[764,771],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[775,781]},{"content":"Description","pos":[857,868]},{"content":"public int columnNo()","pos":[1043,1064]},{"content":"public str currentLine()","pos":[1177,1201]},{"content":"public int currentLineNo()","pos":[1311,1337]},{"content":"public str getLine()","pos":[1445,1465]},{"content":"public int gotoCol(int ColumnNo)","pos":[1579,1611]},{"content":"public int lineNo()","pos":[1713,1732]},{"content":"public MarkMode markMode()","pos":[1847,1873]},{"content":"public boolean matchCase(<ph id=\"ph1\">\\[</ph>boolean UseMatchCase<ph id=\"ph2\">\\]</ph>)","pos":[1981,2031],"source":"public boolean matchCase(\\[boolean UseMatchCase\\])"},{"content":"public boolean moreLines()","pos":[2115,2141]},{"content":"public boolean moreSelectedLines()","pos":[2249,2283]},{"content":"public str path()","pos":[2383,2400]},{"content":"public boolean regexp(<ph id=\"ph1\">\\[</ph>boolean UseRegExp<ph id=\"ph2\">\\]</ph>)","pos":[2517,2561],"source":"public boolean regexp(\\[boolean UseRegExp\\])"},{"content":"public boolean replace(str SearchString, str ReplaceString, boolean ReplaceAll)","pos":[2651,2730]},{"content":"public boolean search(str SearchString)","pos":[2785,2824]},{"content":"public str searchString()","pos":[2919,2944]},{"content":"public int selectionEndCol()","pos":[3053,3081]},{"content":"public int selectionEndLine()","pos":[3187,3216]},{"content":"public int selectionStartCol()","pos":[3321,3351]},{"content":"public int selectionStartLine()","pos":[3455,3486]},{"content":"::public static Editor open(str documentPath)","pos":[3589,3634]},{"content":"public void gotoLine(int LineNo)","pos":[3723,3755]},{"content":"public void closeApplicationObjectDialog()","pos":[3857,3899]},{"content":"public void mark(int line, int col)","pos":[3991,4026]},{"content":"public void executeScript(str scriptName)","pos":[4125,4166]},{"content":"public void nextLine()","pos":[4259,4281]},{"content":"public void firstSelectedLine()","pos":[4393,4424]},{"content":"private void new()","pos":[4527,4545]},{"content":"Initializes a new instance of the Editor class.","pos":[4609,4656]},{"content":"public void unmark()","pos":[4661,4681]},{"content":"public void insertString(str InsString)","pos":[4795,4834]},{"content":"public void close()","pos":[4929,4948]},{"content":"public void nextSelectedLine()","pos":[5063,5093]},{"content":"public void closeSearchDialog()","pos":[5197,5228]},{"content":"public void deleteLines(<ph id=\"ph1\">\\[</ph>int noOfLines<ph id=\"ph2\">\\]</ph>)","pos":[5331,5373],"source":"public void deleteLines(\\[int noOfLines\\])"},{"content":"public void insertLines(str InsString)","pos":[5465,5503]},{"content":"public void firstLine()","pos":[5599,5622]},{"content":"public void deleteChars(<ph id=\"ph1\">\\[</ph>int noOfChars<ph id=\"ph2\">\\]</ph>)","pos":[5733,5775],"source":"public void deleteChars(\\[int noOfChars\\])"},{"pos":[5870,5885],"content":"Method columnNo","linkify":"Method columnNo","nodes":[{"content":"Method columnNo","pos":[0,15]}]},{"pos":[5919,5931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5937,5955],"content":"Method currentLine","linkify":"Method currentLine","nodes":[{"content":"Method currentLine","pos":[0,18]}]},{"pos":[5992,6004],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6010,6030],"content":"Method currentLineNo","linkify":"Method currentLineNo","nodes":[{"content":"Method currentLineNo","pos":[0,20]}]},{"pos":[6069,6081],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6087,6101],"content":"Method getLine","linkify":"Method getLine","nodes":[{"content":"Method getLine","pos":[0,14]}]},{"pos":[6134,6146],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6152,6166],"content":"Method gotoCol","linkify":"Method gotoCol","nodes":[{"content":"Method gotoCol","pos":[0,14]}]},{"pos":[6211,6221],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ColumnNo","pos":[6223,6231]},{"pos":[6240,6252],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6258,6271],"content":"Method lineNo","linkify":"Method lineNo","nodes":[{"content":"Method lineNo","pos":[0,13]}]},{"pos":[6303,6315],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6321,6336],"content":"Method markMode","linkify":"Method markMode","nodes":[{"content":"Method markMode","pos":[0,15]}]},{"pos":[6375,6387],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6393,6409],"content":"Method matchCase","linkify":"Method matchCase","nodes":[{"content":"Method matchCase","pos":[0,16]}]},{"pos":[6470,6480],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"UseMatchCase","pos":[6482,6494]},{"pos":[6503,6515],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6521,6537],"content":"Method moreLines","linkify":"Method moreLines","nodes":[{"content":"Method moreLines","pos":[0,16]}]},{"pos":[6576,6588],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6594,6618],"content":"Method moreSelectedLines","linkify":"Method moreSelectedLines","nodes":[{"content":"Method moreSelectedLines","pos":[0,24]}]},{"pos":[6665,6677],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6683,6694],"content":"Method path","linkify":"Method path","nodes":[{"content":"Method path","pos":[0,11]}]},{"pos":[6724,6736],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6742,6755],"content":"Method regexp","linkify":"Method regexp","nodes":[{"content":"Method regexp","pos":[0,13]}]},{"pos":[6810,6820],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"UseRegExp","pos":[6822,6831]},{"pos":[6840,6852],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6858,6872],"content":"Method replace","linkify":"Method replace","nodes":[{"content":"Method replace","pos":[0,14]}]},{"pos":[6964,6974],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"SearchString","pos":[6976,6988]},{"content":"ReplaceString","pos":[7002,7015]},{"content":"ReplaceAll","pos":[7029,7039]},{"pos":[7048,7060],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7066,7079],"content":"Method search","linkify":"Method search","nodes":[{"content":"Method search","pos":[0,13]}]},{"pos":[7131,7141],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"SearchString","pos":[7143,7155]},{"pos":[7164,7176],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7182,7201],"content":"Method searchString","linkify":"Method searchString","nodes":[{"content":"Method searchString","pos":[0,19]}]},{"pos":[7239,7251],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7257,7279],"content":"Method selectionEndCol","linkify":"Method selectionEndCol","nodes":[{"content":"Method selectionEndCol","pos":[0,22]}]},{"pos":[7320,7332],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7338,7361],"content":"Method selectionEndLine","linkify":"Method selectionEndLine","nodes":[{"content":"Method selectionEndLine","pos":[0,23]}]},{"pos":[7403,7415],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7421,7445],"content":"Method selectionStartCol","linkify":"Method selectionStartCol","nodes":[{"content":"Method selectionStartCol","pos":[0,24]}]},{"pos":[7488,7500],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7506,7531],"content":"Method selectionStartLine","linkify":"Method selectionStartLine","nodes":[{"content":"Method selectionStartLine","pos":[0,25]}]},{"pos":[7575,7587],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7593,7604],"content":"Method open","linkify":"Method open","nodes":[{"content":"Method open","pos":[0,11]}]},{"pos":[7660,7670],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"documentPath","pos":[7672,7684]},{"pos":[7693,7705],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7711,7726],"content":"Method gotoLine","linkify":"Method gotoLine","nodes":[{"content":"Method gotoLine","pos":[0,15]}]},{"pos":[7771,7781],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"LineNo","pos":[7783,7789]},{"pos":[7797,7832],"content":"Method closeApplicationObjectDialog","linkify":"Method closeApplicationObjectDialog","nodes":[{"content":"Method closeApplicationObjectDialog","pos":[0,35]}]},{"pos":[7886,7897],"content":"Method mark","linkify":"Method mark","nodes":[{"content":"Method mark","pos":[0,11]}]},{"pos":[7945,7955],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"line","pos":[7957,7961]},{"content":"col","pos":[7975,7978]},{"pos":[7986,8006],"content":"Method executeScript","linkify":"Method executeScript","nodes":[{"content":"Method executeScript","pos":[0,20]}]},{"pos":[8060,8070],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"scriptName","pos":[8072,8082]},{"pos":[8090,8105],"content":"Method nextLine","linkify":"Method nextLine","nodes":[{"content":"Method nextLine","pos":[0,15]}]},{"pos":[8139,8163],"content":"Method firstSelectedLine","linkify":"Method firstSelectedLine","nodes":[{"content":"Method firstSelectedLine","pos":[0,24]}]},{"pos":[8206,8216],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Editor class.","pos":[8218,8265]},{"pos":[8295,8308],"content":"Method unmark","linkify":"Method unmark","nodes":[{"content":"Method unmark","pos":[0,13]}]},{"pos":[8340,8359],"content":"Method insertString","linkify":"Method insertString","nodes":[{"content":"Method insertString","pos":[0,19]}]},{"pos":[8411,8421],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"InsString","pos":[8423,8432]},{"pos":[8440,8452],"content":"Method close","linkify":"Method close","nodes":[{"content":"Method close","pos":[0,12]}]},{"pos":[8483,8506],"content":"Method nextSelectedLine","linkify":"Method nextSelectedLine","nodes":[{"content":"Method nextSelectedLine","pos":[0,23]}]},{"pos":[8548,8572],"content":"Method closeSearchDialog","linkify":"Method closeSearchDialog","nodes":[{"content":"Method closeSearchDialog","pos":[0,24]}]},{"pos":[8615,8633],"content":"Method deleteLines","linkify":"Method deleteLines","nodes":[{"content":"Method deleteLines","pos":[0,18]}]},{"pos":[8686,8696],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"noOfLines","pos":[8698,8707]},{"pos":[8715,8733],"content":"Method insertLines","linkify":"Method insertLines","nodes":[{"content":"Method insertLines","pos":[0,18]}]},{"pos":[8784,8794],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"InsString","pos":[8796,8805]},{"pos":[8813,8829],"content":"Method firstLine","linkify":"Method firstLine","nodes":[{"content":"Method firstLine","pos":[0,16]}]},{"pos":[8864,8882],"content":"Method deleteChars","linkify":"Method deleteChars","nodes":[{"content":"Method deleteChars","pos":[0,18]}]},{"pos":[8935,8945],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"noOfChars","pos":[8947,8956]},{"pos":[8963,8979],"content":"Class Enumerator","linkify":"Class Enumerator","nodes":[{"content":"Class Enumerator","pos":[0,16]}]},{"pos":[9021,9028],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9034,9042],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[9048,9055],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[9059,9065]},{"content":"Description","pos":[9091,9102]},{"content":"public AnyType current()","pos":[9237,9261]},{"content":"public str definitionString()","pos":[9326,9355]},{"content":"public boolean moveNext()","pos":[9415,9440]},{"content":"public str toString()","pos":[9504,9525]},{"content":"Returns a string that represents the current object.","pos":[9536,9588]},{"content":"public void reset()","pos":[9593,9612]},{"pos":[9685,9699],"content":"Method current","linkify":"Method current","nodes":[{"content":"Method current","pos":[0,14]}]},{"pos":[9736,9748],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9754,9777],"content":"Method definitionString","linkify":"Method definitionString","nodes":[{"content":"Method definitionString","pos":[0,23]}]},{"pos":[9819,9831],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9837,9852],"content":"Method moveNext","linkify":"Method moveNext","nodes":[{"content":"Method moveNext","pos":[0,15]}]},{"pos":[9890,9902],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9908,9923],"content":"Method toString","linkify":"Method toString","nodes":[{"content":"Method toString","pos":[0,15]}]},{"content":"Returns a string that represents the current object.","pos":[9925,9977]},{"pos":[10011,10023],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the current object.","pos":[10025,10069]},{"pos":[10076,10083],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation returns the class name of the object.","pos":[10085,10149]},{"content":"The method can be overridden in a derived class to return values that are meaningful for that type.","pos":[10150,10249]},{"content":"For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.","pos":[10250,10377]},{"pos":[10383,10395],"content":"Method reset","linkify":"Method reset","nodes":[{"content":"Method reset","pos":[0,12]}]},{"pos":[10425,10448],"content":"Class ExecutePermission","linkify":"Class ExecutePermission","nodes":[{"content":"Class ExecutePermission","pos":[0,23]}]},{"content":"The ExecutePermission class controls the execution of X++ code.","pos":[10507,10570]},{"pos":[10576,10583],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class is designed to check permissions for specific APIs.","pos":[10585,10647]},{"content":"For a list of all APIs that are protected by permissions, see Secured APIs.","pos":[10648,10723]},{"content":"Before the protected API is executed, you must call the assert method on the same tier (which is usually the server tier) that the corresponding CodeAccessPermission::demand method is called on.","pos":[10724,10918]},{"content":"Call a method on the server tier from one of the following methods:","pos":[10919,10986]},{"content":"A server static method","pos":[10992,11014]},{"content":"A class instance method that is set to run on the server by using the RunOn class property","pos":[11019,11109]},{"pos":[11115,11123],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following code example shows a new instance of the ExecutePermission class.","pos":[11125,11204]},{"content":"The assert method is called to declare that the code can then call the Thread.new method to create a new thread.","pos":[11205,11317]},{"pos":[11935,11942],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[11946,11952]},{"content":"Description","pos":[12003,12014]},{"content":"public CodeAccessPermission copy()","pos":[12230,12264]},{"content":"Creates and returns a copy of the current permission class object.","pos":[12287,12353]},{"content":"public boolean isSubsetOf(CodeAccessPermission target)","pos":[12372,12426]},{"content":"Determines whether a current permission is a subset of the specified permission.","pos":[12429,12509]},{"content":"public void new()","pos":[12514,12531]},{"content":"Initializes a new instance of the ExecutePermission class.","pos":[12571,12629]},{"pos":[12659,12670],"content":"Method copy","linkify":"Method copy","nodes":[{"content":"Method copy","pos":[0,11]}]},{"content":"Creates and returns a copy of the current permission class object.","pos":[12672,12738]},{"pos":[12785,12797],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A copy of the current permission object.","pos":[12799,12839]},{"pos":[12846,12853],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You override this method when you derive a class from the CodeAccessPermission class.","pos":[12855,12940]},{"pos":[12946,12963],"content":"Method isSubsetOf","linkify":"Method isSubsetOf","nodes":[{"content":"Method isSubsetOf","pos":[0,17]}]},{"content":"Determines whether a current permission is a subset of the specified permission.","pos":[12965,13045]},{"pos":[13112,13122],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"target","pos":[13124,13130]},{"content":"A CodeAccessPermission class object.","pos":[13133,13169]},{"pos":[13176,13188],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if a current permission is a subset of the specified permission; otherwise, false.","pos":[13190,13277]},{"pos":[13284,13291],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You override this method when you derive a class from the CodeAccessPermission class.","pos":[13293,13378]},{"pos":[13384,13394],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the ExecutePermission class.","pos":[13396,13454]},{"content":"End.","pos":[13455,13459]}],"content":"---\n# required metadata\n\ntitle: E Classes\ndescription: System API classes that start with the letter E.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-03-17 20 - 50 - 52\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 68633\nms.assetid: 2402196c-278a-472e-bbf9-c92e4def7078\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.dyn365.ops.intro: Feb-16\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# E Classes\n\nSystem API classes that start with the letter E.\n\nClass Editor\n------------\n\n    class Editor extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                          | Description                                     |\n|---------------------------------------------------------------------------------|-------------------------------------------------|\n| public int columnNo()                                                           |                                                 |\n| public str currentLine()                                                        |                                                 |\n| public int currentLineNo()                                                      |                                                 |\n| public str getLine()                                                            |                                                 |\n| public int gotoCol(int ColumnNo)                                                |                                                 |\n| public int lineNo()                                                             |                                                 |\n| public MarkMode markMode()                                                      |                                                 |\n| public boolean matchCase(\\[boolean UseMatchCase\\])                              |                                                 |\n| public boolean moreLines()                                                      |                                                 |\n| public boolean moreSelectedLines()                                              |                                                 |\n| public str path()                                                               |                                                 |\n| public boolean regexp(\\[boolean UseRegExp\\])                                    |                                                 |\n| public boolean replace(str SearchString, str ReplaceString, boolean ReplaceAll) |                                                 |\n| public boolean search(str SearchString)                                         |                                                 |\n| public str searchString()                                                       |                                                 |\n| public int selectionEndCol()                                                    |                                                 |\n| public int selectionEndLine()                                                   |                                                 |\n| public int selectionStartCol()                                                  |                                                 |\n| public int selectionStartLine()                                                 |                                                 |\n| ::public static Editor open(str documentPath)                                   |                                                 |\n| public void gotoLine(int LineNo)                                                |                                                 |\n| public void closeApplicationObjectDialog()                                      |                                                 |\n| public void mark(int line, int col)                                             |                                                 |\n| public void executeScript(str scriptName)                                       |                                                 |\n| public void nextLine()                                                          |                                                 |\n| public void firstSelectedLine()                                                 |                                                 |\n| private void new()                                                              | Initializes a new instance of the Editor class. |\n| public void unmark()                                                            |                                                 |\n| public void insertString(str InsString)                                         |                                                 |\n| public void close()                                                             |                                                 |\n| public void nextSelectedLine()                                                  |                                                 |\n| public void closeSearchDialog()                                                 |                                                 |\n| public void deleteLines(\\[int noOfLines\\])                                      |                                                 |\n| public void insertLines(str InsString)                                          |                                                 |\n| public void firstLine()                                                         |                                                 |\n| public void deleteChars(\\[int noOfChars\\])                                      |                                                 |\n\n### Method columnNo\n\n    public int columnNo()\n\n#### Return Value\n\n### Method currentLine\n\n    public str currentLine()\n\n#### Return Value\n\n### Method currentLineNo\n\n    public int currentLineNo()\n\n#### Return Value\n\n### Method getLine\n\n    public str getLine()\n\n#### Return Value\n\n### Method gotoCol\n\n    public int gotoCol(int ColumnNo)\n\n#### Parameters\n\nColumnNo  \n\n#### Return Value\n\n### Method lineNo\n\n    public int lineNo()\n\n#### Return Value\n\n### Method markMode\n\n    public MarkMode markMode()\n\n#### Return Value\n\n### Method matchCase\n\n    public boolean matchCase([boolean UseMatchCase])\n\n#### Parameters\n\nUseMatchCase  \n\n#### Return Value\n\n### Method moreLines\n\n    public boolean moreLines()\n\n#### Return Value\n\n### Method moreSelectedLines\n\n    public boolean moreSelectedLines()\n\n#### Return Value\n\n### Method path\n\n    public str path()\n\n#### Return Value\n\n### Method regexp\n\n    public boolean regexp([boolean UseRegExp])\n\n#### Parameters\n\nUseRegExp  \n\n#### Return Value\n\n### Method replace\n\n    public boolean replace(str SearchString, str ReplaceString, boolean ReplaceAll)\n\n#### Parameters\n\nSearchString  \n\n<!-- -->\n\nReplaceString  \n\n<!-- -->\n\nReplaceAll  \n\n#### Return Value\n\n### Method search\n\n    public boolean search(str SearchString)\n\n#### Parameters\n\nSearchString  \n\n#### Return Value\n\n### Method searchString\n\n    public str searchString()\n\n#### Return Value\n\n### Method selectionEndCol\n\n    public int selectionEndCol()\n\n#### Return Value\n\n### Method selectionEndLine\n\n    public int selectionEndLine()\n\n#### Return Value\n\n### Method selectionStartCol\n\n    public int selectionStartCol()\n\n#### Return Value\n\n### Method selectionStartLine\n\n    public int selectionStartLine()\n\n#### Return Value\n\n### Method open\n\n    public static Editor open(str documentPath)\n\n#### Parameters\n\ndocumentPath  \n\n#### Return Value\n\n### Method gotoLine\n\n    public void gotoLine(int LineNo)\n\n#### Parameters\n\nLineNo  \n\n### Method closeApplicationObjectDialog\n\n    public void closeApplicationObjectDialog()\n\n### Method mark\n\n    public void mark(int line, int col)\n\n#### Parameters\n\nline  \n\n<!-- -->\n\ncol  \n\n### Method executeScript\n\n    public void executeScript(str scriptName)\n\n#### Parameters\n\nscriptName  \n\n### Method nextLine\n\n    public void nextLine()\n\n### Method firstSelectedLine\n\n    public void firstSelectedLine()\n\n### Method new\n\nInitializes a new instance of the Editor class.\n\n    private void new()\n\n### Method unmark\n\n    public void unmark()\n\n### Method insertString\n\n    public void insertString(str InsString)\n\n#### Parameters\n\nInsString  \n\n### Method close\n\n    public void close()\n\n### Method nextSelectedLine\n\n    public void nextSelectedLine()\n\n### Method closeSearchDialog\n\n    public void closeSearchDialog()\n\n### Method deleteLines\n\n    public void deleteLines([int noOfLines])\n\n#### Parameters\n\nnoOfLines  \n\n### Method insertLines\n\n    public void insertLines(str InsString)\n\n#### Parameters\n\nInsString  \n\n### Method firstLine\n\n    public void firstLine()\n\n### Method deleteChars\n\n    public void deleteChars([int noOfChars])\n\n#### Parameters\n\nnoOfChars  \n\n## Class Enumerator\n    class Enumerator extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                        | Description                                          |\n|-------------------------------|------------------------------------------------------|\n| public AnyType current()      |                                                      |\n| public str definitionString() |                                                      |\n| public boolean moveNext()     |                                                      |\n| public str toString()         | Returns a string that represents the current object. |\n| public void reset()           |                                                      |\n\n### Method current\n\n    public AnyType current()\n\n#### Return Value\n\n### Method definitionString\n\n    public str definitionString()\n\n#### Return Value\n\n### Method moveNext\n\n    public boolean moveNext()\n\n#### Return Value\n\n### Method toString\n\nReturns a string that represents the current object.\n\n    public str toString()\n\n#### Return Value\n\nA string that represents the current object.\n\n#### Remarks\n\nThe default implementation returns the class name of the object. The method can be overridden in a derived class to return values that are meaningful for that type. For example, an instance of the SysMethodInfo class returns the method name and type of the method, such as instance or static.\n\n### Method reset\n\n    public void reset()\n\n## Class ExecutePermission\n    class ExecutePermission extends CodeAccessPermission\n\nThe ExecutePermission class controls the execution of X++ code.\n\n### Remarks\n\nThis class is designed to check permissions for specific APIs. For a list of all APIs that are protected by permissions, see Secured APIs. Before the protected API is executed, you must call the assert method on the same tier (which is usually the server tier) that the corresponding CodeAccessPermission::demand method is called on. Call a method on the server tier from one of the following methods:\n\n-   A server static method\n-   A class instance method that is set to run on the server by using the RunOn class property\n\n### Examples\n\nThe following code example shows a new instance of the ExecutePermission class. The assert method is called to declare that the code can then call the Thread.new method to create a new thread.\n\n    server static void main(Args args) \n    { \n        Thread _t; \n        ExecutePermission _perm; \n        _perm = new ExecutePermission(); \n        if (!_perm) \n        { \n            return; \n        } \n        _perm.assert(); \n        // Invoke the protected API. \n         _t = new Thread(); \n        // Call member methods. \n        if (_t) \n        { \n            _t.removeOnComplete(true); \n            _t.run(classnum(SysCodeProfiler), identifierstr(transferFile)); \n        } \n        // Optionally, call revertAssert() to limit scope of assert. \n        CodeAccessPermission::revertAssert(); \n    }\n\n### Methods\n\n| Method                                                 | Description                                                                      |\n|--------------------------------------------------------|----------------------------------------------------------------------------------|\n| public CodeAccessPermission copy()                     | Creates and returns a copy of the current permission class object.               |\n| public boolean isSubsetOf(CodeAccessPermission target) | Determines whether a current permission is a subset of the specified permission. |\n| public void new()                                      | Initializes a new instance of the ExecutePermission class.                       |\n\n### Method copy\n\nCreates and returns a copy of the current permission class object.\n\n    public CodeAccessPermission copy()\n\n#### Return Value\n\nA copy of the current permission object.\n\n#### Remarks\n\nYou override this method when you derive a class from the CodeAccessPermission class.\n\n### Method isSubsetOf\n\nDetermines whether a current permission is a subset of the specified permission.\n\n    public boolean isSubsetOf(CodeAccessPermission target)\n\n#### Parameters\n\ntarget  \nA CodeAccessPermission class object.\n\n#### Return Value\n\ntrue if a current permission is a subset of the specified permission; otherwise, false.\n\n#### Remarks\n\nYou override this method when you derive a class from the CodeAccessPermission class.\n\n### Method new\n\nInitializes a new instance of the ExecutePermission class. End.\n\n    public void new()\n\n"}