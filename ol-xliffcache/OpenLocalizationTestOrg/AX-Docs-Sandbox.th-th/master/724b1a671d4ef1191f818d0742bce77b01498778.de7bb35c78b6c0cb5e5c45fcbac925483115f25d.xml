{"nodes":[{"pos":[32,41],"content":"D Classes","needQuote":true,"needEscape":true,"nodes":[{"content":"D Classes","pos":[0,9]}]},{"pos":[55,103],"content":"System API classes that start with the letter D.","needQuote":true,"needEscape":true,"nodes":[{"content":"System API classes that start with the letter D.","pos":[0,48]}]},{"pos":[612,621],"content":"D Classes","linkify":"D Classes","nodes":[{"content":"D Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter D.","pos":[623,671]},{"pos":[673,713],"content":"Class DataEntityDataSourceRuntimeContext","linkify":"Class DataEntityDataSourceRuntimeContext","nodes":[{"content":"Class DataEntityDataSourceRuntimeContext","pos":[0,40]}]},{"pos":[821,828],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[834,842],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[848,855],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[859,865]},{"content":"Description","pos":[940,951]},{"content":"public str name()","pos":[1053,1070]},{"content":"public int id()","pos":[1150,1165]},{"content":"public Common getBuffer()","pos":[1247,1272]},{"content":"public DataEntityDatabaseOperation getDatabaseOperation()","pos":[1344,1401]},{"content":"public str getCompany()","pos":[1441,1464]},{"content":"public boolean getDataSaved()","pos":[1538,1567]},{"content":"public boolean skipDataMethods(<ph id=\"ph1\">\\[</ph>boolean skip<ph id=\"ph2\">\\]</ph>)","pos":[1635,1683],"source":"public boolean skipDataMethods(\\[boolean skip\\])"},{"content":"public boolean skipDeleteMethod(<ph id=\"ph1\">\\[</ph>boolean b<ph id=\"ph2\">\\]</ph>)","pos":[1732,1778],"source":"public boolean skipDeleteMethod(\\[boolean b\\])"},{"content":"public boolean skipValidateWrite(<ph id=\"ph1\">\\[</ph>boolean skip<ph id=\"ph2\">\\]</ph>)","pos":[1829,1879],"source":"public boolean skipValidateWrite(\\[boolean skip\\])"},{"content":"public boolean skipValidateDelete(<ph id=\"ph1\">\\[</ph>boolean skip<ph id=\"ph2\">\\]</ph>)","pos":[1926,1977],"source":"public boolean skipValidateDelete(\\[boolean skip\\])"},{"content":"public boolean skipInitValue(<ph id=\"ph1\">\\[</ph>boolean skip<ph id=\"ph2\">\\]</ph>)","pos":[2023,2069],"source":"public boolean skipInitValue(\\[boolean skip\\])"},{"content":"public boolean skipDefaultRow(<ph id=\"ph1\">\\[</ph>boolean skip<ph id=\"ph2\">\\]</ph>)","pos":[2120,2167],"source":"public boolean skipDefaultRow(\\[boolean skip\\])"},{"content":"public boolean readOnly()","pos":[2217,2242]},{"content":"public boolean oneToMany()","pos":[2314,2340]},{"content":"public boolean optional()","pos":[2411,2436]},{"content":"public boolean dateEffective()","pos":[2508,2538]},{"content":"public boolean conflictDetectionInvoked(<ph id=\"ph1\">\\[</ph>boolean found<ph id=\"ph2\">\\]</ph>)","pos":[2605,2663],"source":"public boolean conflictDetectionInvoked(\\[boolean found\\])"},{"content":"public void new(Common dataSourceBuffer, str dataSourceName, int dataSourceId)","pos":[2702,2780]},{"content":"public void setCompany(str company)","pos":[2799,2834]},{"content":"public void setBuffer(Common buffer)","pos":[2896,2932]},{"content":"public void setDatabaseOperation(DataEntityDatabaseOperation dbOperation)","pos":[2993,3066]},{"content":"public void setDataSaved(boolean saved)","pos":[3090,3129]},{"pos":[3190,3201],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"pos":[3231,3243],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3249,3258],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"pos":[3286,3298],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3304,3320],"content":"Method getBuffer","linkify":"Method getBuffer","nodes":[{"content":"Method getBuffer","pos":[0,16]}]},{"pos":[3358,3370],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3376,3403],"content":"Method getDatabaseOperation","linkify":"Method getDatabaseOperation","nodes":[{"content":"Method getDatabaseOperation","pos":[0,27]}]},{"pos":[3473,3485],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3491,3508],"content":"Method getCompany","linkify":"Method getCompany","nodes":[{"content":"Method getCompany","pos":[0,17]}]},{"pos":[3544,3556],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3562,3581],"content":"Method getDataSaved","linkify":"Method getDataSaved","nodes":[{"content":"Method getDataSaved","pos":[0,19]}]},{"pos":[3623,3635],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3641,3663],"content":"Method skipDataMethods","linkify":"Method skipDataMethods","nodes":[{"content":"Method skipDataMethods","pos":[0,22]}]},{"pos":[3722,3732],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"skip","pos":[3734,3738]},{"pos":[3747,3759],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3765,3788],"content":"Method skipDeleteMethod","linkify":"Method skipDeleteMethod","nodes":[{"content":"Method skipDeleteMethod","pos":[0,23]}]},{"pos":[3845,3855],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"b","pos":[3857,3858]},{"pos":[3867,3879],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3885,3909],"content":"Method skipValidateWrite","linkify":"Method skipValidateWrite","nodes":[{"content":"Method skipValidateWrite","pos":[0,24]}]},{"pos":[3970,3980],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"skip","pos":[3982,3986]},{"pos":[3995,4007],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4013,4038],"content":"Method skipValidateDelete","linkify":"Method skipValidateDelete","nodes":[{"content":"Method skipValidateDelete","pos":[0,25]}]},{"pos":[4100,4110],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"skip","pos":[4112,4116]},{"pos":[4125,4137],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4143,4163],"content":"Method skipInitValue","linkify":"Method skipInitValue","nodes":[{"content":"Method skipInitValue","pos":[0,20]}]},{"pos":[4220,4230],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"skip","pos":[4232,4236]},{"pos":[4245,4257],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4263,4284],"content":"Method skipDefaultRow","linkify":"Method skipDefaultRow","nodes":[{"content":"Method skipDefaultRow","pos":[0,21]}]},{"pos":[4342,4352],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"skip","pos":[4354,4358]},{"pos":[4367,4379],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4385,4400],"content":"Method readOnly","linkify":"Method readOnly","nodes":[{"content":"Method readOnly","pos":[0,15]}]},{"pos":[4438,4450],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4456,4472],"content":"Method oneToMany","linkify":"Method oneToMany","nodes":[{"content":"Method oneToMany","pos":[0,16]}]},{"pos":[4511,4523],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4529,4544],"content":"Method optional","linkify":"Method optional","nodes":[{"content":"Method optional","pos":[0,15]}]},{"pos":[4582,4594],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4600,4620],"content":"Method dateEffective","linkify":"Method dateEffective","nodes":[{"content":"Method dateEffective","pos":[0,20]}]},{"pos":[4663,4675],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4681,4712],"content":"Method conflictDetectionInvoked","linkify":"Method conflictDetectionInvoked","nodes":[{"content":"Method conflictDetectionInvoked","pos":[0,31]}]},{"pos":[4781,4791],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"found","pos":[4793,4798]},{"pos":[4807,4819],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4825,4835],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[4926,4936],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceBuffer","pos":[4938,4954]},{"content":"dataSourceName","pos":[4968,4982]},{"content":"dataSourceId","pos":[4996,5008]},{"pos":[5016,5033],"content":"Method setCompany","linkify":"Method setCompany","nodes":[{"content":"Method setCompany","pos":[0,17]}]},{"pos":[5081,5091],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"company","pos":[5093,5100]},{"pos":[5108,5124],"content":"Method setBuffer","linkify":"Method setBuffer","nodes":[{"content":"Method setBuffer","pos":[0,16]}]},{"pos":[5173,5183],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"buffer","pos":[5185,5191]},{"pos":[5199,5226],"content":"Method setDatabaseOperation","linkify":"Method setDatabaseOperation","nodes":[{"content":"Method setDatabaseOperation","pos":[0,27]}]},{"pos":[5312,5322],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dbOperation","pos":[5324,5335]},{"pos":[5343,5362],"content":"Method setDataSaved","linkify":"Method setDataSaved","nodes":[{"content":"Method setDataSaved","pos":[0,19]}]},{"pos":[5414,5424],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"saved","pos":[5426,5431]},{"pos":[5438,5463],"content":"Class DataEntityPersister","linkify":"Class DataEntityPersister","nodes":[{"content":"Class DataEntityPersister","pos":[0,25]}]},{"pos":[5514,5521],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5527,5535],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5541,5548],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5552,5558]},{"content":"Description","pos":[5764,5775]},{"content":"public boolean doSaveDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)","pos":[6008,6125]},{"content":"public Common doFindDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)","pos":[6236,6352]},{"content":"public boolean hasDataSourceRecordChanged(int dataSourceId, Common originalRecord, Common updatedRecord)","pos":[6464,6568]},{"content":"public str getCompanyForDataSource(DataEntityRuntimeContext entityCtx, int dataSourceId)","pos":[6692,6780]},{"content":"public int getValidTimeStateUpdateModeForDataSource(DataEntityRuntimeContext entityCtx, int dataSourceId)","pos":[6920,7025]},{"content":"public Common findDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)","pos":[7148,7262]},{"content":"public boolean saveDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)","pos":[7376,7491]},{"content":"public void doMapEntityToDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)","pos":[7604,7725]},{"content":"public void mapEntityToDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)","pos":[7832,7951]},{"content":"public void doMapDataSourceToEntity(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)","pos":[8060,8181]},{"content":"public void selectDataSourceBufferByRecId(Common dataSourceBuffer, Int64 dataSourceRecId, Boolean explicitlyForUpdate, Boolean fetchActiveRecordOnly)","pos":[8288,8437]},{"content":"public void doPersistEntity(DataEntityRuntimeContext entityCtx)","pos":[8516,8579]},{"content":"public void doInitializeDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)","pos":[8744,8864]},{"content":"public void initializeDataSource(DataEntityRuntimeContext entityCtx, str dataSourceName, Common dataSourceBuffer, int dataSourceId, Boolean optional, Boolean readonly, Boolean oneToMany, Boolean dateEffective)","pos":[8972,9181]},{"pos":[9203,9226],"content":"Method doSaveDataSource","linkify":"Method doSaveDataSource","nodes":[{"content":"Method doSaveDataSource","pos":[0,23]}]},{"pos":[9356,9366],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[9368,9377]},{"content":"dataSourceCtx","pos":[9391,9404]},{"pos":[9413,9425],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9431,9454],"content":"Method doFindDataSource","linkify":"Method doFindDataSource","nodes":[{"content":"Method doFindDataSource","pos":[0,23]}]},{"pos":[9583,9593],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[9595,9604]},{"content":"dataSourceCtx","pos":[9618,9631]},{"pos":[9640,9652],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9658,9691],"content":"Method hasDataSourceRecordChanged","linkify":"Method hasDataSourceRecordChanged","nodes":[{"content":"Method hasDataSourceRecordChanged","pos":[0,33]}]},{"pos":[9808,9818],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceId","pos":[9820,9832]},{"content":"originalRecord","pos":[9846,9860]},{"content":"updatedRecord","pos":[9874,9887]},{"pos":[9896,9908],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9914,9944],"content":"Method getCompanyForDataSource","linkify":"Method getCompanyForDataSource","nodes":[{"content":"Method getCompanyForDataSource","pos":[0,30]}]},{"pos":[10045,10055],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[10057,10066]},{"content":"dataSourceId","pos":[10080,10092]},{"pos":[10101,10113],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10119,10166],"content":"Method getValidTimeStateUpdateModeForDataSource","linkify":"Method getValidTimeStateUpdateModeForDataSource","nodes":[{"content":"Method getValidTimeStateUpdateModeForDataSource","pos":[0,47]}]},{"pos":[10284,10294],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[10296,10305]},{"content":"dataSourceId","pos":[10319,10331]},{"pos":[10340,10352],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10358,10379],"content":"Method findDataSource","linkify":"Method findDataSource","nodes":[{"content":"Method findDataSource","pos":[0,21]}]},{"pos":[10506,10516],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[10518,10527]},{"content":"dataSourceCtx","pos":[10541,10554]},{"pos":[10563,10575],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10581,10602],"content":"Method saveDataSource","linkify":"Method saveDataSource","nodes":[{"content":"Method saveDataSource","pos":[0,21]}]},{"pos":[10730,10740],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[10742,10751]},{"content":"dataSourceCtx","pos":[10765,10778]},{"pos":[10787,10799],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10805,10835],"content":"Method doMapEntityToDataSource","linkify":"Method doMapEntityToDataSource","nodes":[{"content":"Method doMapEntityToDataSource","pos":[0,30]}]},{"pos":[10969,10979],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[10981,10990]},{"content":"dataSourceCtx","pos":[11004,11017]},{"pos":[11025,11053],"content":"Method mapEntityToDataSource","linkify":"Method mapEntityToDataSource","nodes":[{"content":"Method mapEntityToDataSource","pos":[0,28]}]},{"pos":[11185,11195],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[11197,11206]},{"content":"dataSourceCtx","pos":[11220,11233]},{"pos":[11241,11271],"content":"Method doMapDataSourceToEntity","linkify":"Method doMapDataSourceToEntity","nodes":[{"content":"Method doMapDataSourceToEntity","pos":[0,30]}]},{"pos":[11405,11415],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[11417,11426]},{"content":"dataSourceCtx","pos":[11440,11453]},{"pos":[11461,11497],"content":"Method selectDataSourceBufferByRecId","linkify":"Method selectDataSourceBufferByRecId","nodes":[{"content":"Method selectDataSourceBufferByRecId","pos":[0,36]}]},{"pos":[11659,11669],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceBuffer","pos":[11671,11687]},{"content":"dataSourceRecId","pos":[11701,11716]},{"content":"explicitlyForUpdate","pos":[11730,11749]},{"content":"fetchActiveRecordOnly","pos":[11763,11784]},{"pos":[11792,11814],"content":"Method doPersistEntity","linkify":"Method doPersistEntity","nodes":[{"content":"Method doPersistEntity","pos":[0,22]}]},{"pos":[11890,11900],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[11902,11911]},{"pos":[11919,11948],"content":"Method doInitializeDataSource","linkify":"Method doInitializeDataSource","nodes":[{"content":"Method doInitializeDataSource","pos":[0,29]}]},{"pos":[12081,12091],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[12093,12102]},{"content":"dataSourceCtx","pos":[12116,12129]},{"pos":[12137,12164],"content":"Method initializeDataSource","linkify":"Method initializeDataSource","nodes":[{"content":"Method initializeDataSource","pos":[0,27]}]},{"pos":[12386,12396],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"entityCtx","pos":[12398,12407]},{"content":"dataSourceName","pos":[12421,12435]},{"content":"dataSourceBuffer","pos":[12449,12465]},{"content":"dataSourceId","pos":[12479,12491]},{"content":"optional","pos":[12505,12513]},{"content":"readonly","pos":[12527,12535]},{"content":"oneToMany","pos":[12549,12558]},{"content":"dateEffective","pos":[12572,12585]},{"pos":[12592,12622],"content":"Class DataEntityRuntimeContext","linkify":"Class DataEntityRuntimeContext","nodes":[{"content":"Class DataEntityRuntimeContext","pos":[0,30]}]},{"pos":[12678,12685],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12691,12699],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[12705,12712],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[12716,12722]},{"content":"Description","pos":[12819,12830]},{"content":"public DataEntityDatabaseOperation getDatabaseOperation()","pos":[12954,13011]},{"content":"public AnyType getCustomProperty(str name)","pos":[13073,13115]},{"content":"public Common getEntityRecord()","pos":[13192,13223]},{"content":"public DataEntityDataSourceRuntimeContext getRuntimeContextByName(str datasourceName)","pos":[13311,13396]},{"content":"public void new(DataEntityDatabaseOperation operation, Common record, DataEntityPersister persister)","pos":[13430,13530]},{"content":"public void setCustomProperty(str name, AnyType obj)","pos":[13549,13601]},{"pos":[13671,13698],"content":"Method getDatabaseOperation","linkify":"Method getDatabaseOperation","nodes":[{"content":"Method getDatabaseOperation","pos":[0,27]}]},{"pos":[13768,13780],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13786,13810],"content":"Method getCustomProperty","linkify":"Method getCustomProperty","nodes":[{"content":"Method getCustomProperty","pos":[0,24]}]},{"pos":[13865,13875],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[13877,13881]},{"pos":[13890,13902],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13908,13930],"content":"Method getEntityRecord","linkify":"Method getEntityRecord","nodes":[{"content":"Method getEntityRecord","pos":[0,22]}]},{"pos":[13974,13986],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13992,14022],"content":"Method getRuntimeContextByName","linkify":"Method getRuntimeContextByName","nodes":[{"content":"Method getRuntimeContextByName","pos":[0,30]}]},{"pos":[14120,14130],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"datasourceName","pos":[14132,14146]},{"pos":[14155,14167],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14173,14183],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[14296,14306],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"operation","pos":[14308,14317]},{"content":"record","pos":[14331,14337]},{"content":"persister","pos":[14351,14360]},{"pos":[14368,14392],"content":"Method setCustomProperty","linkify":"Method setCustomProperty","nodes":[{"content":"Method setCustomProperty","pos":[0,24]}]},{"pos":[14457,14467],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[14469,14473]},{"content":"obj","pos":[14487,14490]},{"pos":[14497,14516],"content":"Class DataEventArgs","linkify":"Class DataEventArgs","nodes":[{"content":"Class DataEventArgs","pos":[0,19]}]},{"pos":[14546,14553],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14559,14567],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[14573,14580],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[14584,14590]},{"content":"Description","pos":[14593,14604]},{"pos":[14636,14665],"content":"Class DataImportExportManager","linkify":"Class DataImportExportManager","nodes":[{"content":"Class DataImportExportManager","pos":[0,29]}]},{"pos":[14720,14727],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14733,14741],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[14747,14754],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[14758,14764]},{"content":"Description","pos":[14797,14808]},{"content":"public void finalize()","pos":[14868,14890]},{"content":"public void new()","pos":[14923,14940]},{"content":"public void importDataFile(str name)","pos":[14978,15014]},{"pos":[15036,15051],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[15085,15095],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[15124,15145],"content":"Method importDataFile","linkify":"Method importDataFile","nodes":[{"content":"Method importDataFile","pos":[0,21]}]},{"pos":[15194,15204],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[15206,15210]},{"pos":[15217,15240],"content":"Class DataImportManager","linkify":"Class DataImportManager","nodes":[{"content":"Class DataImportManager","pos":[0,23]}]},{"pos":[15289,15296],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15302,15310],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[15316,15323],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[15327,15333]},{"content":"Description","pos":[15423,15434]},{"content":"::public static int commitImportSessionInfo(DataImportSessionInfo impInfo)","pos":[15645,15719]},{"content":"::public static int endTableDataCopy(ImportTableDataInfo dataInfo)","pos":[15804,15870]},{"content":"::public static int endTableSchemaCopy(ImportTableSchemaInfo schInfo)","pos":[15963,16032]},{"content":"::public static int finishMergeTableData()","pos":[16122,16164]},{"content":"::public static int getImportSessionProgress(DataImportSessionInfo impInfo)","pos":[16281,16356]},{"content":"::public static int mergeAllData()","pos":[16440,16474]},{"content":"::public static int mergeTableData(int mergeStep, TableId tableId, boolean updateHeartbeat)","pos":[16599,16690]},{"content":"::public static int recoverImportSession(DataImportSessionInfo impInfo, boolean fTryToResume)","pos":[16758,16851]},{"content":"public void new()","pos":[16917,16934]},{"content":"Initializes a new instance of the DataImportManager class.","pos":[17013,17071]},{"pos":[17079,17109],"content":"Method commitImportSessionInfo","linkify":"Method commitImportSessionInfo","nodes":[{"content":"Method commitImportSessionInfo","pos":[0,30]}]},{"pos":[17194,17204],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"impInfo","pos":[17206,17213]},{"pos":[17222,17234],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17240,17263],"content":"Method endTableDataCopy","linkify":"Method endTableDataCopy","nodes":[{"content":"Method endTableDataCopy","pos":[0,23]}]},{"pos":[17340,17350],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataInfo","pos":[17352,17360]},{"pos":[17369,17381],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17387,17412],"content":"Method endTableSchemaCopy","linkify":"Method endTableSchemaCopy","nodes":[{"content":"Method endTableSchemaCopy","pos":[0,25]}]},{"pos":[17492,17502],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"schInfo","pos":[17504,17511]},{"pos":[17520,17532],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17538,17565],"content":"Method finishMergeTableData","linkify":"Method finishMergeTableData","nodes":[{"content":"Method finishMergeTableData","pos":[0,27]}]},{"pos":[17618,17630],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17636,17667],"content":"Method getImportSessionProgress","linkify":"Method getImportSessionProgress","nodes":[{"content":"Method getImportSessionProgress","pos":[0,31]}]},{"pos":[17753,17763],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"impInfo","pos":[17765,17772]},{"pos":[17781,17793],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17799,17818],"content":"Method mergeAllData","linkify":"Method mergeAllData","nodes":[{"content":"Method mergeAllData","pos":[0,19]}]},{"pos":[17863,17875],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17881,17902],"content":"Method mergeTableData","linkify":"Method mergeTableData","nodes":[{"content":"Method mergeTableData","pos":[0,21]}]},{"pos":[18004,18014],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"mergeStep","pos":[18016,18025]},{"content":"tableId","pos":[18039,18046]},{"content":"updateHeartbeat","pos":[18060,18075]},{"pos":[18084,18096],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18102,18129],"content":"Method recoverImportSession","linkify":"Method recoverImportSession","nodes":[{"content":"Method recoverImportSession","pos":[0,27]}]},{"pos":[18233,18243],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"impInfo","pos":[18245,18252]},{"content":"fTryToResume","pos":[18266,18278]},{"pos":[18287,18299],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18305,18315],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the DataImportManager class.","pos":[18317,18375]},{"pos":[18403,18430],"content":"Class DataImportSessionInfo","linkify":"Class DataImportSessionInfo","nodes":[{"content":"Class DataImportSessionInfo","pos":[0,27]}]},{"pos":[18483,18490],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18496,18504],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[18510,18517],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[18521,18527]},{"content":"Description","pos":[18602,18613]},{"content":"public int addImportTable(str szTabName, int ulTableId, boolean fAlwaysUpdate)","pos":[18787,18865]},{"content":"public int getCurrentProgress()","pos":[18920,18951]},{"content":"public str getCurrentTable()","pos":[19053,19081]},{"content":"public int setSourceGUID(Guid szSourceGUID)","pos":[19186,19229]},{"content":"public int setSysDataImpLogId(int sysDataImpLogId)","pos":[19319,19369]},{"content":"public void new(str szInpFileName, boolean fUpdateExistingData)","pos":[19452,19515]},{"content":"Initializes a new instance of the Object class.","pos":[19533,19580]},{"pos":[19588,19609],"content":"Method addImportTable","linkify":"Method addImportTable","nodes":[{"content":"Method addImportTable","pos":[0,21]}]},{"pos":[19700,19710],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"szTabName","pos":[19712,19721]},{"content":"ulTableId","pos":[19735,19744]},{"content":"fAlwaysUpdate","pos":[19758,19771]},{"pos":[19780,19792],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19798,19823],"content":"Method getCurrentProgress","linkify":"Method getCurrentProgress","nodes":[{"content":"Method getCurrentProgress","pos":[0,25]}]},{"pos":[19867,19879],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19885,19907],"content":"Method getCurrentTable","linkify":"Method getCurrentTable","nodes":[{"content":"Method getCurrentTable","pos":[0,22]}]},{"pos":[19948,19960],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19966,19986],"content":"Method setSourceGUID","linkify":"Method setSourceGUID","nodes":[{"content":"Method setSourceGUID","pos":[0,20]}]},{"pos":[20042,20052],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"szSourceGUID","pos":[20054,20066]},{"pos":[20075,20087],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20093,20118],"content":"Method setSysDataImpLogId","linkify":"Method setSysDataImpLogId","nodes":[{"content":"Method setSysDataImpLogId","pos":[0,25]}]},{"pos":[20181,20191],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sysDataImpLogId","pos":[20193,20208]},{"pos":[20217,20229],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20235,20245],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[20247,20294]},{"pos":[20370,20380],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"szInpFileName","pos":[20382,20395]},{"content":"fUpdateExistingData","pos":[20409,20428]},{"pos":[20435,20448],"content":"Class DataSet","linkify":"Class DataSet","nodes":[{"content":"Class DataSet","pos":[0,13]}]},{"pos":[20489,20496],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20502,20510],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[20516,20523],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[20527,20533]},{"content":"Description","pos":[20585,20596]},{"content":"public FormBuildDataSource addDataSource(str name)","pos":[20911,20961]},{"content":"public str changedBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[21103,21138],"source":"public str changedBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who last changed the application object.","pos":[21161,21235]},{"content":"public Date changedDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[21295,21334],"source":"public Date changedDate(\\[Date value\\])"},{"content":"Gets or sets the date an application object was last changed.","pos":[21353,21414]},{"content":"public str changedTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[21487,21524],"source":"public str changedTime(\\[str value\\])"},{"content":"Gets or sets the time an application object was last changed.","pos":[21545,21606]},{"content":"public str createdBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[21679,21714],"source":"public str createdBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who created the application object.","pos":[21737,21806]},{"content":"public Date creationDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[21871,21911],"source":"public Date creationDate(\\[Date value\\])"},{"content":"Gets or sets the date an application object was created.","pos":[21929,21985]},{"content":"public str creationTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[22063,22101],"source":"public str creationTime(\\[str value\\])"},{"content":"public FormBuildDataSource dataSource(int dataSourceNo)","pos":[22255,22310]},{"content":"public int dataSourceCount()","pos":[22447,22475]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[22639,22669],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name used in code to identify a form, report, table, query, or another Microsoft Dynamics AX application object.","pos":[22697,22826]},{"content":"public Guid origin(<ph id=\"ph1\">\\[</ph>Guid value<ph id=\"ph2\">\\]</ph>)","pos":[22831,22865],"source":"public Guid origin(\\[Guid value\\])"},{"content":"public void load(str name, <ph id=\"ph1\">\\[</ph>boolean buildMode<ph id=\"ph2\">\\]</ph>)","pos":[23023,23072],"source":"public void load(str name, \\[boolean buildMode\\])"},{"content":"public void finalize()","pos":[23215,23237]},{"content":"public void new(<ph id=\"ph1\">\\[</ph>str name<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean buildMode<ph id=\"ph4\">\\]</ph>)","pos":[23407,23459],"source":"public void new(\\[str name\\], \\[boolean buildMode\\])"},{"content":"Initializes a new instance of the TreeNode class.","pos":[23465,23514]},{"content":"public void save()","pos":[23599,23617]},{"pos":[23794,23814],"content":"Method addDataSource","linkify":"Method addDataSource","nodes":[{"content":"Method addDataSource","pos":[0,20]}]},{"pos":[23877,23887],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[23889,23893]},{"pos":[23902,23914],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[23920,23936],"content":"Method changedBy","linkify":"Method changedBy","nodes":[{"content":"Method changedBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who last changed the application object.","pos":[23938,24012]},{"pos":[24058,24068],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[24070,24075]},{"pos":[24084,24096],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user.","pos":[24098,24119]},{"pos":[24125,24143],"content":"Method changedDate","linkify":"Method changedDate","nodes":[{"content":"Method changedDate","pos":[0,18]}]},{"content":"Gets or sets the date an application object was last changed.","pos":[24145,24206]},{"pos":[24256,24266],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[24268,24273]},{"pos":[24282,24294],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date an application object was last changed.","pos":[24296,24344]},{"pos":[24350,24368],"content":"Method changedTime","linkify":"Method changedTime","nodes":[{"content":"Method changedTime","pos":[0,18]}]},{"content":"Gets or sets the time an application object was last changed.","pos":[24370,24431]},{"pos":[24479,24489],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[24491,24496]},{"pos":[24505,24517],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The time an application object was last changed.","pos":[24519,24567]},{"pos":[24573,24589],"content":"Method createdBy","linkify":"Method createdBy","nodes":[{"content":"Method createdBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who created the application object.","pos":[24591,24660]},{"pos":[24706,24716],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[24718,24723]},{"pos":[24732,24744],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user.","pos":[24746,24767]},{"pos":[24773,24792],"content":"Method creationDate","linkify":"Method creationDate","nodes":[{"content":"Method creationDate","pos":[0,19]}]},{"content":"Gets or sets the date an application object was created.","pos":[24794,24850]},{"pos":[24901,24911],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[24913,24918]},{"pos":[24927,24939],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date an application object was created.","pos":[24941,24984]},{"pos":[24990,25009],"content":"Method creationTime","linkify":"Method creationTime","nodes":[{"content":"Method creationTime","pos":[0,19]}]},{"pos":[25058,25068],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[25070,25075]},{"pos":[25084,25096],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25102,25119],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"pos":[25187,25197],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceNo","pos":[25199,25211]},{"pos":[25220,25232],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25238,25260],"content":"Method dataSourceCount","linkify":"Method dataSourceCount","nodes":[{"content":"Method dataSourceCount","pos":[0,22]}]},{"pos":[25301,25313],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25319,25330],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name used in code to identify a form, report, table, query, or another Microsoft Dynamics AX application object.","pos":[25332,25461]},{"pos":[25502,25512],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[25514,25519]},{"pos":[25528,25540],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name used in code to identify an application object.","pos":[25542,25598]},{"pos":[25605,25612],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[25614,25708]},{"content":"Begins with a letter.","pos":[25714,25735]},{"content":"Doesn't exceed 250 characters.","pos":[25740,25770]},{"content":"Can include numbers and underscore characters.","pos":[25775,25821]},{"content":"Cannot include punctuation or spaces.","pos":[25826,25863]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enumeration types, classes, and so on.","pos":[25868,25998]},{"pos":[26004,26017],"content":"Method origin","linkify":"Method origin","nodes":[{"content":"Method origin","pos":[0,13]}]},{"pos":[26062,26072],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[26074,26079]},{"pos":[26088,26100],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26106,26117],"content":"Method load","linkify":"Method load","nodes":[{"content":"Method load","pos":[0,11]}]},{"pos":[26177,26187],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[26189,26193]},{"content":"buildMode","pos":[26207,26216]},{"pos":[26224,26239],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[26273,26283],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the TreeNode class.","pos":[26285,26334]},{"pos":[26395,26405],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[26407,26411]},{"content":"buildMode","pos":[26425,26434]},{"pos":[26442,26453],"content":"Method save","linkify":"Method save","nodes":[{"content":"Method save","pos":[0,11]}]},{"pos":[26482,26498],"content":"Class DataSetRun","linkify":"Class DataSetRun","nodes":[{"content":"Class DataSetRun","pos":[0,16]}]},{"pos":[26543,26550],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26556,26564],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[26570,26577],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[26581,26587]},{"content":"Description","pos":[26763,26774]},{"content":"public FormDataSource addDataSource(TableId tableId, <ph id=\"ph1\">\\[</ph>str joinDataSourceName<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>DataSourceLinkTypePropertyValues linkType<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>FieldId joinFieldId<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str newDataSourceName<ph id=\"ph8\">\\]</ph>)","pos":[27109,27288],"source":"public FormDataSource addDataSource(TableId tableId, \\[str joinDataSourceName\\], \\[DataSourceLinkTypePropertyValues linkType\\], \\[FieldId joinFieldId\\], \\[str newDataSourceName\\])"},{"content":"Adds a new data source to the dataSetRun class.","pos":[27291,27338]},{"content":"public DataSet dataSet()","pos":[27373,27397]},{"content":"public FormObjectSet dataSource(<ph id=\"ph1\">\\[</ph>AnyType objectSet<ph id=\"ph2\">\\]</ph>)","pos":[27637,27691],"source":"public FormObjectSet dataSource(\\[AnyType objectSet\\])"},{"content":"public FormObjectSet dataSourceById(int id)","pos":[27901,27944]},{"content":"public int dataSourceCount()","pos":[28165,28193]},{"content":"public Array getActiveFields(int dataSourceId)","pos":[28429,28475]},{"content":"public container getChildrenById(str dataSourceName, <ph id=\"ph1\">\\[</ph>AnyType parentId<ph id=\"ph2\">\\]</ph>)","pos":[28693,28767],"source":"public container getChildrenById(str dataSourceName, \\[AnyType parentId\\])"},{"content":"Gets the children of a data source by using the parent ID.","pos":[28875,28933]},{"content":"public container getChildrenByIndex(str dataSourceName, <ph id=\"ph1\">\\[</ph>int parentIndex<ph id=\"ph2\">\\]</ph>)","pos":[28957,29033],"source":"public container getChildrenByIndex(str dataSourceName, \\[int parentIndex\\])"},{"content":"Gets the children of a data source by using the parent index.","pos":[29139,29200]},{"content":"public DataSetError getLastError()","pos":[29221,29255]},{"content":"public AnyType getParentById(str dataSourceName, AnyType childId)","pos":[29485,29550]},{"content":"Gets the parent of a data source by using the child ID.","pos":[29667,29722]},{"content":"public int getParentByIndex(str dataSourceName, int childIndex)","pos":[29749,29812]},{"content":"Gets the parent of a data source by using the child index.","pos":[29931,29989]},{"content":"public int getRowIndexFromRowHierarchyId(str dataSourceName, AnyType id)","pos":[30013,30085]},{"content":"Gets the row index on a data source by using a row hierarchy ID.","pos":[30195,30259]},{"content":"public boolean initComplete()","pos":[30277,30306]},{"content":"public str name()","pos":[30541,30558]},{"content":"public FormObjectSet objectSet(<ph id=\"ph1\">\\[</ph>AnyType objectSet<ph id=\"ph2\">\\]</ph>)","pos":[30805,30858],"source":"public FormObjectSet objectSet(\\[AnyType objectSet\\])"},{"content":"public container pack()","pos":[31069,31092]},{"content":"Serializes the current instance of the DataSetRun class.","pos":[31251,31307]},{"content":"public boolean runCalled()","pos":[31333,31359]},{"content":"public boolean unpack(container pack)","pos":[31597,31634]},{"content":"Deserializes the pack parameter value to an instance of the DataSetRun class.","pos":[31779,31856]},{"content":"::public static DataSetRun create(str name, container pack)","pos":[31861,31920]},{"content":"::public static DataSetRun createRunTime(container pack)","pos":[32125,32181]},{"content":"public void setLastError(DataSetError error)","pos":[32389,32433]},{"content":"public void run()","pos":[32653,32670]},{"content":"public void setLookupMode()","pos":[32917,32944]},{"content":"Puts the dataset into lookup mode.","pos":[33099,33133]},{"content":"public void new(xArgs args)","pos":[33181,33208]},{"content":"Initializes a new instance of the Object class.","pos":[33363,33410]},{"content":"public void finalize()","pos":[33445,33467]},{"content":"public void createRecord(str formDataSourceName, <ph id=\"ph1\">\\[</ph>boolean append<ph id=\"ph2\">\\]</ph>)","pos":[33709,33777],"source":"public void createRecord(str formDataSourceName, \\[boolean append\\])"},{"content":"Creates a new record.","pos":[33891,33912]},{"content":"public void setActiveFields(int dataSourceId, Array fieldIds)","pos":[33973,34034]},{"content":"public void setExternalContext(<ph id=\"ph1\">\\[</ph>Common externalContext<ph id=\"ph2\">\\]</ph>)","pos":[34237,34295],"source":"public void setExternalContext(\\[Common externalContext\\])"},{"content":"Sets the external context on the dataSetRun object.","pos":[34419,34470]},{"content":"public void init()","pos":[34501,34519]},{"content":"public void enableHierarchicalDataBrowsing(str hierarchyPKDataSourceName, FieldId hierarchyPKfieldId, str hierarchyFKDataSourceName, FieldId hierarchyFKfieldId)","pos":[34765,34925]},{"content":"Enables hierarchical data browsing.","pos":[34947,34982]},{"content":"public void disableHierarchicalDataBrowsing(str dataSourceName)","pos":[35029,35092]},{"content":"Disables hierarchical data browsing.","pos":[35211,35247]},{"pos":[35296,35316],"content":"Method addDataSource","linkify":"Method addDataSource","nodes":[{"content":"Method addDataSource","pos":[0,20]}]},{"content":"Adds a new data source to the dataSetRun class.","pos":[35318,35365]},{"pos":[35549,35559],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[35561,35568]},{"content":"The name of the new data source.","pos":[35571,35603]},{"content":"joinDataSourceName","pos":[35615,35633]},{"content":"The name of the new data source.","pos":[35636,35668]},{"content":"linkType","pos":[35680,35688]},{"content":"The name of the new data source.","pos":[35691,35723]},{"content":"joinFieldId","pos":[35735,35746]},{"content":"The name of the new data source.","pos":[35749,35781]},{"content":"newDataSourceName","pos":[35793,35810]},{"content":"The name of the new data source.","pos":[35813,35845]},{"pos":[35852,35864],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new data source.","pos":[35866,35886]},{"pos":[35892,35906],"content":"Method dataSet","linkify":"Method dataSet","nodes":[{"content":"Method dataSet","pos":[0,14]}]},{"pos":[35943,35955],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[35961,35978],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"pos":[36043,36053],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"objectSet","pos":[36055,36064]},{"pos":[36073,36085],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36091,36112],"content":"Method dataSourceById","linkify":"Method dataSourceById","nodes":[{"content":"Method dataSourceById","pos":[0,21]}]},{"pos":[36168,36178],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"id","pos":[36180,36182]},{"pos":[36191,36203],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36209,36231],"content":"Method dataSourceCount","linkify":"Method dataSourceCount","nodes":[{"content":"Method dataSourceCount","pos":[0,22]}]},{"pos":[36272,36284],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36290,36312],"content":"Method getActiveFields","linkify":"Method getActiveFields","nodes":[{"content":"Method getActiveFields","pos":[0,22]}]},{"pos":[36371,36381],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceId","pos":[36383,36395]},{"pos":[36404,36416],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36422,36444],"content":"Method getChildrenById","linkify":"Method getChildrenById","nodes":[{"content":"Method getChildrenById","pos":[0,22]}]},{"content":"Gets the children of a data source by using the parent ID.","pos":[36446,36504]},{"pos":[36589,36599],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[36601,36615]},{"content":"The parent ID.","pos":[36618,36632]},{"content":"parentId","pos":[36644,36652]},{"content":"The parent ID.","pos":[36655,36669]},{"pos":[36676,36688],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container for the children.","pos":[36690,36719]},{"pos":[36725,36750],"content":"Method getChildrenByIndex","linkify":"Method getChildrenByIndex","nodes":[{"content":"Method getChildrenByIndex","pos":[0,25]}]},{"content":"Gets the children of a data source by using the parent index.","pos":[36752,36813]},{"pos":[36900,36910],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[36912,36926]},{"content":"The parent index.","pos":[36929,36946]},{"content":"parentIndex","pos":[36958,36969]},{"content":"The parent index.","pos":[36972,36989]},{"pos":[36996,37008],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container for the children.","pos":[37010,37039]},{"pos":[37045,37064],"content":"Method getLastError","linkify":"Method getLastError","nodes":[{"content":"Method getLastError","pos":[0,19]}]},{"pos":[37111,37123],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37129,37149],"content":"Method getParentById","linkify":"Method getParentById","nodes":[{"content":"Method getParentById","pos":[0,20]}]},{"content":"Gets the parent of a data source by using the child ID.","pos":[37151,37206]},{"pos":[37284,37294],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[37296,37310]},{"content":"The child ID.","pos":[37313,37326]},{"content":"childId","pos":[37338,37345]},{"content":"The child ID.","pos":[37348,37361]},{"pos":[37368,37380],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The parent ID.","pos":[37382,37396]},{"pos":[37402,37425],"content":"Method getParentByIndex","linkify":"Method getParentByIndex","nodes":[{"content":"Method getParentByIndex","pos":[0,23]}]},{"content":"Gets the parent of a data source by using the child index.","pos":[37427,37485]},{"pos":[37561,37571],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[37573,37587]},{"content":"The child index.","pos":[37590,37606]},{"content":"childIndex","pos":[37618,37628]},{"content":"The child index.","pos":[37631,37647]},{"pos":[37654,37666],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The parent ID.","pos":[37668,37682]},{"pos":[37688,37724],"content":"Method getRowIndexFromRowHierarchyId","linkify":"Method getRowIndexFromRowHierarchyId","nodes":[{"content":"Method getRowIndexFromRowHierarchyId","pos":[0,36]}]},{"content":"Gets the row index on a data source by using a row hierarchy ID.","pos":[37726,37790]},{"pos":[37875,37885],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[37887,37901]},{"content":"The row hierarchy ID.","pos":[37904,37925]},{"content":"id","pos":[37937,37939]},{"content":"The row hierarchy ID.","pos":[37942,37963]},{"pos":[37970,37982],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The row index.","pos":[37984,37998]},{"pos":[38004,38023],"content":"Method initComplete","linkify":"Method initComplete","nodes":[{"content":"Method initComplete","pos":[0,19]}]},{"pos":[38065,38077],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38083,38094],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"pos":[38124,38136],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38142,38158],"content":"Method objectSet","linkify":"Method objectSet","nodes":[{"content":"Method objectSet","pos":[0,16]}]},{"pos":[38222,38232],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"objectSet","pos":[38234,38243]},{"pos":[38252,38264],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38270,38281],"content":"Method pack","linkify":"Method pack","nodes":[{"content":"Method pack","pos":[0,11]}]},{"content":"Serializes the current instance of the DataSetRun class.","pos":[38283,38339]},{"pos":[38375,38387],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that contains the current instance of the DataSetRun class.","pos":[38389,38460]},{"pos":[38466,38482],"content":"Method runCalled","linkify":"Method runCalled","nodes":[{"content":"Method runCalled","pos":[0,16]}]},{"pos":[38521,38533],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38539,38552],"content":"Method unpack","linkify":"Method unpack","nodes":[{"content":"Method unpack","pos":[0,13]}]},{"content":"Deserializes the pack parameter value to an instance of the DataSetRun class.","pos":[38554,38631]},{"pos":[38681,38691],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"pack","pos":[38693,38697]},{"content":"The container from which to deserialize the instance.","pos":[38700,38753]},{"pos":[38760,38772],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if deserialization was successful; otherwise, false.","pos":[38774,38831]},{"pos":[38837,38850],"content":"Method create","linkify":"Method create","nodes":[{"content":"Method create","pos":[0,13]}]},{"pos":[38920,38930],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[38932,38936]},{"content":"pack","pos":[38950,38954]},{"pos":[38963,38975],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38981,39001],"content":"Method createRunTime","linkify":"Method createRunTime","nodes":[{"content":"Method createRunTime","pos":[0,20]}]},{"pos":[39068,39078],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"pack","pos":[39080,39084]},{"pos":[39093,39105],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[39111,39130],"content":"Method setLastError","linkify":"Method setLastError","nodes":[{"content":"Method setLastError","pos":[0,19]}]},{"pos":[39187,39197],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"error","pos":[39199,39204]},{"pos":[39212,39222],"content":"Method run","linkify":"Method run","nodes":[{"content":"Method run","pos":[0,10]}]},{"pos":[39251,39271],"content":"Method setLookupMode","linkify":"Method setLookupMode","nodes":[{"content":"Method setLookupMode","pos":[0,20]}]},{"content":"Puts the dataset into lookup mode.","pos":[39273,39307]},{"pos":[39346,39356],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[39358,39405]},{"pos":[39445,39455],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"args","pos":[39457,39461]},{"pos":[39469,39484],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[39518,39537],"content":"Method createRecord","linkify":"Method createRecord","nodes":[{"content":"Method createRecord","pos":[0,19]}]},{"content":"Creates a new record.","pos":[39539,39560]},{"pos":[39639,39649],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"formDataSourceName","pos":[39651,39669]},{"content":"The record to append.","pos":[39672,39693]},{"content":"append","pos":[39705,39711]},{"content":"The record to append.","pos":[39714,39735]},{"pos":[39741,39763],"content":"Method setActiveFields","linkify":"Method setActiveFields","nodes":[{"content":"Method setActiveFields","pos":[0,22]}]},{"pos":[39837,39847],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceId","pos":[39849,39861]},{"content":"fieldIds","pos":[39875,39883]},{"pos":[39891,39916],"content":"Method setExternalContext","linkify":"Method setExternalContext","nodes":[{"content":"Method setExternalContext","pos":[0,25]}]},{"content":"Sets the external context on the dataSetRun object.","pos":[39918,39969]},{"pos":[40038,40048],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"externalContext","pos":[40050,40065]},{"content":"The external context.","pos":[40068,40089]},{"pos":[40095,40106],"content":"Method init","linkify":"Method init","nodes":[{"content":"Method init","pos":[0,11]}]},{"pos":[40136,40173],"content":"Method enableHierarchicalDataBrowsing","linkify":"Method enableHierarchicalDataBrowsing","nodes":[{"content":"Method enableHierarchicalDataBrowsing","pos":[0,37]}]},{"content":"Enables hierarchical data browsing.","pos":[40175,40210]},{"pos":[40383,40393],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"hierarchyPKDataSourceName","pos":[40395,40420]},{"content":"The ID of the foreign key field in the hierarchy.","pos":[40423,40472]},{"content":"hierarchyPKfieldId","pos":[40484,40502]},{"content":"The ID of the foreign key field in the hierarchy.","pos":[40505,40554]},{"content":"hierarchyFKDataSourceName","pos":[40566,40591]},{"content":"The ID of the foreign key field in the hierarchy.","pos":[40594,40643]},{"content":"hierarchyFKfieldId","pos":[40655,40673]},{"content":"The ID of the foreign key field in the hierarchy.","pos":[40676,40725]},{"pos":[40731,40769],"content":"Method disableHierarchicalDataBrowsing","linkify":"Method disableHierarchicalDataBrowsing","nodes":[{"content":"Method disableHierarchicalDataBrowsing","pos":[0,38]}]},{"content":"Disables hierarchical data browsing.","pos":[40771,40807]},{"pos":[40883,40893],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[40895,40909]},{"content":"The name of the data source to disable hierarchical data browsing on.","pos":[40912,40981]},{"pos":[40986,41012],"content":"Class DataSourceMethodInfo","linkify":"Class DataSourceMethodInfo","nodes":[{"content":"Class DataSourceMethodInfo","pos":[0,26]}]},{"pos":[41064,41071],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[41077,41085],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[41091,41098],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[41102,41108]},{"content":"Description","pos":[41217,41228]},{"content":"public DisplayFunctionType displayType()","pos":[41436,41476]},{"content":"public boolean isStatic()","pos":[41603,41628]},{"content":"public str name()","pos":[41770,41787]},{"content":"public Types returnType()","pos":[41937,41962]},{"content":"public int returnTypeId()","pos":[42104,42129]},{"content":"public void new(str name, DisplayFunctionType displayType, Types returnType, int returnTypeId, boolean isStatic)","pos":[42271,42383]},{"content":"Initializes a new instance of the Object class.","pos":[42386,42433]},{"content":"public void finalize()","pos":[42438,42460]},{"pos":[42608,42626],"content":"Method displayType","linkify":"Method displayType","nodes":[{"content":"Method displayType","pos":[0,18]}]},{"pos":[42679,42691],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42697,42712],"content":"Method isStatic","linkify":"Method isStatic","nodes":[{"content":"Method isStatic","pos":[0,15]}]},{"pos":[42750,42762],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42768,42779],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"pos":[42809,42821],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42827,42844],"content":"Method returnType","linkify":"Method returnType","nodes":[{"content":"Method returnType","pos":[0,17]}]},{"pos":[42882,42894],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42900,42919],"content":"Method returnTypeId","linkify":"Method returnTypeId","nodes":[{"content":"Method returnTypeId","pos":[0,19]}]},{"pos":[42957,42969],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[42975,42985],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[42987,43034]},{"pos":[43159,43169],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[43171,43175]},{"content":"displayType","pos":[43189,43200]},{"content":"returnType","pos":[43214,43224]},{"content":"returnTypeId","pos":[43238,43250]},{"content":"isStatic","pos":[43264,43272]},{"pos":[43280,43295],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[43328,43358],"content":"Class DataSourceMethodInfoList","linkify":"Class DataSourceMethodInfoList","nodes":[{"content":"Class DataSourceMethodInfoList","pos":[0,30]}]},{"pos":[43414,43421],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[43427,43435],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[43441,43448],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[43452,43458]},{"content":"Description","pos":[43510,43521]},{"content":"public int count()","pos":[43708,43726]},{"content":"public DataSourceMethodInfo getMethod(int methodNumber)","pos":[43836,43891]},{"content":"public void addMethod(DataSourceMethodInfo method)","pos":[43964,44014]},{"content":"public void new()","pos":[44092,44109]},{"content":"Initializes a new instance of the DataSourceMethodInfoList class.","pos":[44150,44215]},{"content":"public void finalize()","pos":[44220,44242]},{"pos":[44351,44363],"content":"Method count","linkify":"Method count","nodes":[{"content":"Method count","pos":[0,12]}]},{"pos":[44394,44406],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44412,44428],"content":"Method getMethod","linkify":"Method getMethod","nodes":[{"content":"Method getMethod","pos":[0,16]}]},{"pos":[44496,44506],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[44508,44520]},{"pos":[44529,44541],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44547,44563],"content":"Method addMethod","linkify":"Method addMethod","nodes":[{"content":"Method addMethod","pos":[0,16]}]},{"pos":[44626,44636],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"method","pos":[44638,44644]},{"pos":[44652,44662],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the DataSourceMethodInfoList class.","pos":[44664,44729]},{"pos":[44758,44773],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[44806,44826],"content":"Class DataSourceNode","linkify":"Class DataSourceNode","nodes":[{"content":"Class DataSourceNode","pos":[0,20]}]},{"pos":[44874,44881],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[44887,44895],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[44901,44908],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[44912,44918]},{"content":"Description","pos":[44964,44975]},{"content":"public DataSourceMethodInfoList memberFunctions()","pos":[45136,45185]},{"content":"public void finalize()","pos":[45248,45270]},{"content":"private void new()","pos":[45360,45378]},{"content":"Initializes a new instance of the DataSourceNode class.","pos":[45412,45467]},{"pos":[45475,45497],"content":"Method memberFunctions","linkify":"Method memberFunctions","nodes":[{"content":"Method memberFunctions","pos":[0,22]}]},{"pos":[45559,45571],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[45577,45592],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[45626,45636],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the DataSourceNode class.","pos":[45638,45693]},{"pos":[45722,45767],"content":"Class DataSourceRuntimeMetadataChangedEvtArgs","linkify":"Class DataSourceRuntimeMetadataChangedEvtArgs","nodes":[{"content":"Class DataSourceRuntimeMetadataChangedEvtArgs","pos":[0,45]}]},{"pos":[45848,45855],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[45861,45869],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[45875,45882],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[45886,45892]},{"content":"Description","pos":[46026,46037]},{"content":"public str changedDataSourceName()","pos":[46290,46324]},{"content":"public FieldId changedFieldId()","pos":[46492,46523]},{"content":"public DataSourceMetadataChangeType changeType()","pos":[46694,46742]},{"content":"public str referencedDataSourceName()","pos":[46896,46933]},{"content":"public void new(str changedDatasourceName, str referencedDatasourceName, FieldId changedFieldId, DataSourceMetadataChangeType changeType)","pos":[47098,47235]},{"content":"Initializes a new instance of the ManagedEventArgs class.","pos":[47238,47295]},{"content":"public void finalize()","pos":[47300,47322]},{"pos":[47505,47533],"content":"Method changedDataSourceName","linkify":"Method changedDataSourceName","nodes":[{"content":"Method changedDataSourceName","pos":[0,28]}]},{"pos":[47580,47592],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[47598,47619],"content":"Method changedFieldId","linkify":"Method changedFieldId","nodes":[{"content":"Method changedFieldId","pos":[0,21]}]},{"pos":[47663,47675],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[47681,47698],"content":"Method changeType","linkify":"Method changeType","nodes":[{"content":"Method changeType","pos":[0,17]}]},{"pos":[47759,47771],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[47777,47808],"content":"Method referencedDataSourceName","linkify":"Method referencedDataSourceName","nodes":[{"content":"Method referencedDataSourceName","pos":[0,31]}]},{"pos":[47858,47870],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[47876,47886],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the ManagedEventArgs class.","pos":[47888,47945]},{"pos":[48095,48105],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"changedDatasourceName","pos":[48107,48128]},{"content":"referencedDatasourceName","pos":[48142,48166]},{"content":"changedFieldId","pos":[48180,48194]},{"content":"changeType","pos":[48208,48218]},{"pos":[48226,48241],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[48274,48292],"content":"Class DateTimeUtil","linkify":"Class DateTimeUtil","nodes":[{"content":"Class DateTimeUtil","pos":[0,18]}]},{"content":"The DateTimeUtil class can be used to convert or modify utcdatetime and Timezone values.","pos":[48332,48420]},{"pos":[48426,48433],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[48439,48447],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[48453,48460],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[48464,48470]},{"content":"Description","pos":[48644,48655]},{"content":"::public static DateTime addDays(DateTime t, int value)","pos":[49150,49205]},{"content":"Adds the specified number of days to a utcdatetime value.","pos":[49330,49387]},{"content":"::public static DateTime addHours(DateTime t, int value)","pos":[49493,49549]},{"content":"Adds the specified number of hours to a utcdatetime value.","pos":[49673,49731]},{"content":"::public static DateTime addMinutes(DateTime t, int value)","pos":[49836,49894]},{"content":"Adds the specified number of minutes to a utcdatetime value.","pos":[50016,50076]},{"content":"::public static DateTime addMonths(DateTime t, int value)","pos":[50179,50236]},{"content":"Adds the specified number of months to a utcdatetime value.","pos":[50359,50418]},{"content":"::public static DateTime addSeconds(DateTime t, Int64 value)","pos":[50522,50582]},{"content":"Adds the specified number of seconds to a utcdatetime value.","pos":[50702,50762]},{"content":"::public static DateTime addYears(DateTime t, int value)","pos":[50865,50921]},{"content":"Adds the specified number of years to a utcdatetime value.","pos":[51045,51103]},{"content":"::public static DateTime anyToDateTime(AnyType value)","pos":[51208,51261]},{"content":"Converts an anytype object to a utcdatetime value.","pos":[51388,51438]},{"content":"::public static DateTime applyTimeZoneOffset(DateTime t, Timezone tz)","pos":[51551,51620]},{"content":"Retrieves a utcdatetime value that is offset from the specified utcdatetime value by the amount that is indicated by the specified Timezone enumeration value.","pos":[51731,51889]},{"content":"::public static str applyTimeZoneOffsetFilter(QueryFilter filter)","pos":[51894,51959]},{"content":"Applies the time zone offset to the filter.","pos":[52074,52117]},{"content":"::public static str applyTimeZoneOffsetRange(QueryBuildRange range)","pos":[52237,52304]},{"content":"Applies the time zone offset to the range.","pos":[52417,52459]},{"content":"::public static Date date(DateTime t)","pos":[52580,52617]},{"content":"Converts the specified utcdatetime value to a date type.","pos":[52760,52816]},{"content":"::public static int day(DateTime t)","pos":[52923,52958]},{"content":"Retrieves the day of the month that is specified by a utcdatetime value.","pos":[53103,53175]},{"content":"::public static Timezone getClientMachineTimeZone()","pos":[53266,53317]},{"content":"Gets the Timezone enumeration value on the client computer.","pos":[53446,53505]},{"content":"::public static Timezone getCompanyTimeZone()","pos":[53609,53654]},{"content":"Gets the Timezone value that is set for the current legal entity.","pos":[53789,53854]},{"content":"::public static Int64 getDifference(DateTime t1, DateTime t2)","pos":[53952,54013]},{"content":"Gets the number of seconds between two specified utcdatetime values.","pos":[54132,54200]},{"content":"::public static Timezone getOriginatingTimeZone(DateTime t)","pos":[54295,54354]},{"content":"Gets the originating Timezone enumeration value of the specified utcdatetime value.","pos":[54475,54558]},{"content":"::public static Date getSystemDate(Timezone tz)","pos":[54638,54685]},{"content":"::public static DateTime getSystemDateTime()","pos":[54981,55025]},{"content":"Gets the current system time as a utcdatetime value.","pos":[55161,55213]},{"content":"::public static TimeOfDay getTimeNow(Timezone tz)","pos":[55324,55373]},{"content":"::public static TimeZoneId getTimeZoneId(Timezone tz)","pos":[55667,55720]},{"content":"::public static int getTimeZoneOffset(DateTime t, Timezone tz)","pos":[56010,56072]},{"content":"Gets the offset of the specified utcdatetime value to UTC by using the information in a Timezone enumeration value.","pos":[56190,56305]},{"content":"::public static int getTimeZoneRule(DateTime t)","pos":[56353,56400]},{"content":"Returns the time zone rule that takes effect on the given date.","pos":[56533,56596]},{"content":"::public static Date getToday(Timezone tz)","pos":[56696,56738]},{"content":"::public static PreferredCalendar getUserPreferredCalendar()","pos":[57039,57099]},{"content":"Gets the PreferredCalendar enumeration value for the current user.","pos":[57219,57285]},{"content":"::public static Timezone getUserPreferredTimeZone()","pos":[57382,57433]},{"content":"Gets the PreferredTimezone enumeration value for the current user.","pos":[57562,57628]},{"content":"::public static int hour(DateTime t)","pos":[57725,57761]},{"content":"Retrieves the hour of the day that is specified by a utcdatetime value.","pos":[57905,57976]},{"content":"::public static DateTime maxValue()","pos":[58068,58103]},{"content":"Retrieves the maximum value that is allowed for a variable of the utcdatetime type.","pos":[58248,58331]},{"content":"::public static int minute(DateTime t)","pos":[58411,58449]},{"content":"Retrieves the minute in the hour that is specified by a utcdatetime value.","pos":[58591,58665]},{"content":"::public static DateTime minValue()","pos":[58754,58789]},{"content":"Retrieves the minimum value that is allowed for a variable of the utcdatetime type.","pos":[58934,59017]},{"content":"::public static int month(DateTime t)","pos":[59097,59134]},{"content":"Retrieves the month in the year that is specified by a utcdatetime value.","pos":[59277,59350]},{"content":"::public static DateTime newDateTime(Date date, TimeOfDay time, <ph id=\"ph1\">\\[</ph>Timezone tzOffsetToRemove<ph id=\"ph2\">\\]</ph>)","pos":[59440,59534],"source":"::public static DateTime newDateTime(Date date, TimeOfDay time, \\[Timezone tzOffsetToRemove\\])"},{"content":"Creates a new utcdatetime value by using the specified date and timeOfDay values.","pos":[59620,59701]},{"content":"::public static DateTime parse(str s)","pos":[59783,59820]},{"content":"Creates a new utcdatetime value from the specified string.","pos":[59963,60021]},{"content":"::public static container populateTimeZoneInfo(int year, Timezone tz)","pos":[60126,60195]},{"content":"Retrieves start and end dates and time bias.","pos":[60306,60350]},{"content":"::public static DateTime removeTimeZoneOffset(DateTime t, Timezone tz)","pos":[60469,60539]},{"content":"Removes the offset that is indicated by a Timezone enumeration value from the specified utcdatetime value.","pos":[60649,60755]},{"content":"::public static str removeTimeZoneOffsetFilter(QueryFilter filter)","pos":[60812,60878]},{"content":"Removes the time zone offset from the filter.","pos":[60992,61037]},{"content":"::public static str removeTimeZoneOffsetRange(QueryBuildRange range)","pos":[61155,61223]},{"content":"Removes the time zone offset from the range.","pos":[61335,61379]},{"content":"::public static int second(DateTime t)","pos":[61498,61536]},{"content":"Retrieves the seconds in a minute that is specified by a utcdatetime value.","pos":[61678,61753]},{"content":"::public static TimeOfDay time(DateTime t)","pos":[61841,61883]},{"content":"Retrieves the number of seconds that have elapsed since midnight as a timeOfDay value from the specified utcdatetime value.","pos":[62021,62144]},{"content":"::public static str toFormattedStr(DateTime t, int sequence, int day, int separator1, int month, int separator2, int year, int timeSeparator1, int timeSeparator2, <ph id=\"ph1\">\\[</ph>int flags<ph id=\"ph2\">\\]</ph>)","pos":[62184,62361],"source":"::public static str toFormattedStr(DateTime t, int sequence, int day, int separator1, int month, int separator2, int year, int timeSeparator1, int timeSeparator2, \\[int flags\\])"},{"content":"::public static str toStr(DateTime t)","pos":[62527,62564]},{"content":"Converts a utcdatetime value to a string in the following format: YYYY-MM-DDThh:mm:ss, where T is a character literal.","pos":[62707,62825]},{"content":"::public static DateTime utcNow()","pos":[62870,62903]},{"content":"Retrieves a utcdatetime value that indicates the current system time.","pos":[63050,63119]},{"content":"::public static int year(DateTime t)","pos":[63213,63249]},{"content":"Retrieves the year that is specified by a utcdatetime value.","pos":[63393,63453]},{"content":"::public static void setSystemDateTime(DateTime t)","pos":[63556,63606]},{"content":"Sets the date and time of the system to the specified utcdatetime value.","pos":[63736,63808]},{"content":"::public static void setCompanyTimeZone(Timezone tz, <ph id=\"ph1\">\\[</ph>boolean persist<ph id=\"ph2\">\\]</ph>)","pos":[63899,63972],"source":"::public static void setCompanyTimeZone(Timezone tz, \\[boolean persist\\])"},{"content":"Sets the Timezone enumeration value that is used by the current company.","pos":[64079,64151]},{"content":"::public static void setUserPreferredCalendar(PreferredCalendar calendar)","pos":[64242,64315]},{"content":"Sets the value of the PreferredCalendar enumeration type of the current user for the current session.","pos":[64422,64523]},{"content":"::public static void setUserPreferredTimeZone(Timezone tz, <ph id=\"ph1\">\\[</ph>boolean persist<ph id=\"ph2\">\\]</ph>)","pos":[64585,64664],"source":"::public static void setUserPreferredTimeZone(Timezone tz, \\[boolean persist\\])"},{"content":"Sets the preferred time zone of the user to the specified Timezone enumeration value.","pos":[64765,64850]},{"content":"private void new()","pos":[64928,64946]},{"content":"Initializes a new instance of the DateTimeUtil class.","pos":[65108,65161]},{"pos":[65274,65288],"content":"Method addDays","linkify":"Method addDays","nodes":[{"content":"Method addDays","pos":[0,14]}]},{"content":"Adds the specified number of days to a utcdatetime value.","pos":[65290,65347]},{"pos":[65413,65423],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[65425,65426]},{"content":"The number of days to add.","pos":[65429,65455]},{"content":"value","pos":[65467,65472]},{"content":"The number of days to add.","pos":[65475,65501]},{"pos":[65508,65520],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value.","pos":[65522,65546]},{"pos":[65553,65560],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the value of the value parameter is negative, days will be subtracted.","pos":[65562,65635]},{"pos":[65641,65656],"content":"Method addHours","linkify":"Method addHours","nodes":[{"content":"Method addHours","pos":[0,15]}]},{"content":"Adds the specified number of hours to a utcdatetime value.","pos":[65658,65716]},{"pos":[65783,65793],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[65795,65796]},{"content":"The number of hours to add.","pos":[65799,65826]},{"content":"value","pos":[65838,65843]},{"content":"The number of hours to add.","pos":[65846,65873]},{"pos":[65880,65892],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value.","pos":[65894,65918]},{"pos":[65925,65932],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the value of the value parameter is negative, hours will be subtracted.","pos":[65934,66008]},{"pos":[66014,66031],"content":"Method addMinutes","linkify":"Method addMinutes","nodes":[{"content":"Method addMinutes","pos":[0,17]}]},{"content":"Adds the specified number of minutes to a utcdatetime value.","pos":[66033,66093]},{"pos":[66162,66172],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[66174,66175]},{"content":"The number of minutes to add.","pos":[66178,66207]},{"content":"value","pos":[66219,66224]},{"content":"The number of minutes to add.","pos":[66227,66256]},{"pos":[66263,66275],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value.","pos":[66277,66301]},{"pos":[66308,66315],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the value of the value parameter is negative, minutes will be subtracted.","pos":[66317,66393]},{"pos":[66399,66415],"content":"Method addMonths","linkify":"Method addMonths","nodes":[{"content":"Method addMonths","pos":[0,16]}]},{"content":"Adds the specified number of months to a utcdatetime value.","pos":[66417,66476]},{"pos":[66544,66554],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[66556,66557]},{"content":"The number of months to add.","pos":[66560,66588]},{"content":"value","pos":[66600,66605]},{"content":"The number of months to add.","pos":[66608,66636]},{"pos":[66643,66655],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value.","pos":[66657,66681]},{"pos":[66688,66695],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the value of the value parameter is negative, months will be subtracted.","pos":[66697,66772]},{"pos":[66778,66795],"content":"Method addSeconds","linkify":"Method addSeconds","nodes":[{"content":"Method addSeconds","pos":[0,17]}]},{"content":"Adds the specified number of seconds to a utcdatetime value.","pos":[66797,66857]},{"pos":[66928,66938],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[66940,66941]},{"content":"The number of seconds to add.","pos":[66944,66973]},{"content":"value","pos":[66985,66990]},{"content":"The number of seconds to add.","pos":[66993,67022]},{"pos":[67029,67041],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value.","pos":[67043,67067]},{"pos":[67074,67081],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the value of the value parameter is negative, seconds will be subtracted.","pos":[67083,67159]},{"pos":[67165,67180],"content":"Method addYears","linkify":"Method addYears","nodes":[{"content":"Method addYears","pos":[0,15]}]},{"content":"Adds the specified number of years to a utcdatetime value.","pos":[67182,67240]},{"pos":[67307,67317],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[67319,67320]},{"content":"The number of years to add.","pos":[67323,67350]},{"content":"value","pos":[67362,67367]},{"content":"The number of years to add.","pos":[67370,67397]},{"pos":[67404,67416],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value.","pos":[67418,67442]},{"pos":[67449,67456],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the value of the value parameter is negative, years will be subtracted.","pos":[67458,67532]},{"pos":[67538,67558],"content":"Method anyToDateTime","linkify":"Method anyToDateTime","nodes":[{"content":"Method anyToDateTime","pos":[0,20]}]},{"content":"Converts an anytype object to a utcdatetime value.","pos":[67560,67610]},{"pos":[67674,67684],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[67686,67691]},{"content":"The object to convert.","pos":[67694,67716]},{"pos":[67723,67735],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value.","pos":[67737,67761]},{"pos":[67768,67775],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following example string shows the format of a date-time string that this anyToDateTime method can correctly convert: \"2009-01-28T13:44:55\".","pos":[67777,67921]},{"content":"The output of the DateTimeUtil::utcNow method is valid input into the anyToDateTime method.","pos":[67922,68013]},{"pos":[68019,68045],"content":"Method applyTimeZoneOffset","linkify":"Method applyTimeZoneOffset","nodes":[{"content":"Method applyTimeZoneOffset","pos":[0,26]}]},{"content":"Retrieves a utcdatetime value that is offset from the specified utcdatetime value by the amount that is indicated by the specified Timezone enumeration value.","pos":[68047,68205]},{"pos":[68285,68295],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[68297,68298]},{"content":"A Timezone enumeration value that indicates the new offset to use.","pos":[68301,68367]},{"content":"tz","pos":[68379,68381]},{"content":"A Timezone enumeration value that indicates the new offset to use.","pos":[68384,68450]},{"pos":[68457,68469],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value.","pos":[68471,68495]},{"pos":[68501,68533],"content":"Method applyTimeZoneOffsetFilter","linkify":"Method applyTimeZoneOffsetFilter","nodes":[{"content":"Method applyTimeZoneOffsetFilter","pos":[0,32]}]},{"content":"Applies the time zone offset to the filter.","pos":[68535,68578]},{"pos":[68654,68664],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filter","pos":[68666,68672]},{"pos":[68681,68693],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new date/time range value.","pos":[68695,68725]},{"pos":[68731,68762],"content":"Method applyTimeZoneOffsetRange","linkify":"Method applyTimeZoneOffsetRange","nodes":[{"content":"Method applyTimeZoneOffsetRange","pos":[0,31]}]},{"content":"Applies the time zone offset to the range.","pos":[68764,68806]},{"pos":[68884,68894],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"range","pos":[68896,68901]},{"pos":[68910,68922],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new date/time range value.","pos":[68924,68954]},{"pos":[68960,68971],"content":"Method date","linkify":"Method date","nodes":[{"content":"Method date","pos":[0,11]}]},{"content":"Converts the specified utcdatetime value to a date type.","pos":[68973,69029]},{"pos":[69077,69087],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[69089,69090]},{"content":"The utcdatetime value to convert.","pos":[69093,69126]},{"pos":[69133,69145],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A date value.","pos":[69147,69160]},{"pos":[69166,69176],"content":"Method day","linkify":"Method day","nodes":[{"content":"Method day","pos":[0,10]}]},{"content":"Retrieves the day of the month that is specified by a utcdatetime value.","pos":[69178,69250]},{"pos":[69296,69306],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[69308,69309]},{"content":"A utcdatetime value for which to retrieve the value of the day component.","pos":[69312,69385]},{"pos":[69392,69404],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The day of the month of the specified utcdatetime value.","pos":[69406,69462]},{"pos":[69468,69499],"content":"Method getClientMachineTimeZone","linkify":"Method getClientMachineTimeZone","nodes":[{"content":"Method getClientMachineTimeZone","pos":[0,31]}]},{"content":"Gets the Timezone enumeration value on the client computer.","pos":[69501,69560]},{"pos":[69622,69634],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Timezone enumeration value on the client computer.","pos":[69636,69690]},{"pos":[69696,69721],"content":"Method getCompanyTimeZone","linkify":"Method getCompanyTimeZone","nodes":[{"content":"Method getCompanyTimeZone","pos":[0,25]}]},{"content":"Gets the Timezone value that is set for the current legal entity.","pos":[69723,69788]},{"pos":[69844,69856],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Timezone value that is set for the current legal entity.","pos":[69858,69918]},{"pos":[69924,69944],"content":"Method getDifference","linkify":"Method getDifference","nodes":[{"content":"Method getDifference","pos":[0,20]}]},{"content":"Gets the number of seconds between two specified utcdatetime values.","pos":[69946,70014]},{"pos":[70086,70096],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t1","pos":[70098,70100]},{"content":"The second utcdatetime value.","pos":[70103,70132]},{"content":"t2","pos":[70144,70146]},{"content":"The second utcdatetime value.","pos":[70149,70178]},{"pos":[70185,70197],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of seconds between the two specified utcdatetime values.","pos":[70199,70266]},{"pos":[70272,70301],"content":"Method getOriginatingTimeZone","linkify":"Method getOriginatingTimeZone","nodes":[{"content":"Method getOriginatingTimeZone","pos":[0,29]}]},{"content":"Gets the originating Timezone enumeration value of the specified utcdatetime value.","pos":[70303,70386]},{"pos":[70456,70466],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[70468,70469]},{"content":"The utcdatetime value for which to retrieve the time zone.","pos":[70472,70530]},{"pos":[70537,70549],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Timezone enumeration value of the specified utcdatetime value.","pos":[70551,70617]},{"pos":[70623,70643],"content":"Method getSystemDate","linkify":"Method getSystemDate","nodes":[{"content":"Method getSystemDate","pos":[0,20]}]},{"pos":[70701,70711],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tz","pos":[70713,70715]},{"pos":[70724,70736],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[70742,70766],"content":"Method getSystemDateTime","linkify":"Method getSystemDateTime","nodes":[{"content":"Method getSystemDateTime","pos":[0,24]}]},{"content":"Gets the current system time as a utcdatetime value.","pos":[70768,70820]},{"pos":[70875,70887],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current system time as a utcdatetime value.","pos":[70889,70936]},{"pos":[70943,70950],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the system time has a fixed value, it will be returned.","pos":[70952,71010]},{"content":"Otherwise, the current date and time from the local computer will be returned.","pos":[71011,71089]},{"pos":[71095,71112],"content":"Method getTimeNow","linkify":"Method getTimeNow","nodes":[{"content":"Method getTimeNow","pos":[0,17]}]},{"pos":[71172,71182],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tz","pos":[71184,71186]},{"pos":[71195,71207],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[71213,71233],"content":"Method getTimeZoneId","linkify":"Method getTimeZoneId","nodes":[{"content":"Method getTimeZoneId","pos":[0,20]}]},{"pos":[71297,71307],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tz","pos":[71309,71311]},{"pos":[71320,71332],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[71338,71362],"content":"Method getTimeZoneOffset","linkify":"Method getTimeZoneOffset","nodes":[{"content":"Method getTimeZoneOffset","pos":[0,24]}]},{"content":"Gets the offset of the specified utcdatetime value to UTC by using the information in a Timezone enumeration value.","pos":[71364,71479]},{"pos":[71552,71562],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[71564,71565]},{"content":"A Timezone enumeration value that indicates the time zone of the t parameter.","pos":[71568,71645]},{"content":"tz","pos":[71657,71659]},{"content":"A Timezone enumeration value that indicates the time zone of the t parameter.","pos":[71662,71739]},{"pos":[71746,71758],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that indicates the offset of the specified utcdatetime value to UTC.","pos":[71760,71839]},{"pos":[71845,71867],"content":"Method getTimeZoneRule","linkify":"Method getTimeZoneRule","nodes":[{"content":"Method getTimeZoneRule","pos":[0,22]}]},{"content":"Returns the time zone rule that takes effect on the given date.","pos":[71869,71932]},{"pos":[71990,72000],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[72002,72003]},{"pos":[72012,72024],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The time zone rule for the given date.","pos":[72026,72064]},{"pos":[72070,72085],"content":"Method getToday","linkify":"Method getToday","nodes":[{"content":"Method getToday","pos":[0,15]}]},{"pos":[72138,72148],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tz","pos":[72150,72152]},{"pos":[72161,72173],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[72179,72210],"content":"Method getUserPreferredCalendar","linkify":"Method getUserPreferredCalendar","nodes":[{"content":"Method getUserPreferredCalendar","pos":[0,31]}]},{"content":"Gets the PreferredCalendar enumeration value for the current user.","pos":[72212,72278]},{"pos":[72349,72361],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The PreferredCalendar enumeration value for the current user.","pos":[72363,72424]},{"pos":[72430,72461],"content":"Method getUserPreferredTimeZone","linkify":"Method getUserPreferredTimeZone","nodes":[{"content":"Method getUserPreferredTimeZone","pos":[0,31]}]},{"content":"Gets the PreferredTimezone enumeration value for the current user.","pos":[72463,72529]},{"pos":[72591,72603],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The PreferredTimezone enumeration value for the current user.","pos":[72605,72666]},{"pos":[72672,72683],"content":"Method hour","linkify":"Method hour","nodes":[{"content":"Method hour","pos":[0,11]}]},{"content":"Retrieves the hour of the day that is specified by a utcdatetime value.","pos":[72685,72756]},{"pos":[72803,72813],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[72815,72816]},{"content":"A utcdatetime value for which to retrieve the value of the hour component.","pos":[72819,72893]},{"pos":[72900,72912],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The hour in the day of the specified utcdatetime value.","pos":[72914,72969]},{"pos":[72975,72990],"content":"Method maxValue","linkify":"Method maxValue","nodes":[{"content":"Method maxValue","pos":[0,15]}]},{"content":"Retrieves the maximum value that is allowed for a variable of the utcdatetime type.","pos":[72992,73075]},{"pos":[73121,73133],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The maximum value that is allowed for a variable of the utcdatetime type.","pos":[73135,73208]},{"pos":[73214,73227],"content":"Method minute","linkify":"Method minute","nodes":[{"content":"Method minute","pos":[0,13]}]},{"content":"Retrieves the minute in the hour that is specified by a utcdatetime value.","pos":[73229,73303]},{"pos":[73352,73362],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[73364,73365]},{"content":"A utcdatetime value for which to retrieve the value of the minute component.","pos":[73368,73444]},{"pos":[73451,73463],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The minute in the hour of the specified utcdatetime value.","pos":[73465,73523]},{"pos":[73529,73544],"content":"Method minValue","linkify":"Method minValue","nodes":[{"content":"Method minValue","pos":[0,15]}]},{"content":"Retrieves the minimum value that is allowed for a variable of the utcdatetime type.","pos":[73546,73629]},{"pos":[73675,73687],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The minimum value that is allowed for a variable of the utcdatetime type.","pos":[73689,73762]},{"pos":[73768,73780],"content":"Method month","linkify":"Method month","nodes":[{"content":"Method month","pos":[0,12]}]},{"content":"Retrieves the month in the year that is specified by a utcdatetime value.","pos":[73782,73855]},{"pos":[73903,73913],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[73915,73916]},{"content":"A utcdatetime value for which to retrieve the value of the month component.","pos":[73919,73994]},{"pos":[74001,74013],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The month in the year of the specified utcdatetime value.","pos":[74015,74072]},{"pos":[74078,74096],"content":"Method newDateTime","linkify":"Method newDateTime","nodes":[{"content":"Method newDateTime","pos":[0,18]}]},{"content":"Creates a new utcdatetime value by using the specified date and timeOfDay values.","pos":[74098,74179]},{"pos":[74282,74292],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"date","pos":[74294,74298]},{"content":"The time zone in which to create the new utcdatetime value; optional.","pos":[74301,74370]},{"content":"time","pos":[74382,74386]},{"content":"The time zone in which to create the new utcdatetime value; optional.","pos":[74389,74458]},{"content":"tzOffsetToRemove","pos":[74470,74486]},{"content":"The time zone in which to create the new utcdatetime value; optional.","pos":[74489,74558]},{"pos":[74565,74577],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value.","pos":[74579,74603]},{"pos":[74610,74617],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If no value is specified for the tzOffsetToRemove parameter, the utcdatetime value will be created in the UTC time zone.","pos":[74619,74739]},{"pos":[74745,74757],"content":"Method parse","linkify":"Method parse","nodes":[{"content":"Method parse","pos":[0,12]}]},{"content":"Creates a new utcdatetime value from the specified string.","pos":[74759,74817]},{"pos":[74865,74875],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"s","pos":[74877,74878]},{"content":"A string in the following format: yyyy-mm-ddThh:mm:ss.","pos":[74881,74935]},{"pos":[74942,74954],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A new utcdatetime value from the specified string.","pos":[74956,75006]},{"pos":[75012,75039],"content":"Method populateTimeZoneInfo","linkify":"Method populateTimeZoneInfo","nodes":[{"content":"Method populateTimeZoneInfo","pos":[0,27]}]},{"content":"Retrieves start and end dates and time bias.","pos":[75041,75085]},{"pos":[75165,75175],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"year","pos":[75177,75181]},{"content":"The time zone.","pos":[75184,75198]},{"content":"tz","pos":[75210,75212]},{"content":"The time zone.","pos":[75215,75229]},{"pos":[75236,75248],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The start and end dates and time bias.","pos":[75250,75288]},{"pos":[75294,75321],"content":"Method removeTimeZoneOffset","linkify":"Method removeTimeZoneOffset","nodes":[{"content":"Method removeTimeZoneOffset","pos":[0,27]}]},{"content":"Removes the offset that is indicated by a Timezone enumeration value from the specified utcdatetime value.","pos":[75323,75429]},{"pos":[75510,75520],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[75522,75523]},{"content":"The Timezone enumeration value to remove.","pos":[75526,75567]},{"content":"tz","pos":[75579,75581]},{"content":"The Timezone enumeration value to remove.","pos":[75584,75625]},{"pos":[75632,75644],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A utcdatetime value without a time zone offset.","pos":[75646,75693]},{"pos":[75699,75732],"content":"Method removeTimeZoneOffsetFilter","linkify":"Method removeTimeZoneOffsetFilter","nodes":[{"content":"Method removeTimeZoneOffsetFilter","pos":[0,33]}]},{"content":"Removes the time zone offset from the filter.","pos":[75734,75779]},{"pos":[75856,75866],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filter","pos":[75868,75874]},{"pos":[75883,75895],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new date/time range value.","pos":[75897,75927]},{"pos":[75933,75965],"content":"Method removeTimeZoneOffsetRange","linkify":"Method removeTimeZoneOffsetRange","nodes":[{"content":"Method removeTimeZoneOffsetRange","pos":[0,32]}]},{"content":"Removes the time zone offset from the range.","pos":[75967,76011]},{"pos":[76090,76100],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"range","pos":[76102,76107]},{"pos":[76116,76128],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new date/time range value.","pos":[76130,76160]},{"pos":[76166,76179],"content":"Method second","linkify":"Method second","nodes":[{"content":"Method second","pos":[0,13]}]},{"content":"Retrieves the seconds in a minute that is specified by a utcdatetime value.","pos":[76181,76256]},{"pos":[76305,76315],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[76317,76318]},{"content":"A utcdatetime value for which to retrieve the value of the second component.","pos":[76321,76397]},{"pos":[76404,76416],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The second in the minute of the specified utcdatetime value.","pos":[76418,76478]},{"pos":[76484,76495],"content":"Method time","linkify":"Method time","nodes":[{"content":"Method time","pos":[0,11]}]},{"content":"Retrieves the number of seconds that have elapsed since midnight as a timeOfDay value from the specified utcdatetime value.","pos":[76497,76620]},{"pos":[76673,76683],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[76685,76686]},{"content":"A utcdatetime value for which to retrieve the time.","pos":[76689,76740]},{"pos":[76747,76759],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A timeOfDay value that indicates the number of seconds that have elapsed since midnight.","pos":[76761,76849]},{"pos":[76855,76876],"content":"Method toFormattedStr","linkify":"Method toFormattedStr","nodes":[{"content":"Method toFormattedStr","pos":[0,21]}]},{"pos":[77062,77072],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[77074,77075]},{"content":"sequence","pos":[77089,77097]},{"content":"day","pos":[77111,77114]},{"content":"separator1","pos":[77128,77138]},{"content":"month","pos":[77152,77157]},{"content":"separator2","pos":[77171,77181]},{"content":"year","pos":[77195,77199]},{"content":"timeSeparator1","pos":[77213,77227]},{"content":"timeSeparator2","pos":[77241,77255]},{"content":"flags","pos":[77269,77274]},{"pos":[77283,77295],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[77301,77313],"content":"Method toStr","linkify":"Method toStr","nodes":[{"content":"Method toStr","pos":[0,12]}]},{"content":"Converts a utcdatetime value to a string in the following format: YYYY-MM-DDThh:mm:ss, where T is a character literal.","pos":[77315,77433]},{"pos":[77481,77491],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[77493,77494]},{"content":"The utcdatetime value to convert.","pos":[77497,77530]},{"pos":[77537,77549],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string representation of the specified utcdatetime value.","pos":[77551,77612]},{"pos":[77618,77631],"content":"Method utcNow","linkify":"Method utcNow","nodes":[{"content":"Method utcNow","pos":[0,13]}]},{"content":"Retrieves a utcdatetime value that indicates the current system time.","pos":[77633,77702]},{"pos":[77746,77758],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current system time as a utcdatetime value.","pos":[77760,77807]},{"pos":[77814,77821],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is run on the server, so that the time that is returned is the system time of the server.","pos":[77823,77924]},{"pos":[77930,77941],"content":"Method year","linkify":"Method year","nodes":[{"content":"Method year","pos":[0,11]}]},{"content":"Retrieves the year that is specified by a utcdatetime value.","pos":[77943,78003]},{"pos":[78050,78060],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[78062,78063]},{"content":"A utcdatetime value for which to retrieve the value of the year component.","pos":[78066,78140]},{"pos":[78147,78159],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The year of the specified utcdatetime value.","pos":[78161,78205]},{"pos":[78211,78235],"content":"Method setSystemDateTime","linkify":"Method setSystemDateTime","nodes":[{"content":"Method setSystemDateTime","pos":[0,24]}]},{"content":"Sets the date and time of the system to the specified utcdatetime value.","pos":[78237,78309]},{"pos":[78370,78380],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"t","pos":[78382,78383]},{"content":"A utcdatetime value to which to set the system date and time.","pos":[78386,78447]},{"pos":[78453,78478],"content":"Method setCompanyTimeZone","linkify":"Method setCompanyTimeZone","nodes":[{"content":"Method setCompanyTimeZone","pos":[0,25]}]},{"content":"Sets the Timezone enumeration value that is used by the current company.","pos":[78480,78552]},{"pos":[78634,78644],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tz","pos":[78646,78648]},{"content":"A Boolean value that indicates whether the new value should be persisted.","pos":[78651,78724]},{"content":"persist","pos":[78736,78743]},{"content":"A Boolean value that indicates whether the new value should be persisted.","pos":[78746,78819]},{"pos":[78825,78856],"content":"Method setUserPreferredCalendar","linkify":"Method setUserPreferredCalendar","nodes":[{"content":"Method setUserPreferredCalendar","pos":[0,31]}]},{"content":"Sets the value of the PreferredCalendar enumeration type of the current user for the current session.","pos":[78858,78959]},{"pos":[79043,79053],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"calendar","pos":[79055,79063]},{"content":"The PreferredCalendar enumeration value to set.","pos":[79066,79113]},{"pos":[79119,79150],"content":"Method setUserPreferredTimeZone","linkify":"Method setUserPreferredTimeZone","nodes":[{"content":"Method setUserPreferredTimeZone","pos":[0,31]}]},{"content":"Sets the preferred time zone of the user to the specified Timezone enumeration value.","pos":[79152,79237]},{"pos":[79325,79335],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tz","pos":[79337,79339]},{"content":"A Boolean value that indicates whether the new value should be persisted.","pos":[79342,79415]},{"content":"persist","pos":[79427,79434]},{"content":"A Boolean value that indicates whether the new value should be persisted.","pos":[79437,79510]},{"pos":[79516,79526],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the DateTimeUtil class.","pos":[79528,79581]},{"pos":[79610,79625],"content":"Class DialogBox","linkify":"Class DialogBox","nodes":[{"content":"Class DialogBox","pos":[0,15]}]},{"pos":[79666,79673],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[79679,79687],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[79693,79700],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[79704,79710]},{"content":"Description","pos":[79807,79818]},{"content":"public DialogButton retval()","pos":[80014,80042]},{"content":"public void new(DialogBoxType type, str text, str title, str bottomtext, DialogButton defaultButton)","pos":[80169,80269]},{"content":"Initializes a new instance of the Object class.","pos":[80272,80319]},{"content":"public void finalize()","pos":[80324,80346]},{"pos":[80482,80495],"content":"Method retval","linkify":"Method retval","nodes":[{"content":"Method retval","pos":[0,13]}]},{"pos":[80536,80548],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[80554,80564],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[80566,80613]},{"pos":[80726,80736],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"type","pos":[80738,80742]},{"content":"text","pos":[80756,80760]},{"content":"title","pos":[80774,80779]},{"content":"bottomtext","pos":[80793,80803]},{"content":"defaultButton","pos":[80817,80830]},{"pos":[80838,80853],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[80886,80901],"content":"Class DictClass","linkify":"Class DictClass","nodes":[{"content":"Class DictClass","pos":[0,15]}]},{"content":"The DictClass class provides information about a class.","pos":[80938,80993]},{"pos":[80999,81006],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[81012,81020],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[81026,81033],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[81037,81043]},{"content":"Description","pos":[81105,81116]},{"content":"public AnyType callObject(str methodName, Object Called, VarArg )","pos":[81465,81530]},{"content":"Calls a method on an object.","pos":[81533,81561]},{"content":"public AnyType callStatic(str methodName, VarArg )","pos":[81679,81729]},{"content":"Calls a static method.","pos":[81747,81769]},{"content":"public ClassId extend()","pos":[81893,81916]},{"content":"Provides the ID for the class that a specified class extends.","pos":[81961,82022]},{"content":"public List extendedBy(<ph id=\"ph1\">\\[</ph>boolean allLevels<ph id=\"ph2\">\\]</ph>)","pos":[82107,82152],"source":"public List extendedBy(\\[boolean allLevels\\])"},{"content":"Provides a List object for the classes that extend a specified class.","pos":[82175,82244]},{"content":"public Array getAllAttributes()","pos":[82321,82352]},{"content":"Retrieves the full set of attributes for the class.","pos":[82389,82440]},{"content":"public Object getAttribute(str attribute)","pos":[82535,82576]},{"content":"Gets the first matching attribute from the class header metadata, creates an instance of the Object class that represents it, and returns it.","pos":[82603,82744]},{"content":"public Array getAttributes(str attribute)","pos":[82749,82790]},{"content":"public ClassId id()","pos":[82963,82982]},{"content":"Provides the ID for a specified class.","pos":[83031,83069]},{"content":"public ClassId implements(int no)","pos":[83177,83210]},{"content":"Provides the ID for a specified interface that a class implements.","pos":[83245,83311]},{"content":"public int implementsCnt()","pos":[83391,83417]},{"content":"Indicates the number of interfaces that a class implements.","pos":[83459,83518]},{"content":"public boolean isAbstract()","pos":[83605,83632]},{"content":"Indicates whether a class is abstract.","pos":[83673,83711]},{"content":"public boolean isFinal()","pos":[83819,83843]},{"content":"Indicates whether a class is final.","pos":[83887,83922]},{"content":"public boolean isInterface()","pos":[84033,84061]},{"content":"Indicates whether an object is an interface.","pos":[84101,84145]},{"content":"public boolean isKernel()","pos":[84247,84272]},{"content":"Indicates whether a class is a kernel class.","pos":[84315,84359]},{"content":"public boolean isRunable()","pos":[84461,84487]},{"content":"Indicates whether a class can be run.","pos":[84529,84566]},{"content":"public Object makeObject(VarArg )","pos":[84675,84708]},{"content":"Creates an object.","pos":[84743,84761]},{"content":"public str name()","pos":[84889,84906]},{"content":"Provides the name of a class.","pos":[84957,84986]},{"content":"public str objectMethod(int methodNumber)","pos":[85103,85144]},{"content":"Provides the name of a specified instance method in a class.","pos":[85171,85231]},{"content":"public int objectMethodCnt()","pos":[85317,85345]},{"content":"Indicates the number of instance methods in a class.","pos":[85385,85437]},{"content":"public DictMethod objectMethodObject(int methodNumber)","pos":[85531,85585]},{"content":"Provides information about a specified instance method in a class by returning a DictMethod object.","pos":[85599,85698]},{"content":"public ClassRunMode RunMode()","pos":[85745,85774]},{"content":"Specifies where a class is executed.","pos":[85813,85849]},{"content":"public str staticMethod(int methodNumber)","pos":[85959,86000]},{"content":"Provides the name of a specified static method in a class.","pos":[86027,86085]},{"content":"public int staticMethodCnt()","pos":[86173,86201]},{"content":"Indicates the number of static methods in a class.","pos":[86241,86291]},{"content":"public DictMethod staticMethodObject(int methodNumber)","pos":[86387,86441]},{"content":"Provides information about a specified static method in a class by returning a DictMethod object.","pos":[86455,86552]},{"content":"::public static Array getAttributedClasses(str attribute)","pos":[86601,86658]},{"content":"::public static Object createObject(str className, VarArg )","pos":[86815,86874]},{"content":"public void new(ClassId classId)","pos":[87029,87061]},{"content":"Initializes a new instance of the Object class.","pos":[87097,87144]},{"pos":[87246,87263],"content":"Method callObject","linkify":"Method callObject","nodes":[{"content":"Method callObject","pos":[0,17]}]},{"content":"Calls a method on an object.","pos":[87265,87293]},{"pos":[87371,87381],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodName","pos":[87383,87393]},{"content":"Called","pos":[87407,87413]},{"pos":[87436,87448],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An anytype data type value that is returned by the specified method.","pos":[87450,87518]},{"pos":[87525,87532],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You must create an instance of the DictClass object by using a class that contains the method that you pass to the callObject method.","pos":[87534,87667]},{"content":"If an attacker can control the input to the callObject method, a security risk exists.","pos":[87668,87754]},{"content":"Therefore, this method runs under code access security.","pos":[87755,87810]},{"content":"Calls to this method on the server require permission from the InteropPermission class.","pos":[87811,87898]},{"content":"Make sure that the user has development rights by setting the security key to SysDevelopment on the control that calls this method.","pos":[87899,88030]},{"pos":[88037,88045],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"This example calls the toString instance method in the Info class, for which the global instance of this class is named infolog, and then prints the value that is returned from the call.","pos":[88047,88233]},{"pos":[89043,89060],"content":"Method callStatic","linkify":"Method callStatic","nodes":[{"content":"Method callStatic","pos":[0,17]}]},{"content":"Calls a static method.","pos":[89062,89084]},{"pos":[89147,89157],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodName","pos":[89159,89169]},{"pos":[89192,89204],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An anytype data type value that is returned by the specified method.","pos":[89206,89274]},{"pos":[89281,89288],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You must create an instance of an object of the DictClass class by using a class that contains the method passed to the callStatic method.","pos":[89290,89428]},{"content":"If an attacker can control the input to the callStatic method, a security risk exists.","pos":[89429,89515]},{"content":"Therefore, this method runs under the code access security.","pos":[89516,89575]},{"content":"Calls to this method on the server require permission from the ExecutePermission class.","pos":[89576,89663]},{"content":"Make sure that the user has development rights by setting the security key to the SysDevelopment on the control that calls this method.","pos":[89664,89799]},{"pos":[89806,89814],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"This example calls the AOSClientMode method in the Session class and then prints the value returned from the call.","pos":[89816,89930]},{"pos":[90788,90801],"content":"Method extend","linkify":"Method extend","nodes":[{"content":"Method extend","pos":[0,13]}]},{"content":"Provides the ID for the class that a specified class extends.","pos":[90803,90864]},{"pos":[90900,90912],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A value of the classID system data type that indicates the class ID; 0 if a class does not extend another class.","pos":[90914,91026]},{"pos":[91032,91049],"content":"Method extendedBy","linkify":"Method extendedBy","nodes":[{"content":"Method extendedBy","pos":[0,17]}]},{"content":"Provides a List object for the classes that extend a specified class.","pos":[91051,91120]},{"pos":[91176,91186],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"allLevels","pos":[91188,91197]},{"pos":[91206,91218],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A List object for the classes that extend the class.","pos":[91220,91272]},{"pos":[91278,91301],"content":"Method getAllAttributes","linkify":"Method getAllAttributes","nodes":[{"content":"Method getAllAttributes","pos":[0,23]}]},{"content":"Retrieves the full set of attributes for the class.","pos":[91303,91354]},{"pos":[91398,91410],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The array of SysAttribute objects for the class.","pos":[91412,91460]},{"pos":[91466,91485],"content":"Method getAttribute","linkify":"Method getAttribute","nodes":[{"content":"Method getAttribute","pos":[0,19]}]},{"content":"Gets the first matching attribute from the class header metadata, creates an instance of the Object class that represents it, and returns it.","pos":[91487,91628]},{"pos":[91682,91692],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"attribute","pos":[91694,91703]},{"content":"The attribute for which to search.","pos":[91706,91740]},{"pos":[91747,91759],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The attribute as an instance of the Object class.","pos":[91761,91810]},{"pos":[91816,91836],"content":"Method getAttributes","linkify":"Method getAttributes","nodes":[{"content":"Method getAttributes","pos":[0,20]}]},{"pos":[91890,91900],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"attribute","pos":[91902,91911]},{"pos":[91920,91932],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[91938,91947],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"content":"Provides the ID for a specified class.","pos":[91949,91987]},{"pos":[92019,92031],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A value of the classId system data type that indicates the class ID.","pos":[92033,92101]},{"pos":[92107,92124],"content":"Method implements","linkify":"Method implements","nodes":[{"content":"Method implements","pos":[0,17]}]},{"content":"Provides the ID for a specified interface that a class implements.","pos":[92126,92192]},{"pos":[92238,92248],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"no","pos":[92250,92252]},{"content":"An integer data type that specifies the interface, based on the order of the interfaces in the class declaration.","pos":[92255,92368]},{"pos":[92375,92387],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A value of the classID system data type that indicates the class ID.","pos":[92389,92457]},{"pos":[92463,92483],"content":"Method implementsCnt","linkify":"Method implementsCnt","nodes":[{"content":"Method implementsCnt","pos":[0,20]}]},{"content":"Indicates the number of interfaces that a class implements.","pos":[92485,92544]},{"pos":[92583,92595],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer data type value for the number of interfaces that a class implements.","pos":[92597,92677]},{"pos":[92683,92700],"content":"Method isAbstract","linkify":"Method isAbstract","nodes":[{"content":"Method isAbstract","pos":[0,17]}]},{"content":"Indicates whether a class is abstract.","pos":[92702,92740]},{"pos":[92780,92792],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the class is abstract; otherwise, false.","pos":[92794,92842]},{"pos":[92848,92862],"content":"Method isFinal","linkify":"Method isFinal","nodes":[{"content":"Method isFinal","pos":[0,14]}]},{"content":"Indicates whether a class is final.","pos":[92864,92899]},{"pos":[92936,92948],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the class is final; otherwise, false.","pos":[92950,92995]},{"pos":[93001,93019],"content":"Method isInterface","linkify":"Method isInterface","nodes":[{"content":"Method isInterface","pos":[0,18]}]},{"content":"Indicates whether an object is an interface.","pos":[93021,93065]},{"pos":[93106,93118],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the object is an interface; otherwise, false.","pos":[93120,93173]},{"pos":[93179,93194],"content":"Method isKernel","linkify":"Method isKernel","nodes":[{"content":"Method isKernel","pos":[0,15]}]},{"content":"Indicates whether a class is a kernel class.","pos":[93196,93240]},{"pos":[93278,93290],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the class is a kernel class; otherwise, false.","pos":[93292,93346]},{"pos":[93352,93368],"content":"Method isRunable","linkify":"Method isRunable","nodes":[{"content":"Method isRunable","pos":[0,16]}]},{"content":"Indicates whether a class can be run.","pos":[93370,93407]},{"pos":[93446,93458],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the class can be run; otherwise, false.","pos":[93460,93507]},{"pos":[93513,93530],"content":"Method makeObject","linkify":"Method makeObject","nodes":[{"content":"Method makeObject","pos":[0,17]}]},{"content":"Creates an object.","pos":[93532,93550]},{"pos":[93596,93606],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[93617,93629],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An instance of the Object class.","pos":[93631,93663]},{"pos":[93670,93677],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can pass an instance of the Object class to the DictClass::callObject method.","pos":[93679,93760]},{"pos":[93766,93777],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Provides the name of a class.","pos":[93779,93808]},{"pos":[93838,93850],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string data type value for the class name.","pos":[93852,93896]},{"pos":[93902,93921],"content":"Method objectMethod","linkify":"Method objectMethod","nodes":[{"content":"Method objectMethod","pos":[0,19]}]},{"content":"Provides the name of a specified instance method in a class.","pos":[93923,93983]},{"pos":[94037,94047],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[94049,94061]},{"content":"An integer data type that specifies a method in a class, based on the order of the methods.","pos":[94064,94155]},{"pos":[94162,94174],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string data type value for the method name.","pos":[94176,94221]},{"pos":[94228,94235],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">\\_</ph>methodNumber parameter starts counting at 1.","pos":[94237,94287],"source":"The \\_methodNumber parameter starts counting at 1."},{"pos":[94293,94315],"content":"Method objectMethodCnt","linkify":"Method objectMethodCnt","nodes":[{"content":"Method objectMethodCnt","pos":[0,22]}]},{"content":"Indicates the number of instance methods in a class.","pos":[94317,94369]},{"pos":[94410,94422],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the number of instance methods in a class.","pos":[94424,94498]},{"pos":[94504,94529],"content":"Method objectMethodObject","linkify":"Method objectMethodObject","nodes":[{"content":"Method objectMethodObject","pos":[0,25]}]},{"content":"Provides information about a specified instance method in a class by returning a DictMethod object.","pos":[94531,94630]},{"pos":[94697,94707],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[94709,94721]},{"content":"An integer data type that specifies a method in a class, based on the order of the methods.","pos":[94724,94815]},{"content":"Numbering starts at 1.","pos":[94816,94838]},{"pos":[94845,94857],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictMethod object that contains information about a specified method in a class.","pos":[94859,94941]},{"pos":[94948,94955],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">\\_</ph>methodNumber parameter starts counting at 1.","pos":[94957,95007],"source":"The \\_methodNumber parameter starts counting at 1."},{"pos":[95013,95027],"content":"Method RunMode","linkify":"Method RunMode","nodes":[{"content":"Method RunMode","pos":[0,14]}]},{"content":"Specifies where a class is executed.","pos":[95029,95065]},{"pos":[95107,95119],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A ClassRunMode system enumeration value that indicates where a class is executed.","pos":[95121,95202]},{"pos":[95209,95216],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following are the possible return values:","pos":[95218,95263]},{"content":"The Called value.","pos":[95269,95286]},{"content":"The Client value.","pos":[95291,95308]},{"content":"The ClientorServer value.","pos":[95313,95338]},{"content":"The Server value.","pos":[95343,95360]},{"pos":[95366,95385],"content":"Method staticMethod","linkify":"Method staticMethod","nodes":[{"content":"Method staticMethod","pos":[0,19]}]},{"content":"Provides the name of a specified static method in a class.","pos":[95387,95445]},{"pos":[95499,95509],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[95511,95523]},{"content":"An integer data type that specifies a method in a class, based on the order of the methods.","pos":[95526,95617]},{"pos":[95624,95636],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string data type value for the method name.","pos":[95638,95683]},{"pos":[95690,95697],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">\\_</ph>methodNumber parameter starts counting at 1.","pos":[95699,95749],"source":"The \\_methodNumber parameter starts counting at 1."},{"pos":[95755,95777],"content":"Method staticMethodCnt","linkify":"Method staticMethodCnt","nodes":[{"content":"Method staticMethodCnt","pos":[0,22]}]},{"content":"Indicates the number of static methods in a class.","pos":[95779,95829]},{"pos":[95870,95882],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that indicates the number of static methods in a class.","pos":[95884,95950]},{"pos":[95956,95981],"content":"Method staticMethodObject","linkify":"Method staticMethodObject","nodes":[{"content":"Method staticMethodObject","pos":[0,25]}]},{"content":"Provides information about a specified static method in a class by returning a DictMethod object.","pos":[95983,96080]},{"pos":[96147,96157],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[96159,96171]},{"content":"An integer data type that specifies a method in a class, based on the order of the methods.","pos":[96174,96265]},{"pos":[96272,96284],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictMethod object that contains information about a specified method in a class.","pos":[96286,96368]},{"pos":[96375,96382],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">\\_</ph>methodNumber parameter starts counting at 1.","pos":[96384,96434],"source":"The \\_methodNumber parameter starts counting at 1."},{"pos":[96440,96467],"content":"Method getAttributedClasses","linkify":"Method getAttributedClasses","nodes":[{"content":"Method getAttributedClasses","pos":[0,27]}]},{"pos":[96535,96545],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"attribute","pos":[96547,96556]},{"pos":[96565,96577],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[96583,96602],"content":"Method createObject","linkify":"Method createObject","nodes":[{"content":"Method createObject","pos":[0,19]}]},{"pos":[96672,96682],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"className","pos":[96684,96693]},{"pos":[96716,96728],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[96734,96744],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[96746,96793]},{"pos":[96838,96848],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"classId","pos":[96850,96857]},{"content":"A value of the classId system data type that indicates the system ID of a class.","pos":[96860,96940]},{"pos":[96947,96954],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Class IDs are unsigned integers and are therefore always in the range 0 to 65535.","pos":[96956,97037]},{"content":"The method does not fail if an invalid class ID is passed.You can pass a class name to the method instead of a class ID by using the classNum intrinsic function.","pos":[97038,97199]},{"content":"For more information, see “Intrinsic Functions.”","pos":[97200,97248]},{"pos":[97253,97287],"content":"Class DictCompositeChildDataEntity","linkify":"Class DictCompositeChildDataEntity","nodes":[{"content":"Class DictCompositeChildDataEntity","pos":[0,34]}]},{"pos":[97347,97354],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[97360,97368],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[97374,97381],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[97385,97391]},{"content":"Description","pos":[97452,97463]},{"content":"public int level()","pos":[97551,97569]},{"content":"public str name()","pos":[97634,97651]},{"content":"public str dataEntity()","pos":[97717,97740]},{"content":"public str relation()","pos":[97800,97821]},{"content":"public str tags()","pos":[97883,97900]},{"content":"public DictCompositeChildDataEntity parent()","pos":[97966,98010]},{"content":"public void new(str compositeDataEntityName, str dataEntityName)","pos":[98049,98113]},{"pos":[98135,98147],"content":"Method level","linkify":"Method level","nodes":[{"content":"Method level","pos":[0,12]}]},{"pos":[98178,98190],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98196,98207],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"pos":[98237,98249],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98255,98272],"content":"Method dataEntity","linkify":"Method dataEntity","nodes":[{"content":"Method dataEntity","pos":[0,17]}]},{"pos":[98308,98320],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98326,98341],"content":"Method relation","linkify":"Method relation","nodes":[{"content":"Method relation","pos":[0,15]}]},{"pos":[98375,98387],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98393,98404],"content":"Method tags","linkify":"Method tags","nodes":[{"content":"Method tags","pos":[0,11]}]},{"pos":[98434,98446],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98452,98465],"content":"Method parent","linkify":"Method parent","nodes":[{"content":"Method parent","pos":[0,13]}]},{"pos":[98522,98534],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[98540,98550],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[98627,98637],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"compositeDataEntityName","pos":[98639,98662]},{"content":"dataEntityName","pos":[98676,98690]},{"pos":[98697,98726],"content":"Class DictCompositeDataEntity","linkify":"Class DictCompositeDataEntity","nodes":[{"content":"Class DictCompositeDataEntity","pos":[0,29]}]},{"pos":[98781,98788],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[98794,98802],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[98808,98815],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[98819,98825]},{"content":"Description","pos":[98882,98893]},{"content":"::public static List listOfCompositeDataEntities()","pos":[98977,99027]},{"content":"public str label()","pos":[99056,99074]},{"content":"public boolean isReadOnly()","pos":[99135,99162]},{"content":"public str modules()","pos":[99214,99234]},{"content":"public str configurationKey()","pos":[99293,99322]},{"content":"public str countryRegionCodes()","pos":[99372,99403]},{"content":"public str countryRegionContextField()","pos":[99451,99489]},{"content":"public str developerDocumentation()","pos":[99530,99565]},{"content":"public EntityCategory entityCategory()","pos":[99609,99647]},{"content":"public str formRef()","pos":[99688,99708]},{"content":"public str singularLabel()","pos":[99767,99793]},{"content":"public str tags()","pos":[99846,99863]},{"content":"public str publicCollectionName()","pos":[99925,99958]},{"content":"public str publicEntityName()","pos":[100004,100033]},{"content":"public int dataEntityCount()","pos":[100083,100111]},{"content":"public DictCompositeChildDataEntity childDataEntityNo(int n)","pos":[100162,100222]},{"content":"public void new(str compositeDataEntityName)","pos":[100241,100285]},{"pos":[100323,100357],"content":"Method listOfCompositeDataEntities","linkify":"Method listOfCompositeDataEntities","nodes":[{"content":"Method listOfCompositeDataEntities","pos":[0,34]}]},{"pos":[100418,100430],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100436,100448],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"pos":[100479,100491],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100497,100514],"content":"Method isReadOnly","linkify":"Method isReadOnly","nodes":[{"content":"Method isReadOnly","pos":[0,17]}]},{"pos":[100554,100566],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100572,100586],"content":"Method modules","linkify":"Method modules","nodes":[{"content":"Method modules","pos":[0,14]}]},{"pos":[100619,100631],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100637,100660],"content":"Method configurationKey","linkify":"Method configurationKey","nodes":[{"content":"Method configurationKey","pos":[0,23]}]},{"pos":[100702,100714],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100720,100745],"content":"Method countryRegionCodes","linkify":"Method countryRegionCodes","nodes":[{"content":"Method countryRegionCodes","pos":[0,25]}]},{"pos":[100789,100801],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100807,100839],"content":"Method countryRegionContextField","linkify":"Method countryRegionContextField","nodes":[{"content":"Method countryRegionContextField","pos":[0,32]}]},{"pos":[100890,100902],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[100908,100937],"content":"Method developerDocumentation","linkify":"Method developerDocumentation","nodes":[{"content":"Method developerDocumentation","pos":[0,29]}]},{"pos":[100985,100997],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101003,101024],"content":"Method entityCategory","linkify":"Method entityCategory","nodes":[{"content":"Method entityCategory","pos":[0,21]}]},{"pos":[101075,101087],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101093,101107],"content":"Method formRef","linkify":"Method formRef","nodes":[{"content":"Method formRef","pos":[0,14]}]},{"pos":[101140,101152],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101158,101178],"content":"Method singularLabel","linkify":"Method singularLabel","nodes":[{"content":"Method singularLabel","pos":[0,20]}]},{"pos":[101217,101229],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101235,101246],"content":"Method tags","linkify":"Method tags","nodes":[{"content":"Method tags","pos":[0,11]}]},{"pos":[101276,101288],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101294,101321],"content":"Method publicCollectionName","linkify":"Method publicCollectionName","nodes":[{"content":"Method publicCollectionName","pos":[0,27]}]},{"pos":[101367,101379],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101385,101408],"content":"Method publicEntityName","linkify":"Method publicEntityName","nodes":[{"content":"Method publicEntityName","pos":[0,23]}]},{"pos":[101450,101462],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101468,101490],"content":"Method dataEntityCount","linkify":"Method dataEntityCount","nodes":[{"content":"Method dataEntityCount","pos":[0,22]}]},{"pos":[101531,101543],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101549,101573],"content":"Method childDataEntityNo","linkify":"Method childDataEntityNo","nodes":[{"content":"Method childDataEntityNo","pos":[0,24]}]},{"pos":[101646,101656],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"n","pos":[101658,101659]},{"pos":[101668,101680],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[101686,101696],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[101753,101763],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"compositeDataEntityName","pos":[101765,101788]},{"pos":[101795,101821],"content":"Class DictConfigurationKey","linkify":"Class DictConfigurationKey","nodes":[{"content":"Class DictConfigurationKey","pos":[0,26]}]},{"content":"The DictConfigurationKey class provides information about a configuration key.","pos":[101869,101947]},{"pos":[101953,101960],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For an example that uses the DictConfigurationKey class, see the new method.","pos":[101962,102038]},{"pos":[102044,102052],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[102058,102065],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[102069,102075]},{"content":"Description","pos":[102146,102157]},{"content":"public boolean enabled()","pos":[102379,102403]},{"content":"Returns a value that indicates whether the configuration key is enabled.","pos":[102456,102528]},{"content":"public ConfigurationKeyId id()","pos":[102534,102564]},{"content":"Returns the ID of the configuration key.","pos":[102611,102651]},{"content":"public str label()","pos":[102689,102707]},{"content":"Returns the label for a configuration key.","pos":[102766,102808]},{"content":"public str labelId()","pos":[102844,102864]},{"content":"public LicenseCodeId licenseCode()","pos":[102999,103033]},{"content":"Returns the license code ID for the configuration key.","pos":[103076,103130]},{"content":"public str name()","pos":[103154,103171]},{"content":"Returns the name of the configuration key.","pos":[103231,103273]},{"content":"public ConfigurationKeyId parentConfigurationKeyId()","pos":[103309,103361]},{"content":"Returns the ID of the parent configuration key for the configuration key.","pos":[103386,103459]},{"content":"::public static boolean enabledById(ConfigurationKeyId configurationKeyId)","pos":[103464,103538]},{"content":"public boolean permanentlyDisabled()","pos":[103619,103655]},{"content":"public void new(ConfigurationKeyId configurationKeyId)","pos":[103774,103828]},{"content":"Initializes a new instance of the Object class.","pos":[103851,103898]},{"pos":[103932,103946],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Returns a value that indicates whether the configuration key is enabled.","pos":[103948,104020]},{"pos":[104057,104069],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the configuration key is enabled; otherwise, false.","pos":[104071,104130]},{"pos":[104137,104144],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For an example that uses this method, see the new method.","pos":[104146,104203]},{"pos":[104209,104218],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"content":"Returns the ID of the configuration key.","pos":[104220,104260]},{"pos":[104303,104315],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the configuration key.","pos":[104317,104349]},{"pos":[104355,104367],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Returns the label for a configuration key.","pos":[104369,104411]},{"pos":[104442,104454],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label for the configuration key; an empty string if the configuration key does not have a label value.","pos":[104456,104562]},{"pos":[104568,104582],"content":"Method labelId","linkify":"Method labelId","nodes":[{"content":"Method labelId","pos":[0,14]}]},{"pos":[104615,104627],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[104633,104651],"content":"Method licenseCode","linkify":"Method licenseCode","nodes":[{"content":"Method licenseCode","pos":[0,18]}]},{"content":"Returns the license code ID for the configuration key.","pos":[104653,104707]},{"pos":[104754,104766],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The license code ID for the configuration key; 0 (zero) if the configuration key has no license code.","pos":[104768,104869]},{"pos":[104875,104886],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Returns the name of the configuration key.","pos":[104888,104930]},{"pos":[104960,104972],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the configuration key.","pos":[104974,105008]},{"pos":[105015,105022],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For an example that uses this method, see the new method.","pos":[105024,105081]},{"pos":[105087,105118],"content":"Method parentConfigurationKeyId","linkify":"Method parentConfigurationKeyId","nodes":[{"content":"Method parentConfigurationKeyId","pos":[0,31]}]},{"content":"Returns the ID of the parent configuration key for the configuration key.","pos":[105120,105193]},{"pos":[105258,105270],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the parent configuration key; 0 (zero) if the configuration key has no parent configuration key.","pos":[105272,105378]},{"pos":[105384,105402],"content":"Method enabledById","linkify":"Method enabledById","nodes":[{"content":"Method enabledById","pos":[0,18]}]},{"pos":[105487,105497],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"configurationKeyId","pos":[105499,105517]},{"pos":[105526,105538],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[105544,105570],"content":"Method permanentlyDisabled","linkify":"Method permanentlyDisabled","nodes":[{"content":"Method permanentlyDisabled","pos":[0,26]}]},{"pos":[105619,105631],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[105637,105647],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[105649,105696]},{"pos":[105763,105773],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"configurationKeyId","pos":[105775,105793]},{"content":"The ID of the configuration key that is used to create the instance of the DictConfigurationKey class.","pos":[105796,105898]},{"pos":[105905,105913],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows how to create a new instance of the DictConfigurationKey class during an enumeration of configuration keys.","pos":[105915,106050]},{"pos":[106599,106619],"content":"Class DictDataEntity","linkify":"Class DictDataEntity","nodes":[{"content":"Class DictDataEntity","pos":[0,20]}]},{"pos":[106667,106674],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[106680,106688],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[106694,106701],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[106705,106711]},{"content":"Description","pos":[106763,106774]},{"content":"public boolean isAggregateDataEntity()","pos":[106853,106891]},{"content":"public boolean isReadOnly()","pos":[106927,106954]},{"content":"public str primaryCompanyContext()","pos":[107001,107035]},{"content":"public str primaryKey()","pos":[107075,107098]},{"content":"public boolean supportsSetBasedSqlOperations()","pos":[107149,107195]},{"content":"public AutoNo enableSetBasedSqlOperations()","pos":[107223,107266]},{"content":"public str modules()","pos":[107297,107317]},{"content":"public EntityCategory entityCategory()","pos":[107371,107409]},{"content":"public boolean dataManagementEnabled()","pos":[107445,107483]},{"content":"public str dataManagementStagingTable()","pos":[107519,107558]},{"content":"public str publicCollectionName()","pos":[107593,107626]},{"content":"public str publicEntityName()","pos":[107667,107696]},{"content":"public boolean dataSourceIsReadOnly(str dataSourceName)","pos":[107741,107796]},{"content":"public str dataSourceID2Name(int dataSourceId)","pos":[107815,107861]},{"content":"public boolean hasExtensionFields()","pos":[107889,107924]},{"content":"public List getExtensionFieldNames()","pos":[107963,107999]},{"content":"::public static List listOfDataEntities()","pos":[108037,108078]},{"content":"public void new(TableId tableId)","pos":[108111,108143]},{"pos":[108188,108216],"content":"Method isAggregateDataEntity","linkify":"Method isAggregateDataEntity","nodes":[{"content":"Method isAggregateDataEntity","pos":[0,28]}]},{"pos":[108267,108279],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108285,108302],"content":"Method isReadOnly","linkify":"Method isReadOnly","nodes":[{"content":"Method isReadOnly","pos":[0,17]}]},{"pos":[108342,108354],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108360,108388],"content":"Method primaryCompanyContext","linkify":"Method primaryCompanyContext","nodes":[{"content":"Method primaryCompanyContext","pos":[0,28]}]},{"pos":[108435,108447],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108453,108470],"content":"Method primaryKey","linkify":"Method primaryKey","nodes":[{"content":"Method primaryKey","pos":[0,17]}]},{"pos":[108506,108518],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108524,108560],"content":"Method supportsSetBasedSqlOperations","linkify":"Method supportsSetBasedSqlOperations","nodes":[{"content":"Method supportsSetBasedSqlOperations","pos":[0,36]}]},{"pos":[108619,108631],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108637,108671],"content":"Method enableSetBasedSqlOperations","linkify":"Method enableSetBasedSqlOperations","nodes":[{"content":"Method enableSetBasedSqlOperations","pos":[0,34]}]},{"pos":[108727,108739],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108745,108759],"content":"Method modules","linkify":"Method modules","nodes":[{"content":"Method modules","pos":[0,14]}]},{"pos":[108792,108804],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108810,108831],"content":"Method entityCategory","linkify":"Method entityCategory","nodes":[{"content":"Method entityCategory","pos":[0,21]}]},{"pos":[108882,108894],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108900,108928],"content":"Method dataManagementEnabled","linkify":"Method dataManagementEnabled","nodes":[{"content":"Method dataManagementEnabled","pos":[0,28]}]},{"pos":[108979,108991],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[108997,109030],"content":"Method dataManagementStagingTable","linkify":"Method dataManagementStagingTable","nodes":[{"content":"Method dataManagementStagingTable","pos":[0,33]}]},{"pos":[109082,109094],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109100,109127],"content":"Method publicCollectionName","linkify":"Method publicCollectionName","nodes":[{"content":"Method publicCollectionName","pos":[0,27]}]},{"pos":[109173,109185],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109191,109214],"content":"Method publicEntityName","linkify":"Method publicEntityName","nodes":[{"content":"Method publicEntityName","pos":[0,23]}]},{"pos":[109256,109268],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109274,109301],"content":"Method dataSourceIsReadOnly","linkify":"Method dataSourceIsReadOnly","nodes":[{"content":"Method dataSourceIsReadOnly","pos":[0,27]}]},{"pos":[109369,109379],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[109381,109395]},{"pos":[109404,109416],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109422,109446],"content":"Method dataSourceID2Name","linkify":"Method dataSourceID2Name","nodes":[{"content":"Method dataSourceID2Name","pos":[0,24]}]},{"pos":[109505,109515],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceId","pos":[109517,109529]},{"pos":[109538,109550],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109556,109581],"content":"Method hasExtensionFields","linkify":"Method hasExtensionFields","nodes":[{"content":"Method hasExtensionFields","pos":[0,25]}]},{"pos":[109629,109641],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109647,109676],"content":"Method getExtensionFieldNames","linkify":"Method getExtensionFieldNames","nodes":[{"content":"Method getExtensionFieldNames","pos":[0,29]}]},{"pos":[109725,109737],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109743,109768],"content":"Method listOfDataEntities","linkify":"Method listOfDataEntities","nodes":[{"content":"Method listOfDataEntities","pos":[0,25]}]},{"pos":[109820,109832],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[109838,109848],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[109893,109903],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[109905,109912]},{"pos":[109919,109944],"content":"Class DictDataEntityField","linkify":"Class DictDataEntityField","nodes":[{"content":"Class DictDataEntityField","pos":[0,25]}]},{"pos":[109998,110005],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[110011,110019],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[110025,110032],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[110036,110042]},{"content":"Description","pos":[110108,110119]},{"content":"public FieldAccessModifier accessModifier()","pos":[110212,110255]},{"content":"public str dataEntityViewMethod()","pos":[110300,110333]},{"content":"public str dataField()","pos":[110388,110410]},{"content":"public str dataSource()","pos":[110476,110499]},{"content":"public str dimensionLegalEntityContextField()","pos":[110564,110609]},{"content":"public str dynamicDimensionEnumerationField()","pos":[110652,110697]},{"content":"public boolean IsComputedField()","pos":[110740,110772]},{"content":"public void new(TableId tableId, FieldId fieldId, <ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[110828,110897],"source":"public void new(TableId tableId, FieldId fieldId, \\[int arrayIndex\\])"},{"pos":[110919,110940],"content":"Method accessModifier","linkify":"Method accessModifier","nodes":[{"content":"Method accessModifier","pos":[0,21]}]},{"pos":[110996,111008],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111014,111041],"content":"Method dataEntityViewMethod","linkify":"Method dataEntityViewMethod","nodes":[{"content":"Method dataEntityViewMethod","pos":[0,27]}]},{"pos":[111087,111099],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111105,111121],"content":"Method dataField","linkify":"Method dataField","nodes":[{"content":"Method dataField","pos":[0,16]}]},{"pos":[111156,111168],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111174,111191],"content":"Method dataSource","linkify":"Method dataSource","nodes":[{"content":"Method dataSource","pos":[0,17]}]},{"pos":[111227,111239],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111245,111284],"content":"Method dimensionLegalEntityContextField","linkify":"Method dimensionLegalEntityContextField","nodes":[{"content":"Method dimensionLegalEntityContextField","pos":[0,39]}]},{"pos":[111342,111354],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111360,111399],"content":"Method dynamicDimensionEnumerationField","linkify":"Method dynamicDimensionEnumerationField","nodes":[{"content":"Method dynamicDimensionEnumerationField","pos":[0,39]}]},{"pos":[111457,111469],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111475,111497],"content":"Method IsComputedField","linkify":"Method IsComputedField","nodes":[{"content":"Method IsComputedField","pos":[0,22]}]},{"pos":[111542,111554],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[111560,111570],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[111650,111660],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[111662,111669]},{"content":"fieldId","pos":[111683,111690]},{"content":"arrayIndex","pos":[111704,111714]},{"pos":[111721,111735],"content":"Class DictEnum","linkify":"Class DictEnum","nodes":[{"content":"Class DictEnum","pos":[0,14]}]},{"content":"The DictEnum class obtains meta-information about the base enum enumerations in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[111771,111907]},{"pos":[111913,111920],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For backward compatibility, a special naming convention for methods that convert to or from properties is used.","pos":[111922,112033]},{"content":"Name","pos":[112197,112201]},{"content":"ReqDate","pos":[112215,112222]},{"content":"Symbol (typed as string)","pos":[112248,112272]},{"content":"Label","pos":[112277,112282]},{"content":"<ph id=\"ph1\">@SYS18075</ph> (\"Requirement date\")","pos":[112295,112325],"source":"@SYS18075 (\"Requirement date\")"},{"content":"Name or Label","pos":[112328,112341]},{"content":"FeatureKey","pos":[112357,112367]},{"content":"ReqSchedAction","pos":[112375,112389]},{"content":"FeatureKey","pos":[112408,112418]},{"content":"EnumValue","pos":[112437,112446]},{"content":"0","pos":[112455,112456]},{"content":"Value","pos":[112488,112493]},{"content":"Position in AOT","pos":[112517,112532]},{"content":"First (Index = 0)","pos":[112535,112552]},{"content":"Index","pos":[112568,112573]},{"content":"This example is from the ActionBasicDateType base enum.","pos":[112596,112651]},{"content":"For general information about enumerations, see the Developer's Guide.","pos":[112652,112722]},{"pos":[112728,112736],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[112742,112749],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[112753,112759]},{"content":"Description","pos":[112821,112832]},{"content":"public ConfigurationKeyId configurationKeyId()","pos":[113141,113187]},{"content":"Returns the configuration key ID for the enumeration.","pos":[113209,113262]},{"content":"public int displayLength(<ph id=\"ph1\">\\[</ph>boolean useLongestLabel<ph id=\"ph2\">\\]</ph>)","pos":[113335,113388],"source":"public int displayLength(\\[boolean useLongestLabel\\])"},{"content":"public container getCountryRegionCodes()","pos":[113529,113569]},{"content":"public str help(<ph id=\"ph1\">\\[</ph>boolean useInterfaceLanguage<ph id=\"ph2\">\\]</ph>)","pos":[113723,113772],"source":"public str help(\\[boolean useInterfaceLanguage\\])"},{"content":"Retrieves the Help text for this enumeration.","pos":[113791,113836]},{"content":"public str helpDefined()","pos":[113917,113941]},{"content":"Returns the value of the help property for this enumeration.","pos":[113985,114045]},{"content":"public EnumId id()","pos":[114111,114129]},{"content":"Returns the enumeration ID of the enumeration.","pos":[114179,114225]},{"content":"public ConfigurationKeyId index2ConfigurationKey(int index)","pos":[114305,114364]},{"content":"public container index2CountryRegionCodes(int index)","pos":[114499,114551]},{"content":"public str index2Label(int index)","pos":[114693,114726]},{"content":"Returns the label of the enumeration item that is specified by an index.","pos":[114761,114833]},{"content":"public str index2LabelId(int index)","pos":[114887,114922]},{"content":"public str index2Name(int index)","pos":[115081,115113]},{"content":"Returns the label of the enumeration item that is specified by an index.","pos":[115149,115221]},{"content":"public str index2Symbol(int index)","pos":[115275,115309]},{"content":"Returns the symbol or name of the enumeration item that is specified by an index.","pos":[115343,115424]},{"content":"public int index2Value(int index)","pos":[115469,115502]},{"content":"Returns the value of the enumeration item that is specified by an index.","pos":[115537,115609]},{"content":"public str label()","pos":[115663,115681]},{"content":"Returns the label text of the enumeration.","pos":[115731,115773]},{"content":"public str labelDefined()","pos":[115857,115882]},{"content":"Returns the value of the label property for this enumeration.","pos":[115925,115986]},{"content":"public str name()","pos":[116051,116068]},{"content":"Returns the name of the enumeration.","pos":[116119,116155]},{"content":"public int name2Value(str name)","pos":[116245,116276]},{"content":"Returns the enumeration value of the item that is referenced by its label.","pos":[116313,116387]},{"content":"public boolean showAsRadio()","pos":[116439,116467]},{"content":"Returns a value that indicates whether the enumeration should be displayed by using radio buttons instead of a combo box.","pos":[116507,116628]},{"content":"public int symbol2Value(str name)","pos":[116633,116666]},{"content":"Returns the enumeration value of the item, referenced by its symbol or name.","pos":[116701,116777]},{"content":"public ConfigurationKeyId value2ConfigurationKey(int value)","pos":[116827,116886]},{"content":"Returns the configuration key ID of a specified enumeration value.","pos":[116895,116961]},{"content":"public container value2CountryRegionCodes(int value)","pos":[117021,117073]},{"content":"public str value2Label(int value)","pos":[117215,117248]},{"content":"Returns the label of a specified enumeration value.","pos":[117283,117334]},{"content":"public str value2Name(int value)","pos":[117409,117441]},{"content":"Returns the name of a specified enumeration value.","pos":[117477,117527]},{"content":"public str value2Symbol(int value)","pos":[117603,117637]},{"content":"Returns the symbol, or the value of the Name property, of a specified enumeration value.","pos":[117671,117759]},{"content":"public int values()","pos":[117797,117816]},{"content":"Returns the number of items in the enumeration.","pos":[117865,117912]},{"content":"::public static str queryFilterNames2Values(QueryFilter filter)","pos":[117991,118054]},{"content":"::public static str queryFilterValues2Names(QueryFilter filter)","pos":[118185,118248]},{"content":"::public static str queryRangeNames2Values(QueryBuildRange range)","pos":[118379,118444]},{"content":"::public static str queryRangeValues2Names(QueryBuildRange range)","pos":[118573,118638]},{"content":"::public static int value2id(AnyType value)","pos":[118767,118810]},{"content":"Returns the enumeration ID of a specified value.","pos":[118835,118883]},{"content":"public void new(EnumId typeId)","pos":[118961,118991]},{"content":"Initializes a new instance of the Object class.","pos":[119029,119076]},{"pos":[119158,119183],"content":"Method configurationKeyId","linkify":"Method configurationKeyId","nodes":[{"content":"Method configurationKeyId","pos":[0,25]}]},{"content":"Returns the configuration key ID for the enumeration.","pos":[119185,119238]},{"pos":[119297,119309],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The configuration key ID for the enumeration; 0 (zero) if there is no configuration key ID for the enumeration.","pos":[119311,119422]},{"pos":[119429,119437],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the configuration key ID for an enumeration.","pos":[119439,119528]},{"pos":[119665,119685],"content":"Method displayLength","linkify":"Method displayLength","nodes":[{"content":"Method displayLength","pos":[0,20]}]},{"pos":[119749,119759],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"useLongestLabel","pos":[119761,119776]},{"pos":[119785,119797],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[119803,119831],"content":"Method getCountryRegionCodes","linkify":"Method getCountryRegionCodes","nodes":[{"content":"Method getCountryRegionCodes","pos":[0,28]}]},{"pos":[119884,119896],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[119902,119913],"content":"Method help","linkify":"Method help","nodes":[{"content":"Method help","pos":[0,11]}]},{"content":"Retrieves the Help text for this enumeration.","pos":[119915,119960]},{"pos":[120020,120030],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"useInterfaceLanguage","pos":[120032,120052]},{"pos":[120061,120073],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains the Help text; an empty string if no Help text is defined.","pos":[120075,120156]},{"pos":[120163,120170],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The Help text is defined on the Help property of the base enumeration.","pos":[120172,120242]},{"pos":[120248,120266],"content":"Method helpDefined","linkify":"Method helpDefined","nodes":[{"content":"Method helpDefined","pos":[0,18]}]},{"content":"Returns the value of the help property for this enumeration.","pos":[120268,120328]},{"pos":[120365,120377],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the help property for this enumeration.","pos":[120379,120431]},{"pos":[120437,120446],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"content":"Returns the enumeration ID of the enumeration.","pos":[120448,120494]},{"pos":[120525,120537],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The enumeration ID of the enumeration.","pos":[120539,120577]},{"pos":[120583,120612],"content":"Method index2ConfigurationKey","linkify":"Method index2ConfigurationKey","nodes":[{"content":"Method index2ConfigurationKey","pos":[0,29]}]},{"pos":[120684,120694],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[120696,120701]},{"pos":[120710,120722],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[120728,120759],"content":"Method index2CountryRegionCodes","linkify":"Method index2CountryRegionCodes","nodes":[{"content":"Method index2CountryRegionCodes","pos":[0,31]}]},{"pos":[120824,120834],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[120836,120841]},{"pos":[120850,120862],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[120868,120886],"content":"Method index2Label","linkify":"Method index2Label","nodes":[{"content":"Method index2Label","pos":[0,18]}]},{"content":"Returns the label of the enumeration item that is specified by an index.","pos":[120888,120960]},{"pos":[121006,121016],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[121018,121023]},{"content":"The zero-based index of the enumeration in the AOT.","pos":[121026,121077]},{"pos":[121084,121096],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label of the enumeration item that specified by index; an empty string if index does not reference a valid enumeration item.","pos":[121098,121226]},{"pos":[121233,121241],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the label for items in an enumeration.","pos":[121243,121326]},{"pos":[121523,121543],"content":"Method index2LabelId","linkify":"Method index2LabelId","nodes":[{"content":"Method index2LabelId","pos":[0,20]}]},{"pos":[121591,121601],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[121603,121608]},{"pos":[121617,121629],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[121635,121652],"content":"Method index2Name","linkify":"Method index2Name","nodes":[{"content":"Method index2Name","pos":[0,17]}]},{"content":"Returns the label of the enumeration item that is specified by an index.","pos":[121654,121726]},{"pos":[121771,121781],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[121783,121788]},{"content":"The zero-based index of the enumeration in the AOT.","pos":[121791,121842]},{"pos":[121849,121861],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label of the enumeration item that is specified by index; an empty string if index does not reference a valid enumeration item.","pos":[121863,121994]},{"pos":[122001,122008],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For backward compatibility with earlier versions of Microsoft Dynamics AX, \"Name\" in DictEnum::value2Name refers to the enumeration item's label property.","pos":[122010,122164]},{"content":"To make your code more readable, use the DictEnum::value2Label method instead of the DictEnum::value2Name method.","pos":[122165,122278]},{"content":"To retrieve the value of the name property of the enumeration item as shown in the AOT, use the DictEnum::value2Symbol method.","pos":[122279,122405]},{"pos":[122412,122420],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the label for items in an enumeration.","pos":[122422,122505]},{"pos":[122701,122720],"content":"Method index2Symbol","linkify":"Method index2Symbol","nodes":[{"content":"Method index2Symbol","pos":[0,19]}]},{"content":"Returns the symbol or name of the enumeration item that is specified by an index.","pos":[122722,122803]},{"pos":[122850,122860],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[122862,122867]},{"content":"The zero-based index of the enumeration in the AOT.","pos":[122870,122921]},{"pos":[122928,122940],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The symbol of the enumeration item that is specified by index; an empty string if index does not reference a valid enumeration item.","pos":[122942,123074]},{"pos":[123081,123088],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The symbol corresponds to the Name property of the enumeration item in the AOT.","pos":[123090,123169]},{"pos":[123176,123184],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the symbol for items in an enumeration.","pos":[123186,123270]},{"pos":[123468,123486],"content":"Method index2Value","linkify":"Method index2Value","nodes":[{"content":"Method index2Value","pos":[0,18]}]},{"content":"Returns the value of the enumeration item that is specified by an index.","pos":[123488,123560]},{"pos":[123606,123616],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"index","pos":[123618,123623]},{"content":"The zero-based index of the enumeration in the AOT.","pos":[123626,123677]},{"pos":[123684,123696],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the enumeration item that is specified by index.","pos":[123698,123759]},{"pos":[123766,123774],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the value for items in an enumeration.","pos":[123776,123859]},{"pos":[124065,124077],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Returns the label text of the enumeration.","pos":[124079,124121]},{"pos":[124152,124164],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the enumeration; an empty string if there is no label for the enumeration.","pos":[124166,124252]},{"pos":[124258,124277],"content":"Method labelDefined","linkify":"Method labelDefined","nodes":[{"content":"Method labelDefined","pos":[0,19]}]},{"content":"Returns the value of the label property for this enumeration.","pos":[124279,124340]},{"pos":[124378,124390],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the label property for this enumeration.","pos":[124392,124445]},{"pos":[124451,124462],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Returns the name of the enumeration.","pos":[124464,124500]},{"pos":[124530,124542],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the enumeration.","pos":[124544,124572]},{"pos":[124578,124595],"content":"Method name2Value","linkify":"Method name2Value","nodes":[{"content":"Method name2Value","pos":[0,17]}]},{"content":"Returns the enumeration value of the item that is referenced by its label.","pos":[124597,124671]},{"pos":[124715,124725],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[124727,124731]},{"content":"The label for the enumeration for which the enumeration value is being retrieved.","pos":[124734,124815]},{"pos":[124822,124834],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The enumeration value for name; 255 if name is not a valid label of an enumeration.","pos":[124836,124919]},{"pos":[124926,124933],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For backward compatibility with earlier versions of Microsoft Dynamics AX, name refers to the label.","pos":[124935,125035]},{"content":"Enumeration items that do not have labels cannot be found by using the DictEnum::name2Value method.","pos":[125036,125135]},{"pos":[125141,125159],"content":"Method showAsRadio","linkify":"Method showAsRadio","nodes":[{"content":"Method showAsRadio","pos":[0,18]}]},{"content":"Returns a value that indicates whether the enumeration should be displayed by using radio buttons instead of a combo box.","pos":[125161,125282]},{"pos":[125323,125335],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the enumeration style is radio button; otherwise, false.","pos":[125337,125401]},{"pos":[125407,125426],"content":"Method symbol2Value","linkify":"Method symbol2Value","nodes":[{"content":"Method symbol2Value","pos":[0,19]}]},{"content":"Returns the enumeration value of the item, referenced by its symbol or name.","pos":[125428,125504]},{"pos":[125550,125560],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[125562,125566]},{"content":"The symbol or name for the enumeration for which the enumeration value is being retrieved.","pos":[125569,125659]},{"pos":[125666,125678],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The enumeration value for name; 255 if name is not a valid enumeration.","pos":[125680,125751]},{"pos":[125757,125786],"content":"Method value2ConfigurationKey","linkify":"Method value2ConfigurationKey","nodes":[{"content":"Method value2ConfigurationKey","pos":[0,29]}]},{"content":"Returns the configuration key ID of a specified enumeration value.","pos":[125788,125854]},{"pos":[125926,125936],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[125938,125943]},{"content":"The integer value for the enumeration for which the configuration key is being retrieved.","pos":[125946,126035]},{"pos":[126042,126054],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The configuration key ID for value; 0 (zero) if there is no configuration key for value or value is not a valid enumeration.","pos":[126056,126180]},{"pos":[126186,126217],"content":"Method value2CountryRegionCodes","linkify":"Method value2CountryRegionCodes","nodes":[{"content":"Method value2CountryRegionCodes","pos":[0,31]}]},{"pos":[126282,126292],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[126294,126299]},{"pos":[126308,126320],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[126326,126344],"content":"Method value2Label","linkify":"Method value2Label","nodes":[{"content":"Method value2Label","pos":[0,18]}]},{"content":"Returns the label of a specified enumeration value.","pos":[126346,126397]},{"pos":[126443,126453],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[126455,126460]},{"content":"The integer value for the enumeration for which the label is being retrieved.","pos":[126463,126540]},{"pos":[126547,126559],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label for value; an empty string if there is no label for value or value is not a valid enumeration.","pos":[126561,126665]},{"pos":[126672,126679],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Enumeration items are not required to have a label.","pos":[126681,126732]},{"content":"This method cannot be used to determine whether a value exists in the enumeration.","pos":[126733,126815]},{"content":"To determine whether a value exists in the enumeration, use the DictEnum::value2Symbol method.","pos":[126816,126910]},{"pos":[126916,126933],"content":"Method value2Name","linkify":"Method value2Name","nodes":[{"content":"Method value2Name","pos":[0,17]}]},{"content":"Returns the name of a specified enumeration value.","pos":[126935,126985]},{"pos":[127030,127040],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[127042,127047]},{"content":"The integer value for the enumeration for which the label is being retrieved.","pos":[127050,127127]},{"pos":[127134,127146],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name for value; an empty string if there is no name for value or value is not a valid enumeration.","pos":[127148,127250]},{"pos":[127257,127264],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To determine whether a value is in the enumeration, use the value2Symbol method instead.","pos":[127266,127354]},{"content":"The value2Name method cannot be used to determine whether a value is in the enumeration, because enumeration items are not required to have a label.","pos":[127355,127503]},{"pos":[127509,127528],"content":"Method value2Symbol","linkify":"Method value2Symbol","nodes":[{"content":"Method value2Symbol","pos":[0,19]}]},{"content":"Returns the symbol, or the value of the Name property, of a specified enumeration value.","pos":[127530,127618]},{"pos":[127665,127675],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[127677,127682]},{"content":"The integer value for the enumeration for which the symbol is being retrieved.","pos":[127685,127763]},{"pos":[127770,127782],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The symbol or name for value; an empty string if value is not a valid enumeration.","pos":[127784,127866]},{"pos":[127873,127880],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Enumeration values are required to have a symbol.","pos":[127882,127931]},{"content":"This method can be used to determine whether an enumeration value exists by checking whether the return value is an empty string.","pos":[127932,128061]},{"pos":[128067,128080],"content":"Method values","linkify":"Method values","nodes":[{"content":"Method values","pos":[0,13]}]},{"content":"Returns the number of items in the enumeration.","pos":[128082,128129]},{"pos":[128161,128173],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of items in the enumeration.","pos":[128175,128214]},{"pos":[128221,128228],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Because values must be unique, the number of values is the same as the number of items.","pos":[128230,128317]},{"pos":[128324,128332],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows how to retrieve the number of items in an enumeration and use that value in a loop.","pos":[128334,128445]},{"pos":[128641,128671],"content":"Method queryFilterNames2Values","linkify":"Method queryFilterNames2Values","nodes":[{"content":"Method queryFilterNames2Values","pos":[0,30]}]},{"pos":[128745,128755],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filter","pos":[128757,128763]},{"pos":[128772,128784],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[128790,128820],"content":"Method queryFilterValues2Names","linkify":"Method queryFilterValues2Names","nodes":[{"content":"Method queryFilterValues2Names","pos":[0,30]}]},{"pos":[128894,128904],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filter","pos":[128906,128912]},{"pos":[128921,128933],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[128939,128968],"content":"Method queryRangeNames2Values","linkify":"Method queryRangeNames2Values","nodes":[{"content":"Method queryRangeNames2Values","pos":[0,29]}]},{"pos":[129044,129054],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"range","pos":[129056,129061]},{"pos":[129070,129082],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[129088,129117],"content":"Method queryRangeValues2Names","linkify":"Method queryRangeValues2Names","nodes":[{"content":"Method queryRangeValues2Names","pos":[0,29]}]},{"pos":[129193,129203],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"range","pos":[129205,129210]},{"pos":[129219,129231],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[129237,129252],"content":"Method value2id","linkify":"Method value2id","nodes":[{"content":"Method value2id","pos":[0,15]}]},{"content":"Returns the enumeration ID of a specified value.","pos":[129254,129302]},{"pos":[129356,129366],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[129368,129373]},{"content":"The value for which the enumeration ID is being queried.","pos":[129376,129432]},{"content":"The value parameter can be of any type.","pos":[129433,129472]},{"pos":[129479,129491],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The enumeration ID of value if value is an enumeration; otherwise, 0 (zero).","pos":[129493,129569]},{"pos":[129576,129583],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value parameter can be of any type.","pos":[129585,129624]},{"pos":[129630,129640],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[129642,129689]},{"pos":[129732,129742],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"typeId","pos":[129744,129750]},{"content":"The ID of the enumeration.","pos":[129753,129779]},{"pos":[129786,129793],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The constructor does not fail if an invalid enum ID is supplied.","pos":[129795,129859]},{"content":"However, when the DictEnum instance is used, a run-time error occurs.","pos":[129860,129929]},{"content":"Note that EnumID values are unsigned integers and are therefore always in the range 0–65535.","pos":[129930,130022]},{"pos":[130029,130037],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an instance of the DictEnum class.","pos":[130039,130103]},{"pos":[130177,130192],"content":"Class DictField","linkify":"Class DictField","nodes":[{"content":"Class DictField","pos":[0,15]}]},{"content":"The DictField class provides information about a specified field in a specified table.","pos":[130229,130315]},{"pos":[130321,130328],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[130334,130342],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows how to create an instance of the DictField class to determine whether a field is mandatory.","pos":[130344,130463]},{"pos":[130875,130882],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[130886,130892]},{"content":"Description","pos":[131006,131017]},{"content":"public FieldId aliasFor()","pos":[131410,131435]},{"content":"Returns the ID of the alias field, if the field is an alias for another field.","pos":[131530,131608]},{"content":"public Alignment alignment()","pos":[131672,131700]},{"content":"public boolean allowEdit()","pos":[131934,131960]},{"content":"public boolean allowEditOnCreate()","pos":[132196,132230]},{"content":"public boolean aosAuthorization()","pos":[132458,132491]},{"content":"public int arrayIndex()","pos":[132720,132743]},{"content":"public int arraySize()","pos":[132982,133004]},{"content":"Returns the array size for the field (in other words, the array size of the underlying extended data type).","pos":[133102,133209]},{"content":"public Types baseType()","pos":[133244,133267]},{"content":"Returns the base type of the field, such as string, real, integer, date, time, enum, or container.","pos":[133364,133462]},{"content":"public ConfigurationKeyId configurationKeyId()","pos":[133506,133552]},{"content":"Returns the ID of the configuration key for the field.","pos":[133626,133680]},{"content":"public str dateTimeTimeZoneRuleFieldName(<ph id=\"ph1\">\\[</ph>int arrayindex<ph id=\"ph2\">\\]</ph>)","pos":[133768,133828],"source":"public str dateTimeTimeZoneRuleFieldName(\\[int arrayindex\\])"},{"content":"public int displayHeight(<ph id=\"ph1\">\\[</ph>boolean useDefaults<ph id=\"ph2\">\\]</ph>)","pos":[134030,134079],"source":"public int displayHeight(\\[boolean useDefaults\\])"},{"content":"public int displayLength(<ph id=\"ph1\">\\[</ph>boolean useDefaults<ph id=\"ph2\">\\]</ph>)","pos":[134292,134341],"source":"public int displayLength(\\[boolean useDefaults\\])"},{"content":"public EnumId enumId()","pos":[134554,134576]},{"content":"Returns the ID of the enumeration if the field is based on an enumeration.","pos":[134674,134748]},{"content":"public int flags(<ph id=\"ph1\">\\[</ph>str ext<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>Common record<ph id=\"ph4\">\\]</ph>)","pos":[134816,134864],"source":"public int flags(\\[str ext\\], \\[Common record\\])"},{"content":"Returns an integer that defines the properties of the field.","pos":[134936,134996]},{"content":"The flag values, such as DBF<ph id=\"ph1\">\\_</ph>MANDATORY, are defined in the DictField macro.","pos":[134997,135073],"source":" The flag values, such as DBF\\_MANDATORY, are defined in the DictField macro."},{"content":"public container getCountryRegionCodes()","pos":[135078,135118]},{"content":"public FieldId getCountryRegionContextField()","pos":[135340,135385]},{"content":"public str getPrimaryTableForSurrogateField()","pos":[135602,135647]},{"content":"public str groupPrompt()","pos":[135864,135888]},{"content":"Returns the groupPrompt value for the field.","pos":[135984,136028]},{"content":"public str groupPromptDefined()","pos":[136126,136157]},{"content":"Returns the value of the groupPrompt property for the field.","pos":[136246,136306]},{"content":"public str help(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean useInterfaceLanguage<ph id=\"ph4\">\\]</ph>)","pos":[136388,136457],"source":"public str help(\\[int arrayIndex\\], \\[boolean useInterfaceLanguage\\])"},{"content":"Returns the Help text that is displayed for the field.","pos":[136508,136562]},{"content":"public str helpDefined()","pos":[136650,136674]},{"content":"Returns the value of the help property for the field.","pos":[136770,136823]},{"content":"public FieldId id()","pos":[136912,136931]},{"content":"Returns the ID of the field.","pos":[137032,137060]},{"content":"public boolean isIgnoreEDTRelation()","pos":[137174,137210]},{"content":"public boolean isMonocased()","pos":[137436,137464]},{"content":"Returns a value that indicates whether the database requires that the field be monocase.","pos":[137556,137644]},{"content":"public boolean isSql()","pos":[137698,137720]},{"content":"Returns a value that indicates whether the field is in the SQL database.","pos":[137818,137890]},{"content":"public boolean isSurrogateForeignKey()","pos":[137960,137998]},{"content":"public boolean isSystem()","pos":[138222,138247]},{"content":"Returns a value that indicates whether the field is a system field.","pos":[138342,138409]},{"content":"public str label(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[138484,138520],"source":"public str label(\\[int arrayIndex\\])"},{"content":"Returns the label for the field.","pos":[138604,138636]},{"content":"public str labelDefined()","pos":[138746,138771]},{"content":"Returns the value of the label property for the field.","pos":[138866,138920]},{"content":"public boolean mandatory()","pos":[139008,139034]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>DbBackend db<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayindex<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>FieldNameGenerationMode generationMode<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str tableAlias<ph id=\"ph8\">\\]</ph>)","pos":[139270,139387],"source":"public str name(\\[DbBackend db\\], \\[int arrayindex\\], \\[FieldNameGenerationMode generationMode\\], \\[str tableAlias\\])"},{"content":"Returns the name of the field.","pos":[139390,139420]},{"content":"public Guid origin()","pos":[139532,139552]},{"content":"public str qualifiedLabel(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[139794,139839],"source":"public str qualifiedLabel(\\[int arrayIndex\\])"},{"content":"public str relatedTableName()","pos":[140056,140085]},{"content":"public str relationContext()","pos":[140318,140346]},{"content":"public DictRelation relationObject(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[140580,140634],"source":"public DictRelation relationObject(\\[int arrayIndex\\])"},{"content":"Returns a DictRelation object for the field if the field is based on an extended data type that has a relation.","pos":[140700,140811]},{"content":"public AccessType rights(<ph id=\"ph1\">\\[</ph>boolean ignoreContext<ph id=\"ph2\">\\]</ph>)","pos":[140842,140893],"source":"public AccessType rights(\\[boolean ignoreContext\\])"},{"content":"Returns the access rights for the current user that are specified for the field.","pos":[140962,141042]},{"content":"public int stringLen()","pos":[141104,141126]},{"content":"Returns the string size of the field if the base type of the field is a string.","pos":[141224,141303]},{"content":"public TableId tableid()","pos":[141366,141390]},{"content":"Returns the ID of the table that contains the field.","pos":[141486,141538]},{"content":"public Types type()","pos":[141628,141647]},{"content":"Returns the data type of the field.","pos":[141748,141783]},{"content":"public ExtendedTypeId typeId()","pos":[141890,141920]},{"content":"Returns the ID of the extended data type if the field is based on an extended data type.","pos":[142010,142098]},{"content":"public boolean visible()","pos":[142152,142176]},{"content":"public void setLookupMode(boolean lookupMode)","pos":[142414,142459]},{"content":"public void setSFKAutoAuthorizationMode(boolean sfkMode)","pos":[142676,142732]},{"content":"public void new(TableId tableId, FieldId fieldId, <ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[142938,143007],"source":"public void new(TableId tableId, FieldId fieldId, \\[int arrayIndex\\])"},{"content":"Initializes a new instance of the Object class.","pos":[143058,143105]},{"pos":[143203,143218],"content":"Method aliasFor","linkify":"Method aliasFor","nodes":[{"content":"Method aliasFor","pos":[0,15]}]},{"content":"Returns the ID of the alias field, if the field is an alias for another field.","pos":[143220,143298]},{"pos":[143336,143348],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the alias field for the field; 0 (zero) if the field is not an alias for another field.","pos":[143350,143447]},{"pos":[143454,143461],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the user enters data in a field, the validateField method of the table is called.","pos":[143463,143549]},{"content":"If the validateField method cannot perform a lookup on the value, it checks whether an alias exists.","pos":[143550,143650]},{"content":"If an alias field exists, the validateField method performs a lookup on the alias field.","pos":[143651,143739]},{"pos":[143746,143754],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the alias field for a field.","pos":[143756,143829]},{"pos":[144142,144158],"content":"Method alignment","linkify":"Method alignment","nodes":[{"content":"Method alignment","pos":[0,16]}]},{"pos":[144199,144211],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[144217,144233],"content":"Method allowEdit","linkify":"Method allowEdit","nodes":[{"content":"Method allowEdit","pos":[0,16]}]},{"pos":[144272,144284],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[144290,144314],"content":"Method allowEditOnCreate","linkify":"Method allowEditOnCreate","nodes":[{"content":"Method allowEditOnCreate","pos":[0,24]}]},{"pos":[144361,144373],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[144379,144402],"content":"Method aosAuthorization","linkify":"Method aosAuthorization","nodes":[{"content":"Method aosAuthorization","pos":[0,23]}]},{"pos":[144448,144460],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[144466,144483],"content":"Method arrayIndex","linkify":"Method arrayIndex","nodes":[{"content":"Method arrayIndex","pos":[0,17]}]},{"pos":[144519,144531],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[144537,144553],"content":"Method arraySize","linkify":"Method arraySize","nodes":[{"content":"Method arraySize","pos":[0,16]}]},{"content":"Returns the array size for the field (in other words, the array size of the underlying extended data type).","pos":[144555,144662]},{"pos":[144697,144709],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The array size for the field; 1 if the field is not an array.","pos":[144711,144772]},{"pos":[144779,144787],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the array size for a field.","pos":[144789,144861]},{"pos":[145074,145089],"content":"Method baseType","linkify":"Method baseType","nodes":[{"content":"Method baseType","pos":[0,15]}]},{"content":"Returns the base type of the field, such as string, real, integer, date, time, enum, or container.","pos":[145091,145189]},{"pos":[145225,145237],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A Types value that specifies the type of the field.","pos":[145239,145290]},{"pos":[145297,145305],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the base type of a field.","pos":[145307,145377]},{"pos":[145567,145592],"content":"Method configurationKeyId","linkify":"Method configurationKeyId","nodes":[{"content":"Method configurationKeyId","pos":[0,25]}]},{"content":"Returns the ID of the configuration key for the field.","pos":[145594,145648]},{"pos":[145707,145719],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the configuration key for the field; 0 (zero) if there is no configuration key for the field.","pos":[145721,145824]},{"pos":[145831,145839],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the configuration key ID and the configuration key name for a field.","pos":[145841,145954]},{"pos":[146510,146546],"content":"Method dateTimeTimeZoneRuleFieldName","linkify":"Method dateTimeTimeZoneRuleFieldName","nodes":[{"content":"Method dateTimeTimeZoneRuleFieldName","pos":[0,36]}]},{"pos":[146617,146627],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayindex","pos":[146629,146639]},{"pos":[146648,146660],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[146666,146686],"content":"Method displayHeight","linkify":"Method displayHeight","nodes":[{"content":"Method displayHeight","pos":[0,20]}]},{"pos":[146746,146756],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"useDefaults","pos":[146758,146769]},{"pos":[146778,146790],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[146796,146816],"content":"Method displayLength","linkify":"Method displayLength","nodes":[{"content":"Method displayLength","pos":[0,20]}]},{"pos":[146876,146886],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"useDefaults","pos":[146888,146899]},{"pos":[146908,146920],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[146926,146939],"content":"Method enumId","linkify":"Method enumId","nodes":[{"content":"Method enumId","pos":[0,13]}]},{"content":"Returns the ID of the enumeration if the field is based on an enumeration.","pos":[146941,147015]},{"pos":[147050,147062],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The enumeration ID if the field is based on an enumeration; otherwise, 0 (zero).","pos":[147064,147144]},{"pos":[147151,147159],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the enumeration ID and the enumeration name of a field that is based on an enumeration.","pos":[147161,147293]},{"pos":[147654,147666],"content":"Method flags","linkify":"Method flags","nodes":[{"content":"Method flags","pos":[0,12]}]},{"content":"Returns an integer that defines the properties of the field.","pos":[147668,147728]},{"content":"The flag values, such as DBF<ph id=\"ph1\">\\_</ph>MANDATORY, are defined in the DictField macro.","pos":[147729,147805],"source":" The flag values, such as DBF\\_MANDATORY, are defined in the DictField macro."},{"pos":[147862,147872],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ext","pos":[147874,147877]},{"content":"record","pos":[147891,147897]},{"pos":[147906,147918],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value, where each bit corresponds to a field flag.","pos":[147920,147981]},{"pos":[147988,147995],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the Global::bitTest Method method or the &amp; operator to check individual flag values.","pos":[147997,148085],"source":"Use the Global::bitTest Method method or the & operator to check individual flag values."},{"pos":[148092,148100],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the flags of a field to determine whether the field is mandatory.","pos":[148102,148212]},{"pos":[148624,148652],"content":"Method getCountryRegionCodes","linkify":"Method getCountryRegionCodes","nodes":[{"content":"Method getCountryRegionCodes","pos":[0,28]}]},{"pos":[148705,148717],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[148723,148758],"content":"Method getCountryRegionContextField","linkify":"Method getCountryRegionContextField","nodes":[{"content":"Method getCountryRegionContextField","pos":[0,35]}]},{"pos":[148816,148828],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[148834,148873],"content":"Method getPrimaryTableForSurrogateField","linkify":"Method getPrimaryTableForSurrogateField","nodes":[{"content":"Method getPrimaryTableForSurrogateField","pos":[0,39]}]},{"pos":[148931,148943],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[148949,148967],"content":"Method groupPrompt","linkify":"Method groupPrompt","nodes":[{"content":"Method groupPrompt","pos":[0,18]}]},{"content":"Returns the groupPrompt value for the field.","pos":[148969,149013]},{"pos":[149050,149062],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The groupPrompt value for the field.","pos":[149064,149100]},{"pos":[149106,149131],"content":"Method groupPromptDefined","linkify":"Method groupPromptDefined","nodes":[{"content":"Method groupPromptDefined","pos":[0,25]}]},{"content":"Returns the value of the groupPrompt property for the field.","pos":[149133,149193]},{"pos":[149237,149249],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the groupPrompt property for the table.","pos":[149251,149303]},{"pos":[149309,149320],"content":"Method help","linkify":"Method help","nodes":[{"content":"Method help","pos":[0,11]}]},{"content":"Returns the Help text that is displayed for the field.","pos":[149322,149376]},{"pos":[149454,149464],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[149466,149476]},{"content":"A Boolean value that indicates whether to use the user interface language for the Help text; optional.","pos":[149479,149581]},{"content":"useInterfaceLanguage","pos":[149593,149613]},{"content":"A Boolean value that indicates whether to use the user interface language for the Help text; optional.","pos":[149616,149718]},{"pos":[149725,149737],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Help text or inherited Help text for the field.","pos":[149739,149790]},{"pos":[149797,149804],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If no Help text is defined for the field, this method returns the Help text for the extended data type that is used for the field, if applicable.","pos":[149806,149951]},{"content":"If an array entry is specified, this method returns the Help text for the array element.","pos":[149952,150040]},{"pos":[150047,150055],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows retrieval of the Help text for the field.","pos":[150057,150126]},{"pos":[150283,150301],"content":"Method helpDefined","linkify":"Method helpDefined","nodes":[{"content":"Method helpDefined","pos":[0,18]}]},{"content":"Returns the value of the help property for the field.","pos":[150303,150356]},{"pos":[150393,150405],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the help property for the field.","pos":[150407,150452]},{"pos":[150459,150466],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Unlike the help method, the helpDefined method does not return the Help text of the extended data type if the field is based on an extended data type and has no Help text defined for it.","pos":[150468,150654]},{"pos":[150661,150669],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows retrieval of the defined Help text for the field.","pos":[150671,150748]},{"pos":[150912,150921],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"content":"Returns the ID of the field.","pos":[150923,150951]},{"pos":[150983,150995],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the field.","pos":[150997,151017]},{"pos":[151024,151032],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example retrieves the ID of a field.","pos":[151034,151084]},{"pos":[151239,151265],"content":"Method isIgnoreEDTRelation","linkify":"Method isIgnoreEDTRelation","nodes":[{"content":"Method isIgnoreEDTRelation","pos":[0,26]}]},{"pos":[151314,151326],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[151332,151350],"content":"Method isMonocased","linkify":"Method isMonocased","nodes":[{"content":"Method isMonocased","pos":[0,18]}]},{"content":"Returns a value that indicates whether the database requires that the field be monocase.","pos":[151352,151440]},{"pos":[151481,151493],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the field is monocase; otherwise, false.","pos":[151495,151543]},{"pos":[151549,151561],"content":"Method isSql","linkify":"Method isSql","nodes":[{"content":"Method isSql","pos":[0,12]}]},{"content":"Returns a value that indicates whether the field is in the SQL database.","pos":[151563,151635]},{"pos":[151670,151682],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the field is in the SQL database; otherwise, false.","pos":[151684,151743]},{"pos":[151750,151758],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example determines whether the field is in the SQL database.","pos":[151760,151834]},{"pos":[152170,152198],"content":"Method isSurrogateForeignKey","linkify":"Method isSurrogateForeignKey","nodes":[{"content":"Method isSurrogateForeignKey","pos":[0,28]}]},{"pos":[152249,152261],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[152267,152282],"content":"Method isSystem","linkify":"Method isSystem","nodes":[{"content":"Method isSystem","pos":[0,15]}]},{"content":"Returns a value that indicates whether the field is a system field.","pos":[152284,152351]},{"pos":[152389,152401],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the field is a system field; otherwise, false.","pos":[152403,152457]},{"pos":[152463,152475],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Returns the label for the field.","pos":[152477,152509]},{"pos":[152556,152566],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[152568,152578]},{"pos":[152587,152599],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label or inherited label value for the field.","pos":[152601,152650]},{"pos":[152657,152664],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If no label is provided for the field, this method returns the label for the extended data type for the field, if applicable.","pos":[152666,152791]},{"content":"If an array entry is specified, this method returns the label for the array element.","pos":[152792,152876]},{"pos":[152882,152901],"content":"Method labelDefined","linkify":"Method labelDefined","nodes":[{"content":"Method labelDefined","pos":[0,19]}]},{"content":"Returns the value of the label property for the field.","pos":[152903,152957]},{"pos":[152995,153007],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the label property for the table; an empty string if there is no label text for the table.","pos":[153009,153112]},{"pos":[153119,153126],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Unlike the label method, the labelDefined method does not return the extended data type label if the field is based on an extended data type and has no label defined for it.","pos":[153128,153301]},{"pos":[153308,153316],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the defined label for a field.","pos":[153318,153393]},{"pos":[153558,153574],"content":"Method mandatory","linkify":"Method mandatory","nodes":[{"content":"Method mandatory","pos":[0,16]}]},{"pos":[153613,153625],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[153631,153642],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Returns the name of the field.","pos":[153644,153674]},{"pos":[153796,153806],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"db","pos":[153808,153810]},{"content":"The alias for the table; optional.","pos":[153813,153847]},{"content":"arrayindex","pos":[153859,153869]},{"content":"The alias for the table; optional.","pos":[153872,153906]},{"content":"generationMode","pos":[153918,153932]},{"content":"The alias for the table; optional.","pos":[153935,153969]},{"content":"tableAlias","pos":[153981,153991]},{"content":"The alias for the table; optional.","pos":[153994,154028]},{"pos":[154035,154047],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the field.","pos":[154049,154071]},{"pos":[154078,154086],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the name of the field.","pos":[154088,154155]},{"pos":[154312,154325],"content":"Method origin","linkify":"Method origin","nodes":[{"content":"Method origin","pos":[0,13]}]},{"pos":[154358,154370],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154376,154397],"content":"Method qualifiedLabel","linkify":"Method qualifiedLabel","nodes":[{"content":"Method qualifiedLabel","pos":[0,21]}]},{"pos":[154453,154463],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[154465,154475]},{"pos":[154484,154496],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154502,154525],"content":"Method relatedTableName","linkify":"Method relatedTableName","nodes":[{"content":"Method relatedTableName","pos":[0,23]}]},{"pos":[154567,154579],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154585,154607],"content":"Method relationContext","linkify":"Method relationContext","nodes":[{"content":"Method relationContext","pos":[0,22]}]},{"pos":[154648,154660],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[154666,154687],"content":"Method relationObject","linkify":"Method relationObject","nodes":[{"content":"Method relationObject","pos":[0,21]}]},{"content":"Returns a DictRelation object for the field if the field is based on an extended data type that has a relation.","pos":[154689,154800]},{"pos":[154865,154875],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[154877,154887]},{"pos":[154896,154908],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictRelation object that represents the relations for the field; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if there no relations are defined for the field, or if the field is not based on an extended data type.","pos":[154910,155153]},{"pos":[155159,155172],"content":"Method rights","linkify":"Method rights","nodes":[{"content":"Method rights","pos":[0,13]}]},{"content":"Returns the access rights for the current user that are specified for the field.","pos":[155174,155254]},{"pos":[155316,155326],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ignoreContext","pos":[155328,155341]},{"pos":[155350,155362],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The access rights for the current user that are specified for the field.","pos":[155364,155436]},{"pos":[155443,155450],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This can be one of the values in the AccessType enumeration.","pos":[155452,155512]},{"pos":[155518,155534],"content":"Method stringLen","linkify":"Method stringLen","nodes":[{"content":"Method stringLen","pos":[0,16]}]},{"content":"Returns the string size of the field if the base type of the field is a string.","pos":[155536,155615]},{"pos":[155650,155662],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string size of the field if the base type of the field is a string; otherwise, 0 (zero).","pos":[155664,155756]},{"pos":[155763,155771],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows retrieving the string length of a field.","pos":[155773,155841]},{"pos":[156039,156053],"content":"Method tableid","linkify":"Method tableid","nodes":[{"content":"Method tableid","pos":[0,14]}]},{"content":"Returns the ID of the table that contains the field.","pos":[156055,156107]},{"pos":[156144,156156],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the table that contains the field.","pos":[156158,156202]},{"pos":[156209,156217],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the table ID of a field.","pos":[156219,156288]},{"pos":[156448,156459],"content":"Method type","linkify":"Method type","nodes":[{"content":"Method type","pos":[0,11]}]},{"content":"Returns the data type of the field.","pos":[156461,156496]},{"pos":[156528,156540],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A Types value that specifies the type of the field.","pos":[156542,156593]},{"pos":[156600,156607],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the field is based on an extended data type, Types::UserType is returned as the return value of this method.","pos":[156609,156720]},{"pos":[156727,156735],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the type of a field.","pos":[156737,156802]},{"pos":[156959,156972],"content":"Method typeId","linkify":"Method typeId","nodes":[{"content":"Method typeId","pos":[0,13]}]},{"content":"Returns the ID of the extended data type if the field is based on an extended data type.","pos":[156974,157062]},{"pos":[157105,157117],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the extended data type if the field is based on an extended data type; otherwise, 0 (zero).","pos":[157119,157220]},{"pos":[157227,157235],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the extended data type ID for a field.","pos":[157237,157320]},{"pos":[157827,157841],"content":"Method visible","linkify":"Method visible","nodes":[{"content":"Method visible","pos":[0,14]}]},{"pos":[157878,157890],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[157896,157916],"content":"Method setLookupMode","linkify":"Method setLookupMode","nodes":[{"content":"Method setLookupMode","pos":[0,20]}]},{"pos":[157974,157984],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"lookupMode","pos":[157986,157996]},{"pos":[158004,158038],"content":"Method setSFKAutoAuthorizationMode","linkify":"Method setSFKAutoAuthorizationMode","nodes":[{"content":"Method setSFKAutoAuthorizationMode","pos":[0,34]}]},{"pos":[158107,158117],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"sfkMode","pos":[158119,158126]},{"pos":[158134,158144],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[158146,158193]},{"pos":[158273,158283],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[158285,158292]},{"content":"fieldId","pos":[158306,158313]},{"content":"arrayIndex","pos":[158327,158337]},{"pos":[158346,158354],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows how to create an instance of the DictField class.","pos":[158356,158433]},{"pos":[158651,158671],"content":"Class DictFieldGroup","linkify":"Class DictFieldGroup","nodes":[{"content":"Class DictFieldGroup","pos":[0,20]}]},{"content":"The DictFieldGroup class provides information about a specific field group in a table.","pos":[158713,158799]},{"pos":[158805,158812],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For a code example that uses this class, see the DictFieldGroup.numberOfFields Method method.","pos":[158814,158907]},{"pos":[158913,158921],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[158927,158934],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[158938,158944]},{"content":"Description","pos":[159023,159034]},{"content":"public FieldId field(int fieldNumber)","pos":[159284,159321]},{"content":"Returns the specified field from the field group.","pos":[159369,159418]},{"content":"public str label()","pos":[159457,159475]},{"content":"Returns the label text of the field group.","pos":[159542,159584]},{"content":"public str labelId()","pos":[159630,159650]},{"content":"Returns the label ID of the field group.","pos":[159715,159755]},{"content":"public str methodName(FieldId fieldId)","pos":[159803,159841]},{"content":"Returns the name of the specified method from the field group.","pos":[159888,159950]},{"content":"public str name()","pos":[159976,159993]},{"content":"Returns the name of the field group.","pos":[160061,160097]},{"content":"public int numberOfFields()","pos":[160149,160176]},{"content":"Returns the number of table fields and edit and display methods in the field group.","pos":[160234,160317]},{"content":"public TableId tableid()","pos":[160322,160346]},{"content":"Returns the ID of the table that is associated with the field group.","pos":[160407,160475]},{"content":"public void new(TableId tableId, str FieldGroupName, <ph id=\"ph1\">\\[</ph>TableId includeBaseTable<ph id=\"ph2\">\\]</ph>)","pos":[160495,160577],"source":"public void new(TableId tableId, str FieldGroupName, \\[TableId includeBaseTable\\])"},{"content":"Initializes a new instance of the Object class.","pos":[160580,160627]},{"pos":[160671,160683],"content":"Method field","linkify":"Method field","nodes":[{"content":"Method field","pos":[0,12]}]},{"content":"Returns the specified field from the field group.","pos":[160685,160734]},{"pos":[160784,160794],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldNumber","pos":[160796,160807]},{"content":"The one-based index to the list of fields in the field group.","pos":[160810,160871]},{"content":"The index is in the same order as the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[160872,160962]},{"pos":[160969,160981],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The field ID of the field.","pos":[160983,161009]},{"content":"If the item is a display method, the ID is in the form 65280 + 0-based method index.","pos":[161010,161094]},{"pos":[161101,161108],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For a code example that uses the Field method, see the DictFieldGroup.numberOfFields Method method.","pos":[161110,161209]},{"pos":[161215,161227],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Returns the label text of the field group.","pos":[161229,161271]},{"pos":[161302,161314],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label text of the field group.","pos":[161316,161350]},{"pos":[161356,161370],"content":"Method labelId","linkify":"Method labelId","nodes":[{"content":"Method labelId","pos":[0,14]}]},{"content":"Returns the label ID of the field group.","pos":[161372,161412]},{"pos":[161445,161457],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label ID of the field group.","pos":[161459,161491]},{"pos":[161497,161514],"content":"Method methodName","linkify":"Method methodName","nodes":[{"content":"Method methodName","pos":[0,17]}]},{"content":"Returns the name of the specified method from the field group.","pos":[161516,161578]},{"pos":[161629,161639],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[161641,161648]},{"content":"The field ID that is returned from a call to the field method for the method name to return.","pos":[161651,161743]},{"content":"It is the responsibility of the developer to make sure that a valid field ID is used.","pos":[161744,161829]},{"pos":[161836,161848],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified method from the field group; an empty string if the fieldId value is less than 65280.","pos":[161850,161961]},{"pos":[161968,161975],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Methods are specified by method index + 65280.","pos":[161977,162023]},{"content":"For a code example that uses this method, see the DictFieldGroup.numberOfFields Method method.","pos":[162024,162118]},{"pos":[162124,162135],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Returns the name of the field group.","pos":[162137,162173]},{"pos":[162203,162215],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the field group.","pos":[162217,162245]},{"pos":[162251,162272],"content":"Method numberOfFields","linkify":"Method numberOfFields","nodes":[{"content":"Method numberOfFields","pos":[0,21]}]},{"content":"Returns the number of table fields and edit and display methods in the field group.","pos":[162274,162357]},{"pos":[162397,162409],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of table fields and edit and display methods in the field group.","pos":[162411,162486]},{"pos":[162493,162501],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the number of table fields and edit and display methods in a field group.","pos":[162503,162621]},{"pos":[163446,163460],"content":"Method tableid","linkify":"Method tableid","nodes":[{"content":"Method tableid","pos":[0,14]}]},{"content":"Returns the ID of the table that is associated with the field group.","pos":[163462,163530]},{"pos":[163567,163579],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the table that is associated with the field group.","pos":[163581,163641]},{"pos":[163647,163657],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[163659,163706]},{"pos":[163799,163809],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[163811,163818]},{"content":"FieldGroupName","pos":[163832,163846]},{"content":"includeBaseTable","pos":[163860,163876]},{"pos":[163885,163892],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For a code example that uses this method, see the DictFieldGroup.numberOfFields Method method.","pos":[163894,163988]},{"pos":[163993,164016],"content":"Class DictFullTextIndex","linkify":"Class DictFullTextIndex","nodes":[{"content":"Class DictFullTextIndex","pos":[0,23]}]},{"content":"The DictFullTextIndex class returns metadata about a full text index.","pos":[164061,164130]},{"pos":[164136,164143],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[164149,164157],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[164163,164170],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[164174,164180]},{"content":"Description","pos":[164232,164243]},{"content":"public FullTextIndexChangeTracking changeTrackingMode()","pos":[164408,164463]},{"content":"Gets the change tracking mode of the full text index.","pos":[164466,164519]},{"content":"public ConfigurationKeyId configurationKeyId()","pos":[164525,164571]},{"content":"Returns the ID of the configuration key for the index.","pos":[164583,164637]},{"content":"public IndexId id()","pos":[164642,164661]},{"content":"Gets the ID of the full text index.","pos":[164700,164735]},{"content":"public str name()","pos":[164759,164776]},{"content":"Gets the name of the full text index.","pos":[164817,164854]},{"content":"public TableId tableid()","pos":[164876,164900]},{"content":"Returns the ID of the table that contains the index.","pos":[164934,164986]},{"content":"public void new(TableId tableId, IndexId indexId)","pos":[164993,165042]},{"content":"Initializes a new instance of the Object class.","pos":[165051,165098]},{"pos":[165113,165138],"content":"Method changeTrackingMode","linkify":"Method changeTrackingMode","nodes":[{"content":"Method changeTrackingMode","pos":[0,25]}]},{"content":"Gets the change tracking mode of the full text index.","pos":[165140,165193]},{"pos":[165261,165273],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[165279,165304],"content":"Method configurationKeyId","linkify":"Method configurationKeyId","nodes":[{"content":"Method configurationKeyId","pos":[0,25]}]},{"content":"Returns the ID of the configuration key for the index.","pos":[165306,165360]},{"pos":[165419,165431],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the configuration key for the index; 0 (zero) if the index does not have a configuration key.","pos":[165433,165536]},{"pos":[165542,165551],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"content":"Gets the ID of the full text index.","pos":[165553,165588]},{"pos":[165620,165632],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the index.","pos":[165634,165654]},{"pos":[165660,165671],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets the name of the full text index.","pos":[165673,165710]},{"pos":[165740,165752],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the index.","pos":[165754,165776]},{"pos":[165782,165796],"content":"Method tableid","linkify":"Method tableid","nodes":[{"content":"Method tableid","pos":[0,14]}]},{"content":"Returns the ID of the table that contains the index.","pos":[165798,165850]},{"pos":[165887,165899],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the table that contains the index.","pos":[165901,165945]},{"pos":[165951,165961],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[165963,166010]},{"pos":[166072,166082],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[166084,166091]},{"content":"indexId","pos":[166105,166112]},{"pos":[166119,166134],"content":"Class DictIndex","linkify":"Class DictIndex","nodes":[{"content":"Class DictIndex","pos":[0,15]}]},{"content":"The DictIndex class returns metadata about a table index.","pos":[166171,166228]},{"pos":[166234,166241],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[166247,166255],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example creates an instance of the DictIndex class.","pos":[166257,166322]},{"pos":[166551,166558],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[166562,166568]},{"content":"Description","pos":[166692,166703]},{"content":"public boolean allowDuplicates()","pos":[166970,167002]},{"content":"Returns the value of the allowDuplicates property for the index.","pos":[167100,167164]},{"content":"public ConfigurationKeyId configurationKeyId()","pos":[167174,167220]},{"content":"Returns the ID of the configuration key for the index.","pos":[167304,167358]},{"content":"public boolean enabled()","pos":[167378,167402]},{"content":"Returns a value that indicates whether the index is enabled.","pos":[167508,167568]},{"content":"public FieldId field(int fieldNumber)","pos":[167582,167619]},{"content":"Returns the ID of the specified field in the index.","pos":[167712,167763]},{"content":"public ValidTimeStateMode getValidTimeStateMode()","pos":[167786,167835]},{"content":"public IndexId id()","pos":[167990,168009]},{"content":"Returns the ID of the index.","pos":[168120,168148]},{"content":"public FieldId includedColumn(int fieldNumber)","pos":[168194,168240]},{"content":"public boolean isAlternateKey()","pos":[168398,168429]},{"content":"public boolean isSql()","pos":[168602,168624]},{"content":"Gets a value that indicates whether the index is in the SQL database.","pos":[168732,168801]},{"content":"public boolean isValidTimeStateKey()","pos":[168806,168842]},{"content":"public boolean modify(boolean enabled, boolean allowDuplicates, boolean saveInLoadedLayer)","pos":[169010,169100]},{"content":"Modifies the index.","pos":[169140,169159]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>DbBackend db<ph id=\"ph2\">\\]</ph>)","pos":[169214,169247],"source":"public str name(\\[DbBackend db\\])"},{"content":"Returns the name of the index.","pos":[169344,169374]},{"content":"public int numberOfFields()","pos":[169418,169445]},{"content":"Returns the number of fields in the index definition.","pos":[169548,169601]},{"content":"public int numberOfIncludedColumns()","pos":[169622,169658]},{"content":"public boolean setAlternateKey(boolean alternateKey, boolean saveInLoadedLayer)","pos":[169826,169905]},{"content":"public boolean setValidTimeStateKey(boolean setValidTimeStateKey, ValidTimeStateMode validTimeState, boolean saveInLoadedLayer)","pos":[170030,170157]},{"content":"public TableId tableid()","pos":[170234,170258]},{"content":"Returns the ID of the table that contains the index.","pos":[170364,170416]},{"content":"public void new(TableId tableId, IndexId indexId)","pos":[170438,170487]},{"content":"Initializes a new instance of the Object class.","pos":[170568,170615]},{"pos":[170645,170667],"content":"Method allowDuplicates","linkify":"Method allowDuplicates","nodes":[{"content":"Method allowDuplicates","pos":[0,22]}]},{"content":"Returns the value of the allowDuplicates property for the index.","pos":[170669,170733]},{"pos":[170778,170790],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the index allows duplicates; otherwise, false.","pos":[170792,170846]},{"pos":[170852,170877],"content":"Method configurationKeyId","linkify":"Method configurationKeyId","nodes":[{"content":"Method configurationKeyId","pos":[0,25]}]},{"content":"Returns the ID of the configuration key for the index.","pos":[170879,170933]},{"pos":[170992,171004],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the configuration key for the index; 0 (zero) if the index does not have a configuration key.","pos":[171006,171109]},{"pos":[171115,171129],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Returns a value that indicates whether the index is enabled.","pos":[171131,171191]},{"pos":[171228,171240],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the index is enabled; otherwise, false.","pos":[171242,171289]},{"pos":[171295,171307],"content":"Method field","linkify":"Method field","nodes":[{"content":"Method field","pos":[0,12]}]},{"content":"Returns the ID of the specified field in the index.","pos":[171309,171360]},{"pos":[171410,171420],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldNumber","pos":[171422,171433]},{"content":"The one-based index of the field in the index.","pos":[171436,171482]},{"pos":[171489,171501],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the field that is specified by fieldNumber; 0 (zero) if fieldNumber does not represent a valid field.","pos":[171503,171614]},{"pos":[171621,171629],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of each field in an index.","pos":[171631,171699]},{"content":"The name of each field is displayed by using a loop.","pos":[171700,171752]},{"pos":[172164,172192],"content":"Method getValidTimeStateMode","linkify":"Method getValidTimeStateMode","nodes":[{"content":"Method getValidTimeStateMode","pos":[0,28]}]},{"pos":[172254,172266],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[172272,172281],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"content":"Returns the ID of the index.","pos":[172283,172311]},{"pos":[172343,172355],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the index.","pos":[172357,172377]},{"pos":[172383,172404],"content":"Method includedColumn","linkify":"Method includedColumn","nodes":[{"content":"Method includedColumn","pos":[0,21]}]},{"pos":[172463,172473],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldNumber","pos":[172475,172486]},{"pos":[172495,172507],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[172513,172534],"content":"Method isAlternateKey","linkify":"Method isAlternateKey","nodes":[{"content":"Method isAlternateKey","pos":[0,21]}]},{"pos":[172578,172590],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[172596,172608],"content":"Method isSql","linkify":"Method isSql","nodes":[{"content":"Method isSql","pos":[0,12]}]},{"content":"Gets a value that indicates whether the index is in the SQL database.","pos":[172610,172679]},{"pos":[172714,172726],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the index is in the SQL database; otherwise, false.","pos":[172728,172787]},{"pos":[172793,172819],"content":"Method isValidTimeStateKey","linkify":"Method isValidTimeStateKey","nodes":[{"content":"Method isValidTimeStateKey","pos":[0,26]}]},{"pos":[172868,172880],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[172886,172899],"content":"Method modify","linkify":"Method modify","nodes":[{"content":"Method modify","pos":[0,13]}]},{"content":"Modifies the index.","pos":[172901,172920]},{"pos":[173023,173033],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"enabled","pos":[173035,173042]},{"content":"A Boolean value that indicates whether the modification is saved in the layer that is loaded.","pos":[173045,173138]},{"content":"allowDuplicates","pos":[173150,173165]},{"content":"A Boolean value that indicates whether the modification is saved in the layer that is loaded.","pos":[173168,173261]},{"content":"saveInLoadedLayer","pos":[173273,173290]},{"content":"A Boolean value that indicates whether the modification is saved in the layer that is loaded.","pos":[173293,173386]},{"pos":[173393,173405],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the index was successfully modified; otherwise, false.","pos":[173407,173469]},{"pos":[173476,173483],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method lets you create, read, update, and delete X++ code and metadata.","pos":[173485,173561]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[173562,173672]},{"pos":[173678,173689],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Returns the name of the index.","pos":[173691,173721]},{"pos":[173765,173775],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"db","pos":[173777,173779]},{"content":"A DbBackend value that specifies the type of name to return.","pos":[173782,173842]},{"content":"This can be DbBackend::Native for the native name of the index or DbBackend::Sql for the SQL name of the index.","pos":[173843,173954]},{"content":"If db is not specified, DbBackend::Native is used.","pos":[173955,174005]},{"pos":[174012,174024],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the index in the format that is specified by db.","pos":[174026,174086]},{"pos":[174092,174113],"content":"Method numberOfFields","linkify":"Method numberOfFields","nodes":[{"content":"Method numberOfFields","pos":[0,21]}]},{"content":"Returns the number of fields in the index definition.","pos":[174115,174168]},{"pos":[174208,174220],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of fields in the index.","pos":[174222,174256]},{"pos":[174263,174271],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the number of fields in the index and lists the names of the fields in the index.","pos":[174273,174399]},{"pos":[174811,174841],"content":"Method numberOfIncludedColumns","linkify":"Method numberOfIncludedColumns","nodes":[{"content":"Method numberOfIncludedColumns","pos":[0,30]}]},{"pos":[174890,174902],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[174908,174930],"content":"Method setAlternateKey","linkify":"Method setAlternateKey","nodes":[{"content":"Method setAlternateKey","pos":[0,22]}]},{"pos":[175022,175032],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"alternateKey","pos":[175034,175046]},{"content":"saveInLoadedLayer","pos":[175060,175077]},{"pos":[175086,175098],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[175104,175131],"content":"Method setValidTimeStateKey","linkify":"Method setValidTimeStateKey","nodes":[{"content":"Method setValidTimeStateKey","pos":[0,27]}]},{"pos":[175271,175281],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"setValidTimeStateKey","pos":[175283,175303]},{"content":"validTimeState","pos":[175317,175331]},{"content":"saveInLoadedLayer","pos":[175345,175362]},{"pos":[175371,175383],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[175389,175403],"content":"Method tableid","linkify":"Method tableid","nodes":[{"content":"Method tableid","pos":[0,14]}]},{"content":"Returns the ID of the table that contains the index.","pos":[175405,175457]},{"pos":[175494,175506],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the table that contains the index.","pos":[175508,175552]},{"pos":[175558,175568],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[175570,175617]},{"pos":[175679,175689],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[175691,175698]},{"content":"The ID of the index that is used to create this instance of the DictIndex class.","pos":[175701,175781]},{"content":"indexId","pos":[175793,175800]},{"content":"The ID of the index that is used to create this instance of the DictIndex class.","pos":[175803,175883]},{"pos":[175888,175904],"content":"Class Dictionary","linkify":"Class Dictionary","nodes":[{"content":"Class Dictionary","pos":[0,16]}]},{"content":"The Dictionary class provides information about tables, extended data types, classes, and other items in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[175942,176103]},{"pos":[176109,176116],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[176122,176130],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[176136,176143],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[176147,176153]},{"content":"Description","pos":[176290,176301]},{"content":"public int classCnt()","pos":[176667,176688]},{"content":"Indicates the number of classes in Microsoft Dynamics AX.","pos":[176810,176867]},{"content":"public ClassId classCnt2Id(int cnt)","pos":[176927,176962]},{"content":"Provides the ID of a specified class.","pos":[177070,177107]},{"content":"public str className(ClassId classId)","pos":[177187,177224]},{"content":"Provides the name of a specified class.","pos":[177330,177369]},{"content":"public ClassId className2Id(str name)","pos":[177447,177484]},{"content":"Provides the ID for a specified class, based on the class name.","pos":[177590,177653]},{"content":"public ClassId classNext(ClassId classId)","pos":[177707,177748]},{"content":"Indicates the class that succeeds a specified class, based on the class IDs.","pos":[177850,177926]},{"content":"public DictClass classObject(ClassId classId)","pos":[177967,178012]},{"content":"Provides information about a specified class by returning a DictClass object.","pos":[178110,178187]},{"content":"public int configurationKeyCnt()","pos":[178227,178259]},{"content":"Indicates the number of configuration keys in Microsoft Dynamics AX.","pos":[178370,178438]},{"content":"public ConfigurationKeyId configurationKeyCnt2Id(int cnt)","pos":[178487,178544]},{"content":"Provides the ID of a specified configuration key.","pos":[178630,178679]},{"content":"public str configurationKeyName(ConfigurationKeyId configurationKey)","pos":[178747,178815]},{"content":"Provides the name of a specified configuration key.","pos":[178890,178941]},{"content":"public ConfigurationKeyId configurationKeyName2Id(str name)","pos":[179007,179066]},{"content":"Provides the ID for a specified configuration key, based on the configuration key name.","pos":[179150,179237]},{"content":"public ConfigurationKeyId configurationKeyNext(ConfigurationKeyId configurationKey)","pos":[179267,179350]},{"content":"Indicates the configuration key that succeeds a specified configuration key, based on the configuration key IDs.","pos":[179410,179522]},{"content":"public DictConfigurationKey configurationKeyObject(ConfigurationKeyId configurationKey)","pos":[179527,179614]},{"content":"Provides information about a specified configuration key by returning a DictConfigurationKey object.","pos":[179670,179770]},{"content":"public SelectableDataArea currentCompany()","pos":[179787,179829]},{"content":"Indicates the current company for which data is available in the database.","pos":[179930,180004]},{"content":"public int enumCnt()","pos":[180047,180067]},{"content":"Indicates the number of enumeration types in Microsoft Dynamics AX.","pos":[180190,180257]},{"content":"public EnumId enumCnt2Id(int cnt)","pos":[180307,180340]},{"content":"Provides the ID of a specified enumeration type.","pos":[180450,180498]},{"content":"public str enumName(EnumId typeId)","pos":[180567,180601]},{"content":"Provides the name for a specified enumeration.","pos":[180710,180756]},{"content":"public EnumId enumName2Id(str name)","pos":[180827,180862]},{"content":"Provides the ID of a specified enumeration, based on the name.","pos":[180970,181032]},{"content":"public EnumId enumNext(EnumId typeId)","pos":[181087,181124]},{"content":"Indicates the enumeration type that succeeds a specified enumeration type, based on the enumeration type IDs.","pos":[181230,181339]},{"content":"public DictEnum enumObject(EnumId typeId)","pos":[181347,181388]},{"content":"Provides information about a specified enumeration by returning a DictEnum object.","pos":[181490,181572]},{"content":"public int licenseCodeCnt()","pos":[181607,181634]},{"content":"Indicates the number of license codes in Microsoft Dynamics AX.","pos":[181750,181813]},{"content":"public LicenseCodeId licenseCodeCnt2Id(int cnt)","pos":[181867,181914]},{"content":"Provides the ID of a specified license code.","pos":[182010,182054]},{"content":"public str licenseCodeName(LicenseCodeId licenseCode)","pos":[182127,182180]},{"content":"Provides the name of a specified license code.","pos":[182270,182316]},{"content":"public LicenseCodeId licenseCodeName2Id(str name)","pos":[182387,182436]},{"content":"Provides the ID for a specified license code, based on the license code name.","pos":[182530,182607]},{"content":"public LicenseCodeId licenseCodeNext(LicenseCodeId licenseCode)","pos":[182647,182710]},{"content":"Indicates the license code that succeeds a specified license code, based on the license code IDs.","pos":[182790,182887]},{"content":"public DictLicenseCode licenseCodeObject(LicenseCodeId licenseCode)","pos":[182907,182974]},{"content":"Provides information about a specified license code by returning a DictLicenseCode object.","pos":[183050,183140]},{"content":"public int tableCnt()","pos":[183167,183188]},{"content":"Indicates the number of tables in Microsoft Dynamics AX.","pos":[183310,183366]},{"content":"public TableId tableCnt2Id(int cnt)","pos":[183427,183462]},{"content":"Provides the ID of a specified table.","pos":[183570,183607]},{"content":"public str tableName(TableId tableId)","pos":[183687,183724]},{"content":"Provides the name of a specified table.","pos":[183830,183869]},{"content":"public TableId tableName2Id(str name)","pos":[183947,183984]},{"content":"Provides the ID for a specified table, based on the table name.","pos":[184090,184153]},{"content":"public TableId tableNext(TableId tableId)","pos":[184207,184248]},{"content":"Indicates the table that succeeds a specified table, based on the table IDs.","pos":[184350,184426]},{"content":"public DictTable tableObject(TableId tableId)","pos":[184467,184512]},{"content":"Provides information about a specified table by returning a DictTable object.","pos":[184610,184687]},{"content":"public boolean tableSql(TableId tableId)","pos":[184727,184767]},{"content":"Indicates whether a table is a SQL table.","pos":[184870,184911]},{"content":"public boolean tableSystem(TableId tableId)","pos":[184987,185030]},{"content":"Indicates whether a table is a system table.","pos":[185130,185174]},{"content":"public int testCode(int id, str value, str name, str serialno, str expiryDate, <ph id=\"ph1\">\\[</ph>int userCount<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean verifyCert<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>str timestamp<ph id=\"ph6\">\\]</ph>)","pos":[185247,185387],"source":"public int testCode(int id, str value, str name, str serialno, str expiryDate, \\[int userCount\\], \\[boolean verifyCert\\], \\[str timestamp\\])"},{"content":"public int typeCnt()","pos":[185507,185527]},{"content":"Indicates the number of extended data types in Microsoft Dynamics AX.","pos":[185650,185719]},{"content":"public ExtendedTypeId typeCnt2Id(int cnt)","pos":[185767,185808]},{"content":"Provides the ID of a specified extended data type.","pos":[185910,185960]},{"content":"public str typeName(ExtendedTypeId typeId)","pos":[186027,186069]},{"content":"Provides the name of a specified extended data type.","pos":[186170,186222]},{"content":"public ExtendedTypeId typeName2Id(str name)","pos":[186287,186330]},{"content":"Provides the ID for a specified extended data type, based on the extended data type name.","pos":[186430,186519]},{"content":"public ExtendedTypeId typeNext(ExtendedTypeId typeId)","pos":[186547,186600]},{"content":"Indicates the extended data type that succeeds a specified extended data type, based on the IDs.","pos":[186690,186786]},{"content":"public DictType typeObject(ExtendedTypeId typeId)","pos":[186807,186856]},{"content":"Provides information about a specified extended data type by returning a DictType object.","pos":[186950,187039]},{"content":"::public static boolean safeMode()","pos":[187067,187101]},{"content":"::public static void loginSettingsFlush()","pos":[187327,187368]},{"content":"Refreshes the logon settings for Microsoft Dynamics AX.","pos":[187470,187525]},{"content":"::public static void dataFlush(<ph id=\"ph1\">\\[</ph>TableId tableId<ph id=\"ph2\">\\]</ph>)","pos":[187587,187638],"source":"::public static void dataFlush(\\[TableId tableId\\])"},{"content":"Refreshes the table data in Microsoft Dynamics AX.","pos":[187730,187780]},{"content":"public void tableFlush()","pos":[187847,187871]},{"content":"Refreshes the tables in Microsoft Dynamics AX.","pos":[187990,188036]},{"content":"public void enumFlush()","pos":[188107,188130]},{"content":"Refreshes the enumeration types in Microsoft Dynamics AX.","pos":[188250,188307]},{"content":"public void new()","pos":[188367,188384]},{"content":"Initializes a new instance of the Dictionary class.","pos":[188510,188561]},{"content":"public void classFlush()","pos":[188627,188651]},{"content":"Refreshes the classes in Microsoft Dynamics AX.","pos":[188770,188817]},{"content":"public void reloadSecurity(<ph id=\"ph1\">\\[</ph>boolean reloadCodes<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean setSynchronizeRequired<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>boolean flushTable<ph id=\"ph6\">\\]</ph>)","pos":[188887,188998],"source":"public void reloadSecurity(\\[boolean reloadCodes\\], \\[boolean setSynchronizeRequired\\], \\[boolean flushTable\\])"},{"content":"Reloads the feature key system.","pos":[189030,189061]},{"content":"public void typeFlush()","pos":[189147,189170]},{"content":"Refreshes the extended data types in Microsoft Dynamics AX.","pos":[189290,189349]},{"content":"public void configurationKeyFlush()","pos":[189407,189442]},{"content":"Refreshes the configuration keys in Microsoft Dynamics AX.","pos":[189550,189608]},{"content":"public void licenseCodeFlush()","pos":[189667,189697]},{"content":"Refreshes the license codes in Microsoft Dynamics AX.","pos":[189810,189863]},{"content":"::public static void aodFlush()","pos":[189927,189958]},{"content":"Refreshes the .aod file.","pos":[190070,190094]},{"pos":[190190,190205],"content":"Method classCnt","linkify":"Method classCnt","nodes":[{"content":"Method classCnt","pos":[0,15]}]},{"content":"Indicates the number of classes in Microsoft Dynamics AX.","pos":[190207,190264]},{"pos":[190298,190310],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the number of classes.","pos":[190312,190366]},{"pos":[190372,190390],"content":"Method classCnt2Id","linkify":"Method classCnt2Id","nodes":[{"content":"Method classCnt2Id","pos":[0,18]}]},{"content":"Provides the ID of a specified class.","pos":[190392,190429]},{"pos":[190477,190487],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[190489,190492]},{"content":"An integer value that specifies a class, based on the order of classes in Microsoft Dynamics AX.","pos":[190495,190591]},{"pos":[190598,190610],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A classId system data type value that indicates the class ID; 0 (zero) if you pass a cnt value that is larger than the number of classes that is returned by the Dictionary::classCnt method.","pos":[190612,190801]},{"pos":[190807,190823],"content":"Method className","linkify":"Method className","nodes":[{"content":"Method className","pos":[0,16]}]},{"content":"Provides the name of a specified class.","pos":[190825,190864]},{"pos":[190914,190924],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"classId","pos":[190926,190933]},{"content":"A classId system data type that indicates the class ID.","pos":[190936,190991]},{"pos":[190998,191010],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that indicates the class name.","pos":[191012,191051]},{"pos":[191058,191065],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Class IDs are unsigned integers.","pos":[191067,191099]},{"pos":[191105,191124],"content":"Method className2Id","linkify":"Method className2Id","nodes":[{"content":"Method className2Id","pos":[0,19]}]},{"content":"Provides the ID for a specified class, based on the class name.","pos":[191126,191189]},{"pos":[191239,191249],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[191251,191255]},{"content":"A string that indicates the class name.","pos":[191258,191297]},{"pos":[191304,191316],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A classId system data type value that indicates the class ID; 0 (zero) if you pass a name value for a nonexistent class.","pos":[191318,191438]},{"pos":[191444,191460],"content":"Method classNext","linkify":"Method classNext","nodes":[{"content":"Method classNext","pos":[0,16]}]},{"content":"Indicates the class that succeeds a specified class, based on the class IDs.","pos":[191462,191538]},{"pos":[191592,191602],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"classId","pos":[191604,191611]},{"content":"A classId system data type that indicates a class ID.","pos":[191614,191667]},{"pos":[191674,191686],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A classId system data type value that indicates the class that succeeds the specified class.","pos":[191688,191780]},{"pos":[191786,191804],"content":"Method classObject","linkify":"Method classObject","nodes":[{"content":"Method classObject","pos":[0,18]}]},{"content":"Provides information about a specified class by returning a DictClass object.","pos":[191806,191883]},{"pos":[191941,191951],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"classId","pos":[191953,191960]},{"content":"A classId system data type that indicates a class ID.","pos":[191963,192016]},{"pos":[192023,192035],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictClass object that contains information about the specified class.","pos":[192037,192108]},{"pos":[192114,192140],"content":"Method configurationKeyCnt","linkify":"Method configurationKeyCnt","nodes":[{"content":"Method configurationKeyCnt","pos":[0,26]}]},{"content":"Indicates the number of configuration keys in Microsoft Dynamics AX.","pos":[192142,192210]},{"pos":[192255,192267],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value that indicates the number of configuration keys.","pos":[192269,192334]},{"pos":[192340,192369],"content":"Method configurationKeyCnt2Id","linkify":"Method configurationKeyCnt2Id","nodes":[{"content":"Method configurationKeyCnt2Id","pos":[0,29]}]},{"content":"Provides the ID of a specified configuration key.","pos":[192371,192420]},{"pos":[192490,192500],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[192502,192505]},{"content":"An integer that specifies a configuration key, based on the order of configuration keys in Microsoft Dynamics AX.","pos":[192508,192621]},{"pos":[192628,192640],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A configurationKeyId system data type value that indicates a configuration key ID; 0 (zero) if you pass a cnt value that is larger than the number of configuration keys that is returned by the Dictionary::configurationKeyCnt method.","pos":[192642,192874]},{"pos":[192880,192907],"content":"Method configurationKeyName","linkify":"Method configurationKeyName","nodes":[{"content":"Method configurationKeyName","pos":[0,27]}]},{"content":"Provides the name of a specified configuration key.","pos":[192909,192960]},{"pos":[193041,193051],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"configurationKey","pos":[193053,193069]},{"content":"A configurationKeyId system data type that indicates a configuration key ID.","pos":[193072,193148]},{"pos":[193155,193167],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that indicates the name of the configuration key.","pos":[193169,193227]},{"pos":[193233,193263],"content":"Method configurationKeyName2Id","linkify":"Method configurationKeyName2Id","nodes":[{"content":"Method configurationKeyName2Id","pos":[0,30]}]},{"content":"Provides the ID for a specified configuration key, based on the configuration key name.","pos":[193265,193352]},{"pos":[193424,193434],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[193436,193440]},{"content":"A string that indicates a configuration key name.","pos":[193443,193492]},{"pos":[193499,193511],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A configurationKeyId system data type value that indicates the configuration key ID; 0 (zero) if you pass a name value for a nonexistent configuration key.","pos":[193513,193668]},{"pos":[193674,193701],"content":"Method configurationKeyNext","linkify":"Method configurationKeyNext","nodes":[{"content":"Method configurationKeyNext","pos":[0,27]}]},{"content":"Indicates the configuration key that succeeds a specified configuration key, based on the configuration key IDs.","pos":[193703,193815]},{"pos":[193911,193921],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"configurationKey","pos":[193923,193939]},{"content":"A configurationKeyId system data type that indicates a configuration key ID.","pos":[193942,194018]},{"pos":[194025,194037],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A configurationKeyId system data type value for the configuration key that succeeds the specified configuration key.","pos":[194039,194155]},{"pos":[194161,194190],"content":"Method configurationKeyObject","linkify":"Method configurationKeyObject","nodes":[{"content":"Method configurationKeyObject","pos":[0,29]}]},{"content":"Provides information about a specified configuration key by returning a DictConfigurationKey object.","pos":[194192,194292]},{"pos":[194392,194402],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"configurationKey","pos":[194404,194420]},{"content":"A configurationKeyId system data type that indicates a configuration key ID.","pos":[194423,194499]},{"pos":[194506,194518],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictConfigurationKey object that contains information about the specified configuration key.","pos":[194520,194614]},{"pos":[194620,194641],"content":"Method currentCompany","linkify":"Method currentCompany","nodes":[{"content":"Method currentCompany","pos":[0,21]}]},{"content":"Indicates the current company for which data is available in the database.","pos":[194643,194717]},{"pos":[194772,194784],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A selectableDataArea system data type value that indicates the current company.","pos":[194786,194865]},{"pos":[194871,194885],"content":"Method enumCnt","linkify":"Method enumCnt","nodes":[{"content":"Method enumCnt","pos":[0,14]}]},{"content":"Indicates the number of enumeration types in Microsoft Dynamics AX.","pos":[194887,194954]},{"pos":[194987,194999],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that indicates the number of enumeration types.","pos":[195001,195059]},{"pos":[195065,195082],"content":"Method enumCnt2Id","linkify":"Method enumCnt2Id","nodes":[{"content":"Method enumCnt2Id","pos":[0,17]}]},{"content":"Provides the ID of a specified enumeration type.","pos":[195084,195132]},{"pos":[195178,195188],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[195190,195193]},{"content":"An integer that specifies an enumeration type, based on the order of enumeration types in Microsoft Dynamics AX.","pos":[195196,195308]},{"pos":[195315,195327],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An enumId system data type value that indicates the enumeration type ID; 0 (zero) if you pass a cnt value that is larger than the number of classes that is returned by the Dictionary::enumCnt method.","pos":[195329,195528]},{"pos":[195534,195549],"content":"Method enumName","linkify":"Method enumName","nodes":[{"content":"Method enumName","pos":[0,15]}]},{"content":"Provides the name for a specified enumeration.","pos":[195551,195597]},{"pos":[195644,195654],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"typeId","pos":[195656,195662]},{"content":"An enumId system data type for an enumeration.","pos":[195665,195711]},{"pos":[195718,195730],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that indicates the name of the enumeration.","pos":[195732,195784]},{"pos":[195790,195808],"content":"Method enumName2Id","linkify":"Method enumName2Id","nodes":[{"content":"Method enumName2Id","pos":[0,18]}]},{"content":"Provides the ID of a specified enumeration, based on the name.","pos":[195810,195872]},{"pos":[195920,195930],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[195932,195936]},{"content":"A string that indicates the name of an enumeration.","pos":[195939,195990]},{"pos":[195997,196009],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An enumId system data type value that indicates the ID of the enumeration.","pos":[196011,196085]},{"pos":[196091,196106],"content":"Method enumNext","linkify":"Method enumNext","nodes":[{"content":"Method enumNext","pos":[0,15]}]},{"content":"Indicates the enumeration type that succeeds a specified enumeration type, based on the enumeration type IDs.","pos":[196108,196217]},{"pos":[196267,196277],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"typeId","pos":[196279,196285]},{"content":"An enumId system data type that indicates an enumeration ID.","pos":[196288,196348]},{"pos":[196355,196367],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An enumId system data type value for the enumeration that succeeds the specified enumeration.","pos":[196369,196462]},{"pos":[196468,196485],"content":"Method enumObject","linkify":"Method enumObject","nodes":[{"content":"Method enumObject","pos":[0,17]}]},{"content":"Provides information about a specified enumeration by returning a DictEnum object.","pos":[196487,196569]},{"pos":[196623,196633],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"typeId","pos":[196635,196641]},{"content":"An enumId system data type that indicates an enumeration ID.","pos":[196644,196704]},{"pos":[196711,196723],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictEnum object that contains information about the specified enumeration.","pos":[196725,196801]},{"pos":[196807,196828],"content":"Method licenseCodeCnt","linkify":"Method licenseCodeCnt","nodes":[{"content":"Method licenseCodeCnt","pos":[0,21]}]},{"content":"Indicates the number of license codes in Microsoft Dynamics AX.","pos":[196830,196893]},{"pos":[196933,196945],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that indicates the number of license codes.","pos":[196947,197001]},{"pos":[197007,197031],"content":"Method licenseCodeCnt2Id","linkify":"Method licenseCodeCnt2Id","nodes":[{"content":"Method licenseCodeCnt2Id","pos":[0,24]}]},{"content":"Provides the ID of a specified license code.","pos":[197033,197077]},{"pos":[197137,197147],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[197149,197152]},{"content":"An integer that specifies a license code, based on the order of license codes in Microsoft Dynamics AX.","pos":[197155,197258]},{"pos":[197265,197277],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A licenseCodeId system data type value that indicates the license code ID; 0 (zero) if you pass a cnt value that is larger than the number of license codes that is returned by the Dictionary::licenseCodeCnt method.","pos":[197279,197493]},{"pos":[197499,197521],"content":"Method licenseCodeName","linkify":"Method licenseCodeName","nodes":[{"content":"Method licenseCodeName","pos":[0,22]}]},{"content":"Provides the name of a specified license code.","pos":[197523,197569]},{"pos":[197635,197645],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"licenseCode","pos":[197647,197658]},{"content":"A licenseCodeId system data type that indicates the license code ID.","pos":[197661,197729]},{"pos":[197736,197748],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that indicates the license code name.","pos":[197750,197796]},{"pos":[197802,197827],"content":"Method licenseCodeName2Id","linkify":"Method licenseCodeName2Id","nodes":[{"content":"Method licenseCodeName2Id","pos":[0,25]}]},{"content":"Provides the ID for a specified license code, based on the license code name.","pos":[197829,197906]},{"pos":[197968,197978],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[197980,197984]},{"content":"A string that indicates the license code name.","pos":[197987,198033]},{"pos":[198040,198052],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A licenseCodeId system data type value that indicates the license code ID; 0 (zero) if you pass a name value for a nonexistent license code.","pos":[198054,198194]},{"pos":[198200,198222],"content":"Method licenseCodeNext","linkify":"Method licenseCodeNext","nodes":[{"content":"Method licenseCodeNext","pos":[0,22]}]},{"content":"Indicates the license code that succeeds a specified license code, based on the license code IDs.","pos":[198224,198321]},{"pos":[198397,198407],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"licenseCode","pos":[198409,198420]},{"content":"A licenseCodeId system data type that indicates a license code ID.","pos":[198423,198489]},{"pos":[198496,198508],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A licenseCodeId system data type value for the license code that succeeds the specified license code.","pos":[198510,198611]},{"pos":[198617,198641],"content":"Method licenseCodeObject","linkify":"Method licenseCodeObject","nodes":[{"content":"Method licenseCodeObject","pos":[0,24]}]},{"content":"Provides information about a specified license code by returning a DictLicenseCode object.","pos":[198643,198733]},{"pos":[198813,198823],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"licenseCode","pos":[198825,198836]},{"content":"A licenseCodeId system data that indicates a license code ID.","pos":[198839,198900]},{"pos":[198907,198919],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictLicenseCode object that contains information about the specified license code.","pos":[198921,199005]},{"pos":[199011,199026],"content":"Method tableCnt","linkify":"Method tableCnt","nodes":[{"content":"Method tableCnt","pos":[0,15]}]},{"content":"Indicates the number of tables in Microsoft Dynamics AX.","pos":[199028,199084]},{"pos":[199118,199130],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that indicates the number of tables.","pos":[199132,199179]},{"pos":[199185,199203],"content":"Method tableCnt2Id","linkify":"Method tableCnt2Id","nodes":[{"content":"Method tableCnt2Id","pos":[0,18]}]},{"content":"Provides the ID of a specified table.","pos":[199205,199242]},{"pos":[199290,199300],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[199302,199305]},{"content":"An integer that specifies a table, based on the order of tables.","pos":[199308,199372]},{"pos":[199379,199391],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A tableId system data type value that indicates the table ID; 0 (zero) if you pass a cnt value that is larger than the number of tables that is returned by the Dictionary::tableCnt method.","pos":[199393,199581]},{"pos":[199587,199603],"content":"Method tableName","linkify":"Method tableName","nodes":[{"content":"Method tableName","pos":[0,16]}]},{"content":"Provides the name of a specified table.","pos":[199605,199644]},{"pos":[199694,199704],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[199706,199713]},{"content":"A tableId system data type that indicates the table ID.","pos":[199716,199771]},{"pos":[199778,199790],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that indicates the table name; UNKNOWN if you pass a tableId value that does not exist.","pos":[199792,199888]},{"pos":[199895,199902],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The method returns UNKNOWN if you pass a tableId value that does not exist.","pos":[199904,199979]},{"pos":[199985,200004],"content":"Method tableName2Id","linkify":"Method tableName2Id","nodes":[{"content":"Method tableName2Id","pos":[0,19]}]},{"content":"Provides the ID for a specified table, based on the table name.","pos":[200006,200069]},{"pos":[200119,200129],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[200131,200135]},{"content":"A string that indicates the table name.","pos":[200138,200177]},{"pos":[200184,200196],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A tableId system data type value that indicates the table ID; 0 (zero) if you pass a name value for a nonexistent table.","pos":[200198,200318]},{"pos":[200324,200340],"content":"Method tableNext","linkify":"Method tableNext","nodes":[{"content":"Method tableNext","pos":[0,16]}]},{"content":"Indicates the table that succeeds a specified table, based on the table IDs.","pos":[200342,200418]},{"pos":[200472,200482],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[200484,200491]},{"content":"A tableId system data type that indicates a table ID.","pos":[200494,200547]},{"pos":[200554,200566],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A tableId system data type value for the table that succeeds the specified table.","pos":[200568,200649]},{"pos":[200655,200673],"content":"Method tableObject","linkify":"Method tableObject","nodes":[{"content":"Method tableObject","pos":[0,18]}]},{"content":"Provides information about a specified table by returning a DictTable object.","pos":[200675,200752]},{"pos":[200810,200820],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[200822,200829]},{"content":"A tableId system data type that indicates a table ID.","pos":[200832,200885]},{"pos":[200892,200904],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictTable object that contains information about the specified table.","pos":[200906,200977]},{"pos":[200983,200998],"content":"Method tableSql","linkify":"Method tableSql","nodes":[{"content":"Method tableSql","pos":[0,15]}]},{"content":"Indicates whether a table is a SQL table.","pos":[201000,201041]},{"pos":[201094,201104],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[201106,201113]},{"content":"A tableId system data type that indicates the table ID.","pos":[201116,201171]},{"pos":[201178,201190],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table is a SQL table; otherwise, false.","pos":[201192,201243]},{"pos":[201249,201267],"content":"Method tableSystem","linkify":"Method tableSystem","nodes":[{"content":"Method tableSystem","pos":[0,18]}]},{"content":"Indicates whether a table is a system table.","pos":[201269,201313]},{"pos":[201369,201379],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[201381,201388]},{"content":"A tableId system data type that indicates a table ID.","pos":[201391,201444]},{"pos":[201451,201463],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table is a system table; otherwise, false.","pos":[201465,201519]},{"pos":[201526,201533],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can pass a table name to this method instead of a table ID by using the tableNum intrinsic function.","pos":[201535,201639]},{"content":"For more information, see Intrinsic Functions.","pos":[201640,201686]},{"pos":[201692,201707],"content":"Method testCode","linkify":"Method testCode","nodes":[{"content":"Method testCode","pos":[0,15]}]},{"pos":[201854,201864],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"id","pos":[201866,201868]},{"content":"value","pos":[201882,201887]},{"content":"name","pos":[201901,201905]},{"content":"serialno","pos":[201919,201927]},{"content":"expiryDate","pos":[201941,201951]},{"content":"userCount","pos":[201965,201974]},{"content":"verifyCert","pos":[201988,201998]},{"content":"timestamp","pos":[202012,202021]},{"pos":[202030,202042],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[202048,202062],"content":"Method typeCnt","linkify":"Method typeCnt","nodes":[{"content":"Method typeCnt","pos":[0,14]}]},{"content":"Indicates the number of extended data types in Microsoft Dynamics AX.","pos":[202064,202133]},{"pos":[202166,202178],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that indicates the number of extended data types.","pos":[202180,202240]},{"pos":[202246,202263],"content":"Method typeCnt2Id","linkify":"Method typeCnt2Id","nodes":[{"content":"Method typeCnt2Id","pos":[0,17]}]},{"content":"Provides the ID of a specified extended data type.","pos":[202265,202315]},{"pos":[202369,202379],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[202381,202384]},{"content":"An integer that specifies an extended data type, based on the order of extended data types in Microsoft Dynamics AX.","pos":[202387,202503]},{"pos":[202510,202522],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An extendedTypeId system data type value that indicates the ID of the extended data type; 0 (zero) if you pass a cnt value that is larger than the number of extended data types that is returned by the Dictionary::typeCnt method.","pos":[202524,202752]},{"pos":[202758,202773],"content":"Method typeName","linkify":"Method typeName","nodes":[{"content":"Method typeName","pos":[0,15]}]},{"content":"Provides the name of a specified extended data type.","pos":[202775,202827]},{"pos":[202882,202892],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"typeId","pos":[202894,202900]},{"content":"An extendedTypeId system data type that indicates the ID of an extended data type.","pos":[202903,202985]},{"pos":[202992,203004],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that indicates the name of the extended data type.","pos":[203006,203065]},{"pos":[203071,203089],"content":"Method typeName2Id","linkify":"Method typeName2Id","nodes":[{"content":"Method typeName2Id","pos":[0,18]}]},{"content":"Provides the ID for a specified extended data type, based on the extended data type name.","pos":[203091,203180]},{"pos":[203236,203246],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[203248,203252]},{"content":"A string that indicates the name of the extended data type.","pos":[203255,203314]},{"pos":[203321,203333],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An extendedTypeId system data type value that indicates the ID of the extended data type; 0 (zero) if you pass a name value for a nonexistent extended data type.","pos":[203335,203496]},{"pos":[203502,203517],"content":"Method typeNext","linkify":"Method typeNext","nodes":[{"content":"Method typeNext","pos":[0,15]}]},{"content":"Indicates the extended data type that succeeds a specified extended data type, based on the IDs.","pos":[203519,203615]},{"pos":[203681,203691],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"typeId","pos":[203693,203699]},{"content":"An extendedTypeId system data type that indicates the ID for an extended data type.","pos":[203702,203785]},{"pos":[203792,203804],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An extendedTypeId system data type value for the extended data type that succeeds the specified extended data type.","pos":[203806,203921]},{"pos":[203927,203944],"content":"Method typeObject","linkify":"Method typeObject","nodes":[{"content":"Method typeObject","pos":[0,17]}]},{"content":"Provides information about a specified extended data type by returning a DictType object.","pos":[203946,204035]},{"pos":[204097,204107],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"typeId","pos":[204109,204115]},{"content":"An extendedTypeId system data type that indicates the ID for an extended data type.","pos":[204118,204201]},{"pos":[204208,204220],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictType object that contains information about the specified extended data type.","pos":[204222,204305]},{"pos":[204311,204326],"content":"Method safeMode","linkify":"Method safeMode","nodes":[{"content":"Method safeMode","pos":[0,15]}]},{"pos":[204371,204383],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[204389,204414],"content":"Method loginSettingsFlush","linkify":"Method loginSettingsFlush","nodes":[{"content":"Method loginSettingsFlush","pos":[0,25]}]},{"content":"Refreshes the logon settings for Microsoft Dynamics AX.","pos":[204416,204471]},{"pos":[204522,204538],"content":"Method dataFlush","linkify":"Method dataFlush","nodes":[{"content":"Method dataFlush","pos":[0,16]}]},{"content":"Refreshes the table data in Microsoft Dynamics AX.","pos":[204540,204590]},{"pos":[204650,204660],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[204662,204669]},{"content":"A tableId system data type that indicates a single table or all tables.","pos":[204672,204743]},{"content":"The default value is ALL.","pos":[204744,204769]},{"pos":[204776,204783],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, this method refreshes data in all tables.","pos":[204785,204838]},{"pos":[204844,204861],"content":"Method tableFlush","linkify":"Method tableFlush","nodes":[{"content":"Method tableFlush","pos":[0,17]}]},{"content":"Refreshes the tables in Microsoft Dynamics AX.","pos":[204863,204909]},{"pos":[204945,204961],"content":"Method enumFlush","linkify":"Method enumFlush","nodes":[{"content":"Method enumFlush","pos":[0,16]}]},{"content":"Refreshes the enumeration types in Microsoft Dynamics AX.","pos":[204963,205020]},{"pos":[205055,205065],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Dictionary class.","pos":[205067,205118]},{"pos":[205147,205164],"content":"Method classFlush","linkify":"Method classFlush","nodes":[{"content":"Method classFlush","pos":[0,17]}]},{"content":"Refreshes the classes in Microsoft Dynamics AX.","pos":[205166,205213]},{"pos":[205249,205270],"content":"Method reloadSecurity","linkify":"Method reloadSecurity","nodes":[{"content":"Method reloadSecurity","pos":[0,21]}]},{"content":"Reloads the feature key system.","pos":[205272,205303]},{"pos":[205421,205431],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"reloadCodes","pos":[205433,205444]},{"content":"setSynchronizeRequired","pos":[205458,205480]},{"content":"flushTable","pos":[205494,205504]},{"pos":[205513,205520],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default value for the <ph id=\"ph1\">\\_</ph>reloadCodes parameter is false.","pos":[205522,205581],"source":"The default value for the \\_reloadCodes parameter is false."},{"content":"The default value for the <ph id=\"ph1\">\\_</ph>setSynchronizeRequired parameter is true.","pos":[205582,205651],"source":" The default value for the \\_setSynchronizeRequired parameter is true."},{"pos":[205657,205673],"content":"Method typeFlush","linkify":"Method typeFlush","nodes":[{"content":"Method typeFlush","pos":[0,16]}]},{"content":"Refreshes the extended data types in Microsoft Dynamics AX.","pos":[205675,205734]},{"pos":[205769,205797],"content":"Method configurationKeyFlush","linkify":"Method configurationKeyFlush","nodes":[{"content":"Method configurationKeyFlush","pos":[0,28]}]},{"content":"Refreshes the configuration keys in Microsoft Dynamics AX.","pos":[205799,205857]},{"pos":[205904,205927],"content":"Method licenseCodeFlush","linkify":"Method licenseCodeFlush","nodes":[{"content":"Method licenseCodeFlush","pos":[0,23]}]},{"content":"Refreshes the license codes in Microsoft Dynamics AX.","pos":[205929,205982]},{"pos":[206024,206039],"content":"Method aodFlush","linkify":"Method aodFlush","nodes":[{"content":"Method aodFlush","pos":[0,15]}]},{"content":"Refreshes the .aod file.","pos":[206041,206065]},{"pos":[206105,206126],"content":"Class DictLicenseCode","linkify":"Class DictLicenseCode","nodes":[{"content":"Class DictLicenseCode","pos":[0,21]}]},{"pos":[206173,206180],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[206186,206194],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[206200,206207],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[206211,206217]},{"content":"Description","pos":[206258,206269]},{"content":"public LicenseCodeGroup group()","pos":[206409,206440]},{"content":"public LicenseCodeId id()","pos":[206508,206533]},{"content":"public str label()","pos":[206607,206625]},{"content":"public str name()","pos":[206706,206723]},{"content":"public SysLicensePackageType package()","pos":[206805,206843]},{"content":"public int publicKey()","pos":[206904,206926]},{"content":"public LicenseCodeType type()","pos":[207003,207032]},{"content":"public void new(LicenseCodeId licenseCodeId)","pos":[207102,207146]},{"content":"Initializes a new instance of the Object class.","pos":[207149,207196]},{"pos":[207204,207216],"content":"Method group","linkify":"Method group","nodes":[{"content":"Method group","pos":[0,12]}]},{"pos":[207260,207272],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[207278,207287],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"pos":[207325,207337],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[207343,207355],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"pos":[207386,207398],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[207404,207415],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"pos":[207445,207457],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[207463,207477],"content":"Method package","linkify":"Method package","nodes":[{"content":"Method package","pos":[0,14]}]},{"pos":[207528,207540],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[207546,207562],"content":"Method publicKey","linkify":"Method publicKey","nodes":[{"content":"Method publicKey","pos":[0,16]}]},{"pos":[207597,207609],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[207615,207626],"content":"Method type","linkify":"Method type","nodes":[{"content":"Method type","pos":[0,11]}]},{"pos":[207668,207680],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[207686,207696],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[207698,207745]},{"pos":[207802,207812],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"licenseCodeId","pos":[207814,207827]},{"pos":[207834,207850],"content":"Class DictMethod","linkify":"Class DictMethod","nodes":[{"content":"Class DictMethod","pos":[0,16]}]},{"pos":[207896,207903],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[207909,207917],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[207923,207930],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[207934,207940]},{"content":"Description","pos":[207996,208007]},{"content":"public AccessSpecifier accessSpecifier()","pos":[208380,208420]},{"content":"Specifies whether the method is public, protected, or private.","pos":[208442,208504]},{"content":"public str clrParameterType(int variableNumber)","pos":[208603,208650]},{"content":"public str clrReturnType()","pos":[208826,208852]},{"content":"public str clrVarType(int variableNumber)","pos":[209049,209090]},{"content":"public boolean compiledOk()","pos":[209272,209299]},{"content":"Indicates whether the method compiled successfully.","pos":[209334,209385]},{"content":"public TableId displayId()","pos":[209495,209521]},{"content":"public DisplayFunctionType displayType()","pos":[209718,209758]},{"content":"Indicates the type of display function of a method.","pos":[209780,209831]},{"content":"public boolean hasImplementation()","pos":[209941,209975]},{"content":"Determines whether the actual method implementation is on the class or derived from the base class.","pos":[210003,210102]},{"content":"public boolean isAbstract()","pos":[210164,210191]},{"content":"Indicates whether the method is abstract.","pos":[210226,210267]},{"content":"public boolean isDelegate()","pos":[210387,210414]},{"content":"Indicates whether the method is a delegate.","pos":[210449,210492]},{"content":"public boolean isStatic()","pos":[210610,210635]},{"content":"Indicates whether the method is static.","pos":[210672,210711]},{"content":"public str name()","pos":[210833,210850]},{"content":"Gets the name of the method.","pos":[210895,210923]},{"content":"public int parameterCnt()","pos":[211056,211081]},{"content":"Gets the number of parameters for the method.","pos":[211118,211163]},{"content":"public int parameterId(int variableNumber)","pos":[211279,211321]},{"content":"Gets the ID of the specified parameter.","pos":[211341,211380]},{"content":"public str parameterName(int variableNumber)","pos":[211502,211546]},{"content":"Gets the name of the specified parameter.","pos":[211564,211605]},{"content":"public boolean parameterOptional(int variableNumber)","pos":[211725,211777]},{"content":"Indicates whether the specified parameter of the method is optional.","pos":[211787,211855]},{"content":"public Types parameterType(int variableNumber)","pos":[211948,211994]},{"content":"public int parentId()","pos":[212171,212192]},{"content":"Gets the ID of the parent that owns the method.","pos":[212233,212280]},{"content":"public str propertyHelp()","pos":[212394,212419]},{"content":"Gets the Help string for the property that is associated with the method.","pos":[212456,212529]},{"content":"public NoYes propertyMethod()","pos":[212617,212646]},{"content":"Indicates whether the method is a property method.","pos":[212679,212729]},{"content":"public int returnId()","pos":[212840,212861]},{"content":"Specifies the ID for certain return data types, such as extended data types and classes, for a method that returns a value.","pos":[212902,213025]},{"content":"public Types returnType()","pos":[213063,213088]},{"content":"Specifies a method return type.","pos":[213125,213156]},{"content":"public ClassRunMode runMode()","pos":[213286,213315]},{"content":"Specifies where a method is run.","pos":[213348,213380]},{"content":"public int varCnt()","pos":[213509,213528]},{"content":"Gets the number of variables for the method.","pos":[213571,213615]},{"content":"public str varName(int variableNumber)","pos":[213732,213770]},{"content":"Gets the name of the specified variable.","pos":[213794,213834]},{"content":"public void setMethod(MemberFunction method)","pos":[213955,213999]},{"content":"Specifies the application object type of a node in the Microsoft Dynamics AX Application Object Tree (AOT) by using an instance of the MemberFunction class.","pos":[214017,214173]},{"content":"public void new(UtilElementType utilType, int id, str name)","pos":[214178,214237]},{"content":"Initializes a new instance of the Object class.","pos":[214240,214287]},{"pos":[214404,214426],"content":"Method accessSpecifier","linkify":"Method accessSpecifier","nodes":[{"content":"Method accessSpecifier","pos":[0,22]}]},{"content":"Specifies whether the method is public, protected, or private.","pos":[214428,214490]},{"pos":[214543,214555],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An AccessSpecifier enumeration value that specifies whether the method is public, protected, or private.","pos":[214557,214661]},{"pos":[214667,214690],"content":"Method clrParameterType","linkify":"Method clrParameterType","nodes":[{"content":"Method clrParameterType","pos":[0,23]}]},{"pos":[214750,214760],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"variableNumber","pos":[214762,214776]},{"pos":[214785,214797],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[214803,214823],"content":"Method clrReturnType","linkify":"Method clrReturnType","nodes":[{"content":"Method clrReturnType","pos":[0,20]}]},{"pos":[214862,214874],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[214880,214897],"content":"Method clrVarType","linkify":"Method clrVarType","nodes":[{"content":"Method clrVarType","pos":[0,17]}]},{"pos":[214951,214961],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"variableNumber","pos":[214963,214977]},{"pos":[214986,214998],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[215004,215021],"content":"Method compiledOk","linkify":"Method compiledOk","nodes":[{"content":"Method compiledOk","pos":[0,17]}]},{"content":"Indicates whether the method compiled successfully.","pos":[215023,215074]},{"pos":[215114,215126],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the method compiled successfully; otherwise, false.","pos":[215128,215187]},{"pos":[215193,215209],"content":"Method displayId","linkify":"Method displayId","nodes":[{"content":"Method displayId","pos":[0,16]}]},{"pos":[215248,215260],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[215266,215284],"content":"Method displayType","linkify":"Method displayType","nodes":[{"content":"Method displayType","pos":[0,18]}]},{"content":"Indicates the type of display function of a method.","pos":[215286,215337]},{"pos":[215390,215402],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DisplayFunctionType enumeration value that indicates the display function type of a method.","pos":[215404,215497]},{"pos":[215504,215511],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following table lists the possible values that are returned by the displayType method.","pos":[215513,215603]},{"content":"Get","pos":[215727,215730]},{"content":"The method is a display method.","pos":[215739,215770]},{"content":"None","pos":[215787,215791]},{"content":"The method is not a display or edit method.","pos":[215799,215842]},{"content":"RecordGet","pos":[215847,215856]},{"content":"The method retrieves a record.","pos":[215859,215889]},{"content":"RecordSet","pos":[215907,215916]},{"content":"The method sets a record.","pos":[215919,215944]},{"content":"Set","pos":[215967,215970]},{"content":"The method is an edit method.","pos":[215979,216008]},{"pos":[216030,216054],"content":"Method hasImplementation","linkify":"Method hasImplementation","nodes":[{"content":"Method hasImplementation","pos":[0,24]}]},{"content":"Determines whether the actual method implementation is on the class or derived from the base class.","pos":[216056,216155]},{"pos":[216202,216214],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the method is implemented on the class; otherwise, false.","pos":[216216,216281]},{"pos":[216287,216304],"content":"Method isAbstract","linkify":"Method isAbstract","nodes":[{"content":"Method isAbstract","pos":[0,17]}]},{"content":"Indicates whether the method is abstract.","pos":[216306,216347]},{"pos":[216387,216399],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the method is abstract; otherwise, false.","pos":[216401,216450]},{"pos":[216456,216473],"content":"Method isDelegate","linkify":"Method isDelegate","nodes":[{"content":"Method isDelegate","pos":[0,17]}]},{"content":"Indicates whether the method is a delegate.","pos":[216475,216518]},{"pos":[216558,216570],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the method is a delegate; otherwise, false.","pos":[216572,216623]},{"pos":[216629,216644],"content":"Method isStatic","linkify":"Method isStatic","nodes":[{"content":"Method isStatic","pos":[0,15]}]},{"content":"Indicates whether the method is static.","pos":[216646,216685]},{"pos":[216723,216735],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the method is a static; otherwise, false.","pos":[216737,216786]},{"pos":[216792,216803],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets the name of the method.","pos":[216805,216833]},{"pos":[216863,216875],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the method.","pos":[216877,216900]},{"pos":[216906,216925],"content":"Method parameterCnt","linkify":"Method parameterCnt","nodes":[{"content":"Method parameterCnt","pos":[0,19]}]},{"content":"Gets the number of parameters for the method.","pos":[216927,216972]},{"pos":[217010,217022],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of parameters for the method.","pos":[217024,217064]},{"pos":[217070,217088],"content":"Method parameterId","linkify":"Method parameterId","nodes":[{"content":"Method parameterId","pos":[0,18]}]},{"content":"Gets the ID of the specified parameter.","pos":[217090,217129]},{"pos":[217184,217194],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"variableNumber","pos":[217196,217210]},{"content":"The one-based index to the parameter list for the method.","pos":[217213,217270]},{"pos":[217277,217289],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the specified parameter.","pos":[217291,217325]},{"pos":[217331,217351],"content":"Method parameterName","linkify":"Method parameterName","nodes":[{"content":"Method parameterName","pos":[0,20]}]},{"content":"Gets the name of the specified parameter.","pos":[217353,217394]},{"pos":[217451,217461],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"variableNumber","pos":[217463,217477]},{"content":"The one-based index to the parameter list for the method.","pos":[217480,217537]},{"pos":[217544,217556],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified parameter.","pos":[217558,217594]},{"pos":[217600,217624],"content":"Method parameterOptional","linkify":"Method parameterOptional","nodes":[{"content":"Method parameterOptional","pos":[0,24]}]},{"content":"Indicates whether the specified parameter of the method is optional.","pos":[217626,217694]},{"pos":[217759,217769],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"variableNumber","pos":[217771,217785]},{"content":"The one-based index to the parameter list for the method.","pos":[217788,217845]},{"pos":[217852,217864],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the parameter is optional; otherwise, false.","pos":[217866,217918]},{"pos":[217924,217944],"content":"Method parameterType","linkify":"Method parameterType","nodes":[{"content":"Method parameterType","pos":[0,20]}]},{"pos":[218003,218013],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"variableNumber","pos":[218015,218029]},{"pos":[218038,218050],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[218056,218071],"content":"Method parentId","linkify":"Method parentId","nodes":[{"content":"Method parentId","pos":[0,15]}]},{"content":"Gets the ID of the parent that owns the method.","pos":[218073,218120]},{"pos":[218154,218166],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the parent that owns the method.","pos":[218168,218210]},{"pos":[218216,218235],"content":"Method propertyHelp","linkify":"Method propertyHelp","nodes":[{"content":"Method propertyHelp","pos":[0,19]}]},{"content":"Gets the Help string for the property that is associated with the method.","pos":[218237,218310]},{"pos":[218348,218360],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The Help string for the property that is associated with the method; an empty string if there is no Help string.","pos":[218362,218474]},{"pos":[218481,218488],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method calls the DictMethod::propertyMethod method to determine whether the method is a property method.","pos":[218490,218599]},{"pos":[218605,218626],"content":"Method propertyMethod","linkify":"Method propertyMethod","nodes":[{"content":"Method propertyMethod","pos":[0,21]}]},{"content":"Indicates whether the method is a property method.","pos":[218628,218678]},{"pos":[218720,218732],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A NoYes::No enumeration value if the method is a property method; otherwise, a NoYes::Yes enumeration value.","pos":[218734,218842]},{"pos":[218848,218863],"content":"Method returnId","linkify":"Method returnId","nodes":[{"content":"Method returnId","pos":[0,15]}]},{"content":"Specifies the ID for certain return data types, such as extended data types and classes, for a method that returns a value.","pos":[218865,218988]},{"pos":[219022,219034],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID for the return data type; 0 (zero) if the data type does not have an ID or a method does not return a value..","pos":[219036,219152]},{"pos":[219158,219175],"content":"Method returnType","linkify":"Method returnType","nodes":[{"content":"Method returnType","pos":[0,17]}]},{"content":"Specifies a method return type.","pos":[219177,219208]},{"pos":[219246,219258],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A Types enumeration value that indicates the method return type.","pos":[219260,219324]},{"pos":[219331,219338],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following list shows the possible values:","pos":[219340,219385]},{"content":"AnyType","pos":[219391,219398]},{"content":"BLOB","pos":[219403,219407]},{"content":"Class","pos":[219412,219417]},{"content":"Container","pos":[219422,219431]},{"content":"Date","pos":[219436,219440]},{"content":"DateTime","pos":[219445,219453]},{"content":"Enum","pos":[219458,219462]},{"content":"Grid","pos":[219467,219471]},{"content":"Int64","pos":[219476,219481]},{"content":"Integer","pos":[219486,219493]},{"content":"Real","pos":[219498,219502]},{"content":"Record","pos":[219507,219513]},{"content":"RString","pos":[219518,219525]},{"content":"String","pos":[219530,219536]},{"content":"UserType","pos":[219541,219549]},{"content":"VarString","pos":[219554,219563]},{"content":"void","pos":[219568,219572]},{"pos":[219578,219592],"content":"Method runMode","linkify":"Method runMode","nodes":[{"content":"Method runMode","pos":[0,14]}]},{"content":"Specifies where a method is run.","pos":[219594,219626]},{"pos":[219668,219680],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A ClassRunMode enumeration value that indicates where a method is run.","pos":[219682,219752]},{"pos":[219759,219766],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following list shows the possible values:","pos":[219768,219813]},{"content":"Called","pos":[219819,219825]},{"content":"Client","pos":[219830,219836]},{"content":"ClientorServer","pos":[219841,219855]},{"content":"Server","pos":[219860,219866]},{"pos":[219872,219885],"content":"Method varCnt","linkify":"Method varCnt","nodes":[{"content":"Method varCnt","pos":[0,13]}]},{"content":"Gets the number of variables for the method.","pos":[219887,219931]},{"pos":[219963,219975],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of local and inherited variables for the method.","pos":[219977,220036]},{"pos":[220042,220056],"content":"Method varName","linkify":"Method varName","nodes":[{"content":"Method varName","pos":[0,14]}]},{"content":"Gets the name of the specified variable.","pos":[220058,220098]},{"pos":[220149,220159],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"variableNumber","pos":[220161,220175]},{"content":"The one-based index to the variable list for the method.","pos":[220178,220234]},{"pos":[220241,220253],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified variable.","pos":[220255,220290]},{"pos":[220296,220312],"content":"Method setMethod","linkify":"Method setMethod","nodes":[{"content":"Method setMethod","pos":[0,16]}]},{"content":"Specifies the application object type of a node in the Microsoft Dynamics AX Application Object Tree (AOT) by using an instance of the MemberFunction class.","pos":[220314,220470]},{"pos":[220527,220537],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"method","pos":[220539,220545]},{"content":"An instance of the MemberFunction class that represents a node in the AOT.","pos":[220548,220622]},{"pos":[220628,220638],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[220640,220687]},{"pos":[220759,220769],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"utilType","pos":[220771,220779]},{"content":"id","pos":[220793,220795]},{"content":"name","pos":[220809,220813]},{"pos":[220820,220838],"content":"Class DictRelation","linkify":"Class DictRelation","nodes":[{"content":"Class DictRelation","pos":[0,18]}]},{"content":"The DictRelation class can be used to manage dictionary relations for the tables.","pos":[220878,220959]},{"pos":[220965,220972],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[220978,220986],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[220992,220999],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[221003,221009]},{"content":"Description","pos":[221123,221134]},{"content":"public Cardinality Cardinality()","pos":[221389,221421]},{"content":"Retrieves the cardinality value.","pos":[221509,221541]},{"content":"public boolean createNavigationPropertyMethods()","pos":[221582,221630]},{"content":"public boolean EDTRelation()","pos":[221775,221803]},{"content":"Retrieves the extended data type (EDT) relation state.","pos":[221895,221949]},{"content":"public str entityRelationshipRole()","pos":[221968,222003]},{"content":"Retrieves the name of the entity relationship role.","pos":[222088,222139]},{"content":"public str entityRelationshipRoleLabelId()","pos":[222161,222203]},{"content":"Retrieves the label ID for the name of the entity relationship role.","pos":[222281,222349]},{"content":"public TableId externTable()","pos":[222354,222382]},{"content":"Returns the ID of the external table that is used for the relation.","pos":[222474,222541]},{"content":"public boolean isSelfLink()","pos":[222547,222574]},{"content":"Verifies whether the relation is self-linked.","pos":[222667,222712]},{"content":"public int lineExternTableValue(int lineNumber)","pos":[222740,222787]},{"content":"Retrieves the external table value for the given line.","pos":[222860,222914]},{"content":"public int lines()","pos":[222933,222951]},{"content":"Retrieves the number of the lines in the relation.","pos":[223053,223103]},{"content":"public int lineSourceEDT(int lineNumber)","pos":[223126,223166]},{"content":"Retrieves the source EDT value for the given table line.","pos":[223246,223302]},{"content":"public RelationshipSubType lineSubType(int lineNumber)","pos":[223319,223373]},{"content":"Retrieves the sub-type for the given table line.","pos":[223439,223487]},{"content":"public int lineTableValue(int lineNumber)","pos":[223512,223553]},{"content":"Retrieves the value for the given table line.","pos":[223632,223677]},{"content":"public TableRelation lineType(int lineNumber)","pos":[223705,223750]},{"content":"Retrieves the relation type for the given table line.","pos":[223825,223878]},{"content":"public TableId loadFieldRelation(FieldId fieldId, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>Common record<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>boolean isLookup<ph id=\"ph6\">\\]</ph>)","pos":[223898,224015],"source":"public TableId loadFieldRelation(FieldId fieldId, \\[TableScope tableScope\\], \\[Common record\\], \\[boolean isLookup\\])"},{"content":"Loads a relation that is specified by a field ID.","pos":[224018,224067]},{"content":"public TableId loadNameRelation(str name)","pos":[224091,224132]},{"content":"Loads the relation for the given name.","pos":[224211,224249]},{"content":"public TableId loadTableRelation(TableId tableId, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>Common record<ph id=\"ph4\">\\]</ph>)","pos":[224284,224379],"source":"public TableId loadTableRelation(TableId tableId, \\[TableScope tableScope\\], \\[Common record\\])"},{"content":"Loads a table relation.","pos":[224404,224427]},{"content":"public str navigationPropertyNameOverride()","pos":[224477,224520]},{"content":"public RelatedTableCardinality RelatedTableCardinality()","pos":[224670,224726]},{"content":"Retrieves the cardinality for the related table.","pos":[224790,224838]},{"content":"public str RelatedTableRole()","pos":[224863,224892]},{"content":"Retrieves the role name for the related table.","pos":[224983,225029]},{"content":"public RelationshipType relationshipType()","pos":[225056,225098]},{"content":"Retrieves the relationship type.","pos":[225176,225208]},{"content":"public str Role()","pos":[225249,225266]},{"content":"Retrieves the role name.","pos":[225369,225393]},{"content":"public TableId table()","pos":[225442,225464]},{"content":"Returns the table ID of the relation.","pos":[225562,225599]},{"content":"public boolean useDefaultRoleNames()","pos":[225635,225671]},{"content":"public boolean validate()","pos":[225828,225853]},{"content":"Validates a relation.","pos":[225948,225969]},{"content":"::public static boolean isSurrogateForeignKeyRelation(TableId tableId, str relationName)","pos":[226021,226109]},{"content":"Verifies whether there is surrogate foreign key relation.","pos":[226141,226198]},{"content":"public void new(int id, <ph id=\"ph1\">\\[</ph>UtilElementType Util<ph id=\"ph2\">\\_</ph>Element<ph id=\"ph3\">\\_</ph>Type<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>int index<ph id=\"ph6\">\\]</ph>)","pos":[226214,226293],"source":"public void new(int id, \\[UtilElementType Util\\_Element\\_Type\\], \\[int index\\])"},{"content":"Initializes a new instance of the Object class.","pos":[226334,226381]},{"pos":[226410,226428],"content":"Method Cardinality","linkify":"Method Cardinality","nodes":[{"content":"Method Cardinality","pos":[0,18]}]},{"content":"Retrieves the cardinality value.","pos":[226430,226462]},{"pos":[226507,226519],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The cardinality value.","pos":[226521,226543]},{"pos":[226549,226587],"content":"Method createNavigationPropertyMethods","linkify":"Method createNavigationPropertyMethods","nodes":[{"content":"Method createNavigationPropertyMethods","pos":[0,38]}]},{"pos":[226648,226660],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[226666,226684],"content":"Method EDTRelation","linkify":"Method EDTRelation","nodes":[{"content":"Method EDTRelation","pos":[0,18]}]},{"content":"Retrieves the extended data type (EDT) relation state.","pos":[226686,226740]},{"pos":[226781,226793],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A Boolean value that indicates whether the EDT relation is available.","pos":[226795,226864]},{"pos":[226870,226899],"content":"Method entityRelationshipRole","linkify":"Method entityRelationshipRole","nodes":[{"content":"Method entityRelationshipRole","pos":[0,29]}]},{"content":"Retrieves the name of the entity relationship role.","pos":[226901,226952]},{"pos":[227000,227012],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the entity relationship role.","pos":[227014,227055]},{"pos":[227061,227097],"content":"Method entityRelationshipRoleLabelId","linkify":"Method entityRelationshipRoleLabelId","nodes":[{"content":"Method entityRelationshipRoleLabelId","pos":[0,36]}]},{"content":"Retrieves the label ID for the name of the entity relationship role.","pos":[227099,227167]},{"pos":[227222,227234],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label ID for the entity relationship role.","pos":[227236,227282]},{"pos":[227288,227306],"content":"Method externTable","linkify":"Method externTable","nodes":[{"content":"Method externTable","pos":[0,18]}]},{"content":"Returns the ID of the external table that is used for the relation.","pos":[227308,227375]},{"pos":[227416,227428],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the external table that is used for the relation; 0 (zero) if the relation has not yet been loaded.","pos":[227430,227539]},{"pos":[227546,227554],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the external table ID.","pos":[227556,227623]},{"pos":[227958,227975],"content":"Method isSelfLink","linkify":"Method isSelfLink","nodes":[{"content":"Method isSelfLink","pos":[0,17]}]},{"content":"Verifies whether the relation is self-linked.","pos":[227977,228022]},{"pos":[228062,228074],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the relation is self-linked; otherwise, false.","pos":[228076,228130]},{"pos":[228136,228163],"content":"Method lineExternTableValue","linkify":"Method lineExternTableValue","nodes":[{"content":"Method lineExternTableValue","pos":[0,27]}]},{"content":"Retrieves the external table value for the given line.","pos":[228165,228219]},{"pos":[228279,228289],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"lineNumber","pos":[228291,228301]},{"pos":[228310,228322],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The external table value.","pos":[228324,228349]},{"pos":[228355,228367],"content":"Method lines","linkify":"Method lines","nodes":[{"content":"Method lines","pos":[0,12]}]},{"content":"Retrieves the number of the lines in the relation.","pos":[228369,228419]},{"pos":[228450,228462],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of the lines.","pos":[228464,228488]},{"pos":[228494,228514],"content":"Method lineSourceEDT","linkify":"Method lineSourceEDT","nodes":[{"content":"Method lineSourceEDT","pos":[0,20]}]},{"content":"Retrieves the source EDT value for the given table line.","pos":[228516,228572]},{"pos":[228625,228635],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"lineNumber","pos":[228637,228647]},{"pos":[228656,228668],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The source EDT value.","pos":[228670,228691]},{"pos":[228697,228715],"content":"Method lineSubType","linkify":"Method lineSubType","nodes":[{"content":"Method lineSubType","pos":[0,18]}]},{"content":"Retrieves the sub-type for the given table line.","pos":[228717,228765]},{"pos":[228832,228842],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"lineNumber","pos":[228844,228854]},{"pos":[228863,228875],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The sub-type for the given table line.","pos":[228877,228915]},{"pos":[228921,228942],"content":"Method lineTableValue","linkify":"Method lineTableValue","nodes":[{"content":"Method lineTableValue","pos":[0,21]}]},{"content":"Retrieves the value for the given table line.","pos":[228944,228989]},{"pos":[229043,229053],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"lineNumber","pos":[229055,229065]},{"pos":[229074,229086],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value for the table line.","pos":[229088,229117]},{"pos":[229123,229138],"content":"Method lineType","linkify":"Method lineType","nodes":[{"content":"Method lineType","pos":[0,15]}]},{"content":"Retrieves the relation type for the given table line.","pos":[229140,229193]},{"pos":[229251,229261],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"lineNumber","pos":[229263,229273]},{"pos":[229282,229294],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table relation type for the given line.","pos":[229296,229339]},{"pos":[229345,229369],"content":"Method loadFieldRelation","linkify":"Method loadFieldRelation","nodes":[{"content":"Method loadFieldRelation","pos":[0,24]}]},{"content":"Loads a relation that is specified by a field ID.","pos":[229371,229420]},{"pos":[229544,229554],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[229556,229563]},{"content":"tableScope","pos":[229577,229587]},{"content":"record","pos":[229601,229607]},{"content":"isLookup","pos":[229621,229629]},{"pos":[229638,229650],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the table for the relation; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the method failed.","pos":[229652,229784]},{"pos":[229790,229813],"content":"Method loadNameRelation","linkify":"Method loadNameRelation","nodes":[{"content":"Method loadNameRelation","pos":[0,23]}]},{"content":"Loads the relation for the given name.","pos":[229815,229853]},{"pos":[229907,229917],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[229919,229923]},{"pos":[229932,229944],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table ID for the table relation.","pos":[229946,229982]},{"pos":[229988,230012],"content":"Method loadTableRelation","linkify":"Method loadTableRelation","nodes":[{"content":"Method loadTableRelation","pos":[0,24]}]},{"content":"Loads a table relation.","pos":[230014,230037]},{"pos":[230141,230151],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[230153,230160]},{"content":"tableScope","pos":[230174,230184]},{"content":"record","pos":[230198,230204]},{"pos":[230213,230225],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table ID for the table relation.","pos":[230227,230263]},{"pos":[230269,230306],"content":"Method navigationPropertyNameOverride","linkify":"Method navigationPropertyNameOverride","nodes":[{"content":"Method navigationPropertyNameOverride","pos":[0,37]}]},{"pos":[230362,230374],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[230380,230410],"content":"Method RelatedTableCardinality","linkify":"Method RelatedTableCardinality","nodes":[{"content":"Method RelatedTableCardinality","pos":[0,30]}]},{"content":"Retrieves the cardinality for the related table.","pos":[230412,230460]},{"pos":[230529,230541],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The cardinality for the related table.","pos":[230543,230581]},{"pos":[230587,230610],"content":"Method RelatedTableRole","linkify":"Method RelatedTableRole","nodes":[{"content":"Method RelatedTableRole","pos":[0,23]}]},{"content":"Retrieves the role name for the related table.","pos":[230612,230658]},{"pos":[230700,230712],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The role name for the related table.","pos":[230714,230750]},{"pos":[230756,230779],"content":"Method relationshipType","linkify":"Method relationshipType","nodes":[{"content":"Method relationshipType","pos":[0,23]}]},{"content":"Retrieves the relationship type.","pos":[230781,230813]},{"pos":[230868,230880],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The relationship type.","pos":[230882,230904]},{"pos":[230910,230921],"content":"Method Role","linkify":"Method Role","nodes":[{"content":"Method Role","pos":[0,11]}]},{"content":"Retrieves the role name.","pos":[230923,230947]},{"pos":[230977,230989],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The role name.","pos":[230991,231005]},{"pos":[231011,231023],"content":"Method table","linkify":"Method table","nodes":[{"content":"Method table","pos":[0,12]}]},{"content":"Returns the table ID of the relation.","pos":[231025,231062]},{"pos":[231097,231109],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table ID of the relation.","pos":[231111,231140]},{"pos":[231147,231155],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the table ID for a relation.","pos":[231157,231230]},{"pos":[231393,231419],"content":"Method useDefaultRoleNames","linkify":"Method useDefaultRoleNames","nodes":[{"content":"Method useDefaultRoleNames","pos":[0,26]}]},{"pos":[231468,231480],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[231486,231501],"content":"Method validate","linkify":"Method validate","nodes":[{"content":"Method validate","pos":[0,15]}]},{"content":"Validates a relation.","pos":[231503,231524]},{"pos":[231562,231574],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the relation is valid; otherwise, false.","pos":[231576,231624]},{"pos":[231630,231666],"content":"Method isSurrogateForeignKeyRelation","linkify":"Method isSurrogateForeignKeyRelation","nodes":[{"content":"Method isSurrogateForeignKeyRelation","pos":[0,36]}]},{"content":"Verifies whether there is surrogate foreign key relation.","pos":[231668,231725]},{"pos":[231824,231834],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[231836,231843]},{"content":"relationName","pos":[231857,231869]},{"pos":[231878,231890],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if there is a surrogate foreign key relation; otherwise, false.","pos":[231892,231960]},{"pos":[231966,231976],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[231978,232025]},{"pos":[232111,232121],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"id","pos":[232123,232125]},{"content":"The relation index; optional.","pos":[232128,232157]},{"content":"The default value is 1.","pos":[232158,232181]},{"content":"Util<ph id=\"ph1\">\\_</ph>Element<ph id=\"ph2\">\\_</ph>Type","pos":[232193,232212],"source":"Util\\_Element\\_Type"},{"content":"The relation index; optional.","pos":[232215,232244]},{"content":"The default value is 1.","pos":[232245,232268]},{"content":"index","pos":[232280,232285]},{"content":"The relation index; optional.","pos":[232288,232317]},{"content":"The default value is 1.","pos":[232318,232341]},{"pos":[232346,232361],"content":"Class DictTable","linkify":"Class DictTable","nodes":[{"content":"Class DictTable","pos":[0,15]}]},{"content":"The DictTable class provides information about a table.","pos":[232398,232453]},{"pos":[232459,232466],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[232472,232480],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows how to create an instance of the DictTable class to determine whether the data in the table is stored on a per-company basis.","pos":[232482,232635]},{"pos":[232869,232876],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[232880,232886]},{"content":"Description","pos":[233022,233033]},{"content":"public boolean doesMethodExist(str name)","pos":[233512,233552]},{"content":"Checks whether a given method exists on the table.","pos":[233654,233704]},{"content":"public AOSAuthorization AOSAuthSetting()","pos":[233828,233868]},{"content":"Retrieves an AOSAuthorization system enumeration value that specifies the type of operation that a user can perform on a table, depending on the permissions of the user.","pos":[233970,234139]},{"content":"public RecordCacheLevel cacheLookup()","pos":[234144,234181]},{"content":"Returns the record cache level for the table.","pos":[234286,234331]},{"content":"public int cacheSize()","pos":[234460,234482]},{"content":"Returns the cache size for the table, in the number of records.","pos":[234602,234665]},{"content":"public AnyType callObject(str methodName, Common Called, VarArg )","pos":[234776,234841]},{"content":"Calls the specified object method for a table.","pos":[234918,234964]},{"content":"public AnyType callStatic(str methodName, VarArg )","pos":[235092,235142]},{"content":"Calls the specified static method for a table.","pos":[235234,235280]},{"content":"public IndexId clusterIndex(<ph id=\"ph1\">\\[</ph>boolean asDefinedInAOT<ph id=\"ph2\">\\]</ph>)","pos":[235408,235463],"source":"public IndexId clusterIndex(\\[boolean asDefinedInAOT\\])"},{"content":"Returns the ID of the clustered index for the table.","pos":[235550,235602]},{"content":"public ConfigurationKeyId configurationKeyId()","pos":[235724,235770]},{"content":"Returns the ID of the configuration key for the table.","pos":[235866,235920]},{"content":"public boolean dataPerPartition()","pos":[236040,236073]},{"content":"Returns a value that indicates whether the data of the table is saved on a per-partition basis, and corresponds to the SaveDataPerPartition property of the table.","pos":[236182,236344]},{"content":"public boolean dataPrCompany()","pos":[236356,236386]},{"content":"Returns a value that indicates whether the data of the table is saved on a per-company basis, and corresponds to the SaveDataPerCompany property of the table.","pos":[236498,236656]},{"content":"public int deleteActionCnt()","pos":[236672,236700]},{"content":"Retrieves the number of delete actions for the table.","pos":[236814,236867]},{"content":"public str deleteActionRelation(int cnt)","pos":[236988,237028]},{"content":"public TableId deleteActionTableId(int cnt)","pos":[237304,237347]},{"content":"Returns the table ID of a table's delete action that is specified by an index.","pos":[237446,237524]},{"content":"public int deleteActionType(int cnt)","pos":[237620,237656]},{"content":"Retrieves the type of a delete action for a table.","pos":[237762,237812]},{"content":"public str developerDocumentation()","pos":[237936,237971]},{"content":"public str developerDocumentationLabelId()","pos":[238252,238294]},{"content":"public boolean enabled()","pos":[238568,238592]},{"content":"Returns a value that indicates whether the table is enabled.","pos":[238710,238770]},{"content":"public boolean enforceRelationRules()","pos":[238884,238921]},{"content":"public EntityRelationshipType entityRelationshipType()","pos":[239200,239254]},{"content":"public List extendedBy(<ph id=\"ph1\">\\[</ph>boolean allLevels<ph id=\"ph2\">\\]</ph>)","pos":[239516,239561],"source":"public List extendedBy(\\[boolean allLevels\\])"},{"content":"public TableId extends()","pos":[239832,239856]},{"content":"Returns the table ID of a base table.","pos":[239974,240011]},{"content":"public int fieldCnt(<ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[240148,240194],"source":"public int fieldCnt(\\[TableScope tableScope\\])"},{"content":"Returns the number of fields for a table.","pos":[240290,240331]},{"content":"public FieldId fieldCnt2Id(int cnt, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[240464,240526],"source":"public FieldId fieldCnt2Id(int cnt, \\[TableScope tableScope\\])"},{"content":"Returns the field ID of the field that is specified by an index.","pos":[240606,240670]},{"content":"public str fieldGroup(int FieldGroupNumber, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[240780,240850],"source":"public str fieldGroup(int FieldGroupNumber, \\[TableScope tableScope\\])"},{"content":"Returns the name of a field group that is specified by index.","pos":[240922,240983]},{"content":"public int fieldGroupCnt(<ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[241096,241147],"source":"public int fieldGroupCnt(\\[TableScope tableScope\\])"},{"content":"Returns the number of field groups for the table.","pos":[241238,241287]},{"content":"public str fieldName(FieldId fieldId, <ph id=\"ph1\">\\[</ph>DbBackend db<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int arrayindex<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>FieldNameGenerationMode generationMode<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str tableAlias<ph id=\"ph8\">\\]</ph>)","pos":[241412,241551],"source":"public str fieldName(FieldId fieldId, \\[DbBackend db\\], \\[int arrayindex\\], \\[FieldNameGenerationMode generationMode\\], \\[str tableAlias\\])"},{"content":"Returns the name of the field that is specified by field ID.","pos":[241554,241614]},{"content":"public FieldId fieldName2Id(str name)","pos":[241728,241765]},{"content":"Returns the field ID of a field that is specified by name.","pos":[241870,241928]},{"content":"public FieldId fieldNext(FieldId fieldId, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[242044,242112],"source":"public FieldId fieldNext(FieldId fieldId, \\[TableScope tableScope\\])"},{"content":"Returns the value of the next field ID during a field iteration of the table.","pos":[242186,242263]},{"content":"public DictField fieldObject(FieldId fieldId)","pos":[242360,242405]},{"content":"Creates an instance of the DictField class for the field that is specified by field ID.","pos":[242502,242589]},{"content":"public IndexId fieldOrigin2Id(Guid fieldOrigin, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[242676,242750],"source":"public IndexId fieldOrigin2Id(Guid fieldOrigin, \\[TableScope tableScope\\])"},{"content":"public str fieldSqlDefault(FieldId fieldId)","pos":[242992,243035]},{"content":"Returns the SQL default value for the field that is specified by field ID.","pos":[243134,243208]},{"content":"public str formRef(<ph id=\"ph1\">\\[</ph>boolean searchBaseTables<ph id=\"ph2\">\\]</ph>)","pos":[243308,243356],"source":"public str formRef(\\[boolean searchBaseTables\\])"},{"content":"Returns the name of the default form for the table.","pos":[243450,243501]},{"content":"public container getCountryRegionCodes()","pos":[243624,243664]},{"content":"public FieldId getCountryRegionContextField()","pos":[243940,243985]},{"content":"public FieldId getValidTimeStateValidFromFieldId()","pos":[244256,244306]},{"content":"public FieldId getValidTimeStateValidToFieldId()","pos":[244572,244620]},{"content":"public boolean hasRecidIdx()","pos":[244888,244916]},{"content":"Returns a value that indicates whether a record ID index for the table is in effect.","pos":[245030,245114]},{"content":"public boolean hasSurrogateKey()","pos":[245204,245236]},{"content":"public TableId id()","pos":[245520,245539]},{"content":"Returns the ID of the table.","pos":[245662,245690]},{"content":"public int indexCnt()","pos":[245836,245857]},{"content":"Returns the number of indexes for the table.","pos":[245978,246022]},{"content":"public IndexId indexCnt2Id(int cnt)","pos":[246152,246187]},{"content":"public str indexName(IndexId indexId, <ph id=\"ph1\">\\[</ph>DbBackend db<ph id=\"ph2\">\\]</ph>)","pos":[246468,246523],"source":"public str indexName(IndexId indexId, \\[DbBackend db\\])"},{"content":"Returns the name of an index that is specified by the indexId parameter.","pos":[246610,246682]},{"content":"public IndexId indexName2Id(str name)","pos":[246784,246821]},{"content":"Returns the ID of an index that is specified by name.","pos":[246926,246979]},{"content":"public IndexId indexNext(IndexId id)","pos":[247100,247136]},{"content":"Returns the value of the next index ID during an index iteration of the table.","pos":[247242,247320]},{"content":"public DictIndex indexObject(IndexId indexId)","pos":[247416,247461]},{"content":"Creates an instance of the DictTable class for the index that is specified by ID.","pos":[247558,247639]},{"content":"public IndexId indexUnique()","pos":[247732,247760]},{"content":"Returns the ID of the unique index for the table.","pos":[247874,247923]},{"content":"public FieldId instanceRelationType()","pos":[248048,248085]},{"content":"public boolean isAbstract()","pos":[248364,248391]},{"content":"Indicates whether this table is abstract.","pos":[248506,248547]},{"content":"public boolean isBaseData()","pos":[248680,248707]},{"content":"Indicates whether the table content is base data.","pos":[248822,248871]},{"content":"public boolean isDefaultData()","pos":[248996,249026]},{"content":"Indicates whether the table contains default data.","pos":[249138,249188]},{"content":"public boolean isDerivedFrom(TableName baseTableName)","pos":[249312,249365]},{"content":"Indicates whether one table type derives from another.","pos":[249454,249508]},{"content":"public boolean isMap()","pos":[249628,249650]},{"content":"Indicates whether the table is a map.","pos":[249770,249807]},{"content":"public boolean isSql()","pos":[249944,249966]},{"content":"Indicates whether the table is an SQL table.","pos":[250086,250130]},{"content":"public boolean isSystemTable()","pos":[250260,250290]},{"content":"Indicates whether the table is a system table.","pos":[250402,250448]},{"content":"public boolean isTempDb()","pos":[250576,250601]},{"content":"public boolean isTmp()","pos":[250892,250914]},{"content":"Indicates whether the table is a temporary table.","pos":[251034,251083]},{"content":"public boolean isUnionAllView()","pos":[251208,251239]},{"content":"public boolean isValidTimeStateTable()","pos":[251524,251562]},{"content":"public boolean isView()","pos":[251840,251863]},{"content":"Indicates whether the table is a view.","pos":[251982,252020]},{"content":"public str label()","pos":[252156,252174]},{"content":"Returns the label text for the table.","pos":[252298,252335]},{"content":"public str labelDefined()","pos":[252472,252497]},{"content":"Returns the value of the label property for the table.","pos":[252614,252668]},{"content":"public str listPageRef(<ph id=\"ph1\">\\[</ph>boolean searchBaseTables<ph id=\"ph2\">\\]</ph>)","pos":[252788,252840],"source":"public str listPageRef(\\[boolean searchBaseTables\\])"},{"content":"public Common makeRecord()","pos":[253104,253130]},{"content":"Creates a blank record for the table.","pos":[253246,253283]},{"content":"public AccessType maxAccessMode()","pos":[253420,253453]},{"content":"Returns the value of the MaxAccessMode property for a table, as set in the AOT.","pos":[253562,253641]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>DbBackend db<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean pseudoname<ph id=\"ph4\">\\]</ph>)","pos":[253736,253793],"source":"public str name(\\[DbBackend db\\], \\[boolean pseudoname\\])"},{"content":"Retrieves the name of the table.","pos":[253878,253910]},{"content":"public str objectMethod(int methodNumber, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[254052,254120],"source":"public str objectMethod(int methodNumber, \\[TableScope tableScope\\])"},{"content":"Returns the name of an instance method that is specified by index.","pos":[254194,254260]},{"content":"public int objectMethodCnt(<ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[254368,254421],"source":"public int objectMethodCnt(\\[TableScope tableScope\\])"},{"content":"Returns the number of instance methods for the table.","pos":[254510,254563]},{"content":"public DictMethod objectMethodObject(int methodNumber, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[254684,254765],"source":"public DictMethod objectMethodObject(int methodNumber, \\[TableScope tableScope\\])"},{"content":"Returns an instance of the MethodInfo class for an object method that is specified by index.","pos":[254826,254918]},{"content":"public DictTableMap mapObject(int methodNumber)","pos":[255000,255047]},{"content":"Creates an instance of the <ph id=\"ph1\">\\[</ph>T: DictTableMap<ph id=\"ph2\">\\]</ph> class for a mapping that is specified by index.","pos":[255142,255236],"source":"Creates an instance of the \\[T: DictTableMap\\] class for a mapping that is specified by index."},{"content":"public int mapCnt()","pos":[255316,255335]},{"content":"Returns the count of available table mappings for the map that is specified by this DictTable instance.","pos":[255458,255561]},{"content":"public boolean occEnabled()","pos":[255632,255659]},{"content":"Indicates whether the optimistic concurrency mode has been enabled for a table.","pos":[255774,255853]},{"content":"public IndexId primaryIndex(<ph id=\"ph1\">\\[</ph>boolean asDefinedInAOT<ph id=\"ph2\">\\]</ph>)","pos":[255948,256003],"source":"public IndexId primaryIndex(\\[boolean asDefinedInAOT\\])"},{"content":"Returns the ID of the primary index for the table.","pos":[256090,256140]},{"content":"public FieldId primaryKeyField()","pos":[256264,256296]},{"content":"Returns the ID of the field that is used for the primary key of the table.","pos":[256406,256480]},{"content":"public str relation(int RelationNumber, <ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[256580,256646],"source":"public str relation(int RelationNumber, \\[TableScope tableScope\\])"},{"content":"Returns the name of a relation that is specified by index.","pos":[256722,256780]},{"content":"public int relationCnt(<ph id=\"ph1\">\\[</ph>TableScope tableScope<ph id=\"ph2\">\\]</ph>)","pos":[256896,256945],"source":"public int relationCnt(\\[TableScope tableScope\\])"},{"content":"Returns the number of relations for the table.","pos":[257038,257084]},{"content":"public IndexId replacementKey()","pos":[257212,257243]},{"content":"public str reportRef()","pos":[257528,257550]},{"content":"Returns the name of the default report for the table.","pos":[257670,257723]},{"content":"public AccessType rights(<ph id=\"ph1\">\\[</ph>boolean ignoreContext<ph id=\"ph2\">\\]</ph>)","pos":[257844,257895],"source":"public AccessType rights(\\[boolean ignoreContext\\])"},{"content":"Returns the access rights of the current user that is specified for the table.","pos":[257986,258064]},{"content":"public SecurityKeyId securityKeyId()","pos":[258160,258196]},{"content":"Returns the ID of the security key for the table.","pos":[258302,258351]},{"content":"public str singularLabel(<ph id=\"ph1\">\\[</ph>boolean labelTranslation<ph id=\"ph2\">\\]</ph>)","pos":[258476,258530],"source":"public str singularLabel(\\[boolean labelTranslation\\])"},{"content":"public str staticMethod(int methodNumber)","pos":[258792,258833]},{"content":"Returns the name of a static method that is specified by index.","pos":[258934,258997]},{"content":"public int staticMethodCnt()","pos":[259108,259136]},{"content":"Returns the number of static methods for the table.","pos":[259250,259301]},{"content":"public DictMethod staticMethodObject(int methodNumber)","pos":[259424,259478]},{"content":"Returns an instance of the MethodInfo class for a static method that is specified by index.","pos":[259566,259657]},{"content":"public boolean supportInheritance()","pos":[259740,259775]},{"content":"public TableGroup tableGroup()","pos":[260056,260086]},{"content":"Returns the table group for a table.","pos":[260198,260234]},{"content":"public TableType tableType()","pos":[260372,260400]},{"content":"Indicates the type of the table.","pos":[260514,260546]},{"content":"public FieldId titleField1(<ph id=\"ph1\">\\[</ph>boolean includeBaseTables<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean extendedFieldId<ph id=\"ph4\">\\]</ph>)","pos":[260688,260774],"source":"public FieldId titleField1(\\[boolean includeBaseTables\\], \\[boolean extendedFieldId\\])"},{"content":"Returns the ID of the field that represents the titleField1 property of the table.","pos":[260830,260912]},{"content":"public FieldId titleField2(<ph id=\"ph1\">\\[</ph>boolean includeBaseTables<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean extendedFieldId<ph id=\"ph4\">\\]</ph>)","pos":[261004,261090],"source":"public FieldId titleField2(\\[boolean includeBaseTables\\], \\[boolean extendedFieldId\\])"},{"content":"Returns the ID of the field that represents the titleField2 property of the table.","pos":[261146,261228]},{"content":"public boolean validRelationship()","pos":[261320,261354]},{"content":"public boolean visible()","pos":[261636,261660]},{"content":"Determines whether the table is visible.","pos":[261778,261818]},{"content":"::public static DictTable construct(str tableName)","pos":[261952,262002]},{"content":"::public static RecId getRelationTypeFromTableName(TableName tableName)","pos":[262268,262339]},{"content":"::public static TableName getTableNameFromRelationType(RecId relationType)","pos":[262584,262658]},{"content":"::public static Common createRecord(str tableName)","pos":[262900,262950]},{"content":"public void reloadSecurity()","pos":[263216,263244]},{"content":"Reloads the feature key system for the table.","pos":[263358,263403]},{"content":"public void new(TableId tableId)","pos":[263532,263564]},{"content":"Initializes a new instance of the Object class.","pos":[263674,263721]},{"content":"public void reindex()","pos":[263848,263869]},{"content":"Performs a reindex of the table.","pos":[263990,264022]},{"pos":[264167,264189],"content":"Method doesMethodExist","linkify":"Method doesMethodExist","nodes":[{"content":"Method doesMethodExist","pos":[0,22]}]},{"content":"Checks whether a given method exists on the table.","pos":[264191,264241]},{"pos":[264294,264304],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[264306,264310]},{"pos":[264319,264331],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the given method exists on the table; otherwise, false.","pos":[264333,264396]},{"pos":[264403,264410],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This API is the preferred way to check whether a method exists on the table without checking whether the method compiled successfully.","pos":[264412,264546]},{"pos":[264552,264573],"content":"Method AOSAuthSetting","linkify":"Method AOSAuthSetting","nodes":[{"content":"Method AOSAuthSetting","pos":[0,21]}]},{"content":"Retrieves an AOSAuthorization system enumeration value that specifies the type of operation that a user can perform on a table, depending on the permissions of the user.","pos":[264575,264744]},{"pos":[264797,264809],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An AOSAuthorization system enumeration value.","pos":[264811,264856]},{"pos":[264863,264870],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The AOSAuthorization::None value indicates that an authorization check is not performed.","pos":[264872,264960]},{"content":"Use table properties to set the AOSAuthorization property for a table.","pos":[264961,265031]},{"content":"In the Microsoft Dynamics AX Application Object Tree (AOT), right-click the table, and then click Properties to access the table properties.","pos":[265032,265172]},{"pos":[265179,265187],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"This following example shows a call to the AOSAuthSetting method.","pos":[265189,265254]},{"pos":[265451,265469],"content":"Method cacheLookup","linkify":"Method cacheLookup","nodes":[{"content":"Method cacheLookup","pos":[0,18]}]},{"content":"Returns the record cache level for the table.","pos":[265471,265516]},{"pos":[265566,265578],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A RecordCacheLevel value that indicates the record cache level for the table.","pos":[265580,265657]},{"pos":[265664,265672],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the cache level for a table.","pos":[265674,265747]},{"pos":[265878,265894],"content":"Method cacheSize","linkify":"Method cacheSize","nodes":[{"content":"Method cacheSize","pos":[0,16]}]},{"content":"Returns the cache size for the table, in the number of records.","pos":[265896,265959]},{"pos":[265994,266006],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The cache size for the table.","pos":[266008,266037]},{"pos":[266044,266052],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example retrieves the cache size for a table.","pos":[266054,266113]},{"pos":[266271,266288],"content":"Method callObject","linkify":"Method callObject","nodes":[{"content":"Method callObject","pos":[0,17]}]},{"content":"Calls the specified object method for a table.","pos":[266290,266336]},{"pos":[266414,266424],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodName","pos":[266426,266436]},{"content":"Called","pos":[266450,266456]},{"pos":[266479,266491],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The results of the call to the methodName parameter.","pos":[266493,266545]},{"pos":[266552,266559],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If an attacker can control input to the callObject method, a security risk exists.","pos":[266561,266643]},{"content":"Therefore, this method runs under Code Access Security.","pos":[266644,266699]},{"content":"Calls to this method on the server require permission from the ExecutePermission class.","pos":[266700,266787]},{"content":"Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.","pos":[266788,266923]},{"pos":[266930,266938],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"This example calls the SysUserLog.onlineTime static method in the SysUserLog table and then prints the value that is returned from the call.","pos":[266940,267080]},{"pos":[267974,267991],"content":"Method callStatic","linkify":"Method callStatic","nodes":[{"content":"Method callStatic","pos":[0,17]}]},{"content":"Calls the specified static method for a table.","pos":[267993,268039]},{"pos":[268102,268112],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodName","pos":[268114,268124]},{"pos":[268147,268159],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The results of the call to the methodName parameter.","pos":[268161,268213]},{"pos":[268220,268227],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If an attacker can control input to this function, a security risk exists.","pos":[268229,268303]},{"content":"Therefore, the callStatic method runs under Code Access Security.","pos":[268304,268369]},{"content":"Calls to this method on the server require permission from the ExecutePermission class.","pos":[268370,268457]},{"content":"Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.","pos":[268458,268593]},{"pos":[268600,268608],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"This example calls the SysUserInfo:find static method in the SysUserInfo table and then prints the value that is returned from the call to the callStatic method.","pos":[268610,268771]},{"pos":[269524,269543],"content":"Method clusterIndex","linkify":"Method clusterIndex","nodes":[{"content":"Method clusterIndex","pos":[0,19]}]},{"content":"Returns the ID of the clustered index for the table.","pos":[269545,269597]},{"pos":[269663,269673],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"asDefinedInAOT","pos":[269675,269689]},{"content":"A value that indicates whether the clustered index to retrieve is defined in the AOT.","pos":[269692,269777]},{"content":"A value of true returns the clustered index as defined in the AOT.","pos":[269778,269844]},{"content":"A value of false returns the clustered index as defined in the SQL table; optional.","pos":[269845,269928]},{"pos":[269935,269947],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the clustered index for the table; 0 (zero) if there is no clustered index for the table.","pos":[269949,270048]},{"pos":[270055,270063],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the clustered index for a table.","pos":[270065,270142]},{"pos":[270439,270464],"content":"Method configurationKeyId","linkify":"Method configurationKeyId","nodes":[{"content":"Method configurationKeyId","pos":[0,25]}]},{"content":"Returns the ID of the configuration key for the table.","pos":[270466,270520]},{"pos":[270579,270591],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the configuration key for the table; 0 (zero) if there is no configuration key for the table.","pos":[270593,270696]},{"pos":[270703,270711],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the configuration key ID for a table.","pos":[270713,270795]},{"pos":[271169,271192],"content":"Method dataPerPartition","linkify":"Method dataPerPartition","nodes":[{"content":"Method dataPerPartition","pos":[0,23]}]},{"content":"Returns a value that indicates whether the data of the table is saved on a per-partition basis, and corresponds to the SaveDataPerPartition property of the table.","pos":[271194,271356]},{"pos":[271402,271414],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the data is saved on a per-partition basis; otherwise, false, and the data is saved globally for all partitions.","pos":[271416,271536]},{"pos":[271542,271562],"content":"Method dataPrCompany","linkify":"Method dataPrCompany","nodes":[{"content":"Method dataPrCompany","pos":[0,20]}]},{"content":"Returns a value that indicates whether the data of the table is saved on a per-company basis, and corresponds to the SaveDataPerCompany property of the table.","pos":[271564,271722]},{"pos":[271765,271777],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the data is saved on a per-company basis; otherwise, false, and the data is saved globally for all companies.","pos":[271779,271896]},{"pos":[271903,271911],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the value that indicates whether the data is saved on a per-company basis.","pos":[271913,272032]},{"pos":[272239,272261],"content":"Method deleteActionCnt","linkify":"Method deleteActionCnt","nodes":[{"content":"Method deleteActionCnt","pos":[0,22]}]},{"content":"Retrieves the number of delete actions for the table.","pos":[272263,272316]},{"pos":[272357,272369],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of delete actions for the table.","pos":[272371,272414]},{"pos":[272421,272429],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the number of delete actions for the table.","pos":[272431,272519]},{"pos":[272700,272727],"content":"Method deleteActionRelation","linkify":"Method deleteActionRelation","nodes":[{"content":"Method deleteActionRelation","pos":[0,27]}]},{"pos":[272780,272790],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[272792,272795]},{"pos":[272804,272816],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[272822,272848],"content":"Method deleteActionTableId","linkify":"Method deleteActionTableId","nodes":[{"content":"Method deleteActionTableId","pos":[0,26]}]},{"content":"Returns the table ID of a table's delete action that is specified by an index.","pos":[272850,272928]},{"pos":[272984,272994],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[272996,272999]},{"content":"A one-based index to the list of the delete actions for the table.","pos":[273002,273068]},{"content":"The list is in AOT order.","pos":[273069,273094]},{"pos":[273101,273113],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table ID of the table's delete action that is specified by cnt; 0 (zero) if the cnt value does not represent a valid delete action index.","pos":[273115,273256]},{"pos":[273263,273271],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the use of the deleteActionTableId method to retrieve the names of tables that have delete actions for the CustTable table.","pos":[273273,273424]},{"pos":[273766,273789],"content":"Method deleteActionType","linkify":"Method deleteActionType","nodes":[{"content":"Method deleteActionType","pos":[0,23]}]},{"content":"Retrieves the type of a delete action for a table.","pos":[273791,273841]},{"pos":[273890,273900],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[273902,273905]},{"content":"The one-based index to the list of the delete actions for the table.","pos":[273908,273976]},{"content":"The list is in AOT order.","pos":[273977,274002]},{"pos":[274009,274021],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that represents the type of the delete action of the table that is specified by the cnt parameter.","pos":[274023,274132]},{"content":"It can be one of the values in the following table.","pos":[274133,274184]},{"content":"0","pos":[274250,274251]},{"content":"None","pos":[274256,274260]},{"content":"1","pos":[274281,274282]},{"content":"Cascade","pos":[274287,274294]},{"content":"2","pos":[274312,274313]},{"content":"Restricted","pos":[274318,274328]},{"content":"3","pos":[274343,274344]},{"content":"Cascade + Restricted","pos":[274349,274369]},{"pos":[274378,274386],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the type of delete actions for a table.","pos":[274388,274472]},{"pos":[275536,275565],"content":"Method developerDocumentation","linkify":"Method developerDocumentation","nodes":[{"content":"Method developerDocumentation","pos":[0,29]}]},{"pos":[275613,275625],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[275631,275667],"content":"Method developerDocumentationLabelId","linkify":"Method developerDocumentationLabelId","nodes":[{"content":"Method developerDocumentationLabelId","pos":[0,36]}]},{"pos":[275722,275734],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[275740,275754],"content":"Method enabled","linkify":"Method enabled","nodes":[{"content":"Method enabled","pos":[0,14]}]},{"content":"Returns a value that indicates whether the table is enabled.","pos":[275756,275816]},{"pos":[275853,275865],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table is enabled; otherwise, false.","pos":[275867,275914]},{"pos":[275921,275929],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the value that indicates whether the table is enabled.","pos":[275931,276030]},{"pos":[276215,276242],"content":"Method enforceRelationRules","linkify":"Method enforceRelationRules","nodes":[{"content":"Method enforceRelationRules","pos":[0,27]}]},{"pos":[276292,276304],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[276310,276339],"content":"Method entityRelationshipType","linkify":"Method entityRelationshipType","nodes":[{"content":"Method entityRelationshipType","pos":[0,29]}]},{"pos":[276406,276418],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[276424,276441],"content":"Method extendedBy","linkify":"Method extendedBy","nodes":[{"content":"Method extendedBy","pos":[0,17]}]},{"pos":[276497,276507],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"allLevels","pos":[276509,276518]},{"pos":[276527,276539],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[276545,276559],"content":"Method extends","linkify":"Method extends","nodes":[{"content":"Method extends","pos":[0,14]}]},{"content":"Returns the table ID of a base table.","pos":[276561,276598]},{"pos":[276635,276647],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table ID of the base table.","pos":[276649,276680]},{"pos":[276686,276701],"content":"Method fieldCnt","linkify":"Method fieldCnt","nodes":[{"content":"Method fieldCnt","pos":[0,15]}]},{"content":"Returns the number of fields for a table.","pos":[276703,276744]},{"pos":[276801,276811],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableScope","pos":[276813,276823]},{"pos":[276832,276844],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of fields for the table.","pos":[276846,276881]},{"pos":[276888,276896],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the number of fields for a table.","pos":[276898,276976]},{"pos":[277142,277160],"content":"Method fieldCnt2Id","linkify":"Method fieldCnt2Id","nodes":[{"content":"Method fieldCnt2Id","pos":[0,18]}]},{"content":"Returns the field ID of the field that is specified by an index.","pos":[277162,277226]},{"pos":[277299,277309],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[277311,277314]},{"content":"tableScope","pos":[277328,277338]},{"pos":[277347,277359],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The field ID of the field that is specified by an index.","pos":[277361,277417]},{"pos":[277424,277432],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the fields of a table by index.","pos":[277434,277510]},{"pos":[277961,277978],"content":"Method fieldGroup","linkify":"Method fieldGroup","nodes":[{"content":"Method fieldGroup","pos":[0,17]}]},{"content":"Returns the name of a field group that is specified by index.","pos":[277980,278041]},{"pos":[278122,278132],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"FieldGroupNumber","pos":[278134,278150]},{"content":"tableScope","pos":[278164,278174]},{"pos":[278183,278195],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the field group that is specified by the FieldGroupNumber parameter.","pos":[278197,278277]},{"pos":[278284,278292],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the names of the field groups for a table.","pos":[278294,278381]},{"pos":[278608,278628],"content":"Method fieldGroupCnt","linkify":"Method fieldGroupCnt","nodes":[{"content":"Method fieldGroupCnt","pos":[0,20]}]},{"content":"Returns the number of field groups for the table.","pos":[278630,278679]},{"pos":[278741,278751],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableScope","pos":[278753,278763]},{"pos":[278772,278784],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of field groups for the table.","pos":[278786,278827]},{"pos":[278834,278842],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the number of field groups for a table.","pos":[278844,278928]},{"pos":[279105,279121],"content":"Method fieldName","linkify":"Method fieldName","nodes":[{"content":"Method fieldName","pos":[0,16]}]},{"content":"Returns the name of the field that is specified by field ID.","pos":[279123,279183]},{"pos":[279327,279337],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[279339,279346]},{"content":"The alias name for the table; optional.","pos":[279349,279388]},{"content":"db","pos":[279400,279402]},{"content":"The alias name for the table; optional.","pos":[279405,279444]},{"content":"arrayindex","pos":[279456,279466]},{"content":"The alias name for the table; optional.","pos":[279469,279508]},{"content":"generationMode","pos":[279520,279534]},{"content":"The alias name for the table; optional.","pos":[279537,279576]},{"content":"tableAlias","pos":[279588,279598]},{"content":"The alias name for the table; optional.","pos":[279601,279640]},{"pos":[279647,279659],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the field that is specified by its field ID.","pos":[279661,279717]},{"pos":[279724,279731],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If db is not specified, the DbBackend::Native object is used.","pos":[279733,279794]},{"pos":[279801,279809],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of field names of a table as specified by the field IDs.","pos":[279811,279909]},{"pos":[280223,280242],"content":"Method fieldName2Id","linkify":"Method fieldName2Id","nodes":[{"content":"Method fieldName2Id","pos":[0,19]}]},{"content":"Returns the field ID of a field that is specified by name.","pos":[280244,280302]},{"pos":[280352,280362],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[280364,280368]},{"content":"The name of the field for which the field ID is being retrieved.","pos":[280371,280435]},{"pos":[280442,280454],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The field ID of the field that is specified by the name parameter; 0 (zero) if name does not represent a valid field name for the table.","pos":[280456,280592]},{"pos":[280599,280607],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of a field ID by its field name.","pos":[280609,280683]},{"pos":[280980,280996],"content":"Method fieldNext","linkify":"Method fieldNext","nodes":[{"content":"Method fieldNext","pos":[0,16]}]},{"content":"Returns the value of the next field ID during a field iteration of the table.","pos":[280998,281075]},{"pos":[281154,281164],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[281166,281173]},{"content":"tableScope","pos":[281187,281197]},{"pos":[281206,281218],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the next field in the field iteration for the table; 0 (zero) if there are no more fields to iterate.","pos":[281220,281331]},{"pos":[281338,281345],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value of the fieldId parameter should evaluate to 0 (zero) to start the field iteration, and the return value should be used for subsequent calls to the iteration.","pos":[281347,281514]},{"pos":[281521,281529],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example iterates through the fields of a table.","pos":[281531,281592]},{"pos":[282117,282135],"content":"Method fieldObject","linkify":"Method fieldObject","nodes":[{"content":"Method fieldObject","pos":[0,18]}]},{"content":"Creates an instance of the DictField class for the field that is specified by field ID.","pos":[282137,282224]},{"pos":[282282,282292],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[282294,282301]},{"content":"The ID of the field to create.","pos":[282304,282334]},{"pos":[282341,282353],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictField object for the field that is specified by the fieldId parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the object could not be created.","pos":[282355,282540]},{"pos":[282547,282555],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows how to create a DictField object for the fields in a table.","pos":[282557,282644]},{"pos":[282973,282994],"content":"Method fieldOrigin2Id","linkify":"Method fieldOrigin2Id","nodes":[{"content":"Method fieldOrigin2Id","pos":[0,21]}]},{"pos":[283079,283089],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldOrigin","pos":[283091,283102]},{"content":"tableScope","pos":[283116,283126]},{"pos":[283135,283147],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[283153,283175],"content":"Method fieldSqlDefault","linkify":"Method fieldSqlDefault","nodes":[{"content":"Method fieldSqlDefault","pos":[0,22]}]},{"content":"Returns the SQL default value for the field that is specified by field ID.","pos":[283177,283251]},{"pos":[283307,283317],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[283319,283326]},{"content":"The ID of the field for which the SQL default data is being retrieved.","pos":[283329,283399]},{"pos":[283406,283418],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the SQL default value for the field that is specified by the fieldId parameter; an empty string if the field has no SQL default value or the table is not an SQL table.","pos":[283420,283612]},{"pos":[283618,283632],"content":"Method formRef","linkify":"Method formRef","nodes":[{"content":"Method formRef","pos":[0,14]}]},{"content":"Returns the name of the default form for the table.","pos":[283634,283685]},{"pos":[283744,283754],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"searchBaseTables","pos":[283756,283772]},{"pos":[283781,283793],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the default form for the table.","pos":[283795,283838]},{"pos":[283845,283852],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the AOT shows no value for the FormRef property of a table, the name of the default form for the table is considered to be the same as the name of the table.","pos":[283854,284014]},{"content":"In this case, this method does not return an empty string.","pos":[284015,284073]},{"pos":[284080,284088],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the default form for a table.","pos":[284090,284164]},{"pos":[284319,284347],"content":"Method getCountryRegionCodes","linkify":"Method getCountryRegionCodes","nodes":[{"content":"Method getCountryRegionCodes","pos":[0,28]}]},{"pos":[284400,284412],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[284418,284453],"content":"Method getCountryRegionContextField","linkify":"Method getCountryRegionContextField","nodes":[{"content":"Method getCountryRegionContextField","pos":[0,35]}]},{"pos":[284511,284523],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[284529,284569],"content":"Method getValidTimeStateValidFromFieldId","linkify":"Method getValidTimeStateValidFromFieldId","nodes":[{"content":"Method getValidTimeStateValidFromFieldId","pos":[0,40]}]},{"pos":[284632,284644],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[284650,284688],"content":"Method getValidTimeStateValidToFieldId","linkify":"Method getValidTimeStateValidToFieldId","nodes":[{"content":"Method getValidTimeStateValidToFieldId","pos":[0,38]}]},{"pos":[284749,284761],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[284767,284785],"content":"Method hasRecidIdx","linkify":"Method hasRecidIdx","nodes":[{"content":"Method hasRecidIdx","pos":[0,18]}]},{"content":"Returns a value that indicates whether a record ID index for the table is in effect.","pos":[284787,284871]},{"pos":[284912,284924],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if a record ID index is in effect for the table; otherwise, false.","pos":[284926,284997]},{"pos":[285004,285011],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The return value corresponds to whether the CreateRecIdIndex property of the table is set to Yes.","pos":[285013,285110]},{"pos":[285117,285125],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of a value that indicates whether the record ID index of the table is in effect.","pos":[285127,285249]},{"pos":[285474,285496],"content":"Method hasSurrogateKey","linkify":"Method hasSurrogateKey","nodes":[{"content":"Method hasSurrogateKey","pos":[0,22]}]},{"pos":[285541,285553],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[285559,285568],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"content":"Returns the ID of the table.","pos":[285570,285598]},{"pos":[285630,285642],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the table.","pos":[285644,285664]},{"pos":[285671,285679],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the ID of a table.","pos":[285681,285744]},{"pos":[285899,285914],"content":"Method indexCnt","linkify":"Method indexCnt","nodes":[{"content":"Method indexCnt","pos":[0,15]}]},{"content":"Returns the number of indexes for the table.","pos":[285916,285960]},{"pos":[285994,286006],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of indexes for the table.","pos":[286008,286044]},{"pos":[286051,286059],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the number of indexes for a table.","pos":[286061,286140]},{"pos":[286307,286325],"content":"Method indexCnt2Id","linkify":"Method indexCnt2Id","nodes":[{"content":"Method indexCnt2Id","pos":[0,18]}]},{"pos":[286373,286383],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[286385,286388]},{"pos":[286397,286409],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[286415,286431],"content":"Method indexName","linkify":"Method indexName","nodes":[{"content":"Method indexName","pos":[0,16]}]},{"content":"Returns the name of an index that is specified by the indexId parameter.","pos":[286433,286505]},{"pos":[286571,286581],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"indexId","pos":[286583,286590]},{"content":"A DbBackend value that specifies the type of database back end; optional.","pos":[286593,286666]},{"content":"db","pos":[286678,286680]},{"content":"A DbBackend value that specifies the type of database back end; optional.","pos":[286683,286756]},{"pos":[286763,286775],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the index that is specified by the indexId parameter.","pos":[286777,286842]},{"pos":[286849,286857],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the names of the indexes for a table.","pos":[286859,286941]},{"pos":[287161,287180],"content":"Method indexName2Id","linkify":"Method indexName2Id","nodes":[{"content":"Method indexName2Id","pos":[0,19]}]},{"content":"Returns the ID of an index that is specified by name.","pos":[287182,287235]},{"pos":[287285,287295],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[287297,287301]},{"content":"The name of the index.","pos":[287304,287326]},{"pos":[287333,287345],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the index that is specified by the name parameter; 0 (zero) if there is no index that has a name that equals the name value.","pos":[287347,287481]},{"pos":[287488,287496],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the ID of an index that is specified by name.","pos":[287498,287588]},{"pos":[287754,287770],"content":"Method indexNext","linkify":"Method indexNext","nodes":[{"content":"Method indexNext","pos":[0,16]}]},{"content":"Returns the value of the next index ID during an index iteration of the table.","pos":[287772,287850]},{"pos":[287899,287909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"id","pos":[287911,287913]},{"content":"The ID of the index for which the next index ID is being queried.","pos":[287916,287981]},{"pos":[287988,288000],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the next index in the index iteration for the table; 0 (zero) if there are no more indexes to iterate.","pos":[288002,288114]},{"pos":[288121,288128],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value of the id parameter should evaluate to 0 (zero) to start the index iteration, and the return value should be used for subsequent calls to the iteration.","pos":[288130,288292]},{"pos":[288299,288307],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example iterates through the indexes of a table.","pos":[288309,288371]},{"pos":[288896,288914],"content":"Method indexObject","linkify":"Method indexObject","nodes":[{"content":"Method indexObject","pos":[0,18]}]},{"content":"Creates an instance of the DictTable class for the index that is specified by ID.","pos":[288916,288997]},{"pos":[289055,289065],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"indexId","pos":[289067,289074]},{"content":"The ID of the index to create.","pos":[289077,289107]},{"pos":[289114,289126],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictIndex object for the index that is specified by the indexId parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the object could not be created.","pos":[289128,289313]},{"pos":[289320,289328],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows how to create a DictIndex object for the unique index of a table.","pos":[289330,289423]},{"pos":[289663,289681],"content":"Method indexUnique","linkify":"Method indexUnique","nodes":[{"content":"Method indexUnique","pos":[0,18]}]},{"content":"Returns the ID of the unique index for the table.","pos":[289683,289732]},{"pos":[289773,289785],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the unique index for the table.","pos":[289787,289828]},{"pos":[289835,289842],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When there is more than one unique index on the table, the return value is one of the following:","pos":[289844,289940]},{"content":"The index that has the RecID column.","pos":[289946,289982]},{"content":"If no index has a record ID, the index that has the shortest size, based on the total size of columns.","pos":[289987,290089]},{"content":"If multiple indexes match with regard to the shortest size, the index that was added first.","pos":[290094,290185]},{"pos":[290192,290200],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the unique index for a table.","pos":[290202,290276]},{"pos":[290516,290543],"content":"Method instanceRelationType","linkify":"Method instanceRelationType","nodes":[{"content":"Method instanceRelationType","pos":[0,27]}]},{"pos":[290593,290605],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[290611,290628],"content":"Method isAbstract","linkify":"Method isAbstract","nodes":[{"content":"Method isAbstract","pos":[0,17]}]},{"content":"Indicates whether this table is abstract.","pos":[290630,290671]},{"pos":[290711,290723],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if this table is abstract; otherwise, false.","pos":[290725,290774]},{"pos":[290780,290797],"content":"Method isBaseData","linkify":"Method isBaseData","nodes":[{"content":"Method isBaseData","pos":[0,17]}]},{"content":"Indicates whether the table content is base data.","pos":[290799,290848]},{"pos":[290888,290900],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the TableContents property in the AOT indicates that the table content is base data; otherwise, false.","pos":[290902,291012]},{"pos":[291019,291027],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of a value that indicates whether the table content is base data.","pos":[291029,291136]},{"pos":[291356,291376],"content":"Method isDefaultData","linkify":"Method isDefaultData","nodes":[{"content":"Method isDefaultData","pos":[0,20]}]},{"content":"Indicates whether the table contains default data.","pos":[291378,291428]},{"pos":[291471,291483],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table contains default data; otherwise, false.","pos":[291485,291543]},{"pos":[291550,291558],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of a value that indicates whether the table contains default data.","pos":[291560,291668]},{"pos":[291830,291850],"content":"Method isDerivedFrom","linkify":"Method isDerivedFrom","nodes":[{"content":"Method isDerivedFrom","pos":[0,20]}]},{"content":"Indicates whether one table type derives from another.","pos":[291852,291906]},{"pos":[291972,291982],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"baseTableName","pos":[291984,291997]},{"pos":[292006,292018],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if this table is derived from the table that is specified by the baseTableName parameter.","pos":[292020,292114]},{"pos":[292120,292132],"content":"Method isMap","linkify":"Method isMap","nodes":[{"content":"Method isMap","pos":[0,12]}]},{"content":"Indicates whether the table is a map.","pos":[292134,292171]},{"pos":[292206,292218],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table is a map; otherwise, false.","pos":[292220,292265]},{"pos":[292272,292280],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of a value that indicates whether the table is a map.","pos":[292282,292377]},{"pos":[292523,292535],"content":"Method isSql","linkify":"Method isSql","nodes":[{"content":"Method isSql","pos":[0,12]}]},{"content":"Indicates whether the table is an SQL table.","pos":[292537,292581]},{"pos":[292616,292628],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table is an SQL table; otherwise, false.","pos":[292630,292682]},{"pos":[292689,292697],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of a value that indicates whether the table is an SQL table.","pos":[292699,292801]},{"pos":[292952,292972],"content":"Method isSystemTable","linkify":"Method isSystemTable","nodes":[{"content":"Method isSystemTable","pos":[0,20]}]},{"content":"Indicates whether the table is a system table.","pos":[292974,293020]},{"pos":[293063,293075],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table is a system table; otherwise, false.","pos":[293077,293131]},{"pos":[293138,293146],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of a value that indicates whether the table is a system table.","pos":[293148,293252]},{"pos":[293414,293429],"content":"Method isTempDb","linkify":"Method isTempDb","nodes":[{"content":"Method isTempDb","pos":[0,15]}]},{"pos":[293467,293479],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[293485,293497],"content":"Method isTmp","linkify":"Method isTmp","nodes":[{"content":"Method isTmp","pos":[0,12]}]},{"content":"Indicates whether the table is a temporary table.","pos":[293499,293548]},{"pos":[293583,293595],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table is a temporary table; otherwise, false.","pos":[293597,293654]},{"pos":[293661,293669],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of a value that indicates whether the table is a temporary table.","pos":[293671,293778]},{"pos":[293937,293958],"content":"Method isUnionAllView","linkify":"Method isUnionAllView","nodes":[{"content":"Method isUnionAllView","pos":[0,21]}]},{"pos":[294002,294014],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[294020,294048],"content":"Method isValidTimeStateTable","linkify":"Method isValidTimeStateTable","nodes":[{"content":"Method isValidTimeStateTable","pos":[0,28]}]},{"pos":[294099,294111],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[294117,294130],"content":"Method isView","linkify":"Method isView","nodes":[{"content":"Method isView","pos":[0,13]}]},{"content":"Indicates whether the table is a view.","pos":[294132,294170]},{"pos":[294206,294218],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table is a view; otherwise, false.","pos":[294220,294266]},{"pos":[294273,294281],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of a value that indicates whether the table is a view.","pos":[294283,294379]},{"pos":[294526,294538],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Returns the label text for the table.","pos":[294540,294577]},{"pos":[294608,294620],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label text for the table; an empty string if there is no label text for the table.","pos":[294622,294708]},{"pos":[294715,294723],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the label text for a table.","pos":[294725,294797]},{"pos":[294945,294964],"content":"Method labelDefined","linkify":"Method labelDefined","nodes":[{"content":"Method labelDefined","pos":[0,19]}]},{"content":"Returns the value of the label property for the table.","pos":[294966,295020]},{"pos":[295058,295070],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the label property for the table; an empty string if there is no label text for the table.","pos":[295072,295175]},{"pos":[295181,295199],"content":"Method listPageRef","linkify":"Method listPageRef","nodes":[{"content":"Method listPageRef","pos":[0,18]}]},{"pos":[295262,295272],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"searchBaseTables","pos":[295274,295290]},{"pos":[295299,295311],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[295317,295334],"content":"Method makeRecord","linkify":"Method makeRecord","nodes":[{"content":"Method makeRecord","pos":[0,17]}]},{"content":"Creates a blank record for the table.","pos":[295336,295373]},{"pos":[295412,295424],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A Common value if the record was successfully created; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the record could not be created.","pos":[295426,295589]},{"pos":[295596,295603],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The Common value that is returned can be used in a call to the DictTable.callObject Method method.","pos":[295605,295703]},{"pos":[295709,295729],"content":"Method maxAccessMode","linkify":"Method maxAccessMode","nodes":[{"content":"Method maxAccessMode","pos":[0,20]}]},{"content":"Returns the value of the MaxAccessMode property for a table, as set in the AOT.","pos":[295731,295810]},{"pos":[295856,295868],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A AccessType value that represents the maximum access mode for the table.","pos":[295870,295943]},{"pos":[295950,295958],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the maximum access mode for a table.","pos":[295960,296041]},{"pos":[296208,296219],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Retrieves the name of the table.","pos":[296221,296253]},{"pos":[296319,296329],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"db","pos":[296331,296333]},{"content":"A Boolean value that indicates whether a pseudo name is returned; optional.","pos":[296336,296411]},{"content":"pseudoname","pos":[296423,296433]},{"content":"A Boolean value that indicates whether a pseudo name is returned; optional.","pos":[296436,296511]},{"pos":[296518,296530],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the table.","pos":[296532,296554]},{"pos":[296561,296568],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the table name is longer than 30 characters, the native name and SQL name of the table do not match.","pos":[296570,296673]},{"pos":[296680,296688],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the name of a table.","pos":[296690,296755]},{"pos":[296924,296943],"content":"Method objectMethod","linkify":"Method objectMethod","nodes":[{"content":"Method objectMethod","pos":[0,19]}]},{"content":"Returns the name of an instance method that is specified by index.","pos":[296945,297011]},{"pos":[297090,297100],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[297102,297114]},{"content":"tableScope","pos":[297128,297138]},{"pos":[297147,297159],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the instance method that is specified by the methodNumber parameter; an empty string if the methodNumber value is not a valid instance method index.","pos":[297161,297321]},{"pos":[297328,297336],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the name of each instance method in a table.","pos":[297338,297427]},{"pos":[297656,297678],"content":"Method objectMethodCnt","linkify":"Method objectMethodCnt","nodes":[{"content":"Method objectMethodCnt","pos":[0,22]}]},{"content":"Returns the number of instance methods for the table.","pos":[297680,297733]},{"pos":[297797,297807],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableScope","pos":[297809,297819]},{"pos":[297828,297840],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of instance methods for the table.","pos":[297842,297887]},{"pos":[297894,297902],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the number of instance methods for a table.","pos":[297904,297992]},{"pos":[298175,298200],"content":"Method objectMethodObject","linkify":"Method objectMethodObject","nodes":[{"content":"Method objectMethodObject","pos":[0,25]}]},{"content":"Returns an instance of the MethodInfo class for an object method that is specified by index.","pos":[298202,298294]},{"pos":[298386,298396],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[298398,298410]},{"content":"tableScope","pos":[298424,298434]},{"pos":[298443,298455],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An instance of the MethodInfo class for the object method that is specified by the methodNumber parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the instance could not be created.","pos":[298457,298674]},{"pos":[298681,298689],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the object methods for a table.","pos":[298691,298767]},{"pos":[299105,299121],"content":"Method mapObject","linkify":"Method mapObject","nodes":[{"content":"Method mapObject","pos":[0,16]}]},{"content":"Creates an instance of the <ph id=\"ph1\">\\[</ph>T: DictTableMap<ph id=\"ph2\">\\]</ph> class for a mapping that is specified by index.","pos":[299123,299217],"source":"Creates an instance of the \\[T: DictTableMap\\] class for a mapping that is specified by index."},{"pos":[299277,299287],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[299289,299301]},{"pos":[299310,299322],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictTableMap object for the field that is specified by the <ph id=\"ph1\">\\_</ph>cnt parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the object could not be created.","pos":[299324,299510],"source":"A DictTableMap object for the field that is specified by the \\_cnt parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the object could not be created."},{"pos":[299516,299529],"content":"Method mapCnt","linkify":"Method mapCnt","nodes":[{"content":"Method mapCnt","pos":[0,13]}]},{"content":"Returns the count of available table mappings for the map that is specified by this DictTable instance.","pos":[299531,299634]},{"pos":[299666,299678],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The count.","pos":[299680,299690]},{"pos":[299696,299713],"content":"Method occEnabled","linkify":"Method occEnabled","nodes":[{"content":"Method occEnabled","pos":[0,17]}]},{"content":"Indicates whether the optimistic concurrency mode has been enabled for a table.","pos":[299715,299794]},{"pos":[299834,299846],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the optimistic concurrency mode is enabled; otherwise, false.","pos":[299848,299917]},{"pos":[299924,299931],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When this mode is enabled, data is not locked from future modification when it is fetched from the database.","pos":[299933,300041]},{"content":"Data is locked only when the actual update is performed.","pos":[300042,300098]},{"pos":[300105,300113],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows a call to the occEnabled method.","pos":[300115,300175]},{"pos":[300371,300390],"content":"Method primaryIndex","linkify":"Method primaryIndex","nodes":[{"content":"Method primaryIndex","pos":[0,19]}]},{"content":"Returns the ID of the primary index for the table.","pos":[300392,300442]},{"pos":[300508,300518],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"asDefinedInAOT","pos":[300520,300534]},{"content":"A Boolean value that indicates whether the primary index to retrieve is defined in the AOT.","pos":[300537,300628]},{"content":"A value of true returns the primary index as defined in the AOT.","pos":[300629,300693]},{"content":"A value of false returns the primary index as defined in the SQL table; optional.","pos":[300694,300775]},{"pos":[300782,300794],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the primary index for the table; 0 (zero) if there is no primary index for the table.","pos":[300796,300891]},{"pos":[300898,300906],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the primary index for a table.","pos":[300908,300983]},{"pos":[301280,301302],"content":"Method primaryKeyField","linkify":"Method primaryKeyField","nodes":[{"content":"Method primaryKeyField","pos":[0,22]}]},{"content":"Returns the ID of the field that is used for the primary key of the table.","pos":[301304,301378]},{"pos":[301423,301435],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the field that is used for the primary key of the table; 0 (zero) if no single field serves as the primary key of the table.","pos":[301437,301571]},{"pos":[301578,301586],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the field ID of the primary key for the table.","pos":[301588,301679]},{"pos":[302092,302107],"content":"Method relation","linkify":"Method relation","nodes":[{"content":"Method relation","pos":[0,15]}]},{"content":"Returns the name of a relation that is specified by index.","pos":[302109,302167]},{"pos":[302244,302254],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"RelationNumber","pos":[302256,302270]},{"content":"tableScope","pos":[302284,302294]},{"pos":[302303,302315],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the relation that is specified by the RelationNumber parameter; an empty string if the RelationNumber value is not a valid relation index.","pos":[302317,302467]},{"pos":[302474,302482],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the name for each relation in a table.","pos":[302484,302567]},{"pos":[302788,302806],"content":"Method relationCnt","linkify":"Method relationCnt","nodes":[{"content":"Method relationCnt","pos":[0,18]}]},{"content":"Returns the number of relations for the table.","pos":[302808,302854]},{"pos":[302914,302924],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableScope","pos":[302926,302936]},{"pos":[302945,302957],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of relations for the table.","pos":[302959,302997]},{"pos":[303004,303012],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the number of relations for a table.","pos":[303014,303095]},{"pos":[303267,303288],"content":"Method replacementKey","linkify":"Method replacementKey","nodes":[{"content":"Method replacementKey","pos":[0,21]}]},{"pos":[303332,303344],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[303350,303366],"content":"Method reportRef","linkify":"Method reportRef","nodes":[{"content":"Method reportRef","pos":[0,16]}]},{"content":"Returns the name of the default report for the table.","pos":[303368,303421]},{"pos":[303456,303468],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the default report for the table; an empty string if there is no default report for the table.","pos":[303470,303576]},{"pos":[303583,303591],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following shows the retrieval of the name of the default report for a table.","pos":[303593,303673]},{"pos":[303927,303940],"content":"Method rights","linkify":"Method rights","nodes":[{"content":"Method rights","pos":[0,13]}]},{"content":"Returns the access rights of the current user that is specified for the table.","pos":[303942,304020]},{"pos":[304082,304092],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ignoreContext","pos":[304094,304107]},{"pos":[304116,304128],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The access rights of the current user that is specified for the table.","pos":[304130,304200]},{"content":"The return value can be one of the values in the AccessType system enumeration.","pos":[304201,304280]},{"pos":[304286,304306],"content":"Method securityKeyId","linkify":"Method securityKeyId","nodes":[{"content":"Method securityKeyId","pos":[0,20]}]},{"content":"Returns the ID of the security key for the table.","pos":[304308,304357]},{"pos":[304406,304418],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the security key for the table; 0 (zero) if there is no security key for the table.","pos":[304420,304513]},{"pos":[304520,304528],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the security key ID for a table.","pos":[304530,304607]},{"pos":[304941,304961],"content":"Method singularLabel","linkify":"Method singularLabel","nodes":[{"content":"Method singularLabel","pos":[0,20]}]},{"pos":[305026,305036],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"labelTranslation","pos":[305038,305054]},{"pos":[305063,305075],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[305081,305100],"content":"Method staticMethod","linkify":"Method staticMethod","nodes":[{"content":"Method staticMethod","pos":[0,19]}]},{"content":"Returns the name of a static method that is specified by index.","pos":[305102,305165]},{"pos":[305219,305229],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[305231,305243]},{"content":"The one-based index to the list of static methods for the table, in AOT order.","pos":[305246,305324]},{"pos":[305331,305343],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the static method that is specified by the methodNumber parameter; an empty string if the methodNumber value is not a valid static method index.","pos":[305345,305501]},{"pos":[305508,305516],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the name of each static method in a table.","pos":[305518,305605]},{"pos":[305834,305856],"content":"Method staticMethodCnt","linkify":"Method staticMethodCnt","nodes":[{"content":"Method staticMethodCnt","pos":[0,22]}]},{"content":"Returns the number of static methods for the table.","pos":[305858,305909]},{"pos":[305950,305962],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of static methods for the table.","pos":[305964,306007]},{"pos":[306014,306022],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the number of static methods for a table.","pos":[306024,306110]},{"pos":[306292,306317],"content":"Method staticMethodObject","linkify":"Method staticMethodObject","nodes":[{"content":"Method staticMethodObject","pos":[0,25]}]},{"content":"Returns an instance of the MethodInfo class for a static method that is specified by index.","pos":[306319,306410]},{"pos":[306477,306487],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"methodNumber","pos":[306489,306501]},{"content":"The one-based index to the static methods for the table, in AOT order.","pos":[306504,306574]},{"pos":[306581,306593],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An instance of the MethodInfo class for the static method that is specified by the methodNumber parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the instance could not be created.","pos":[306595,306812]},{"pos":[306819,306827],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the static methods for a table.","pos":[306829,306905]},{"pos":[307243,307268],"content":"Method supportInheritance","linkify":"Method supportInheritance","nodes":[{"content":"Method supportInheritance","pos":[0,25]}]},{"pos":[307316,307328],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[307334,307351],"content":"Method tableGroup","linkify":"Method tableGroup","nodes":[{"content":"Method tableGroup","pos":[0,17]}]},{"content":"Returns the table group for a table.","pos":[307353,307389]},{"pos":[307432,307444],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A TableGroup value that represents the table group of the table.","pos":[307446,307510]},{"pos":[307517,307524],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The return value corresponds to the TableGroup property of the table in the AOT.","pos":[307526,307606]},{"pos":[307613,307621],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the table group of the table.","pos":[307623,307697]},{"pos":[307853,307869],"content":"Method tableType","linkify":"Method tableType","nodes":[{"content":"Method tableType","pos":[0,16]}]},{"content":"Indicates the type of the table.","pos":[307871,307903]},{"pos":[307944,307956],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The error state, if there is any error state.","pos":[307958,308003]},{"pos":[308009,308027],"content":"Method titleField1","linkify":"Method titleField1","nodes":[{"content":"Method titleField1","pos":[0,18]}]},{"content":"Returns the ID of the field that represents the titleField1 property of the table.","pos":[308029,308111]},{"pos":[308206,308216],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"includeBaseTables","pos":[308218,308235]},{"content":"extendedFieldId","pos":[308249,308264]},{"pos":[308273,308285],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the field that represents the titleField1 property of the table.","pos":[308287,308361]},{"pos":[308368,308375],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"According to best practice guidelines, the titleField1 property represents the key field for the records in the table.","pos":[308377,308495]},{"pos":[308502,308510],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the ID of the field that is used for the titleField1 property of the table.","pos":[308512,308632]},{"pos":[308897,308915],"content":"Method titleField2","linkify":"Method titleField2","nodes":[{"content":"Method titleField2","pos":[0,18]}]},{"content":"Returns the ID of the field that represents the titleField2 property of the table.","pos":[308917,308999]},{"pos":[309094,309104],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"includeBaseTables","pos":[309106,309123]},{"content":"extendedFieldId","pos":[309137,309152]},{"pos":[309161,309173],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the field that represents the titleField2 property of the table.","pos":[309175,309249]},{"pos":[309256,309263],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"According to best practice guidelines, the titleField2 property represents the description of the records of the table.","pos":[309265,309384]},{"pos":[309391,309399],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows the retrieval of the ID of the field that is used for the titleField2 property of the table.","pos":[309401,309521]},{"pos":[309774,309798],"content":"Method validRelationship","linkify":"Method validRelationship","nodes":[{"content":"Method validRelationship","pos":[0,24]}]},{"pos":[309845,309857],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[309863,309877],"content":"Method visible","linkify":"Method visible","nodes":[{"content":"Method visible","pos":[0,14]}]},{"content":"Determines whether the table is visible.","pos":[309879,309919]},{"pos":[309956,309968],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the table is is visible; otherwise, false.","pos":[309970,310020]},{"pos":[310026,310042],"content":"Method construct","linkify":"Method construct","nodes":[{"content":"Method construct","pos":[0,16]}]},{"pos":[310103,310113],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableName","pos":[310115,310124]},{"pos":[310133,310145],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[310151,310186],"content":"Method getRelationTypeFromTableName","linkify":"Method getRelationTypeFromTableName","nodes":[{"content":"Method getRelationTypeFromTableName","pos":[0,35]}]},{"pos":[310268,310278],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableName","pos":[310280,310289]},{"pos":[310298,310310],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[310316,310351],"content":"Method getTableNameFromRelationType","linkify":"Method getTableNameFromRelationType","nodes":[{"content":"Method getTableNameFromRelationType","pos":[0,35]}]},{"pos":[310436,310446],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"relationType","pos":[310448,310460]},{"pos":[310469,310481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[310487,310506],"content":"Method createRecord","linkify":"Method createRecord","nodes":[{"content":"Method createRecord","pos":[0,19]}]},{"pos":[310567,310577],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableName","pos":[310579,310588]},{"pos":[310597,310609],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[310615,310636],"content":"Method reloadSecurity","linkify":"Method reloadSecurity","nodes":[{"content":"Method reloadSecurity","pos":[0,21]}]},{"content":"Reloads the feature key system for the table.","pos":[310638,310683]},{"pos":[310724,310732],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example reloads the feature key system for a table.","pos":[310734,310799]},{"pos":[310830,310840],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[310842,310889]},{"pos":[310934,310944],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[310946,310953]},{"content":"The ID of the table that is used to create the instance of the DictTable class.","pos":[310956,311035]},{"pos":[311042,311050],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows how to create an instance of the DictTable class.","pos":[311052,311129]},{"pos":[311259,311273],"content":"Method reindex","linkify":"Method reindex","nodes":[{"content":"Method reindex","pos":[0,14]}]},{"content":"Performs a reindex of the table.","pos":[311275,311307]},{"pos":[311341,311348],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Do not use this method to reindex SQL tables; instead, use the SqlDataDictionary::tableReindex method.","pos":[311350,311452]},{"content":"Additionally, the DictTable::reindex method is not supported when it is run on the client.","pos":[311453,311543]},{"pos":[311548,311566],"content":"Class DictTableMap","linkify":"Class DictTableMap","nodes":[{"content":"Class DictTableMap","pos":[0,18]}]},{"content":"The DictTableMap class provides information about a table mapping.","pos":[311606,311672]},{"pos":[311678,311685],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[311691,311699],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[311705,311712],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[311716,311722]},{"content":"Description","pos":[311757,311768]},{"content":"public int table()","pos":[311932,311950]},{"content":"Retrieves the table that the mapping references.","pos":[311973,312021]},{"content":"public int fieldCnt()","pos":[312040,312061]},{"content":"Retrieves the count of fields in the table mapping.","pos":[312081,312132]},{"content":"public int fieldCnt2FieldTo(int cnt)","pos":[312148,312184]},{"content":"Retrieves the table field that is referenced by the map field.","pos":[312189,312251]},{"content":"public int fieldCnt2FieldFrom(int cnt)","pos":[312256,312294]},{"content":"Retrieves the map field that is referencing a table field.","pos":[312297,312355]},{"pos":[312367,312379],"content":"Method table","linkify":"Method table","nodes":[{"content":"Method table","pos":[0,12]}]},{"content":"Retrieves the table that the mapping references.","pos":[312381,312429]},{"pos":[312460,312472],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table ID.","pos":[312474,312487]},{"pos":[312494,312501],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to get to the table mappings, instead of traversing to the tree node.","pos":[312503,312588]},{"pos":[312594,312609],"content":"Method fieldCnt","linkify":"Method fieldCnt","nodes":[{"content":"Method fieldCnt","pos":[0,15]}]},{"content":"Retrieves the count of fields in the table mapping.","pos":[312611,312662]},{"pos":[312696,312708],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The count.","pos":[312710,312720]},{"pos":[312727,312734],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to get to the table mappings, instead of traversing to the tree node.","pos":[312736,312821]},{"pos":[312827,312850],"content":"Method fieldCnt2FieldTo","linkify":"Method fieldCnt2FieldTo","nodes":[{"content":"Method fieldCnt2FieldTo","pos":[0,23]}]},{"content":"Retrieves the table field that is referenced by the map field.","pos":[312852,312914]},{"pos":[312963,312973],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[312975,312978]},{"pos":[312987,312999],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table field ID.","pos":[313001,313020]},{"pos":[313027,313034],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to get to the table mappings, instead of traversing to the tree node.","pos":[313036,313121]},{"pos":[313127,313152],"content":"Method fieldCnt2FieldFrom","linkify":"Method fieldCnt2FieldFrom","nodes":[{"content":"Method fieldCnt2FieldFrom","pos":[0,25]}]},{"content":"Retrieves the map field that is referencing a table field.","pos":[313154,313212]},{"pos":[313263,313273],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[313275,313278]},{"pos":[313287,313299],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The map field ID.","pos":[313301,313318]},{"pos":[313325,313332],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to get to the table mappings, instead of traversing to the tree node.","pos":[313334,313419]},{"pos":[313424,313438],"content":"Class DictType","linkify":"Class DictType","nodes":[{"content":"Class DictType","pos":[0,14]}]},{"content":"The DictType class manages extended data types.","pos":[313474,313521]},{"pos":[313527,313534],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The SysDictType class extends DictType.","pos":[313536,313575]},{"pos":[313581,313589],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[313595,313602],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[313606,313612]},{"content":"Description","pos":[313678,313689]},{"content":"public Alignment alignment()","pos":[314096,314124]},{"content":"Retrieves the alignment for the extended data type.","pos":[314168,314219]},{"content":"public int arraySize()","pos":[314341,314363]},{"content":"Provides the array size for an extended data type.","pos":[314413,314463]},{"content":"public Types baseType()","pos":[314586,314609]},{"content":"Provides the data type on which an extended data type is based, by using the Types enumeration.","pos":[314658,314753]},{"content":"public ConfigurationKeyId configurationKeyId()","pos":[314831,314877]},{"content":"Returns the ID of the configuration key for the extended data type.","pos":[314903,314970]},{"content":"public int displayHeight(<ph id=\"ph1\">\\[</ph>boolean useDefaults<ph id=\"ph2\">\\]</ph>)","pos":[315076,315125],"source":"public int displayHeight(\\[boolean useDefaults\\])"},{"content":"Retrieves the display height for the type.","pos":[315148,315190]},{"content":"public int displayLength(<ph id=\"ph1\">\\[</ph>boolean useDefaults<ph id=\"ph2\">\\]</ph>)","pos":[315321,315370],"source":"public int displayLength(\\[boolean useDefaults\\])"},{"content":"public EnumId enumId()","pos":[315566,315588]},{"content":"Provides the ID for the enumeration type on which an extended data type is based.","pos":[315638,315719]},{"content":"public ExtendedTypeId extend()","pos":[315811,315841]},{"content":"Provides the ID for the extended data type that an extended data type extends.","pos":[315883,315961]},{"content":"public List extendedBy(<ph id=\"ph1\">\\[</ph>boolean allLevels<ph id=\"ph2\">\\]</ph>)","pos":[316056,316101],"source":"public List extendedBy(\\[boolean allLevels\\])"},{"content":"Retrieves a list of type IDs for extended data types (EDTs) that are extended by the current EDT.","pos":[316128,316225]},{"content":"public str formHelp()","pos":[316301,316322]},{"content":"public str getControlClass()","pos":[316546,316574]},{"content":"public container getCountryRegionCodes()","pos":[316791,316831]},{"content":"Retrieves a container that holds the country/region codes that are defined.","pos":[316863,316938]},{"content":"public DictRelation getLookupRelation(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[317036,317093],"source":"public DictRelation getLookupRelation(\\[int arrayIndex\\])"},{"content":"public AnyType getValue(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[317281,317324],"source":"public AnyType getValue(\\[int arrayIndex\\])"},{"content":"public str help(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean useInterfaceLanguage<ph id=\"ph4\">\\]</ph>)","pos":[317526,317595],"source":"public str help(\\[int arrayIndex\\], \\[boolean useInterfaceLanguage\\])"},{"content":"Provides the Help text that is displayed for an extended data type or a specified array element, or for the extended data type that an extended data type extends.","pos":[317598,317760]},{"content":"public str helpDefined(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[317771,317813],"source":"public str helpDefined(\\[int arrayIndex\\])"},{"content":"Returns the value of the help property for the extended data type.","pos":[317843,317909]},{"content":"public ExtendedTypeId id()","pos":[318016,318042]},{"content":"Provides the ID for an extended data type.","pos":[318088,318130]},{"content":"public boolean isExtendedFrom(str baseEDTName)","pos":[318261,318307]},{"content":"Determines whether the extended data type extends from the base extended data type that is provided.","pos":[318333,318433]},{"content":"public int isRadioStyle()","pos":[318506,318531]},{"content":"Indicates whether the style of an extended data type that is based on an Enum data type is a radio button or a combo box.","pos":[318578,318699]},{"content":"public str label(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[318751,318787],"source":"public str label(\\[int arrayIndex\\])"},{"content":"Provides the label that is displayed for an extended data type or a specified array element, or the label for the extended data type that an extended data type extends.","pos":[318823,318991]},{"content":"public str labelDefined(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[318996,319039],"source":"public str labelDefined(\\[int arrayIndex\\])"},{"content":"Returns the value of the label property for the extended data type.","pos":[319068,319135]},{"content":"public str lookupTable(<ph id=\"ph1\">\\[</ph>boolean useInheritedMetaData<ph id=\"ph2\">\\]</ph>)","pos":[319241,319297],"source":"public str lookupTable(\\[boolean useInheritedMetaData\\])"},{"content":"public str name()","pos":[319486,319503]},{"content":"Provides the name of an extended data type.","pos":[319558,319601]},{"content":"public DictRelation relationObject(<ph id=\"ph1\">\\[</ph>int arrayIndex<ph id=\"ph2\">\\]</ph>)","pos":[319731,319785],"source":"public DictRelation relationObject(\\[int arrayIndex\\])"},{"content":"Provides information about relations that are defined for an extended data type or a specified array element by returning a DictRelation object.","pos":[319803,319947]},{"content":"public int stringLen()","pos":[319976,319998]},{"content":"Provides the string length for an extended data type that is based on the string data type.","pos":[320048,320139]},{"content":"public boolean stringRight()","pos":[320221,320249]},{"content":"Indicates whether the string is right-justified for an extended data type that is based on the string data type.","pos":[320293,320405]},{"content":"::public static Alignment getTypeAlignment(Types type)","pos":[320466,320520]},{"content":"::public static int getTypeDisplayHeight(Types type)","pos":[320711,320763]},{"content":"::public static int getTypeDisplayLength(Types type)","pos":[320956,321008]},{"content":"Retrieves the display length for built-in types.","pos":[321028,321076]},{"content":"public void setValue(AnyType Value, <ph id=\"ph1\">\\[</ph>int arrayEntry<ph id=\"ph2\">\\]</ph>)","pos":[321201,321256],"source":"public void setValue(AnyType Value, \\[int arrayEntry\\])"},{"content":"public void new(ExtendedTypeId typeId)","pos":[321446,321484]},{"content":"Initializes a new instance of the Object class.","pos":[321518,321565]},{"content":"public void setStringLen(int stringLen)","pos":[321691,321730]},{"content":"Sets the string length for an extended data type that is based on the string data type.","pos":[321763,321850]},{"content":"public void setStringRight(boolean right)","pos":[321936,321977]},{"content":"Indicates the string justification for an extended data type that is based on a String data type.","pos":[322008,322105]},{"pos":[322184,322200],"content":"Method alignment","linkify":"Method alignment","nodes":[{"content":"Method alignment","pos":[0,16]}]},{"content":"Retrieves the alignment for the extended data type.","pos":[322202,322253]},{"pos":[322294,322306],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The alignment for the extended data type.","pos":[322308,322349]},{"pos":[322355,322371],"content":"Method arraySize","linkify":"Method arraySize","nodes":[{"content":"Method arraySize","pos":[0,16]}]},{"content":"Provides the array size for an extended data type.","pos":[322373,322423]},{"pos":[322458,322470],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer value for the array size; 1 if an extended data type does not have array elements.","pos":[322472,322565]},{"pos":[322572,322580],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"In the following example, the arraySize method returns the array size for the XMLMapDimension extended data type.","pos":[322582,322695]},{"pos":[322946,322961],"content":"Method baseType","linkify":"Method baseType","nodes":[{"content":"Method baseType","pos":[0,15]}]},{"content":"Provides the data type on which an extended data type is based, by using the Types enumeration.","pos":[322963,323058]},{"pos":[323094,323106],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A Types enumeration value that indicates the data type.","pos":[323108,323163]},{"pos":[323170,323177],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can convert the return value to a string by using the Global::Enum2Value method.","pos":[323179,323263]},{"pos":[323269,323294],"content":"Method configurationKeyId","linkify":"Method configurationKeyId","nodes":[{"content":"Method configurationKeyId","pos":[0,25]}]},{"content":"Returns the ID of the configuration key for the extended data type.","pos":[323296,323363]},{"pos":[323422,323434],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the configuration key for the extended data type.","pos":[323436,323495]},{"pos":[323501,323521],"content":"Method displayHeight","linkify":"Method displayHeight","nodes":[{"content":"Method displayHeight","pos":[0,20]}]},{"content":"Retrieves the display height for the type.","pos":[323523,323565]},{"pos":[323625,323635],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"useDefaults","pos":[323637,323648]},{"content":"A Boolean value that indicates whether to use the default values if the type does not have a length.","pos":[323651,323751]},{"pos":[323758,323770],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The display height for the type.","pos":[323772,323804]},{"pos":[323810,323830],"content":"Method displayLength","linkify":"Method displayLength","nodes":[{"content":"Method displayLength","pos":[0,20]}]},{"pos":[323890,323900],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"useDefaults","pos":[323902,323913]},{"pos":[323922,323934],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[323940,323953],"content":"Method enumId","linkify":"Method enumId","nodes":[{"content":"Method enumId","pos":[0,13]}]},{"content":"Provides the ID for the enumeration type on which an extended data type is based.","pos":[323955,324036]},{"pos":[324071,324083],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the enumeration type on which the extended data type is based; 0 (zero) if the extended data type is not based on an enumeration.","pos":[324085,324224]},{"pos":[324231,324238],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use the baseType method to determine what the data type of an extended data type is.","pos":[324240,324332]},{"pos":[324338,324351],"content":"Method extend","linkify":"Method extend","nodes":[{"content":"Method extend","pos":[0,13]}]},{"content":"Provides the ID for the extended data type that an extended data type extends.","pos":[324353,324431]},{"pos":[324474,324486],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID for the extended data type than an extended data type extends; 0 (zero) if the extended data type does not extend an extended data type.","pos":[324488,324631]},{"pos":[324638,324646],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"In the following example, the extend method returns the ID for the extended data type that the ABCPercentA extended data type extends.","pos":[324648,324782]},{"pos":[324968,324985],"content":"Method extendedBy","linkify":"Method extendedBy","nodes":[{"content":"Method extendedBy","pos":[0,17]}]},{"content":"Retrieves a list of type IDs for extended data types (EDTs) that are extended by the current EDT.","pos":[324987,325084]},{"pos":[325140,325150],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"allLevels","pos":[325152,325161]},{"pos":[325170,325182],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of type IDs for EDTs that are extended by the current EDT.","pos":[325184,325249]},{"pos":[325255,325270],"content":"Method formHelp","linkify":"Method formHelp","nodes":[{"content":"Method formHelp","pos":[0,15]}]},{"pos":[325304,325316],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[325322,325344],"content":"Method getControlClass","linkify":"Method getControlClass","nodes":[{"content":"Method getControlClass","pos":[0,22]}]},{"pos":[325385,325397],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[325403,325431],"content":"Method getCountryRegionCodes","linkify":"Method getCountryRegionCodes","nodes":[{"content":"Method getCountryRegionCodes","pos":[0,28]}]},{"content":"Retrieves a container that holds the country/region codes that are defined.","pos":[325433,325508]},{"pos":[325561,325573],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that holds country/region codes.","pos":[325575,325619]},{"pos":[325625,325649],"content":"Method getLookupRelation","linkify":"Method getLookupRelation","nodes":[{"content":"Method getLookupRelation","pos":[0,24]}]},{"pos":[325717,325727],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[325729,325739]},{"pos":[325748,325760],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[325766,325781],"content":"Method getValue","linkify":"Method getValue","nodes":[{"content":"Method getValue","pos":[0,15]}]},{"pos":[325835,325845],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[325847,325857]},{"pos":[325866,325878],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[325884,325895],"content":"Method help","linkify":"Method help","nodes":[{"content":"Method help","pos":[0,11]}]},{"content":"Provides the Help text that is displayed for an extended data type or a specified array element, or for the extended data type that an extended data type extends.","pos":[325897,326059]},{"pos":[326137,326147],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[326149,326159]},{"content":"A Boolean value that indicates whether the user interface language is used for the Help text; optional.","pos":[326162,326265]},{"content":"useInterfaceLanguage","pos":[326277,326297]},{"content":"A Boolean value that indicates whether the user interface language is used for the Help text; optional.","pos":[326300,326403]},{"pos":[326410,326422],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string value for the Help text that is displayed for the extended data type, or for an array element if the arrayEntry value is provided.","pos":[326424,326563]},{"content":"The Help text corresponds to the Help Text property for an extended data type or array element in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[326564,326718]},{"content":"When an extended data type does not have Help text, the method returns the Help text that is defined for the extended data type that the extended data type extends.","pos":[326719,326883]},{"pos":[326889,326907],"content":"Method helpDefined","linkify":"Method helpDefined","nodes":[{"content":"Method helpDefined","pos":[0,18]}]},{"content":"Returns the value of the help property for the extended data type.","pos":[326909,326975]},{"pos":[327028,327038],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[327040,327050]},{"pos":[327059,327071],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the help property for the extended data type, or for an array element if the arrayEntry value is provided.","pos":[327073,327192]},{"content":"The Help text corresponds to the Help Text property for an extended data type or array element in the AOT.","pos":[327193,327299]},{"pos":[327305,327314],"content":"Method id","linkify":"Method id","nodes":[{"content":"Method id","pos":[0,9]}]},{"content":"Provides the ID for an extended data type.","pos":[327316,327358]},{"pos":[327397,327409],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A data type value that indicates the ID for an extended data type.","pos":[327411,327477]},{"pos":[327483,327504],"content":"Method isExtendedFrom","linkify":"Method isExtendedFrom","nodes":[{"content":"Method isExtendedFrom","pos":[0,21]}]},{"content":"Determines whether the extended data type extends from the base extended data type that is provided.","pos":[327506,327606]},{"pos":[327665,327675],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"baseEDTName","pos":[327677,327688]},{"content":"The name of the extended data type.","pos":[327691,327726]},{"pos":[327733,327745],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the extended data type extends from the base extended data type that is provided; otherwise, false.","pos":[327747,327854]},{"pos":[327860,327879],"content":"Method isRadioStyle","linkify":"Method isRadioStyle","nodes":[{"content":"Method isRadioStyle","pos":[0,19]}]},{"content":"Indicates whether the style of an extended data type that is based on an Enum data type is a radio button or a combo box.","pos":[327881,328002]},{"pos":[328040,328052],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"1 if the style is a radio button; otherwise, 0 (zero).","pos":[328054,328108]},{"pos":[328114,328126],"content":"Method label","linkify":"Method label","nodes":[{"content":"Method label","pos":[0,12]}]},{"content":"Provides the label that is displayed for an extended data type or a specified array element, or the label for the extended data type that an extended data type extends.","pos":[328128,328296]},{"pos":[328343,328353],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[328355,328365]},{"pos":[328374,328386],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label that is displayed for an extended data type, or the label for an array element if the arrayEntry value is provided.","pos":[328388,328513]},{"content":"When an extended data type does not have a label, this method returns the label defined for the extended data type that an extended data type extends.","pos":[328514,328664]},{"pos":[328671,328678],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The label that is returned corresponds to the Label property for an extended data type or array element in the AOT.","pos":[328680,328795]},{"pos":[328801,328820],"content":"Method labelDefined","linkify":"Method labelDefined","nodes":[{"content":"Method labelDefined","pos":[0,19]}]},{"content":"Returns the value of the label property for the extended data type.","pos":[328822,328889]},{"pos":[328943,328953],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[328955,328965]},{"pos":[328974,328986],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the label property for the extended data type, or for an array element if the arrayEntry value is provided.","pos":[328988,329108]},{"pos":[329115,329122],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The return value corresponds to the Label property for an extended data type or array element in the AOT.","pos":[329124,329229]},{"pos":[329235,329253],"content":"Method lookupTable","linkify":"Method lookupTable","nodes":[{"content":"Method lookupTable","pos":[0,18]}]},{"pos":[329320,329330],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"useInheritedMetaData","pos":[329332,329352]},{"pos":[329361,329373],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[329379,329390],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Provides the name of an extended data type.","pos":[329392,329435]},{"pos":[329465,329477],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string value for the name.","pos":[329479,329507]},{"content":"The name corresponds to the Name property for an extended data type in the AOT.","pos":[329508,329587]},{"pos":[329593,329614],"content":"Method relationObject","linkify":"Method relationObject","nodes":[{"content":"Method relationObject","pos":[0,21]}]},{"content":"Provides information about relations that are defined for an extended data type or a specified array element by returning a DictRelation object.","pos":[329616,329760]},{"pos":[329825,329835],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"arrayIndex","pos":[329837,329847]},{"pos":[329856,329868],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A DictRelation object that provides information about relations.","pos":[329870,329934]},{"pos":[329941,329948],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If no relations are defined for the extended data type and array elements, subsequent use of the DictRelation instance will cause a run-time error.","pos":[329950,330097]},{"pos":[330104,330112],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"In the following example, the relationObject method returns the DictRelation object for the XMLMapDimension extended data type.","pos":[330114,330241]},{"pos":[330630,330646],"content":"Method stringLen","linkify":"Method stringLen","nodes":[{"content":"Method stringLen","pos":[0,16]}]},{"content":"Provides the string length for an extended data type that is based on the string data type.","pos":[330648,330739]},{"pos":[330774,330786],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that indicates the string length; 0 (zero) if an extended data type is not based on the string data type.","pos":[330788,330904]},{"pos":[330910,330928],"content":"Method stringRight","linkify":"Method stringRight","nodes":[{"content":"Method stringRight","pos":[0,18]}]},{"content":"Indicates whether the string is right-justified for an extended data type that is based on the string data type.","pos":[330930,331042]},{"pos":[331083,331095],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the string is right-justified; otherwise, false.","pos":[331097,331153]},{"pos":[331160,331167],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The return value corresponds to the Adjustment property for the extended data type in the AOT.","pos":[331169,331263]},{"pos":[331269,331292],"content":"Method getTypeAlignment","linkify":"Method getTypeAlignment","nodes":[{"content":"Method getTypeAlignment","pos":[0,23]}]},{"pos":[331357,331367],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"type","pos":[331369,331373]},{"pos":[331382,331394],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[331400,331427],"content":"Method getTypeDisplayHeight","linkify":"Method getTypeDisplayHeight","nodes":[{"content":"Method getTypeDisplayHeight","pos":[0,27]}]},{"pos":[331490,331500],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"type","pos":[331502,331506]},{"pos":[331515,331527],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[331533,331560],"content":"Method getTypeDisplayLength","linkify":"Method getTypeDisplayLength","nodes":[{"content":"Method getTypeDisplayLength","pos":[0,27]}]},{"content":"Retrieves the display length for built-in types.","pos":[331562,331610]},{"pos":[331673,331683],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"type","pos":[331685,331689]},{"content":"The type.","pos":[331692,331701]},{"pos":[331708,331720],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The display length for the built-in type.","pos":[331722,331763]},{"pos":[331769,331784],"content":"Method setValue","linkify":"Method setValue","nodes":[{"content":"Method setValue","pos":[0,15]}]},{"pos":[331850,331860],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Value","pos":[331862,331867]},{"content":"arrayEntry","pos":[331881,331891]},{"pos":[331899,331909],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[331911,331958]},{"pos":[332009,332019],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"typeId","pos":[332021,332027]},{"content":"A data type that indicates the ID for an extended data type.","pos":[332030,332090]},{"pos":[332097,332104],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This constructor does not fail if the typeId value is an invalid extended data type ID; however, when the DictType instance is used, a run-time error occurs.","pos":[332106,332263]},{"content":"You can pass the name of the extended data type instead of an ID by using the extendedTypeNum function.","pos":[332264,332367]},{"pos":[332374,332382],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example shows how to create an instance of the DictType class.","pos":[332384,332460]},{"pos":[332559,332578],"content":"Method setStringLen","linkify":"Method setStringLen","nodes":[{"content":"Method setStringLen","pos":[0,19]}]},{"content":"Sets the string length for an extended data type that is based on the string data type.","pos":[332580,332667]},{"pos":[332719,332729],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"stringLen","pos":[332731,332740]},{"content":"An integer that indicates the string length.","pos":[332743,332787]},{"pos":[332794,332801],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method lets you create, read, update, and delete X++ code and metadata.","pos":[332803,332879]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[332880,332990]},{"content":"The string length corresponds to the StringSize property for the extended data type in the AOT.","pos":[332991,333086]},{"pos":[333093,333101],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example sets the StringSize property to 10 for the AccountName extended data type.","pos":[333103,333199]},{"pos":[333421,333442],"content":"Method setStringRight","linkify":"Method setStringRight","nodes":[{"content":"Method setStringRight","pos":[0,21]}]},{"content":"Indicates the string justification for an extended data type that is based on a String data type.","pos":[333444,333541]},{"pos":[333595,333605],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"right","pos":[333607,333612]},{"content":"A Boolean value: true for a right-justified string and false for a left-justified string.","pos":[333615,333704]},{"pos":[333711,333718],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method lets you create, read, update, and delete X++ code and metadata.","pos":[333720,333796]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[333797,333907]},{"pos":[333914,333922],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example sets the justification of the AccountName extended data type.","pos":[333924,334007]},{"pos":[334231,334245],"content":"Class DictView","linkify":"Class DictView","nodes":[{"content":"Class DictView","pos":[0,14]}]},{"content":"The DictView class provides access to information about a particular view.","pos":[334284,334358]},{"pos":[334364,334371],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[334377,334385],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[334391,334398],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[334402,334408]},{"content":"Description","pos":[334537,334548]},{"content":"public str computedColumnString(str dataSourceName, str fieldName, <ph id=\"ph1\">\\[</ph>FieldNameGenerationMode generationMode<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean needTrim<ph id=\"ph4\">\\]</ph>)","pos":[334896,335028],"source":"public str computedColumnString(str dataSourceName, str fieldName, \\[FieldNameGenerationMode generationMode\\], \\[boolean needTrim\\])"},{"content":"Retrieves the table alias.","pos":[335031,335057]},{"content":"public int datasourceCnt()","pos":[335143,335169]},{"content":"Counts data sources in the view.","pos":[335278,335310]},{"content":"public str datasourceDataareaIdName(int cnt)","pos":[335390,335434]},{"content":"Retrieves the SQL name that is used in the view definition to identify the legal entity of the data source.","pos":[335525,335632]},{"content":"public TableId datasourceID2TableId(TableId dataSourceId)","pos":[335637,335694]},{"content":"Gets the table ID of the given data source.","pos":[335772,335815]},{"content":"public TableId datasourceTableId(int cnt)","pos":[335884,335925]},{"content":"Retrieves the table ID of the indexed data source.","pos":[336019,336069]},{"content":"public SelectionField fieldAggregation(FieldId fieldId)","pos":[336131,336186]},{"content":"Retrieves the type of aggregation that a given field performs.","pos":[336266,336328]},{"content":"public int fieldDatasource(FieldId fieldId)","pos":[336378,336421]},{"content":"Retrieves the ID of the data source that the given field originates from.","pos":[336513,336586]},{"content":"public TableId fieldDatasourceID(FieldId fieldId)","pos":[336625,336674]},{"content":"Retrieves the ID of the data source in the view that the given field maps to.","pos":[336760,336837]},{"content":"public FieldId fieldId(FieldId fieldId)","pos":[336872,336911]},{"content":"Retrieves the field ID from the underlying table.","pos":[337007,337056]},{"content":"public boolean isAggregatedView()","pos":[337119,337152]},{"content":"Checks whether the view is aggregated.","pos":[337254,337292]},{"content":"public Query query()","pos":[337366,337386]},{"content":"public boolean isDataEntity()","pos":[337613,337642]},{"content":"public boolean isUpdatable()","pos":[337860,337888]},{"content":"public boolean isPublic()","pos":[338107,338132]},{"content":"public str collectionName()","pos":[338354,338381]},{"content":"public boolean isVirtualField(str fieldName)","pos":[338601,338645]},{"content":"public FieldAccessModifier getFieldAccessModifier(str fieldName)","pos":[338848,338912]},{"content":"public boolean isStaged()","pos":[339095,339120]},{"content":"public str version()","pos":[339342,339362]},{"content":"public MessagingRole messagingRole()","pos":[339589,339625]},{"content":"public void new(TableId tableId)","pos":[339836,339868]},{"content":"Initializes a new instance of the Object class.","pos":[339971,340018]},{"pos":[340086,340113],"content":"Method computedColumnString","linkify":"Method computedColumnString","nodes":[{"content":"Method computedColumnString","pos":[0,27]}]},{"content":"Retrieves the table alias.","pos":[340115,340141]},{"pos":[340282,340292],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceName","pos":[340294,340308]},{"content":"fieldName","pos":[340322,340331]},{"content":"generationMode","pos":[340345,340359]},{"content":"needTrim","pos":[340373,340381]},{"pos":[340390,340402],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The formatted field name string.","pos":[340404,340436]},{"pos":[340443,340450],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The table alias is an SQL field name in a database-style format that can be used together with a computed column definition.","pos":[340452,340576]},{"pos":[340582,340602],"content":"Method datasourceCnt","linkify":"Method datasourceCnt","nodes":[{"content":"Method datasourceCnt","pos":[0,20]}]},{"content":"Counts data sources in the view.","pos":[340604,340636]},{"pos":[340675,340687],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of data sources in the view.","pos":[340689,340728]},{"pos":[340734,340765],"content":"Method datasourceDataareaIdName","linkify":"Method datasourceDataareaIdName","nodes":[{"content":"Method datasourceDataareaIdName","pos":[0,31]}]},{"content":"Retrieves the SQL name that is used in the view definition to identify the legal entity of the data source.","pos":[340767,340874]},{"pos":[340931,340941],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[340943,340946]},{"pos":[340955,340967],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The SQL name that is used in the view definition to identify the legal entity of the data source; a empty string if an error occurs.","pos":[340969,341101]},{"pos":[341107,341134],"content":"Method datasourceID2TableId","linkify":"Method datasourceID2TableId","nodes":[{"content":"Method datasourceID2TableId","pos":[0,27]}]},{"content":"Gets the table ID of the given data source.","pos":[341136,341179]},{"pos":[341249,341259],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dataSourceId","pos":[341261,341273]},{"pos":[341282,341294],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table ID of the given data source.","pos":[341296,341334]},{"pos":[341340,341364],"content":"Method datasourceTableId","linkify":"Method datasourceTableId","nodes":[{"content":"Method datasourceTableId","pos":[0,24]}]},{"content":"Retrieves the table ID of the indexed data source.","pos":[341366,341416]},{"pos":[341470,341480],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cnt","pos":[341482,341485]},{"pos":[341494,341506],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table ID of the given data source; 0 (zero) if an error occurs.","pos":[341508,341575]},{"pos":[341581,341604],"content":"Method fieldAggregation","linkify":"Method fieldAggregation","nodes":[{"content":"Method fieldAggregation","pos":[0,23]}]},{"content":"Retrieves the type of aggregation that a given field performs.","pos":[341606,341668]},{"pos":[341736,341746],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[341748,341755]},{"pos":[341764,341776],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The type of aggregation.","pos":[341778,341802]},{"pos":[341808,341830],"content":"Method fieldDatasource","linkify":"Method fieldDatasource","nodes":[{"content":"Method fieldDatasource","pos":[0,22]}]},{"content":"Retrieves the ID of the data source that the given field originates from.","pos":[341832,341905]},{"pos":[341961,341971],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[341973,341980]},{"pos":[341989,342001],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The data source ID.","pos":[342003,342022]},{"pos":[342028,342052],"content":"Method fieldDatasourceID","linkify":"Method fieldDatasourceID","nodes":[{"content":"Method fieldDatasourceID","pos":[0,24]}]},{"content":"Retrieves the ID of the data source in the view that the given field maps to.","pos":[342054,342131]},{"pos":[342193,342203],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[342205,342212]},{"pos":[342221,342233],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The data source ID.","pos":[342235,342254]},{"pos":[342260,342274],"content":"Method fieldId","linkify":"Method fieldId","nodes":[{"content":"Method fieldId","pos":[0,14]}]},{"content":"Retrieves the field ID from the underlying table.","pos":[342276,342325]},{"pos":[342377,342387],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[342389,342396]},{"pos":[342405,342417],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The field ID from the underlying table.","pos":[342419,342458]},{"pos":[342464,342487],"content":"Method isAggregatedView","linkify":"Method isAggregatedView","nodes":[{"content":"Method isAggregatedView","pos":[0,23]}]},{"content":"Checks whether the view is aggregated.","pos":[342489,342527]},{"pos":[342573,342585],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"true if the view is aggregated; otherwise, false.","pos":[342587,342636]},{"pos":[342642,342654],"content":"Method query","linkify":"Method query","nodes":[{"content":"Method query","pos":[0,12]}]},{"pos":[342687,342699],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[342705,342724],"content":"Method isDataEntity","linkify":"Method isDataEntity","nodes":[{"content":"Method isDataEntity","pos":[0,19]}]},{"pos":[342766,342778],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[342784,342802],"content":"Method isUpdatable","linkify":"Method isUpdatable","nodes":[{"content":"Method isUpdatable","pos":[0,18]}]},{"pos":[342843,342855],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[342861,342876],"content":"Method isPublic","linkify":"Method isPublic","nodes":[{"content":"Method isPublic","pos":[0,15]}]},{"pos":[342914,342926],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[342932,342953],"content":"Method collectionName","linkify":"Method collectionName","nodes":[{"content":"Method collectionName","pos":[0,21]}]},{"pos":[342993,343005],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[343011,343032],"content":"Method isVirtualField","linkify":"Method isVirtualField","nodes":[{"content":"Method isVirtualField","pos":[0,21]}]},{"pos":[343089,343099],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldName","pos":[343101,343110]},{"pos":[343119,343131],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[343137,343166],"content":"Method getFieldAccessModifier","linkify":"Method getFieldAccessModifier","nodes":[{"content":"Method getFieldAccessModifier","pos":[0,29]}]},{"pos":[343243,343253],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldName","pos":[343255,343264]},{"pos":[343273,343285],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[343291,343306],"content":"Method isStaged","linkify":"Method isStaged","nodes":[{"content":"Method isStaged","pos":[0,15]}]},{"pos":[343344,343356],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[343362,343376],"content":"Method version","linkify":"Method version","nodes":[{"content":"Method version","pos":[0,14]}]},{"pos":[343409,343421],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[343427,343447],"content":"Method messagingRole","linkify":"Method messagingRole","nodes":[{"content":"Method messagingRole","pos":[0,20]}]},{"pos":[343496,343508],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[343514,343524],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[343526,343573]},{"pos":[343618,343628],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"tableId","pos":[343630,343637]},{"content":"The table ID to use to create the class instance.","pos":[343640,343689]},{"pos":[343694,343703],"content":"Class DLL","linkify":"Class DLL","nodes":[{"content":"Class DLL","pos":[0,9]}]},{"content":"The DLL class enables communication with a MicrosoftWindows dynamic-link library (DLL).","pos":[343734,343821]},{"pos":[343827,343834],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If you are using a Unicode DLL, do the following:","pos":[343836,343885]},{"content":"Use ExtTypes::WString instead of ExtTypes::String to specify a string type.","pos":[343891,343966]},{"content":"Use Binary::WString instead of Binary::String if you have character data embedded in a binary structure.","pos":[343971,344075]},{"content":"Use the Binary.wstring method instead of the Binary.string method if you have to read a string from a binary object.","pos":[344080,344196]},{"pos":[344202,344210],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example uses the DLL and DLLFunction classes to interoperate with the GetVersion API in Kernel32.dll.","pos":[344212,344327]},{"content":"This example asserts the use of the InteropPermission class, which is required only if the code is running on the server.","pos":[344328,344449]},{"content":"It loads the DLL and, if it is successful, sets the return type from the call to the DLLFunction class.","pos":[344450,344553]},{"pos":[345677,345684],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[345688,345694]},{"content":"Description","pos":[345725,345736]},{"content":"::public static int lastDLLError()","pos":[345950,345984]},{"content":"Sets or retrieves the last error that was reported by the DLL.","pos":[345987,346049]},{"content":"public void new(str filename)","pos":[346081,346110]},{"content":"Creates an instance of the DLL class.","pos":[346118,346155]},{"content":"public void finalize()","pos":[346212,346234]},{"content":"Releases resources and performs clean-up before an instance of the DLL class is released.","pos":[346249,346338]},{"pos":[346346,346365],"content":"Method lastDLLError","linkify":"Method lastDLLError","nodes":[{"content":"Method lastDLLError","pos":[0,19]}]},{"content":"Sets or retrieves the last error that was reported by the DLL.","pos":[346367,346429]},{"pos":[346474,346486],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The last error that was reported by the DLL.","pos":[346488,346532]},{"pos":[346538,346548],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Creates an instance of the DLL class.","pos":[346550,346587]},{"pos":[346629,346639],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"filename","pos":[346641,346649]},{"content":"The file name of the DLL to use to create the instance of the DLL class.","pos":[346652,346724]},{"pos":[346731,346738],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To access a DLL function, use a created instance of the DLL class in a call to the DLLFunction::new method.","pos":[346740,346847]},{"content":"If an attacker can control input to the new method, a security risk exists.","pos":[346848,346923]},{"content":"Therefore, this method runs under Code Access Security.","pos":[346924,346979]},{"content":"Calls to this method on the server require permission from the InteropPermission class.","pos":[346980,347067]},{"content":"Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.","pos":[347068,347203]},{"pos":[347210,347218],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example uses the DLL and DLLFunction classes to interoperate with the GetVersion API in Kernel32.dll.","pos":[347220,347335]},{"content":"This example asserts the use of the InteropPermission class.","pos":[347336,347396]},{"content":"It loads the DLL and, if it is successful, sets the return type from the call in the DLLFunction class.","pos":[347397,347500]},{"pos":[348627,348642],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"content":"Releases resources and performs clean-up before an instance of the DLL class is released.","pos":[348644,348733]},{"pos":[348766,348783],"content":"Class DLLFunction","linkify":"Class DLLFunction","nodes":[{"content":"Class DLLFunction","pos":[0,17]}]},{"pos":[348826,348833],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[348839,348847],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[348853,348860],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[348864,348870]},{"content":"Description","pos":[348915,348926]},{"content":"public AnyType call(VarArg )","pos":[349070,349098]},{"content":"public ExtTypes returns(<ph id=\"ph1\">\\[</ph>ExtTypes returnType<ph id=\"ph2\">\\]</ph>)","pos":[349173,349221],"source":"public ExtTypes returns(\\[ExtTypes returnType\\])"},{"content":"public void new(DLL dll, str functionname)","pos":[349276,349318]},{"content":"Initializes a new instance of the Object class.","pos":[349327,349374]},{"content":"public void finalize()","pos":[349379,349401]},{"content":"public void arg(VarArg )","pos":[349482,349506]},{"pos":[349588,349599],"content":"Method call","linkify":"Method call","nodes":[{"content":"Method call","pos":[0,11]}]},{"pos":[349640,349650],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[349661,349673],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[349680,349687],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If an attacker can control input to the call method, a security risk exists.","pos":[349689,349765]},{"content":"Therefore, this method runs under Code Access Security.","pos":[349766,349821]},{"content":"Calls to this method on the server require permission.","pos":[349822,349876]},{"content":"Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.","pos":[349877,350012]},{"pos":[350019,350027],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example uses the DLL and DLLFunction classes to interoperate with the GetVersion API in Kernel32.dll.","pos":[350029,350144]},{"content":"It asserts the use of the InteropPermission class to provide code access protection, and then it loads the DLL.","pos":[350145,350256]},{"content":"If this is successful, the return type is set from the call to the DLLFunction class.","pos":[350257,350342]},{"pos":[351457,351471],"content":"Method returns","linkify":"Method returns","nodes":[{"content":"Method returns","pos":[0,14]}]},{"pos":[351530,351540],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"returnType","pos":[351542,351552]},{"pos":[351561,351573],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[351579,351589],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[351591,351638]},{"pos":[351693,351703],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"dll","pos":[351705,351708]},{"content":"functionname","pos":[351722,351734]},{"pos":[351742,351757],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[351791,351801],"content":"Method arg","linkify":"Method arg","nodes":[{"content":"Method arg","pos":[0,10]}]},{"pos":[351838,351848],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[351857,351870],"content":"Class DocNode","linkify":"Class DocNode","nodes":[{"content":"Class DocNode","pos":[0,13]}]},{"content":"The DocNode class provides the information and functions for a documentation node.","pos":[351907,351989]},{"pos":[351995,352002],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class lets you create, read, update, and delete X++ code and metadata.","pos":[352004,352079]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[352080,352190]},{"pos":[352196,352204],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[352210,352217],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[352221,352227]},{"content":"Description","pos":[352417,352428]},{"content":"public str AOTgetSource()","pos":[352893,352918]},{"content":"Returns the source code for the node.","pos":[353089,353126]},{"content":"public str changedBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[353229,353264],"source":"public str changedBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who last changed the application object.","pos":[353425,353499]},{"content":"public Date changedDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[353565,353604],"source":"public Date changedDate(\\[Date value\\])"},{"content":"Gets or sets the date that an application object was last changed.","pos":[353761,353827]},{"content":"public str changedTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[353901,353938],"source":"public str changedTime(\\[str value\\])"},{"content":"Gets or sets the time that an application object was last changed.","pos":[354097,354163]},{"content":"public ConfigurationKeyId configurationKey(<ph id=\"ph1\">\\[</ph>ConfigurationKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[354237,354309],"source":"public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])"},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[354433,354500]},{"content":"public str createdBy(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[354573,354608],"source":"public str createdBy(\\[str value\\])"},{"content":"Gets or sets the name of the user who created the application object.","pos":[354769,354838]},{"content":"public Date creationDate(<ph id=\"ph1\">\\[</ph>Date value<ph id=\"ph2\">\\]</ph>)","pos":[354909,354949],"source":"public Date creationDate(\\[Date value\\])"},{"content":"Gets or sets the date that an application object was created.","pos":[355105,355166]},{"content":"public str creationTime(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[355245,355283],"source":"public str creationTime(\\[str value\\])"},{"content":"public str description(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[355581,355618],"source":"public str description(\\[str value\\])"},{"content":"Sets or returns the description of the documentation node.","pos":[355777,355835]},{"content":"public str name(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[355917,355947],"source":"public str name(\\[str value\\])"},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics AX application object.","pos":[356113,356248]},{"content":"public int neededAccessLevel(<ph id=\"ph1\">\\[</ph>int value<ph id=\"ph2\">\\]</ph>)","pos":[356253,356296],"source":"public int neededAccessLevel(\\[int value\\])"},{"content":"Gets or sets the neededAccessLevel property for the MenuFunction class.","pos":[356449,356520]},{"content":"public SecurityKeyId securityKey(<ph id=\"ph1\">\\[</ph>SecurityKeyId value<ph id=\"ph2\">\\]</ph>)","pos":[356589,356646],"source":"public SecurityKeyId securityKey(\\[SecurityKeyId value\\])"},{"content":"Sets or returns the security key for the documentation node.","pos":[356785,356845]},{"content":"public str title(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[356925,356956],"source":"public str title(\\[str value\\])"},{"content":"Sets or returns the title of the documentation node.","pos":[357121,357173]},{"content":"::public static DocNode findAOTElementDocNode(ApplCodeDocType HelpType, str Name, <ph id=\"ph1\">\\[</ph>str ParentName<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int Mode<ph id=\"ph4\">\\]</ph>)","pos":[357261,357376],"source":"::public static DocNode findAOTElementDocNode(ApplCodeDocType HelpType, str Name, \\[str ParentName\\], \\[int Mode\\])"},{"content":"Performs a search for an element documentation node in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[357457,357568]},{"content":"::public static DocNode findApplicationDocNode(ApplHelpType HelpType, str Name, <ph id=\"ph1\">\\[</ph>str ParentName<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int Mode<ph id=\"ph4\">\\]</ph>)","pos":[357597,357710],"source":"::public static DocNode findApplicationDocNode(ApplHelpType HelpType, str Name, \\[str ParentName\\], \\[int Mode\\])"},{"content":"Performs a search for an application element documentation node.","pos":[357793,357857]},{"content":"::public static DocNode findKernelDocNode(KernelHelpType HelpType, str Name, <ph id=\"ph1\">\\[</ph>str ParentName<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int Mode<ph id=\"ph4\">\\]</ph>)","pos":[357933,358043],"source":"::public static DocNode findKernelDocNode(KernelHelpType HelpType, str Name, \\[str ParentName\\], \\[int Mode\\])"},{"content":"Performs a search for a kernel element documentation node.","pos":[358129,358187]},{"content":"::public static DocNode getNodeDetached(UtilFileType helpType, int UtilType, str Name, <ph id=\"ph1\">\\[</ph>int ParentId<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int Type<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>UtilEntryLevel Utillevel<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>boolean Forcelevel<ph id=\"ph8\">\\]</ph>, <ph id=\"ph9\">\\[</ph>boolean OldUtil<ph id=\"ph10\">\\]</ph>)","pos":[358269,358462],"source":"::public static DocNode getNodeDetached(UtilFileType helpType, int UtilType, str Name, \\[int ParentId\\], \\[int Type\\], \\[UtilEntryLevel Utillevel\\], \\[boolean Forcelevel\\], \\[boolean OldUtil\\])"},{"content":"Returns the specified documentation node.","pos":[358465,358506]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[358605,358663],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code for the node.","pos":[358801,358835]},{"content":"public void AOTedit(<ph id=\"ph1\">\\[</ph>int Line<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int Column<ph id=\"ph4\">\\]</ph>)","pos":[358941,358990],"source":"public void AOTedit(\\[int Line\\], \\[int Column\\])"},{"content":"Opens the appropriate editor for this node.","pos":[359137,359180]},{"pos":[359280,359299],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code for the node.","pos":[359301,359338]},{"pos":[359376,359388],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The source code for the node as a string; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if there is no source code for the node.","pos":[359390,359545]},{"pos":[359551,359567],"content":"Method changedBy","linkify":"Method changedBy","nodes":[{"content":"Method changedBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who last changed the application object.","pos":[359569,359643]},{"pos":[359689,359699],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[359701,359706]},{"content":"The value that is being assigned as the user who changed the documentation node.","pos":[359709,359789]},{"pos":[359796,359808],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user.","pos":[359810,359831]},{"pos":[359837,359855],"content":"Method changedDate","linkify":"Method changedDate","nodes":[{"content":"Method changedDate","pos":[0,18]}]},{"content":"Gets or sets the date that an application object was last changed.","pos":[359857,359923]},{"pos":[359973,359983],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[359985,359990]},{"content":"The value that is being assigned as the change date for the documentation node.","pos":[359993,360072]},{"pos":[360079,360091],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date that an application object was last changed.","pos":[360093,360146]},{"pos":[360152,360170],"content":"Method changedTime","linkify":"Method changedTime","nodes":[{"content":"Method changedTime","pos":[0,18]}]},{"content":"Gets or sets the time that an application object was last changed.","pos":[360172,360238]},{"pos":[360286,360296],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[360298,360303]},{"content":"The value that is being assigned as the change time for the documentation node.","pos":[360306,360385]},{"pos":[360392,360404],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The time that an application object was last changed.","pos":[360406,360459]},{"pos":[360465,360488],"content":"Method configurationKey","linkify":"Method configurationKey","nodes":[{"content":"Method configurationKey","pos":[0,23]}]},{"content":"Gets or sets the configuration key that is assigned to the control.","pos":[360490,360557]},{"pos":[360640,360650],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[360652,360657]},{"content":"The value that is being assigned for the configuration key ID.","pos":[360660,360722]},{"pos":[360729,360741],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The identifier of the configuration key that is assigned to the control.","pos":[360743,360815]},{"pos":[360822,360829],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The configuration key is used to determine whether this control can be displayed.","pos":[360831,360912]},{"content":"If the configuration key is disabled in the system, the control is not displayed in the form.","pos":[360913,361006]},{"pos":[361012,361028],"content":"Method createdBy","linkify":"Method createdBy","nodes":[{"content":"Method createdBy","pos":[0,16]}]},{"content":"Gets or sets the name of the user who created the application object.","pos":[361030,361099]},{"pos":[361145,361155],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[361157,361162]},{"content":"The value that is being assigned as the user who created the documentation node.","pos":[361165,361245]},{"pos":[361252,361264],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the user.","pos":[361266,361287]},{"pos":[361293,361312],"content":"Method creationDate","linkify":"Method creationDate","nodes":[{"content":"Method creationDate","pos":[0,19]}]},{"content":"Gets or sets the date that an application object was created.","pos":[361314,361375]},{"pos":[361426,361436],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[361438,361443]},{"content":"The value that is being assigned as the creation date for the documentation node.","pos":[361446,361527]},{"pos":[361534,361546],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The date that an application object was created.","pos":[361548,361596]},{"pos":[361602,361621],"content":"Method creationTime","linkify":"Method creationTime","nodes":[{"content":"Method creationTime","pos":[0,19]}]},{"pos":[361670,361680],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[361682,361687]},{"pos":[361696,361708],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[361714,361732],"content":"Method description","linkify":"Method description","nodes":[{"content":"Method description","pos":[0,18]}]},{"content":"Sets or returns the description of the documentation node.","pos":[361734,361792]},{"pos":[361840,361850],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[361852,361857]},{"content":"The value that is being assigned as the description of the documentation node.","pos":[361860,361938]},{"pos":[361945,361957],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The description of the documentation node.","pos":[361959,362001]},{"pos":[362007,362018],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"content":"Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics AX application object.","pos":[362020,362155]},{"pos":[362196,362206],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[362208,362213]},{"content":"The name that is being assigned to the documentation node.","pos":[362216,362274]},{"pos":[362281,362293],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name that is used in code to identify an application object.","pos":[362295,362359]},{"pos":[362366,362373],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The name property value of an object must meet the following criteria to avoid code conflicts:","pos":[362375,362469]},{"content":"It must begin with a letter.","pos":[362475,362503]},{"content":"It cannot exceed 250 characters.","pos":[362508,362540]},{"content":"It can include numbers and underscore (<ph id=\"ph1\">\\_</ph>) characters.","pos":[362545,362599],"source":"It can include numbers and underscore (\\_) characters."},{"content":"It cannot include punctuation or spaces.","pos":[362604,362644]},{"content":"Tables cannot have the same name as other public objects, such as extended data types, base enums, and classes.","pos":[362649,362760]},{"pos":[362766,362790],"content":"Method neededAccessLevel","linkify":"Method neededAccessLevel","nodes":[{"content":"Method neededAccessLevel","pos":[0,24]}]},{"content":"Gets or sets the neededAccessLevel property for the MenuFunction class.","pos":[362792,362863]},{"pos":[362917,362927],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[362929,362934]},{"pos":[362943,362955],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current value of the neededAccessLevel property.","pos":[362957,363009]},{"pos":[363016,363023],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The possible values for the AccessType system enumuration value are as follows:","pos":[363025,363104]},{"content":"AccessType::NoAccess.","pos":[363110,363131]},{"content":"AccessType::View.","pos":[363136,363153]},{"content":"AccessType::Edit.","pos":[363158,363175]},{"content":"AccessType::Add.","pos":[363180,363196]},{"content":"AccessType::Delete.","pos":[363201,363220]},{"pos":[363226,363244],"content":"Method securityKey","linkify":"Method securityKey","nodes":[{"content":"Method securityKey","pos":[0,18]}]},{"content":"Sets or returns the security key for the documentation node.","pos":[363246,363306]},{"pos":[363374,363384],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[363386,363391]},{"content":"The value that is being assigned for the security key ID.","pos":[363394,363451]},{"pos":[363458,363470],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The security key ID for the documentation node; 0 (zero) if no security key is associated with the documentation node.","pos":[363472,363590]},{"pos":[363596,363608],"content":"Method title","linkify":"Method title","nodes":[{"content":"Method title","pos":[0,12]}]},{"content":"Sets or returns the title of the documentation node.","pos":[363610,363662]},{"pos":[363704,363714],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[363716,363721]},{"content":"The title that is being assigned to the documentation node.","pos":[363724,363783]},{"pos":[363790,363802],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The title of the documentation node.","pos":[363804,363840]},{"pos":[363846,363874],"content":"Method findAOTElementDocNode","linkify":"Method findAOTElementDocNode","nodes":[{"content":"Method findAOTElementDocNode","pos":[0,28]}]},{"content":"Performs a search for an element documentation node in the Microsoft Dynamics AX Application Object Tree (AOT).","pos":[363876,363987]},{"pos":[364109,364119],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"HelpType","pos":[364121,364129]},{"content":"The mode to use for the search; optional.","pos":[364132,364173]},{"content":"Name","pos":[364185,364189]},{"content":"The mode to use for the search; optional.","pos":[364192,364233]},{"content":"ParentName","pos":[364245,364255]},{"content":"The mode to use for the search; optional.","pos":[364258,364299]},{"content":"Mode","pos":[364311,364315]},{"content":"The mode to use for the search; optional.","pos":[364318,364359]},{"pos":[364366,364378],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The node that is found; otherwise, null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic).","pos":[364380,364488]},{"pos":[364494,364523],"content":"Method findApplicationDocNode","linkify":"Method findApplicationDocNode","nodes":[{"content":"Method findApplicationDocNode","pos":[0,29]}]},{"content":"Performs a search for an application element documentation node.","pos":[364525,364589]},{"pos":[364709,364719],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"HelpType","pos":[364721,364729]},{"content":"The mode to use for the search; optional.","pos":[364732,364773]},{"content":"Name","pos":[364785,364789]},{"content":"The mode to use for the search; optional.","pos":[364792,364833]},{"content":"ParentName","pos":[364845,364855]},{"content":"The mode to use for the search; optional.","pos":[364858,364899]},{"content":"Mode","pos":[364911,364915]},{"content":"The mode to use for the search; optional.","pos":[364918,364959]},{"pos":[364966,364978],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The node that is found; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the node was not found.","pos":[364980,365103]},{"pos":[365109,365133],"content":"Method findKernelDocNode","linkify":"Method findKernelDocNode","nodes":[{"content":"Method findKernelDocNode","pos":[0,24]}]},{"content":"Performs a search for a kernel element documentation node.","pos":[365135,365193]},{"pos":[365310,365320],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"HelpType","pos":[365322,365330]},{"content":"The mode to use for the search; optional.","pos":[365333,365374]},{"content":"Name","pos":[365386,365390]},{"content":"The mode to use for the search; optional.","pos":[365393,365434]},{"content":"ParentName","pos":[365446,365456]},{"content":"The mode to use for the search; optional.","pos":[365459,365500]},{"content":"Mode","pos":[365512,365516]},{"content":"The mode to use for the search; optional.","pos":[365519,365560]},{"pos":[365567,365579],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The node that is found; otherwise, null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic).","pos":[365581,365689]},{"pos":[365695,365717],"content":"Method getNodeDetached","linkify":"Method getNodeDetached","nodes":[{"content":"Method getNodeDetached","pos":[0,22]}]},{"content":"Returns the specified documentation node.","pos":[365719,365760]},{"pos":[365954,365964],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"helpType","pos":[365966,365974]},{"content":"Reserved; optional.","pos":[365977,365996]},{"content":"UtilType","pos":[366008,366016]},{"content":"Reserved; optional.","pos":[366019,366038]},{"content":"Name","pos":[366050,366054]},{"content":"Reserved; optional.","pos":[366057,366076]},{"content":"ParentId","pos":[366088,366096]},{"content":"Reserved; optional.","pos":[366099,366118]},{"content":"Type","pos":[366130,366134]},{"content":"Reserved; optional.","pos":[366137,366156]},{"content":"Utillevel","pos":[366168,366177]},{"content":"Reserved; optional.","pos":[366180,366199]},{"content":"Forcelevel","pos":[366211,366221]},{"content":"Reserved; optional.","pos":[366224,366243]},{"content":"OldUtil","pos":[366255,366262]},{"content":"Reserved; optional.","pos":[366265,366284]},{"pos":[366291,366303],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The specified documentation node.","pos":[366305,366338]},{"pos":[366344,366363],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code for the node.","pos":[366365,366399]},{"pos":[366468,366478],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[366480,366486]},{"content":"A Boolean value that indicates whether the method is static.","pos":[366489,366549]},{"content":"isStatic","pos":[366561,366569]},{"content":"A Boolean value that indicates whether the method is static.","pos":[366572,366632]},{"pos":[366638,366652],"content":"Method AOTedit","linkify":"Method AOTedit","nodes":[{"content":"Method AOTedit","pos":[0,14]}]},{"content":"Opens the appropriate editor for this node.","pos":[366654,366697]},{"pos":[366755,366765],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Line","pos":[366767,366771]},{"content":"The column of the cursor position; optional.","pos":[366774,366818]},{"content":"Column","pos":[366830,366836]},{"content":"The column of the cursor position; optional.","pos":[366839,366883]},{"pos":[366890,366897],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the node is a method, the code editor opens.","pos":[366899,366946]},{"content":"If the node is a documentation object, the Help editor opens.","pos":[366947,367008]},{"pos":[367013,367042],"content":"Class DynamicPropertyCallback","linkify":"Class DynamicPropertyCallback","nodes":[{"content":"Class DynamicPropertyCallback","pos":[0,29]}]},{"pos":[367082,367089],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[367095,367103],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[367109,367116],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[367120,367126]},{"content":"Description","pos":[367190,367201]},{"content":"public boolean propChanged(str propertyName, AnyType propertyValue)","pos":[367292,367359]},{"pos":[367381,367399],"content":"Method propChanged","linkify":"Method propChanged","nodes":[{"content":"Method propChanged","pos":[0,18]}]},{"pos":[367479,367489],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"propertyName","pos":[367491,367503]},{"content":"propertyValue","pos":[367517,367530]},{"pos":[367539,367551],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[367556,367584],"content":"Class DynamicPropertyManager","linkify":"Class DynamicPropertyManager","nodes":[{"content":"Class DynamicPropertyManager","pos":[0,28]}]},{"pos":[367638,367645],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[367651,367659],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[367665,367672],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[367676,367682]},{"content":"Description","pos":[367866,367877]},{"content":"public DynamicPropertyCallback callbackObject()","pos":[368192,368239]},{"content":"public str getConfigString()","pos":[368450,368478]},{"content":"Microsoft internal use only.","pos":[368640,368668]},{"content":"public int hasSheetChanged()","pos":[368708,368736]},{"content":"Microsoft internal use only.","pos":[368898,368926]},{"content":"public Struct propertyValues()","pos":[368966,368996]},{"content":"public void allowEdit(str name, boolean allow)","pos":[369224,369270]},{"content":"public void updateValue(str propertyname, str value)","pos":[369482,369534]},{"content":"public void new()","pos":[369740,369757]},{"content":"Initializes a new instance of the DynamicPropertyManager class.","pos":[369930,369993]},{"content":"public void getPropertySheet(str configString, boolean canWebletTypeChange)","pos":[369998,370073]},{"content":"Microsoft internal use only.","pos":[370188,370216]},{"content":"public void noProperties()","pos":[370256,370282]},{"content":"public void allowDisplay(str name, boolean allow)","pos":[370514,370563]},{"content":"public void refresh()","pos":[370772,370793]},{"content":"public void setProperties(int propertySetId, str caption, Struct values, <ph id=\"ph1\">\\[</ph>Struct defaultValues<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>Struct categories<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>DynamicPropertyCallback callbackObject<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>boolean setFocus<ph id=\"ph8\">\\]</ph>)","pos":[371030,371217],"source":"public void setProperties(int propertySetId, str caption, Struct values, \\[Struct defaultValues\\], \\[Struct categories\\], \\[DynamicPropertyCallback callbackObject\\], \\[boolean setFocus\\])"},{"pos":[371291,371312],"content":"Method callbackObject","linkify":"Method callbackObject","nodes":[{"content":"Method callbackObject","pos":[0,21]}]},{"pos":[371372,371384],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[371390,371412],"content":"Method getConfigString","linkify":"Method getConfigString","nodes":[{"content":"Method getConfigString","pos":[0,22]}]},{"content":"Microsoft internal use only.","pos":[371414,371442]},{"pos":[371483,371495],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A configuration string.","pos":[371497,371520]},{"pos":[371526,371548],"content":"Method hasSheetChanged","linkify":"Method hasSheetChanged","nodes":[{"content":"Method hasSheetChanged","pos":[0,22]}]},{"content":"Microsoft internal use only.","pos":[371550,371578]},{"pos":[371619,371631],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A value that indicates whether the sheet has changed.","pos":[371633,371686]},{"pos":[371692,371713],"content":"Method propertyValues","linkify":"Method propertyValues","nodes":[{"content":"Method propertyValues","pos":[0,21]}]},{"pos":[371756,371768],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[371774,371790],"content":"Method allowEdit","linkify":"Method allowEdit","nodes":[{"content":"Method allowEdit","pos":[0,16]}]},{"pos":[371849,371859],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[371861,371865]},{"content":"allow","pos":[371879,371884]},{"pos":[371892,371910],"content":"Method updateValue","linkify":"Method updateValue","nodes":[{"content":"Method updateValue","pos":[0,18]}]},{"pos":[371975,371985],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"propertyname","pos":[371987,371999]},{"content":"value","pos":[372013,372018]},{"pos":[372026,372036],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the DynamicPropertyManager class.","pos":[372038,372101]},{"pos":[372130,372153],"content":"Method getPropertySheet","linkify":"Method getPropertySheet","nodes":[{"content":"Method getPropertySheet","pos":[0,23]}]},{"content":"Microsoft internal use only.","pos":[372155,372183]},{"pos":[372271,372281],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"configString","pos":[372283,372295]},{"content":"A value that indicates whether the weblet type can change.","pos":[372298,372356]},{"content":"canWebletTypeChange","pos":[372368,372387]},{"content":"A value that indicates whether the weblet type can change.","pos":[372390,372448]},{"pos":[372454,372473],"content":"Method noProperties","linkify":"Method noProperties","nodes":[{"content":"Method noProperties","pos":[0,19]}]},{"pos":[372511,372530],"content":"Method allowDisplay","linkify":"Method allowDisplay","nodes":[{"content":"Method allowDisplay","pos":[0,19]}]},{"pos":[372592,372602],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[372604,372608]},{"content":"allow","pos":[372622,372627]},{"pos":[372635,372649],"content":"Method refresh","linkify":"Method refresh","nodes":[{"content":"Method refresh","pos":[0,14]}]},{"pos":[372682,372702],"content":"Method setProperties","linkify":"Method setProperties","nodes":[{"content":"Method setProperties","pos":[0,20]}]},{"pos":[372894,372904],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"propertySetId","pos":[372906,372919]},{"content":"caption","pos":[372933,372940]},{"content":"values","pos":[372954,372960]},{"content":"defaultValues","pos":[372974,372987]},{"content":"categories","pos":[373001,373011]},{"content":"callbackObject","pos":[373025,373039]},{"content":"setFocus","pos":[373053,373061]}],"content":"---\n# required metadata\n\ntitle: D Classes\ndescription: System API classes that start with the letter D.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-24 14 - 37 - 51\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 52531\nms.assetid: 1c1abede-a67b-44ae-b9f4-d3c98a50dbb8\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.dyn365.ops.intro: Feb-16\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# D Classes\n\nSystem API classes that start with the letter D.\n\nClass DataEntityDataSourceRuntimeContext\n----------------------------------------\n\n    class DataEntityDataSourceRuntimeContext extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                         | Description |\n|--------------------------------------------------------------------------------|-------------|\n| public str name()                                                              |             |\n| public int id()                                                                |             |\n| public Common getBuffer()                                                      |             |\n| public DataEntityDatabaseOperation getDatabaseOperation()                      |             |\n| public str getCompany()                                                        |             |\n| public boolean getDataSaved()                                                  |             |\n| public boolean skipDataMethods(\\[boolean skip\\])                               |             |\n| public boolean skipDeleteMethod(\\[boolean b\\])                                 |             |\n| public boolean skipValidateWrite(\\[boolean skip\\])                             |             |\n| public boolean skipValidateDelete(\\[boolean skip\\])                            |             |\n| public boolean skipInitValue(\\[boolean skip\\])                                 |             |\n| public boolean skipDefaultRow(\\[boolean skip\\])                                |             |\n| public boolean readOnly()                                                      |             |\n| public boolean oneToMany()                                                     |             |\n| public boolean optional()                                                      |             |\n| public boolean dateEffective()                                                 |             |\n| public boolean conflictDetectionInvoked(\\[boolean found\\])                     |             |\n| public void new(Common dataSourceBuffer, str dataSourceName, int dataSourceId) |             |\n| public void setCompany(str company)                                            |             |\n| public void setBuffer(Common buffer)                                           |             |\n| public void setDatabaseOperation(DataEntityDatabaseOperation dbOperation)      |             |\n| public void setDataSaved(boolean saved)                                        |             |\n\n### Method name\n\n    public str name()\n\n#### Return Value\n\n### Method id\n\n    public int id()\n\n#### Return Value\n\n### Method getBuffer\n\n    public Common getBuffer()\n\n#### Return Value\n\n### Method getDatabaseOperation\n\n    public DataEntityDatabaseOperation getDatabaseOperation()\n\n#### Return Value\n\n### Method getCompany\n\n    public str getCompany()\n\n#### Return Value\n\n### Method getDataSaved\n\n    public boolean getDataSaved()\n\n#### Return Value\n\n### Method skipDataMethods\n\n    public boolean skipDataMethods([boolean skip])\n\n#### Parameters\n\nskip  \n\n#### Return Value\n\n### Method skipDeleteMethod\n\n    public boolean skipDeleteMethod([boolean b])\n\n#### Parameters\n\nb  \n\n#### Return Value\n\n### Method skipValidateWrite\n\n    public boolean skipValidateWrite([boolean skip])\n\n#### Parameters\n\nskip  \n\n#### Return Value\n\n### Method skipValidateDelete\n\n    public boolean skipValidateDelete([boolean skip])\n\n#### Parameters\n\nskip  \n\n#### Return Value\n\n### Method skipInitValue\n\n    public boolean skipInitValue([boolean skip])\n\n#### Parameters\n\nskip  \n\n#### Return Value\n\n### Method skipDefaultRow\n\n    public boolean skipDefaultRow([boolean skip])\n\n#### Parameters\n\nskip  \n\n#### Return Value\n\n### Method readOnly\n\n    public boolean readOnly()\n\n#### Return Value\n\n### Method oneToMany\n\n    public boolean oneToMany()\n\n#### Return Value\n\n### Method optional\n\n    public boolean optional()\n\n#### Return Value\n\n### Method dateEffective\n\n    public boolean dateEffective()\n\n#### Return Value\n\n### Method conflictDetectionInvoked\n\n    public boolean conflictDetectionInvoked([boolean found])\n\n#### Parameters\n\nfound  \n\n#### Return Value\n\n### Method new\n\n    public void new(Common dataSourceBuffer, str dataSourceName, int dataSourceId)\n\n#### Parameters\n\ndataSourceBuffer  \n\n<!-- -->\n\ndataSourceName  \n\n<!-- -->\n\ndataSourceId  \n\n### Method setCompany\n\n    public void setCompany(str company)\n\n#### Parameters\n\ncompany  \n\n### Method setBuffer\n\n    public void setBuffer(Common buffer)\n\n#### Parameters\n\nbuffer  \n\n### Method setDatabaseOperation\n\n    public void setDatabaseOperation(DataEntityDatabaseOperation dbOperation)\n\n#### Parameters\n\ndbOperation  \n\n### Method setDataSaved\n\n    public void setDataSaved(boolean saved)\n\n#### Parameters\n\nsaved  \n\n## Class DataEntityPersister\n    class DataEntityPersister extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                                                                                                                            | Description |\n|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------|\n| public boolean doSaveDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)                                                                                             |             |\n| public Common doFindDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)                                                                                              |             |\n| public boolean hasDataSourceRecordChanged(int dataSourceId, Common originalRecord, Common updatedRecord)                                                                                                          |             |\n| public str getCompanyForDataSource(DataEntityRuntimeContext entityCtx, int dataSourceId)                                                                                                                          |             |\n| public int getValidTimeStateUpdateModeForDataSource(DataEntityRuntimeContext entityCtx, int dataSourceId)                                                                                                         |             |\n| public Common findDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)                                                                                                |             |\n| public boolean saveDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)                                                                                               |             |\n| public void doMapEntityToDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)                                                                                         |             |\n| public void mapEntityToDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)                                                                                           |             |\n| public void doMapDataSourceToEntity(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)                                                                                         |             |\n| public void selectDataSourceBufferByRecId(Common dataSourceBuffer, Int64 dataSourceRecId, Boolean explicitlyForUpdate, Boolean fetchActiveRecordOnly)                                                             |             |\n| public void doPersistEntity(DataEntityRuntimeContext entityCtx)                                                                                                                                                   |             |\n| public void doInitializeDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)                                                                                          |             |\n| public void initializeDataSource(DataEntityRuntimeContext entityCtx, str dataSourceName, Common dataSourceBuffer, int dataSourceId, Boolean optional, Boolean readonly, Boolean oneToMany, Boolean dateEffective) |             |\n\n### Method doSaveDataSource\n\n    public boolean doSaveDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceCtx  \n\n#### Return Value\n\n### Method doFindDataSource\n\n    public Common doFindDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceCtx  \n\n#### Return Value\n\n### Method hasDataSourceRecordChanged\n\n    public boolean hasDataSourceRecordChanged(int dataSourceId, Common originalRecord, Common updatedRecord)\n\n#### Parameters\n\ndataSourceId  \n\n<!-- -->\n\noriginalRecord  \n\n<!-- -->\n\nupdatedRecord  \n\n#### Return Value\n\n### Method getCompanyForDataSource\n\n    public str getCompanyForDataSource(DataEntityRuntimeContext entityCtx, int dataSourceId)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceId  \n\n#### Return Value\n\n### Method getValidTimeStateUpdateModeForDataSource\n\n    public int getValidTimeStateUpdateModeForDataSource(DataEntityRuntimeContext entityCtx, int dataSourceId)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceId  \n\n#### Return Value\n\n### Method findDataSource\n\n    public Common findDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceCtx  \n\n#### Return Value\n\n### Method saveDataSource\n\n    public boolean saveDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceCtx  \n\n#### Return Value\n\n### Method doMapEntityToDataSource\n\n    public void doMapEntityToDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceCtx  \n\n### Method mapEntityToDataSource\n\n    public void mapEntityToDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceCtx  \n\n### Method doMapDataSourceToEntity\n\n    public void doMapDataSourceToEntity(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceCtx  \n\n### Method selectDataSourceBufferByRecId\n\n    public void selectDataSourceBufferByRecId(Common dataSourceBuffer, Int64 dataSourceRecId, Boolean explicitlyForUpdate, Boolean fetchActiveRecordOnly)\n\n#### Parameters\n\ndataSourceBuffer  \n\n<!-- -->\n\ndataSourceRecId  \n\n<!-- -->\n\nexplicitlyForUpdate  \n\n<!-- -->\n\nfetchActiveRecordOnly  \n\n### Method doPersistEntity\n\n    public void doPersistEntity(DataEntityRuntimeContext entityCtx)\n\n#### Parameters\n\nentityCtx  \n\n### Method doInitializeDataSource\n\n    public void doInitializeDataSource(DataEntityRuntimeContext entityCtx, DataEntityDataSourceRuntimeContext dataSourceCtx)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceCtx  \n\n### Method initializeDataSource\n\n    public void initializeDataSource(DataEntityRuntimeContext entityCtx, str dataSourceName, Common dataSourceBuffer, int dataSourceId, Boolean optional, Boolean readonly, Boolean oneToMany, Boolean dateEffective)\n\n#### Parameters\n\nentityCtx  \n\n<!-- -->\n\ndataSourceName  \n\n<!-- -->\n\ndataSourceBuffer  \n\n<!-- -->\n\ndataSourceId  \n\n<!-- -->\n\noptional  \n\n<!-- -->\n\nreadonly  \n\n<!-- -->\n\noneToMany  \n\n<!-- -->\n\ndateEffective  \n\n## Class DataEntityRuntimeContext\n    class DataEntityRuntimeContext extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                               | Description |\n|------------------------------------------------------------------------------------------------------|-------------|\n| public DataEntityDatabaseOperation getDatabaseOperation()                                            |             |\n| public AnyType getCustomProperty(str name)                                                           |             |\n| public Common getEntityRecord()                                                                      |             |\n| public DataEntityDataSourceRuntimeContext getRuntimeContextByName(str datasourceName)                |             |\n| public void new(DataEntityDatabaseOperation operation, Common record, DataEntityPersister persister) |             |\n| public void setCustomProperty(str name, AnyType obj)                                                 |             |\n\n### Method getDatabaseOperation\n\n    public DataEntityDatabaseOperation getDatabaseOperation()\n\n#### Return Value\n\n### Method getCustomProperty\n\n    public AnyType getCustomProperty(str name)\n\n#### Parameters\n\nname  \n\n#### Return Value\n\n### Method getEntityRecord\n\n    public Common getEntityRecord()\n\n#### Return Value\n\n### Method getRuntimeContextByName\n\n    public DataEntityDataSourceRuntimeContext getRuntimeContextByName(str datasourceName)\n\n#### Parameters\n\ndatasourceName  \n\n#### Return Value\n\n### Method new\n\n    public void new(DataEntityDatabaseOperation operation, Common record, DataEntityPersister persister)\n\n#### Parameters\n\noperation  \n\n<!-- -->\n\nrecord  \n\n<!-- -->\n\npersister  \n\n### Method setCustomProperty\n\n    public void setCustomProperty(str name, AnyType obj)\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nobj  \n\n## Class DataEventArgs\n    class DataEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method | Description |\n|--------|-------------|\n\n## Class DataImportExportManager\n    class DataImportExportManager extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                               | Description |\n|--------------------------------------|-------------|\n| public void finalize()               |             |\n| public void new()                    |             |\n| public void importDataFile(str name) |             |\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\n    public void new()\n\n### Method importDataFile\n\n    public void importDataFile(str name)\n\n#### Parameters\n\nname  \n\n## Class DataImportManager\n    class DataImportManager extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                        | Description                                                |\n|-----------------------------------------------------------------------------------------------|------------------------------------------------------------|\n| ::public static int commitImportSessionInfo(DataImportSessionInfo impInfo)                    |                                                            |\n| ::public static int endTableDataCopy(ImportTableDataInfo dataInfo)                            |                                                            |\n| ::public static int endTableSchemaCopy(ImportTableSchemaInfo schInfo)                         |                                                            |\n| ::public static int finishMergeTableData()                                                    |                                                            |\n| ::public static int getImportSessionProgress(DataImportSessionInfo impInfo)                   |                                                            |\n| ::public static int mergeAllData()                                                            |                                                            |\n| ::public static int mergeTableData(int mergeStep, TableId tableId, boolean updateHeartbeat)   |                                                            |\n| ::public static int recoverImportSession(DataImportSessionInfo impInfo, boolean fTryToResume) |                                                            |\n| public void new()                                                                             | Initializes a new instance of the DataImportManager class. |\n\n### Method commitImportSessionInfo\n\n    public static int commitImportSessionInfo(DataImportSessionInfo impInfo)\n\n#### Parameters\n\nimpInfo  \n\n#### Return Value\n\n### Method endTableDataCopy\n\n    public static int endTableDataCopy(ImportTableDataInfo dataInfo)\n\n#### Parameters\n\ndataInfo  \n\n#### Return Value\n\n### Method endTableSchemaCopy\n\n    public static int endTableSchemaCopy(ImportTableSchemaInfo schInfo)\n\n#### Parameters\n\nschInfo  \n\n#### Return Value\n\n### Method finishMergeTableData\n\n    public static int finishMergeTableData()\n\n#### Return Value\n\n### Method getImportSessionProgress\n\n    public static int getImportSessionProgress(DataImportSessionInfo impInfo)\n\n#### Parameters\n\nimpInfo  \n\n#### Return Value\n\n### Method mergeAllData\n\n    public static int mergeAllData()\n\n#### Return Value\n\n### Method mergeTableData\n\n    public static int mergeTableData(int mergeStep, TableId tableId, boolean updateHeartbeat)\n\n#### Parameters\n\nmergeStep  \n\n<!-- -->\n\ntableId  \n\n<!-- -->\n\nupdateHeartbeat  \n\n#### Return Value\n\n### Method recoverImportSession\n\n    public static int recoverImportSession(DataImportSessionInfo impInfo, boolean fTryToResume)\n\n#### Parameters\n\nimpInfo  \n\n<!-- -->\n\nfTryToResume  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the DataImportManager class.\n\n    public void new()\n\n## Class DataImportSessionInfo\n    class DataImportSessionInfo extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                         | Description                                     |\n|--------------------------------------------------------------------------------|-------------------------------------------------|\n| public int addImportTable(str szTabName, int ulTableId, boolean fAlwaysUpdate) |                                                 |\n| public int getCurrentProgress()                                                |                                                 |\n| public str getCurrentTable()                                                   |                                                 |\n| public int setSourceGUID(Guid szSourceGUID)                                    |                                                 |\n| public int setSysDataImpLogId(int sysDataImpLogId)                             |                                                 |\n| public void new(str szInpFileName, boolean fUpdateExistingData)                | Initializes a new instance of the Object class. |\n\n### Method addImportTable\n\n    public int addImportTable(str szTabName, int ulTableId, boolean fAlwaysUpdate)\n\n#### Parameters\n\nszTabName  \n\n<!-- -->\n\nulTableId  \n\n<!-- -->\n\nfAlwaysUpdate  \n\n#### Return Value\n\n### Method getCurrentProgress\n\n    public int getCurrentProgress()\n\n#### Return Value\n\n### Method getCurrentTable\n\n    public str getCurrentTable()\n\n#### Return Value\n\n### Method setSourceGUID\n\n    public int setSourceGUID(Guid szSourceGUID)\n\n#### Parameters\n\nszSourceGUID  \n\n#### Return Value\n\n### Method setSysDataImpLogId\n\n    public int setSysDataImpLogId(int sysDataImpLogId)\n\n#### Parameters\n\nsysDataImpLogId  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(str szInpFileName, boolean fUpdateExistingData)\n\n#### Parameters\n\nszInpFileName  \n\n<!-- -->\n\nfUpdateExistingData  \n\n## Class DataSet\n    class DataSet extends TreeNode\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                  | Description                                                                                                                       |\n|---------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| public FormBuildDataSource addDataSource(str name)      |                                                                                                                                   |\n| public str changedBy(\\[str value\\])                     | Gets or sets the name of the user who last changed the application object.                                                        |\n| public Date changedDate(\\[Date value\\])                 | Gets or sets the date an application object was last changed.                                                                     |\n| public str changedTime(\\[str value\\])                   | Gets or sets the time an application object was last changed.                                                                     |\n| public str createdBy(\\[str value\\])                     | Gets or sets the name of the user who created the application object.                                                             |\n| public Date creationDate(\\[Date value\\])                | Gets or sets the date an application object was created.                                                                          |\n| public str creationTime(\\[str value\\])                  |                                                                                                                                   |\n| public FormBuildDataSource dataSource(int dataSourceNo) |                                                                                                                                   |\n| public int dataSourceCount()                            |                                                                                                                                   |\n| public str name(\\[str value\\])                          | Gets or sets the name used in code to identify a form, report, table, query, or another Microsoft Dynamics AX application object. |\n| public Guid origin(\\[Guid value\\])                      |                                                                                                                                   |\n| public void load(str name, \\[boolean buildMode\\])       |                                                                                                                                   |\n| public void finalize()                                  |                                                                                                                                   |\n| public void new(\\[str name\\], \\[boolean buildMode\\])    | Initializes a new instance of the TreeNode class.                                                                                 |\n| public void save()                                      |                                                                                                                                   |\n\n### Method addDataSource\n\n    public FormBuildDataSource addDataSource(str name)\n\n#### Parameters\n\nname  \n\n#### Return Value\n\n### Method changedBy\n\nGets or sets the name of the user who last changed the application object.\n\n    public str changedBy([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name of the user.\n\n### Method changedDate\n\nGets or sets the date an application object was last changed.\n\n    public Date changedDate([Date value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe date an application object was last changed.\n\n### Method changedTime\n\nGets or sets the time an application object was last changed.\n\n    public str changedTime([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe time an application object was last changed.\n\n### Method createdBy\n\nGets or sets the name of the user who created the application object.\n\n    public str createdBy([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name of the user.\n\n### Method creationDate\n\nGets or sets the date an application object was created.\n\n    public Date creationDate([Date value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe date an application object was created.\n\n### Method creationTime\n\n    public str creationTime([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method dataSource\n\n    public FormBuildDataSource dataSource(int dataSourceNo)\n\n#### Parameters\n\ndataSourceNo  \n\n#### Return Value\n\n### Method dataSourceCount\n\n    public int dataSourceCount()\n\n#### Return Value\n\n### Method name\n\nGets or sets the name used in code to identify a form, report, table, query, or another Microsoft Dynamics AX application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe name used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   Begins with a letter.\n-   Doesn't exceed 250 characters.\n-   Can include numbers and underscore characters.\n-   Cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enumeration types, classes, and so on.\n\n### Method origin\n\n    public Guid origin([Guid value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method load\n\n    public void load(str name, [boolean buildMode])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nbuildMode  \n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the TreeNode class.\n\n    public void new([str name], [boolean buildMode])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nbuildMode  \n\n### Method save\n\n    public void save()\n\n## Class DataSetRun\n    class DataSetRun extends ObjectRun\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                                                                                              | Description                                                                   |\n|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------|\n| public FormDataSource addDataSource(TableId tableId, \\[str joinDataSourceName\\], \\[DataSourceLinkTypePropertyValues linkType\\], \\[FieldId joinFieldId\\], \\[str newDataSourceName\\]) | Adds a new data source to the dataSetRun class.                               |\n| public DataSet dataSet()                                                                                                                                                            |                                                                               |\n| public FormObjectSet dataSource(\\[AnyType objectSet\\])                                                                                                                              |                                                                               |\n| public FormObjectSet dataSourceById(int id)                                                                                                                                         |                                                                               |\n| public int dataSourceCount()                                                                                                                                                        |                                                                               |\n| public Array getActiveFields(int dataSourceId)                                                                                                                                      |                                                                               |\n| public container getChildrenById(str dataSourceName, \\[AnyType parentId\\])                                                                                                          | Gets the children of a data source by using the parent ID.                    |\n| public container getChildrenByIndex(str dataSourceName, \\[int parentIndex\\])                                                                                                        | Gets the children of a data source by using the parent index.                 |\n| public DataSetError getLastError()                                                                                                                                                  |                                                                               |\n| public AnyType getParentById(str dataSourceName, AnyType childId)                                                                                                                   | Gets the parent of a data source by using the child ID.                       |\n| public int getParentByIndex(str dataSourceName, int childIndex)                                                                                                                     | Gets the parent of a data source by using the child index.                    |\n| public int getRowIndexFromRowHierarchyId(str dataSourceName, AnyType id)                                                                                                            | Gets the row index on a data source by using a row hierarchy ID.              |\n| public boolean initComplete()                                                                                                                                                       |                                                                               |\n| public str name()                                                                                                                                                                   |                                                                               |\n| public FormObjectSet objectSet(\\[AnyType objectSet\\])                                                                                                                               |                                                                               |\n| public container pack()                                                                                                                                                             | Serializes the current instance of the DataSetRun class.                      |\n| public boolean runCalled()                                                                                                                                                          |                                                                               |\n| public boolean unpack(container pack)                                                                                                                                               | Deserializes the pack parameter value to an instance of the DataSetRun class. |\n| ::public static DataSetRun create(str name, container pack)                                                                                                                         |                                                                               |\n| ::public static DataSetRun createRunTime(container pack)                                                                                                                            |                                                                               |\n| public void setLastError(DataSetError error)                                                                                                                                        |                                                                               |\n| public void run()                                                                                                                                                                   |                                                                               |\n| public void setLookupMode()                                                                                                                                                         | Puts the dataset into lookup mode.                                            |\n| public void new(xArgs args)                                                                                                                                                         | Initializes a new instance of the Object class.                               |\n| public void finalize()                                                                                                                                                              |                                                                               |\n| public void createRecord(str formDataSourceName, \\[boolean append\\])                                                                                                                | Creates a new record.                                                         |\n| public void setActiveFields(int dataSourceId, Array fieldIds)                                                                                                                       |                                                                               |\n| public void setExternalContext(\\[Common externalContext\\])                                                                                                                          | Sets the external context on the dataSetRun object.                           |\n| public void init()                                                                                                                                                                  |                                                                               |\n| public void enableHierarchicalDataBrowsing(str hierarchyPKDataSourceName, FieldId hierarchyPKfieldId, str hierarchyFKDataSourceName, FieldId hierarchyFKfieldId)                    | Enables hierarchical data browsing.                                           |\n| public void disableHierarchicalDataBrowsing(str dataSourceName)                                                                                                                     | Disables hierarchical data browsing.                                          |\n\n### Method addDataSource\n\nAdds a new data source to the dataSetRun class.\n\n    public FormDataSource addDataSource(TableId tableId, [str joinDataSourceName], [DataSourceLinkTypePropertyValues linkType], [FieldId joinFieldId], [str newDataSourceName])\n\n#### Parameters\n\ntableId  \nThe name of the new data source.\n\n<!-- -->\n\njoinDataSourceName  \nThe name of the new data source.\n\n<!-- -->\n\nlinkType  \nThe name of the new data source.\n\n<!-- -->\n\njoinFieldId  \nThe name of the new data source.\n\n<!-- -->\n\nnewDataSourceName  \nThe name of the new data source.\n\n#### Return Value\n\nThe new data source.\n\n### Method dataSet\n\n    public DataSet dataSet()\n\n#### Return Value\n\n### Method dataSource\n\n    public FormObjectSet dataSource([AnyType objectSet])\n\n#### Parameters\n\nobjectSet  \n\n#### Return Value\n\n### Method dataSourceById\n\n    public FormObjectSet dataSourceById(int id)\n\n#### Parameters\n\nid  \n\n#### Return Value\n\n### Method dataSourceCount\n\n    public int dataSourceCount()\n\n#### Return Value\n\n### Method getActiveFields\n\n    public Array getActiveFields(int dataSourceId)\n\n#### Parameters\n\ndataSourceId  \n\n#### Return Value\n\n### Method getChildrenById\n\nGets the children of a data source by using the parent ID.\n\n    public container getChildrenById(str dataSourceName, [AnyType parentId])\n\n#### Parameters\n\ndataSourceName  \nThe parent ID.\n\n<!-- -->\n\nparentId  \nThe parent ID.\n\n#### Return Value\n\nA container for the children.\n\n### Method getChildrenByIndex\n\nGets the children of a data source by using the parent index.\n\n    public container getChildrenByIndex(str dataSourceName, [int parentIndex])\n\n#### Parameters\n\ndataSourceName  \nThe parent index.\n\n<!-- -->\n\nparentIndex  \nThe parent index.\n\n#### Return Value\n\nA container for the children.\n\n### Method getLastError\n\n    public DataSetError getLastError()\n\n#### Return Value\n\n### Method getParentById\n\nGets the parent of a data source by using the child ID.\n\n    public AnyType getParentById(str dataSourceName, AnyType childId)\n\n#### Parameters\n\ndataSourceName  \nThe child ID.\n\n<!-- -->\n\nchildId  \nThe child ID.\n\n#### Return Value\n\nThe parent ID.\n\n### Method getParentByIndex\n\nGets the parent of a data source by using the child index.\n\n    public int getParentByIndex(str dataSourceName, int childIndex)\n\n#### Parameters\n\ndataSourceName  \nThe child index.\n\n<!-- -->\n\nchildIndex  \nThe child index.\n\n#### Return Value\n\nThe parent ID.\n\n### Method getRowIndexFromRowHierarchyId\n\nGets the row index on a data source by using a row hierarchy ID.\n\n    public int getRowIndexFromRowHierarchyId(str dataSourceName, AnyType id)\n\n#### Parameters\n\ndataSourceName  \nThe row hierarchy ID.\n\n<!-- -->\n\nid  \nThe row hierarchy ID.\n\n#### Return Value\n\nThe row index.\n\n### Method initComplete\n\n    public boolean initComplete()\n\n#### Return Value\n\n### Method name\n\n    public str name()\n\n#### Return Value\n\n### Method objectSet\n\n    public FormObjectSet objectSet([AnyType objectSet])\n\n#### Parameters\n\nobjectSet  \n\n#### Return Value\n\n### Method pack\n\nSerializes the current instance of the DataSetRun class.\n\n    public container pack()\n\n#### Return Value\n\nA container that contains the current instance of the DataSetRun class.\n\n### Method runCalled\n\n    public boolean runCalled()\n\n#### Return Value\n\n### Method unpack\n\nDeserializes the pack parameter value to an instance of the DataSetRun class.\n\n    public boolean unpack(container pack)\n\n#### Parameters\n\npack  \nThe container from which to deserialize the instance.\n\n#### Return Value\n\ntrue if deserialization was successful; otherwise, false.\n\n### Method create\n\n    public static DataSetRun create(str name, container pack)\n\n#### Parameters\n\nname  \n\n<!-- -->\n\npack  \n\n#### Return Value\n\n### Method createRunTime\n\n    public static DataSetRun createRunTime(container pack)\n\n#### Parameters\n\npack  \n\n#### Return Value\n\n### Method setLastError\n\n    public void setLastError(DataSetError error)\n\n#### Parameters\n\nerror  \n\n### Method run\n\n    public void run()\n\n### Method setLookupMode\n\nPuts the dataset into lookup mode.\n\n    public void setLookupMode()\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(xArgs args)\n\n#### Parameters\n\nargs  \n\n### Method finalize\n\n    public void finalize()\n\n### Method createRecord\n\nCreates a new record.\n\n    public void createRecord(str formDataSourceName, [boolean append])\n\n#### Parameters\n\nformDataSourceName  \nThe record to append.\n\n<!-- -->\n\nappend  \nThe record to append.\n\n### Method setActiveFields\n\n    public void setActiveFields(int dataSourceId, Array fieldIds)\n\n#### Parameters\n\ndataSourceId  \n\n<!-- -->\n\nfieldIds  \n\n### Method setExternalContext\n\nSets the external context on the dataSetRun object.\n\n    public void setExternalContext([Common externalContext])\n\n#### Parameters\n\nexternalContext  \nThe external context.\n\n### Method init\n\n    public void init()\n\n### Method enableHierarchicalDataBrowsing\n\nEnables hierarchical data browsing.\n\n    public void enableHierarchicalDataBrowsing(str hierarchyPKDataSourceName, FieldId hierarchyPKfieldId, str hierarchyFKDataSourceName, FieldId hierarchyFKfieldId)\n\n#### Parameters\n\nhierarchyPKDataSourceName  \nThe ID of the foreign key field in the hierarchy.\n\n<!-- -->\n\nhierarchyPKfieldId  \nThe ID of the foreign key field in the hierarchy.\n\n<!-- -->\n\nhierarchyFKDataSourceName  \nThe ID of the foreign key field in the hierarchy.\n\n<!-- -->\n\nhierarchyFKfieldId  \nThe ID of the foreign key field in the hierarchy.\n\n### Method disableHierarchicalDataBrowsing\n\nDisables hierarchical data browsing.\n\n    public void disableHierarchicalDataBrowsing(str dataSourceName)\n\n#### Parameters\n\ndataSourceName  \nThe name of the data source to disable hierarchical data browsing on.\n\n## Class DataSourceMethodInfo\n    class DataSourceMethodInfo extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                           | Description                                     |\n|------------------------------------------------------------------------------------------------------------------|-------------------------------------------------|\n| public DisplayFunctionType displayType()                                                                         |                                                 |\n| public boolean isStatic()                                                                                        |                                                 |\n| public str name()                                                                                                |                                                 |\n| public Types returnType()                                                                                        |                                                 |\n| public int returnTypeId()                                                                                        |                                                 |\n| public void new(str name, DisplayFunctionType displayType, Types returnType, int returnTypeId, boolean isStatic) | Initializes a new instance of the Object class. |\n| public void finalize()                                                                                           |                                                 |\n\n### Method displayType\n\n    public DisplayFunctionType displayType()\n\n#### Return Value\n\n### Method isStatic\n\n    public boolean isStatic()\n\n#### Return Value\n\n### Method name\n\n    public str name()\n\n#### Return Value\n\n### Method returnType\n\n    public Types returnType()\n\n#### Return Value\n\n### Method returnTypeId\n\n    public int returnTypeId()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(str name, DisplayFunctionType displayType, Types returnType, int returnTypeId, boolean isStatic)\n\n#### Parameters\n\nname  \n\n<!-- -->\n\ndisplayType  \n\n<!-- -->\n\nreturnType  \n\n<!-- -->\n\nreturnTypeId  \n\n<!-- -->\n\nisStatic  \n\n### Method finalize\n\n    public void finalize()\n\n## Class DataSourceMethodInfoList\n    class DataSourceMethodInfoList extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                  | Description                                                       |\n|---------------------------------------------------------|-------------------------------------------------------------------|\n| public int count()                                      |                                                                   |\n| public DataSourceMethodInfo getMethod(int methodNumber) |                                                                   |\n| public void addMethod(DataSourceMethodInfo method)      |                                                                   |\n| public void new()                                       | Initializes a new instance of the DataSourceMethodInfoList class. |\n| public void finalize()                                  |                                                                   |\n\n### Method count\n\n    public int count()\n\n#### Return Value\n\n### Method getMethod\n\n    public DataSourceMethodInfo getMethod(int methodNumber)\n\n#### Parameters\n\nmethodNumber  \n\n#### Return Value\n\n### Method addMethod\n\n    public void addMethod(DataSourceMethodInfo method)\n\n#### Parameters\n\nmethod  \n\n### Method new\n\nInitializes a new instance of the DataSourceMethodInfoList class.\n\n    public void new()\n\n### Method finalize\n\n    public void finalize()\n\n## Class DataSourceNode\n    class DataSourceNode extends TreeNode\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                            | Description                                             |\n|---------------------------------------------------|---------------------------------------------------------|\n| public DataSourceMethodInfoList memberFunctions() |                                                         |\n| public void finalize()                            |                                                         |\n| private void new()                                | Initializes a new instance of the DataSourceNode class. |\n\n### Method memberFunctions\n\n    public DataSourceMethodInfoList memberFunctions()\n\n#### Return Value\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the DataSourceNode class.\n\n    private void new()\n\n## Class DataSourceRuntimeMetadataChangedEvtArgs\n    class DataSourceRuntimeMetadataChangedEvtArgs extends ManagedEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                                                    | Description                                               |\n|-------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------|\n| public str changedDataSourceName()                                                                                                        |                                                           |\n| public FieldId changedFieldId()                                                                                                           |                                                           |\n| public DataSourceMetadataChangeType changeType()                                                                                          |                                                           |\n| public str referencedDataSourceName()                                                                                                     |                                                           |\n| public void new(str changedDatasourceName, str referencedDatasourceName, FieldId changedFieldId, DataSourceMetadataChangeType changeType) | Initializes a new instance of the ManagedEventArgs class. |\n| public void finalize()                                                                                                                    |                                                           |\n\n### Method changedDataSourceName\n\n    public str changedDataSourceName()\n\n#### Return Value\n\n### Method changedFieldId\n\n    public FieldId changedFieldId()\n\n#### Return Value\n\n### Method changeType\n\n    public DataSourceMetadataChangeType changeType()\n\n#### Return Value\n\n### Method referencedDataSourceName\n\n    public str referencedDataSourceName()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the ManagedEventArgs class.\n\n    public void new(str changedDatasourceName, str referencedDatasourceName, FieldId changedFieldId, DataSourceMetadataChangeType changeType)\n\n#### Parameters\n\nchangedDatasourceName  \n\n<!-- -->\n\nreferencedDatasourceName  \n\n<!-- -->\n\nchangedFieldId  \n\n<!-- -->\n\nchangeType  \n\n### Method finalize\n\n    public void finalize()\n\n## Class DateTimeUtil\n    class DateTimeUtil extends Object\n\nThe DateTimeUtil class can be used to convert or modify utcdatetime and Timezone values.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                                                                                            | Description                                                                                                                                                    |\n|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ::public static DateTime addDays(DateTime t, int value)                                                                                                                           | Adds the specified number of days to a utcdatetime value.                                                                                                      |\n| ::public static DateTime addHours(DateTime t, int value)                                                                                                                          | Adds the specified number of hours to a utcdatetime value.                                                                                                     |\n| ::public static DateTime addMinutes(DateTime t, int value)                                                                                                                        | Adds the specified number of minutes to a utcdatetime value.                                                                                                   |\n| ::public static DateTime addMonths(DateTime t, int value)                                                                                                                         | Adds the specified number of months to a utcdatetime value.                                                                                                    |\n| ::public static DateTime addSeconds(DateTime t, Int64 value)                                                                                                                      | Adds the specified number of seconds to a utcdatetime value.                                                                                                   |\n| ::public static DateTime addYears(DateTime t, int value)                                                                                                                          | Adds the specified number of years to a utcdatetime value.                                                                                                     |\n| ::public static DateTime anyToDateTime(AnyType value)                                                                                                                             | Converts an anytype object to a utcdatetime value.                                                                                                             |\n| ::public static DateTime applyTimeZoneOffset(DateTime t, Timezone tz)                                                                                                             | Retrieves a utcdatetime value that is offset from the specified utcdatetime value by the amount that is indicated by the specified Timezone enumeration value. |\n| ::public static str applyTimeZoneOffsetFilter(QueryFilter filter)                                                                                                                 | Applies the time zone offset to the filter.                                                                                                                    |\n| ::public static str applyTimeZoneOffsetRange(QueryBuildRange range)                                                                                                               | Applies the time zone offset to the range.                                                                                                                     |\n| ::public static Date date(DateTime t)                                                                                                                                             | Converts the specified utcdatetime value to a date type.                                                                                                       |\n| ::public static int day(DateTime t)                                                                                                                                               | Retrieves the day of the month that is specified by a utcdatetime value.                                                                                       |\n| ::public static Timezone getClientMachineTimeZone()                                                                                                                               | Gets the Timezone enumeration value on the client computer.                                                                                                    |\n| ::public static Timezone getCompanyTimeZone()                                                                                                                                     | Gets the Timezone value that is set for the current legal entity.                                                                                              |\n| ::public static Int64 getDifference(DateTime t1, DateTime t2)                                                                                                                     | Gets the number of seconds between two specified utcdatetime values.                                                                                           |\n| ::public static Timezone getOriginatingTimeZone(DateTime t)                                                                                                                       | Gets the originating Timezone enumeration value of the specified utcdatetime value.                                                                            |\n| ::public static Date getSystemDate(Timezone tz)                                                                                                                                   |                                                                                                                                                                |\n| ::public static DateTime getSystemDateTime()                                                                                                                                      | Gets the current system time as a utcdatetime value.                                                                                                           |\n| ::public static TimeOfDay getTimeNow(Timezone tz)                                                                                                                                 |                                                                                                                                                                |\n| ::public static TimeZoneId getTimeZoneId(Timezone tz)                                                                                                                             |                                                                                                                                                                |\n| ::public static int getTimeZoneOffset(DateTime t, Timezone tz)                                                                                                                    | Gets the offset of the specified utcdatetime value to UTC by using the information in a Timezone enumeration value.                                            |\n| ::public static int getTimeZoneRule(DateTime t)                                                                                                                                   | Returns the time zone rule that takes effect on the given date.                                                                                                |\n| ::public static Date getToday(Timezone tz)                                                                                                                                        |                                                                                                                                                                |\n| ::public static PreferredCalendar getUserPreferredCalendar()                                                                                                                      | Gets the PreferredCalendar enumeration value for the current user.                                                                                             |\n| ::public static Timezone getUserPreferredTimeZone()                                                                                                                               | Gets the PreferredTimezone enumeration value for the current user.                                                                                             |\n| ::public static int hour(DateTime t)                                                                                                                                              | Retrieves the hour of the day that is specified by a utcdatetime value.                                                                                        |\n| ::public static DateTime maxValue()                                                                                                                                               | Retrieves the maximum value that is allowed for a variable of the utcdatetime type.                                                                            |\n| ::public static int minute(DateTime t)                                                                                                                                            | Retrieves the minute in the hour that is specified by a utcdatetime value.                                                                                     |\n| ::public static DateTime minValue()                                                                                                                                               | Retrieves the minimum value that is allowed for a variable of the utcdatetime type.                                                                            |\n| ::public static int month(DateTime t)                                                                                                                                             | Retrieves the month in the year that is specified by a utcdatetime value.                                                                                      |\n| ::public static DateTime newDateTime(Date date, TimeOfDay time, \\[Timezone tzOffsetToRemove\\])                                                                                    | Creates a new utcdatetime value by using the specified date and timeOfDay values.                                                                              |\n| ::public static DateTime parse(str s)                                                                                                                                             | Creates a new utcdatetime value from the specified string.                                                                                                     |\n| ::public static container populateTimeZoneInfo(int year, Timezone tz)                                                                                                             | Retrieves start and end dates and time bias.                                                                                                                   |\n| ::public static DateTime removeTimeZoneOffset(DateTime t, Timezone tz)                                                                                                            | Removes the offset that is indicated by a Timezone enumeration value from the specified utcdatetime value.                                                     |\n| ::public static str removeTimeZoneOffsetFilter(QueryFilter filter)                                                                                                                | Removes the time zone offset from the filter.                                                                                                                  |\n| ::public static str removeTimeZoneOffsetRange(QueryBuildRange range)                                                                                                              | Removes the time zone offset from the range.                                                                                                                   |\n| ::public static int second(DateTime t)                                                                                                                                            | Retrieves the seconds in a minute that is specified by a utcdatetime value.                                                                                    |\n| ::public static TimeOfDay time(DateTime t)                                                                                                                                        | Retrieves the number of seconds that have elapsed since midnight as a timeOfDay value from the specified utcdatetime value.                                    |\n| ::public static str toFormattedStr(DateTime t, int sequence, int day, int separator1, int month, int separator2, int year, int timeSeparator1, int timeSeparator2, \\[int flags\\]) |                                                                                                                                                                |\n| ::public static str toStr(DateTime t)                                                                                                                                             | Converts a utcdatetime value to a string in the following format: YYYY-MM-DDThh:mm:ss, where T is a character literal.                                         |\n| ::public static DateTime utcNow()                                                                                                                                                 | Retrieves a utcdatetime value that indicates the current system time.                                                                                          |\n| ::public static int year(DateTime t)                                                                                                                                              | Retrieves the year that is specified by a utcdatetime value.                                                                                                   |\n| ::public static void setSystemDateTime(DateTime t)                                                                                                                                | Sets the date and time of the system to the specified utcdatetime value.                                                                                       |\n| ::public static void setCompanyTimeZone(Timezone tz, \\[boolean persist\\])                                                                                                         | Sets the Timezone enumeration value that is used by the current company.                                                                                       |\n| ::public static void setUserPreferredCalendar(PreferredCalendar calendar)                                                                                                         | Sets the value of the PreferredCalendar enumeration type of the current user for the current session.                                                          |\n| ::public static void setUserPreferredTimeZone(Timezone tz, \\[boolean persist\\])                                                                                                   | Sets the preferred time zone of the user to the specified Timezone enumeration value.                                                                          |\n| private void new()                                                                                                                                                                | Initializes a new instance of the DateTimeUtil class.                                                                                                          |\n\n### Method addDays\n\nAdds the specified number of days to a utcdatetime value.\n\n    public static DateTime addDays(DateTime t, int value)\n\n#### Parameters\n\nt  \nThe number of days to add.\n\n<!-- -->\n\nvalue  \nThe number of days to add.\n\n#### Return Value\n\nA new utcdatetime value.\n\n#### Remarks\n\nIf the value of the value parameter is negative, days will be subtracted.\n\n### Method addHours\n\nAdds the specified number of hours to a utcdatetime value.\n\n    public static DateTime addHours(DateTime t, int value)\n\n#### Parameters\n\nt  \nThe number of hours to add.\n\n<!-- -->\n\nvalue  \nThe number of hours to add.\n\n#### Return Value\n\nA new utcdatetime value.\n\n#### Remarks\n\nIf the value of the value parameter is negative, hours will be subtracted.\n\n### Method addMinutes\n\nAdds the specified number of minutes to a utcdatetime value.\n\n    public static DateTime addMinutes(DateTime t, int value)\n\n#### Parameters\n\nt  \nThe number of minutes to add.\n\n<!-- -->\n\nvalue  \nThe number of minutes to add.\n\n#### Return Value\n\nA new utcdatetime value.\n\n#### Remarks\n\nIf the value of the value parameter is negative, minutes will be subtracted.\n\n### Method addMonths\n\nAdds the specified number of months to a utcdatetime value.\n\n    public static DateTime addMonths(DateTime t, int value)\n\n#### Parameters\n\nt  \nThe number of months to add.\n\n<!-- -->\n\nvalue  \nThe number of months to add.\n\n#### Return Value\n\nA new utcdatetime value.\n\n#### Remarks\n\nIf the value of the value parameter is negative, months will be subtracted.\n\n### Method addSeconds\n\nAdds the specified number of seconds to a utcdatetime value.\n\n    public static DateTime addSeconds(DateTime t, Int64 value)\n\n#### Parameters\n\nt  \nThe number of seconds to add.\n\n<!-- -->\n\nvalue  \nThe number of seconds to add.\n\n#### Return Value\n\nA new utcdatetime value.\n\n#### Remarks\n\nIf the value of the value parameter is negative, seconds will be subtracted.\n\n### Method addYears\n\nAdds the specified number of years to a utcdatetime value.\n\n    public static DateTime addYears(DateTime t, int value)\n\n#### Parameters\n\nt  \nThe number of years to add.\n\n<!-- -->\n\nvalue  \nThe number of years to add.\n\n#### Return Value\n\nA new utcdatetime value.\n\n#### Remarks\n\nIf the value of the value parameter is negative, years will be subtracted.\n\n### Method anyToDateTime\n\nConverts an anytype object to a utcdatetime value.\n\n    public static DateTime anyToDateTime(AnyType value)\n\n#### Parameters\n\nvalue  \nThe object to convert.\n\n#### Return Value\n\nA new utcdatetime value.\n\n#### Remarks\n\nThe following example string shows the format of a date-time string that this anyToDateTime method can correctly convert: \"2009-01-28T13:44:55\". The output of the DateTimeUtil::utcNow method is valid input into the anyToDateTime method.\n\n### Method applyTimeZoneOffset\n\nRetrieves a utcdatetime value that is offset from the specified utcdatetime value by the amount that is indicated by the specified Timezone enumeration value.\n\n    public static DateTime applyTimeZoneOffset(DateTime t, Timezone tz)\n\n#### Parameters\n\nt  \nA Timezone enumeration value that indicates the new offset to use.\n\n<!-- -->\n\ntz  \nA Timezone enumeration value that indicates the new offset to use.\n\n#### Return Value\n\nA new utcdatetime value.\n\n### Method applyTimeZoneOffsetFilter\n\nApplies the time zone offset to the filter.\n\n    public static str applyTimeZoneOffsetFilter(QueryFilter filter)\n\n#### Parameters\n\nfilter  \n\n#### Return Value\n\nThe new date/time range value.\n\n### Method applyTimeZoneOffsetRange\n\nApplies the time zone offset to the range.\n\n    public static str applyTimeZoneOffsetRange(QueryBuildRange range)\n\n#### Parameters\n\nrange  \n\n#### Return Value\n\nThe new date/time range value.\n\n### Method date\n\nConverts the specified utcdatetime value to a date type.\n\n    public static Date date(DateTime t)\n\n#### Parameters\n\nt  \nThe utcdatetime value to convert.\n\n#### Return Value\n\nA date value.\n\n### Method day\n\nRetrieves the day of the month that is specified by a utcdatetime value.\n\n    public static int day(DateTime t)\n\n#### Parameters\n\nt  \nA utcdatetime value for which to retrieve the value of the day component.\n\n#### Return Value\n\nThe day of the month of the specified utcdatetime value.\n\n### Method getClientMachineTimeZone\n\nGets the Timezone enumeration value on the client computer.\n\n    public static Timezone getClientMachineTimeZone()\n\n#### Return Value\n\nThe Timezone enumeration value on the client computer.\n\n### Method getCompanyTimeZone\n\nGets the Timezone value that is set for the current legal entity.\n\n    public static Timezone getCompanyTimeZone()\n\n#### Return Value\n\nThe Timezone value that is set for the current legal entity.\n\n### Method getDifference\n\nGets the number of seconds between two specified utcdatetime values.\n\n    public static Int64 getDifference(DateTime t1, DateTime t2)\n\n#### Parameters\n\nt1  \nThe second utcdatetime value.\n\n<!-- -->\n\nt2  \nThe second utcdatetime value.\n\n#### Return Value\n\nThe number of seconds between the two specified utcdatetime values.\n\n### Method getOriginatingTimeZone\n\nGets the originating Timezone enumeration value of the specified utcdatetime value.\n\n    public static Timezone getOriginatingTimeZone(DateTime t)\n\n#### Parameters\n\nt  \nThe utcdatetime value for which to retrieve the time zone.\n\n#### Return Value\n\nThe Timezone enumeration value of the specified utcdatetime value.\n\n### Method getSystemDate\n\n    public static Date getSystemDate(Timezone tz)\n\n#### Parameters\n\ntz  \n\n#### Return Value\n\n### Method getSystemDateTime\n\nGets the current system time as a utcdatetime value.\n\n    public static DateTime getSystemDateTime()\n\n#### Return Value\n\nThe current system time as a utcdatetime value.\n\n#### Remarks\n\nIf the system time has a fixed value, it will be returned. Otherwise, the current date and time from the local computer will be returned.\n\n### Method getTimeNow\n\n    public static TimeOfDay getTimeNow(Timezone tz)\n\n#### Parameters\n\ntz  \n\n#### Return Value\n\n### Method getTimeZoneId\n\n    public static TimeZoneId getTimeZoneId(Timezone tz)\n\n#### Parameters\n\ntz  \n\n#### Return Value\n\n### Method getTimeZoneOffset\n\nGets the offset of the specified utcdatetime value to UTC by using the information in a Timezone enumeration value.\n\n    public static int getTimeZoneOffset(DateTime t, Timezone tz)\n\n#### Parameters\n\nt  \nA Timezone enumeration value that indicates the time zone of the t parameter.\n\n<!-- -->\n\ntz  \nA Timezone enumeration value that indicates the time zone of the t parameter.\n\n#### Return Value\n\nAn integer that indicates the offset of the specified utcdatetime value to UTC.\n\n### Method getTimeZoneRule\n\nReturns the time zone rule that takes effect on the given date.\n\n    public static int getTimeZoneRule(DateTime t)\n\n#### Parameters\n\nt  \n\n#### Return Value\n\nThe time zone rule for the given date.\n\n### Method getToday\n\n    public static Date getToday(Timezone tz)\n\n#### Parameters\n\ntz  \n\n#### Return Value\n\n### Method getUserPreferredCalendar\n\nGets the PreferredCalendar enumeration value for the current user.\n\n    public static PreferredCalendar getUserPreferredCalendar()\n\n#### Return Value\n\nThe PreferredCalendar enumeration value for the current user.\n\n### Method getUserPreferredTimeZone\n\nGets the PreferredTimezone enumeration value for the current user.\n\n    public static Timezone getUserPreferredTimeZone()\n\n#### Return Value\n\nThe PreferredTimezone enumeration value for the current user.\n\n### Method hour\n\nRetrieves the hour of the day that is specified by a utcdatetime value.\n\n    public static int hour(DateTime t)\n\n#### Parameters\n\nt  \nA utcdatetime value for which to retrieve the value of the hour component.\n\n#### Return Value\n\nThe hour in the day of the specified utcdatetime value.\n\n### Method maxValue\n\nRetrieves the maximum value that is allowed for a variable of the utcdatetime type.\n\n    public static DateTime maxValue()\n\n#### Return Value\n\nThe maximum value that is allowed for a variable of the utcdatetime type.\n\n### Method minute\n\nRetrieves the minute in the hour that is specified by a utcdatetime value.\n\n    public static int minute(DateTime t)\n\n#### Parameters\n\nt  \nA utcdatetime value for which to retrieve the value of the minute component.\n\n#### Return Value\n\nThe minute in the hour of the specified utcdatetime value.\n\n### Method minValue\n\nRetrieves the minimum value that is allowed for a variable of the utcdatetime type.\n\n    public static DateTime minValue()\n\n#### Return Value\n\nThe minimum value that is allowed for a variable of the utcdatetime type.\n\n### Method month\n\nRetrieves the month in the year that is specified by a utcdatetime value.\n\n    public static int month(DateTime t)\n\n#### Parameters\n\nt  \nA utcdatetime value for which to retrieve the value of the month component.\n\n#### Return Value\n\nThe month in the year of the specified utcdatetime value.\n\n### Method newDateTime\n\nCreates a new utcdatetime value by using the specified date and timeOfDay values.\n\n    public static DateTime newDateTime(Date date, TimeOfDay time, [Timezone tzOffsetToRemove])\n\n#### Parameters\n\ndate  \nThe time zone in which to create the new utcdatetime value; optional.\n\n<!-- -->\n\ntime  \nThe time zone in which to create the new utcdatetime value; optional.\n\n<!-- -->\n\ntzOffsetToRemove  \nThe time zone in which to create the new utcdatetime value; optional.\n\n#### Return Value\n\nA new utcdatetime value.\n\n#### Remarks\n\nIf no value is specified for the tzOffsetToRemove parameter, the utcdatetime value will be created in the UTC time zone.\n\n### Method parse\n\nCreates a new utcdatetime value from the specified string.\n\n    public static DateTime parse(str s)\n\n#### Parameters\n\ns  \nA string in the following format: yyyy-mm-ddThh:mm:ss.\n\n#### Return Value\n\nA new utcdatetime value from the specified string.\n\n### Method populateTimeZoneInfo\n\nRetrieves start and end dates and time bias.\n\n    public static container populateTimeZoneInfo(int year, Timezone tz)\n\n#### Parameters\n\nyear  \nThe time zone.\n\n<!-- -->\n\ntz  \nThe time zone.\n\n#### Return Value\n\nThe start and end dates and time bias.\n\n### Method removeTimeZoneOffset\n\nRemoves the offset that is indicated by a Timezone enumeration value from the specified utcdatetime value.\n\n    public static DateTime removeTimeZoneOffset(DateTime t, Timezone tz)\n\n#### Parameters\n\nt  \nThe Timezone enumeration value to remove.\n\n<!-- -->\n\ntz  \nThe Timezone enumeration value to remove.\n\n#### Return Value\n\nA utcdatetime value without a time zone offset.\n\n### Method removeTimeZoneOffsetFilter\n\nRemoves the time zone offset from the filter.\n\n    public static str removeTimeZoneOffsetFilter(QueryFilter filter)\n\n#### Parameters\n\nfilter  \n\n#### Return Value\n\nThe new date/time range value.\n\n### Method removeTimeZoneOffsetRange\n\nRemoves the time zone offset from the range.\n\n    public static str removeTimeZoneOffsetRange(QueryBuildRange range)\n\n#### Parameters\n\nrange  \n\n#### Return Value\n\nThe new date/time range value.\n\n### Method second\n\nRetrieves the seconds in a minute that is specified by a utcdatetime value.\n\n    public static int second(DateTime t)\n\n#### Parameters\n\nt  \nA utcdatetime value for which to retrieve the value of the second component.\n\n#### Return Value\n\nThe second in the minute of the specified utcdatetime value.\n\n### Method time\n\nRetrieves the number of seconds that have elapsed since midnight as a timeOfDay value from the specified utcdatetime value.\n\n    public static TimeOfDay time(DateTime t)\n\n#### Parameters\n\nt  \nA utcdatetime value for which to retrieve the time.\n\n#### Return Value\n\nA timeOfDay value that indicates the number of seconds that have elapsed since midnight.\n\n### Method toFormattedStr\n\n    public static str toFormattedStr(DateTime t, int sequence, int day, int separator1, int month, int separator2, int year, int timeSeparator1, int timeSeparator2, [int flags])\n\n#### Parameters\n\nt  \n\n<!-- -->\n\nsequence  \n\n<!-- -->\n\nday  \n\n<!-- -->\n\nseparator1  \n\n<!-- -->\n\nmonth  \n\n<!-- -->\n\nseparator2  \n\n<!-- -->\n\nyear  \n\n<!-- -->\n\ntimeSeparator1  \n\n<!-- -->\n\ntimeSeparator2  \n\n<!-- -->\n\nflags  \n\n#### Return Value\n\n### Method toStr\n\nConverts a utcdatetime value to a string in the following format: YYYY-MM-DDThh:mm:ss, where T is a character literal.\n\n    public static str toStr(DateTime t)\n\n#### Parameters\n\nt  \nThe utcdatetime value to convert.\n\n#### Return Value\n\nThe string representation of the specified utcdatetime value.\n\n### Method utcNow\n\nRetrieves a utcdatetime value that indicates the current system time.\n\n    public static DateTime utcNow()\n\n#### Return Value\n\nThe current system time as a utcdatetime value.\n\n#### Remarks\n\nThis method is run on the server, so that the time that is returned is the system time of the server.\n\n### Method year\n\nRetrieves the year that is specified by a utcdatetime value.\n\n    public static int year(DateTime t)\n\n#### Parameters\n\nt  \nA utcdatetime value for which to retrieve the value of the year component.\n\n#### Return Value\n\nThe year of the specified utcdatetime value.\n\n### Method setSystemDateTime\n\nSets the date and time of the system to the specified utcdatetime value.\n\n    public static void setSystemDateTime(DateTime t)\n\n#### Parameters\n\nt  \nA utcdatetime value to which to set the system date and time.\n\n### Method setCompanyTimeZone\n\nSets the Timezone enumeration value that is used by the current company.\n\n    public static void setCompanyTimeZone(Timezone tz, [boolean persist])\n\n#### Parameters\n\ntz  \nA Boolean value that indicates whether the new value should be persisted.\n\n<!-- -->\n\npersist  \nA Boolean value that indicates whether the new value should be persisted.\n\n### Method setUserPreferredCalendar\n\nSets the value of the PreferredCalendar enumeration type of the current user for the current session.\n\n    public static void setUserPreferredCalendar(PreferredCalendar calendar)\n\n#### Parameters\n\ncalendar  \nThe PreferredCalendar enumeration value to set.\n\n### Method setUserPreferredTimeZone\n\nSets the preferred time zone of the user to the specified Timezone enumeration value.\n\n    public static void setUserPreferredTimeZone(Timezone tz, [boolean persist])\n\n#### Parameters\n\ntz  \nA Boolean value that indicates whether the new value should be persisted.\n\n<!-- -->\n\npersist  \nA Boolean value that indicates whether the new value should be persisted.\n\n### Method new\n\nInitializes a new instance of the DateTimeUtil class.\n\n    private void new()\n\n## Class DialogBox\n    class DialogBox extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                               | Description                                     |\n|------------------------------------------------------------------------------------------------------|-------------------------------------------------|\n| public DialogButton retval()                                                                         |                                                 |\n| public void new(DialogBoxType type, str text, str title, str bottomtext, DialogButton defaultButton) | Initializes a new instance of the Object class. |\n| public void finalize()                                                                               |                                                 |\n\n### Method retval\n\n    public DialogButton retval()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(DialogBoxType type, str text, str title, str bottomtext, DialogButton defaultButton)\n\n#### Parameters\n\ntype  \n\n<!-- -->\n\ntext  \n\n<!-- -->\n\ntitle  \n\n<!-- -->\n\nbottomtext  \n\n<!-- -->\n\ndefaultButton  \n\n### Method finalize\n\n    public void finalize()\n\n## Class DictClass\n    class DictClass extends Object\n\nThe DictClass class provides information about a class.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                            | Description                                                                                                                                   |\n|-------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|\n| public AnyType callObject(str methodName, Object Called, VarArg ) | Calls a method on an object.                                                                                                                  |\n| public AnyType callStatic(str methodName, VarArg )                | Calls a static method.                                                                                                                        |\n| public ClassId extend()                                           | Provides the ID for the class that a specified class extends.                                                                                 |\n| public List extendedBy(\\[boolean allLevels\\])                     | Provides a List object for the classes that extend a specified class.                                                                         |\n| public Array getAllAttributes()                                   | Retrieves the full set of attributes for the class.                                                                                           |\n| public Object getAttribute(str attribute)                         | Gets the first matching attribute from the class header metadata, creates an instance of the Object class that represents it, and returns it. |\n| public Array getAttributes(str attribute)                         |                                                                                                                                               |\n| public ClassId id()                                               | Provides the ID for a specified class.                                                                                                        |\n| public ClassId implements(int no)                                 | Provides the ID for a specified interface that a class implements.                                                                            |\n| public int implementsCnt()                                        | Indicates the number of interfaces that a class implements.                                                                                   |\n| public boolean isAbstract()                                       | Indicates whether a class is abstract.                                                                                                        |\n| public boolean isFinal()                                          | Indicates whether a class is final.                                                                                                           |\n| public boolean isInterface()                                      | Indicates whether an object is an interface.                                                                                                  |\n| public boolean isKernel()                                         | Indicates whether a class is a kernel class.                                                                                                  |\n| public boolean isRunable()                                        | Indicates whether a class can be run.                                                                                                         |\n| public Object makeObject(VarArg )                                 | Creates an object.                                                                                                                            |\n| public str name()                                                 | Provides the name of a class.                                                                                                                 |\n| public str objectMethod(int methodNumber)                         | Provides the name of a specified instance method in a class.                                                                                  |\n| public int objectMethodCnt()                                      | Indicates the number of instance methods in a class.                                                                                          |\n| public DictMethod objectMethodObject(int methodNumber)            | Provides information about a specified instance method in a class by returning a DictMethod object.                                           |\n| public ClassRunMode RunMode()                                     | Specifies where a class is executed.                                                                                                          |\n| public str staticMethod(int methodNumber)                         | Provides the name of a specified static method in a class.                                                                                    |\n| public int staticMethodCnt()                                      | Indicates the number of static methods in a class.                                                                                            |\n| public DictMethod staticMethodObject(int methodNumber)            | Provides information about a specified static method in a class by returning a DictMethod object.                                             |\n| ::public static Array getAttributedClasses(str attribute)         |                                                                                                                                               |\n| ::public static Object createObject(str className, VarArg )       |                                                                                                                                               |\n| public void new(ClassId classId)                                  | Initializes a new instance of the Object class.                                                                                               |\n\n### Method callObject\n\nCalls a method on an object.\n\n    public AnyType callObject(str methodName, Object Called, VarArg )\n\n#### Parameters\n\nmethodName  \n\n<!-- -->\n\nCalled  \n\n<!-- -->\n\n  \n\n#### Return Value\n\nAn anytype data type value that is returned by the specified method.\n\n#### Remarks\n\nYou must create an instance of the DictClass object by using a class that contains the method that you pass to the callObject method. If an attacker can control the input to the callObject method, a security risk exists. Therefore, this method runs under code access security. Calls to this method on the server require permission from the InteropPermission class. Make sure that the user has development rights by setting the security key to SysDevelopment on the control that calls this method.\n\n#### Examples\n\nThis example calls the toString instance method in the Info class, for which the global instance of this class is named infolog, and then prints the value that is returned from the call.\n\n    static void Job_Example_DictClass_CallObject(Args _args) \n    { \n        DictClass dictClass; \n        anytype   retVal; \n        str      resultOutput; \n        ExecutePermission perm; \n        perm = new ExecutePermission(); \n        // Grants permission to execute the DictClass.callObject method. \n        // DictClass.callObject runs under code access security. \n        perm.assert(); \n        dictClass = new DictClass(classidget(infolog)); \n        if (dictClass != null) \n        { \n            retVal       = dictClass.callObject(\"toString\", infolog); \n            resultOutput = strfmt(\"Return value is %1\", retVal); \n            print resultOutput; \n            pause; \n        } \n        // Closes the code access permission scope. \n        CodeAccessPermission::revertAssert(); \n    }\n\n### Method callStatic\n\nCalls a static method.\n\n    public AnyType callStatic(str methodName, VarArg )\n\n#### Parameters\n\nmethodName  \n\n<!-- -->\n\n  \n\n#### Return Value\n\nAn anytype data type value that is returned by the specified method.\n\n#### Remarks\n\nYou must create an instance of an object of the DictClass class by using a class that contains the method passed to the callStatic method. If an attacker can control the input to the callStatic method, a security risk exists. Therefore, this method runs under the code access security. Calls to this method on the server require permission from the ExecutePermission class. Make sure that the user has development rights by setting the security key to the SysDevelopment on the control that calls this method.\n\n#### Examples\n\nThis example calls the AOSClientMode method in the Session class and then prints the value returned from the call.\n\n    static void Job_Example_DictClass_CallStatic(Args _args) \n    { \n        DictClass dictClass; \n        anytype   retVal; \n        str       resultOutput; \n        ExecutePermission perm; \n        perm = new ExecutePermission(); \n        // Grants permission to execute the DictClass.callStatic method. \n        // DictClass.callStatic runs under code access security. \n        perm.assert(); \n        dictClass = new DictClass(classnum(Session)); \n        if (dictClass != null) \n        { \n            retVal       = dictClass.callStatic(\"AOSClientMode\"); \n            resultOutput = strfmt( \n                \"Return value of AOSClientMode is %1\",  \n                retVal); \n            print resultOutput; \n            pause; \n        } \n        // Closes the code access permission scope. \n        CodeAccessPermission::revertAssert(); \n    }\n\n### Method extend\n\nProvides the ID for the class that a specified class extends.\n\n    public ClassId extend()\n\n#### Return Value\n\nA value of the classID system data type that indicates the class ID; 0 if a class does not extend another class.\n\n### Method extendedBy\n\nProvides a List object for the classes that extend a specified class.\n\n    public List extendedBy([boolean allLevels])\n\n#### Parameters\n\nallLevels  \n\n#### Return Value\n\nA List object for the classes that extend the class.\n\n### Method getAllAttributes\n\nRetrieves the full set of attributes for the class.\n\n    public Array getAllAttributes()\n\n#### Return Value\n\nThe array of SysAttribute objects for the class.\n\n### Method getAttribute\n\nGets the first matching attribute from the class header metadata, creates an instance of the Object class that represents it, and returns it.\n\n    public Object getAttribute(str attribute)\n\n#### Parameters\n\nattribute  \nThe attribute for which to search.\n\n#### Return Value\n\nThe attribute as an instance of the Object class.\n\n### Method getAttributes\n\n    public Array getAttributes(str attribute)\n\n#### Parameters\n\nattribute  \n\n#### Return Value\n\n### Method id\n\nProvides the ID for a specified class.\n\n    public ClassId id()\n\n#### Return Value\n\nA value of the classId system data type that indicates the class ID.\n\n### Method implements\n\nProvides the ID for a specified interface that a class implements.\n\n    public ClassId implements(int no)\n\n#### Parameters\n\nno  \nAn integer data type that specifies the interface, based on the order of the interfaces in the class declaration.\n\n#### Return Value\n\nA value of the classID system data type that indicates the class ID.\n\n### Method implementsCnt\n\nIndicates the number of interfaces that a class implements.\n\n    public int implementsCnt()\n\n#### Return Value\n\nAn integer data type value for the number of interfaces that a class implements.\n\n### Method isAbstract\n\nIndicates whether a class is abstract.\n\n    public boolean isAbstract()\n\n#### Return Value\n\ntrue if the class is abstract; otherwise, false.\n\n### Method isFinal\n\nIndicates whether a class is final.\n\n    public boolean isFinal()\n\n#### Return Value\n\ntrue if the class is final; otherwise, false.\n\n### Method isInterface\n\nIndicates whether an object is an interface.\n\n    public boolean isInterface()\n\n#### Return Value\n\ntrue if the object is an interface; otherwise, false.\n\n### Method isKernel\n\nIndicates whether a class is a kernel class.\n\n    public boolean isKernel()\n\n#### Return Value\n\ntrue if the class is a kernel class; otherwise, false.\n\n### Method isRunable\n\nIndicates whether a class can be run.\n\n    public boolean isRunable()\n\n#### Return Value\n\ntrue if the class can be run; otherwise, false.\n\n### Method makeObject\n\nCreates an object.\n\n    public Object makeObject(VarArg )\n\n#### Parameters\n\n  \n\n#### Return Value\n\nAn instance of the Object class.\n\n#### Remarks\n\nYou can pass an instance of the Object class to the DictClass::callObject method.\n\n### Method name\n\nProvides the name of a class.\n\n    public str name()\n\n#### Return Value\n\nA string data type value for the class name.\n\n### Method objectMethod\n\nProvides the name of a specified instance method in a class.\n\n    public str objectMethod(int methodNumber)\n\n#### Parameters\n\nmethodNumber  \nAn integer data type that specifies a method in a class, based on the order of the methods.\n\n#### Return Value\n\nA string data type value for the method name.\n\n#### Remarks\n\nThe \\_methodNumber parameter starts counting at 1.\n\n### Method objectMethodCnt\n\nIndicates the number of instance methods in a class.\n\n    public int objectMethodCnt()\n\n#### Return Value\n\nAn integer value that indicates the number of instance methods in a class.\n\n### Method objectMethodObject\n\nProvides information about a specified instance method in a class by returning a DictMethod object.\n\n    public DictMethod objectMethodObject(int methodNumber)\n\n#### Parameters\n\nmethodNumber  \nAn integer data type that specifies a method in a class, based on the order of the methods. Numbering starts at 1.\n\n#### Return Value\n\nA DictMethod object that contains information about a specified method in a class.\n\n#### Remarks\n\nThe \\_methodNumber parameter starts counting at 1.\n\n### Method RunMode\n\nSpecifies where a class is executed.\n\n    public ClassRunMode RunMode()\n\n#### Return Value\n\nA ClassRunMode system enumeration value that indicates where a class is executed.\n\n#### Remarks\n\nThe following are the possible return values:\n\n-   The Called value.\n-   The Client value.\n-   The ClientorServer value.\n-   The Server value.\n\n### Method staticMethod\n\nProvides the name of a specified static method in a class.\n\n    public str staticMethod(int methodNumber)\n\n#### Parameters\n\nmethodNumber  \nAn integer data type that specifies a method in a class, based on the order of the methods.\n\n#### Return Value\n\nA string data type value for the method name.\n\n#### Remarks\n\nThe \\_methodNumber parameter starts counting at 1.\n\n### Method staticMethodCnt\n\nIndicates the number of static methods in a class.\n\n    public int staticMethodCnt()\n\n#### Return Value\n\nAn integer that indicates the number of static methods in a class.\n\n### Method staticMethodObject\n\nProvides information about a specified static method in a class by returning a DictMethod object.\n\n    public DictMethod staticMethodObject(int methodNumber)\n\n#### Parameters\n\nmethodNumber  \nAn integer data type that specifies a method in a class, based on the order of the methods.\n\n#### Return Value\n\nA DictMethod object that contains information about a specified method in a class.\n\n#### Remarks\n\nThe \\_methodNumber parameter starts counting at 1.\n\n### Method getAttributedClasses\n\n    public static Array getAttributedClasses(str attribute)\n\n#### Parameters\n\nattribute  \n\n#### Return Value\n\n### Method createObject\n\n    public static Object createObject(str className, VarArg )\n\n#### Parameters\n\nclassName  \n\n<!-- -->\n\n  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(ClassId classId)\n\n#### Parameters\n\nclassId  \nA value of the classId system data type that indicates the system ID of a class.\n\n#### Remarks\n\nClass IDs are unsigned integers and are therefore always in the range 0 to 65535. The method does not fail if an invalid class ID is passed.You can pass a class name to the method instead of a class ID by using the classNum intrinsic function. For more information, see “Intrinsic Functions.”\n\n## Class DictCompositeChildDataEntity\n    class DictCompositeChildDataEntity extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                           | Description |\n|------------------------------------------------------------------|-------------|\n| public int level()                                               |             |\n| public str name()                                                |             |\n| public str dataEntity()                                          |             |\n| public str relation()                                            |             |\n| public str tags()                                                |             |\n| public DictCompositeChildDataEntity parent()                     |             |\n| public void new(str compositeDataEntityName, str dataEntityName) |             |\n\n### Method level\n\n    public int level()\n\n#### Return Value\n\n### Method name\n\n    public str name()\n\n#### Return Value\n\n### Method dataEntity\n\n    public str dataEntity()\n\n#### Return Value\n\n### Method relation\n\n    public str relation()\n\n#### Return Value\n\n### Method tags\n\n    public str tags()\n\n#### Return Value\n\n### Method parent\n\n    public DictCompositeChildDataEntity parent()\n\n#### Return Value\n\n### Method new\n\n    public void new(str compositeDataEntityName, str dataEntityName)\n\n#### Parameters\n\ncompositeDataEntityName  \n\n<!-- -->\n\ndataEntityName  \n\n## Class DictCompositeDataEntity\n    class DictCompositeDataEntity extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                       | Description |\n|--------------------------------------------------------------|-------------|\n| ::public static List listOfCompositeDataEntities()           |             |\n| public str label()                                           |             |\n| public boolean isReadOnly()                                  |             |\n| public str modules()                                         |             |\n| public str configurationKey()                                |             |\n| public str countryRegionCodes()                              |             |\n| public str countryRegionContextField()                       |             |\n| public str developerDocumentation()                          |             |\n| public EntityCategory entityCategory()                       |             |\n| public str formRef()                                         |             |\n| public str singularLabel()                                   |             |\n| public str tags()                                            |             |\n| public str publicCollectionName()                            |             |\n| public str publicEntityName()                                |             |\n| public int dataEntityCount()                                 |             |\n| public DictCompositeChildDataEntity childDataEntityNo(int n) |             |\n| public void new(str compositeDataEntityName)                 |             |\n\n### Method listOfCompositeDataEntities\n\n    public static List listOfCompositeDataEntities()\n\n#### Return Value\n\n### Method label\n\n    public str label()\n\n#### Return Value\n\n### Method isReadOnly\n\n    public boolean isReadOnly()\n\n#### Return Value\n\n### Method modules\n\n    public str modules()\n\n#### Return Value\n\n### Method configurationKey\n\n    public str configurationKey()\n\n#### Return Value\n\n### Method countryRegionCodes\n\n    public str countryRegionCodes()\n\n#### Return Value\n\n### Method countryRegionContextField\n\n    public str countryRegionContextField()\n\n#### Return Value\n\n### Method developerDocumentation\n\n    public str developerDocumentation()\n\n#### Return Value\n\n### Method entityCategory\n\n    public EntityCategory entityCategory()\n\n#### Return Value\n\n### Method formRef\n\n    public str formRef()\n\n#### Return Value\n\n### Method singularLabel\n\n    public str singularLabel()\n\n#### Return Value\n\n### Method tags\n\n    public str tags()\n\n#### Return Value\n\n### Method publicCollectionName\n\n    public str publicCollectionName()\n\n#### Return Value\n\n### Method publicEntityName\n\n    public str publicEntityName()\n\n#### Return Value\n\n### Method dataEntityCount\n\n    public int dataEntityCount()\n\n#### Return Value\n\n### Method childDataEntityNo\n\n    public DictCompositeChildDataEntity childDataEntityNo(int n)\n\n#### Parameters\n\nn  \n\n#### Return Value\n\n### Method new\n\n    public void new(str compositeDataEntityName)\n\n#### Parameters\n\ncompositeDataEntityName  \n\n## Class DictConfigurationKey\n    class DictConfigurationKey extends Object\n\nThe DictConfigurationKey class provides information about a configuration key.\n\n### Remarks\n\nFor an example that uses the DictConfigurationKey class, see the new method.\n\n### Examples\n\n### Methods\n\n| Method                                                                     | Description                                                               |\n|----------------------------------------------------------------------------|---------------------------------------------------------------------------|\n| public boolean enabled()                                                   | Returns a value that indicates whether the configuration key is enabled.  |\n| public ConfigurationKeyId id()                                             | Returns the ID of the configuration key.                                  |\n| public str label()                                                         | Returns the label for a configuration key.                                |\n| public str labelId()                                                       |                                                                           |\n| public LicenseCodeId licenseCode()                                         | Returns the license code ID for the configuration key.                    |\n| public str name()                                                          | Returns the name of the configuration key.                                |\n| public ConfigurationKeyId parentConfigurationKeyId()                       | Returns the ID of the parent configuration key for the configuration key. |\n| ::public static boolean enabledById(ConfigurationKeyId configurationKeyId) |                                                                           |\n| public boolean permanentlyDisabled()                                       |                                                                           |\n| public void new(ConfigurationKeyId configurationKeyId)                     | Initializes a new instance of the Object class.                           |\n\n### Method enabled\n\nReturns a value that indicates whether the configuration key is enabled.\n\n    public boolean enabled()\n\n#### Return Value\n\ntrue if the configuration key is enabled; otherwise, false.\n\n#### Remarks\n\nFor an example that uses this method, see the new method.\n\n### Method id\n\nReturns the ID of the configuration key.\n\n    public ConfigurationKeyId id()\n\n#### Return Value\n\nThe ID of the configuration key.\n\n### Method label\n\nReturns the label for a configuration key.\n\n    public str label()\n\n#### Return Value\n\nThe label for the configuration key; an empty string if the configuration key does not have a label value.\n\n### Method labelId\n\n    public str labelId()\n\n#### Return Value\n\n### Method licenseCode\n\nReturns the license code ID for the configuration key.\n\n    public LicenseCodeId licenseCode()\n\n#### Return Value\n\nThe license code ID for the configuration key; 0 (zero) if the configuration key has no license code.\n\n### Method name\n\nReturns the name of the configuration key.\n\n    public str name()\n\n#### Return Value\n\nThe name of the configuration key.\n\n#### Remarks\n\nFor an example that uses this method, see the new method.\n\n### Method parentConfigurationKeyId\n\nReturns the ID of the parent configuration key for the configuration key.\n\n    public ConfigurationKeyId parentConfigurationKeyId()\n\n#### Return Value\n\nThe ID of the parent configuration key; 0 (zero) if the configuration key has no parent configuration key.\n\n### Method enabledById\n\n    public static boolean enabledById(ConfigurationKeyId configurationKeyId)\n\n#### Parameters\n\nconfigurationKeyId  \n\n#### Return Value\n\n### Method permanentlyDisabled\n\n    public boolean permanentlyDisabled()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(ConfigurationKeyId configurationKeyId)\n\n#### Parameters\n\nconfigurationKeyId  \nThe ID of the configuration key that is used to create the instance of the DictConfigurationKey class.\n\n#### Examples\n\nThe following example shows how to create a new instance of the DictConfigurationKey class during an enumeration of configuration keys.\n\n    ConfigurationKeySet configKeySet; \n    DictConfigurationKey dictConfigKey; \n    str strOutput; \n    int i; \n    configKeySet = new ConfigurationKeySet(); \n    configKeySet.loadSystemSetup(); \n    // Output the configuration key names and their enable state. \n    for (i=1; i <= configKeySet.cnt(); i++) \n    { \n        dictConfigKey = new DictConfigurationKey(configKeySet.cnt2Id(i)); \n        strOutput = dictConfigKey.enabled() ? \"enabled\" : \"disabled\"; \n        strOutput += \" \" + dictConfigKey.name(); \n        print strOutput; \n    }\n\n## Class DictDataEntity\n    class DictDataEntity extends DictView\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                  | Description |\n|---------------------------------------------------------|-------------|\n| public boolean isAggregateDataEntity()                  |             |\n| public boolean isReadOnly()                             |             |\n| public str primaryCompanyContext()                      |             |\n| public str primaryKey()                                 |             |\n| public boolean supportsSetBasedSqlOperations()          |             |\n| public AutoNo enableSetBasedSqlOperations()             |             |\n| public str modules()                                    |             |\n| public EntityCategory entityCategory()                  |             |\n| public boolean dataManagementEnabled()                  |             |\n| public str dataManagementStagingTable()                 |             |\n| public str publicCollectionName()                       |             |\n| public str publicEntityName()                           |             |\n| public boolean dataSourceIsReadOnly(str dataSourceName) |             |\n| public str dataSourceID2Name(int dataSourceId)          |             |\n| public boolean hasExtensionFields()                     |             |\n| public List getExtensionFieldNames()                    |             |\n| ::public static List listOfDataEntities()               |             |\n| public void new(TableId tableId)                        |             |\n\n### Method isAggregateDataEntity\n\n    public boolean isAggregateDataEntity()\n\n#### Return Value\n\n### Method isReadOnly\n\n    public boolean isReadOnly()\n\n#### Return Value\n\n### Method primaryCompanyContext\n\n    public str primaryCompanyContext()\n\n#### Return Value\n\n### Method primaryKey\n\n    public str primaryKey()\n\n#### Return Value\n\n### Method supportsSetBasedSqlOperations\n\n    public boolean supportsSetBasedSqlOperations()\n\n#### Return Value\n\n### Method enableSetBasedSqlOperations\n\n    public AutoNo enableSetBasedSqlOperations()\n\n#### Return Value\n\n### Method modules\n\n    public str modules()\n\n#### Return Value\n\n### Method entityCategory\n\n    public EntityCategory entityCategory()\n\n#### Return Value\n\n### Method dataManagementEnabled\n\n    public boolean dataManagementEnabled()\n\n#### Return Value\n\n### Method dataManagementStagingTable\n\n    public str dataManagementStagingTable()\n\n#### Return Value\n\n### Method publicCollectionName\n\n    public str publicCollectionName()\n\n#### Return Value\n\n### Method publicEntityName\n\n    public str publicEntityName()\n\n#### Return Value\n\n### Method dataSourceIsReadOnly\n\n    public boolean dataSourceIsReadOnly(str dataSourceName)\n\n#### Parameters\n\ndataSourceName  \n\n#### Return Value\n\n### Method dataSourceID2Name\n\n    public str dataSourceID2Name(int dataSourceId)\n\n#### Parameters\n\ndataSourceId  \n\n#### Return Value\n\n### Method hasExtensionFields\n\n    public boolean hasExtensionFields()\n\n#### Return Value\n\n### Method getExtensionFieldNames\n\n    public List getExtensionFieldNames()\n\n#### Return Value\n\n### Method listOfDataEntities\n\n    public static List listOfDataEntities()\n\n#### Return Value\n\n### Method new\n\n    public void new(TableId tableId)\n\n#### Parameters\n\ntableId  \n\n## Class DictDataEntityField\n    class DictDataEntityField extends DictField\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                | Description |\n|-----------------------------------------------------------------------|-------------|\n| public FieldAccessModifier accessModifier()                           |             |\n| public str dataEntityViewMethod()                                     |             |\n| public str dataField()                                                |             |\n| public str dataSource()                                               |             |\n| public str dimensionLegalEntityContextField()                         |             |\n| public str dynamicDimensionEnumerationField()                         |             |\n| public boolean IsComputedField()                                      |             |\n| public void new(TableId tableId, FieldId fieldId, \\[int arrayIndex\\]) |             |\n\n### Method accessModifier\n\n    public FieldAccessModifier accessModifier()\n\n#### Return Value\n\n### Method dataEntityViewMethod\n\n    public str dataEntityViewMethod()\n\n#### Return Value\n\n### Method dataField\n\n    public str dataField()\n\n#### Return Value\n\n### Method dataSource\n\n    public str dataSource()\n\n#### Return Value\n\n### Method dimensionLegalEntityContextField\n\n    public str dimensionLegalEntityContextField()\n\n#### Return Value\n\n### Method dynamicDimensionEnumerationField\n\n    public str dynamicDimensionEnumerationField()\n\n#### Return Value\n\n### Method IsComputedField\n\n    public boolean IsComputedField()\n\n#### Return Value\n\n### Method new\n\n    public void new(TableId tableId, FieldId fieldId, [int arrayIndex])\n\n#### Parameters\n\ntableId  \n\n<!-- -->\n\nfieldId  \n\n<!-- -->\n\narrayIndex  \n\n## Class DictEnum\n    class DictEnum extends Object\n\nThe DictEnum class obtains meta-information about the base enum enumerations in the Microsoft Dynamics AX Application Object Tree (AOT).\n\n### Remarks\n\nFor backward compatibility, a special naming convention for methods that convert to or from properties is used.\n\n|                 |                                |                          |\n|-----------------|--------------------------------|--------------------------|\n| Name            | ReqDate                        | Symbol (typed as string) |\n| Label           | @SYS18075 (\"Requirement date\") | Name or Label            |\n| FeatureKey      | ReqSchedAction                 | FeatureKey               |\n| EnumValue       | 0                              | Value                    |\n| Position in AOT | First (Index = 0)              | Index                    |\n\nThis example is from the ActionBasicDateType base enum. For general information about enumerations, see the Developer's Guide.\n\n### Examples\n\n### Methods\n\n| Method                                                            | Description                                                                                                               |\n|-------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------|\n| public ConfigurationKeyId configurationKeyId()                    | Returns the configuration key ID for the enumeration.                                                                     |\n| public int displayLength(\\[boolean useLongestLabel\\])             |                                                                                                                           |\n| public container getCountryRegionCodes()                          |                                                                                                                           |\n| public str help(\\[boolean useInterfaceLanguage\\])                 | Retrieves the Help text for this enumeration.                                                                             |\n| public str helpDefined()                                          | Returns the value of the help property for this enumeration.                                                              |\n| public EnumId id()                                                | Returns the enumeration ID of the enumeration.                                                                            |\n| public ConfigurationKeyId index2ConfigurationKey(int index)       |                                                                                                                           |\n| public container index2CountryRegionCodes(int index)              |                                                                                                                           |\n| public str index2Label(int index)                                 | Returns the label of the enumeration item that is specified by an index.                                                  |\n| public str index2LabelId(int index)                               |                                                                                                                           |\n| public str index2Name(int index)                                  | Returns the label of the enumeration item that is specified by an index.                                                  |\n| public str index2Symbol(int index)                                | Returns the symbol or name of the enumeration item that is specified by an index.                                         |\n| public int index2Value(int index)                                 | Returns the value of the enumeration item that is specified by an index.                                                  |\n| public str label()                                                | Returns the label text of the enumeration.                                                                                |\n| public str labelDefined()                                         | Returns the value of the label property for this enumeration.                                                             |\n| public str name()                                                 | Returns the name of the enumeration.                                                                                      |\n| public int name2Value(str name)                                   | Returns the enumeration value of the item that is referenced by its label.                                                |\n| public boolean showAsRadio()                                      | Returns a value that indicates whether the enumeration should be displayed by using radio buttons instead of a combo box. |\n| public int symbol2Value(str name)                                 | Returns the enumeration value of the item, referenced by its symbol or name.                                              |\n| public ConfigurationKeyId value2ConfigurationKey(int value)       | Returns the configuration key ID of a specified enumeration value.                                                        |\n| public container value2CountryRegionCodes(int value)              |                                                                                                                           |\n| public str value2Label(int value)                                 | Returns the label of a specified enumeration value.                                                                       |\n| public str value2Name(int value)                                  | Returns the name of a specified enumeration value.                                                                        |\n| public str value2Symbol(int value)                                | Returns the symbol, or the value of the Name property, of a specified enumeration value.                                  |\n| public int values()                                               | Returns the number of items in the enumeration.                                                                           |\n| ::public static str queryFilterNames2Values(QueryFilter filter)   |                                                                                                                           |\n| ::public static str queryFilterValues2Names(QueryFilter filter)   |                                                                                                                           |\n| ::public static str queryRangeNames2Values(QueryBuildRange range) |                                                                                                                           |\n| ::public static str queryRangeValues2Names(QueryBuildRange range) |                                                                                                                           |\n| ::public static int value2id(AnyType value)                       | Returns the enumeration ID of a specified value.                                                                          |\n| public void new(EnumId typeId)                                    | Initializes a new instance of the Object class.                                                                           |\n\n### Method configurationKeyId\n\nReturns the configuration key ID for the enumeration.\n\n    public ConfigurationKeyId configurationKeyId()\n\n#### Return Value\n\nThe configuration key ID for the enumeration; 0 (zero) if there is no configuration key ID for the enumeration.\n\n#### Examples\n\nThe following example shows the retrieval of the configuration key ID for an enumeration.\n\n    DictEnum de; \n    int      i; \n    de = new DictEnum(enumName2Id(\"ActionType\")); \n    print int2str(de.configurationKeyId());\n\n### Method displayLength\n\n    public int displayLength([boolean useLongestLabel])\n\n#### Parameters\n\nuseLongestLabel  \n\n#### Return Value\n\n### Method getCountryRegionCodes\n\n    public container getCountryRegionCodes()\n\n#### Return Value\n\n### Method help\n\nRetrieves the Help text for this enumeration.\n\n    public str help([boolean useInterfaceLanguage])\n\n#### Parameters\n\nuseInterfaceLanguage  \n\n#### Return Value\n\nA string that contains the Help text; an empty string if no Help text is defined.\n\n#### Remarks\n\nThe Help text is defined on the Help property of the base enumeration.\n\n### Method helpDefined\n\nReturns the value of the help property for this enumeration.\n\n    public str helpDefined()\n\n#### Return Value\n\nThe value of the help property for this enumeration.\n\n### Method id\n\nReturns the enumeration ID of the enumeration.\n\n    public EnumId id()\n\n#### Return Value\n\nThe enumeration ID of the enumeration.\n\n### Method index2ConfigurationKey\n\n    public ConfigurationKeyId index2ConfigurationKey(int index)\n\n#### Parameters\n\nindex  \n\n#### Return Value\n\n### Method index2CountryRegionCodes\n\n    public container index2CountryRegionCodes(int index)\n\n#### Parameters\n\nindex  \n\n#### Return Value\n\n### Method index2Label\n\nReturns the label of the enumeration item that is specified by an index.\n\n    public str index2Label(int index)\n\n#### Parameters\n\nindex  \nThe zero-based index of the enumeration in the AOT.\n\n#### Return Value\n\nThe label of the enumeration item that specified by index; an empty string if index does not reference a valid enumeration item.\n\n#### Examples\n\nThe following example shows the retrieval of the label for items in an enumeration.\n\n    DictEnum de; \n    int      i; \n    de = new DictEnum(enumName2Id(\"ActionType\")); \n    for (i=0; i < de.values(); i++) \n    { \n        print int2str(i) + \", \" + de.index2Label(i); \n    }\n\n### Method index2LabelId\n\n    public str index2LabelId(int index)\n\n#### Parameters\n\nindex  \n\n#### Return Value\n\n### Method index2Name\n\nReturns the label of the enumeration item that is specified by an index.\n\n    public str index2Name(int index)\n\n#### Parameters\n\nindex  \nThe zero-based index of the enumeration in the AOT.\n\n#### Return Value\n\nThe label of the enumeration item that is specified by index; an empty string if index does not reference a valid enumeration item.\n\n#### Remarks\n\nFor backward compatibility with earlier versions of Microsoft Dynamics AX, \"Name\" in DictEnum::value2Name refers to the enumeration item's label property. To make your code more readable, use the DictEnum::value2Label method instead of the DictEnum::value2Name method. To retrieve the value of the name property of the enumeration item as shown in the AOT, use the DictEnum::value2Symbol method.\n\n#### Examples\n\nThe following example shows the retrieval of the label for items in an enumeration.\n\n    DictEnum de; \n    int      i; \n    de = new DictEnum(enumName2Id(\"ActionType\")); \n    for (i=0; i < de.values(); i++) \n    { \n        print int2str(i) + \", \" + de.index2Name(i); \n    }\n\n### Method index2Symbol\n\nReturns the symbol or name of the enumeration item that is specified by an index.\n\n    public str index2Symbol(int index)\n\n#### Parameters\n\nindex  \nThe zero-based index of the enumeration in the AOT.\n\n#### Return Value\n\nThe symbol of the enumeration item that is specified by index; an empty string if index does not reference a valid enumeration item.\n\n#### Remarks\n\nThe symbol corresponds to the Name property of the enumeration item in the AOT.\n\n#### Examples\n\nThe following example shows the retrieval of the symbol for items in an enumeration.\n\n    DictEnum de; \n    int      i; \n    de = new DictEnum(enumName2Id(\"ActionType\")); \n    for (i=0; i < de.values(); i++) \n    { \n        print int2str(i) + \", \" + de.index2Symbol(i); \n    }\n\n### Method index2Value\n\nReturns the value of the enumeration item that is specified by an index.\n\n    public int index2Value(int index)\n\n#### Parameters\n\nindex  \nThe zero-based index of the enumeration in the AOT.\n\n#### Return Value\n\nThe value of the enumeration item that is specified by index.\n\n#### Examples\n\nThe following example shows the retrieval of the value for items in an enumeration.\n\n    DictEnum de; \n    int      i; \n    de = new DictEnum(enumName2Id(\"ActionType\")); \n    for (i=0; i < de.values(); i++) \n    { \n        print int2str(i) + \", \" + int2str(de.index2Value(i)); \n    }\n\n### Method label\n\nReturns the label text of the enumeration.\n\n    public str label()\n\n#### Return Value\n\nThe name of the enumeration; an empty string if there is no label for the enumeration.\n\n### Method labelDefined\n\nReturns the value of the label property for this enumeration.\n\n    public str labelDefined()\n\n#### Return Value\n\nThe value of the label property for this enumeration.\n\n### Method name\n\nReturns the name of the enumeration.\n\n    public str name()\n\n#### Return Value\n\nThe name of the enumeration.\n\n### Method name2Value\n\nReturns the enumeration value of the item that is referenced by its label.\n\n    public int name2Value(str name)\n\n#### Parameters\n\nname  \nThe label for the enumeration for which the enumeration value is being retrieved.\n\n#### Return Value\n\nThe enumeration value for name; 255 if name is not a valid label of an enumeration.\n\n#### Remarks\n\nFor backward compatibility with earlier versions of Microsoft Dynamics AX, name refers to the label. Enumeration items that do not have labels cannot be found by using the DictEnum::name2Value method.\n\n### Method showAsRadio\n\nReturns a value that indicates whether the enumeration should be displayed by using radio buttons instead of a combo box.\n\n    public boolean showAsRadio()\n\n#### Return Value\n\ntrue if the enumeration style is radio button; otherwise, false.\n\n### Method symbol2Value\n\nReturns the enumeration value of the item, referenced by its symbol or name.\n\n    public int symbol2Value(str name)\n\n#### Parameters\n\nname  \nThe symbol or name for the enumeration for which the enumeration value is being retrieved.\n\n#### Return Value\n\nThe enumeration value for name; 255 if name is not a valid enumeration.\n\n### Method value2ConfigurationKey\n\nReturns the configuration key ID of a specified enumeration value.\n\n    public ConfigurationKeyId value2ConfigurationKey(int value)\n\n#### Parameters\n\nvalue  \nThe integer value for the enumeration for which the configuration key is being retrieved.\n\n#### Return Value\n\nThe configuration key ID for value; 0 (zero) if there is no configuration key for value or value is not a valid enumeration.\n\n### Method value2CountryRegionCodes\n\n    public container value2CountryRegionCodes(int value)\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method value2Label\n\nReturns the label of a specified enumeration value.\n\n    public str value2Label(int value)\n\n#### Parameters\n\nvalue  \nThe integer value for the enumeration for which the label is being retrieved.\n\n#### Return Value\n\nThe label for value; an empty string if there is no label for value or value is not a valid enumeration.\n\n#### Remarks\n\nEnumeration items are not required to have a label. This method cannot be used to determine whether a value exists in the enumeration. To determine whether a value exists in the enumeration, use the DictEnum::value2Symbol method.\n\n### Method value2Name\n\nReturns the name of a specified enumeration value.\n\n    public str value2Name(int value)\n\n#### Parameters\n\nvalue  \nThe integer value for the enumeration for which the label is being retrieved.\n\n#### Return Value\n\nThe name for value; an empty string if there is no name for value or value is not a valid enumeration.\n\n#### Remarks\n\nTo determine whether a value is in the enumeration, use the value2Symbol method instead. The value2Name method cannot be used to determine whether a value is in the enumeration, because enumeration items are not required to have a label.\n\n### Method value2Symbol\n\nReturns the symbol, or the value of the Name property, of a specified enumeration value.\n\n    public str value2Symbol(int value)\n\n#### Parameters\n\nvalue  \nThe integer value for the enumeration for which the symbol is being retrieved.\n\n#### Return Value\n\nThe symbol or name for value; an empty string if value is not a valid enumeration.\n\n#### Remarks\n\nEnumeration values are required to have a symbol. This method can be used to determine whether an enumeration value exists by checking whether the return value is an empty string.\n\n### Method values\n\nReturns the number of items in the enumeration.\n\n    public int values()\n\n#### Return Value\n\nThe number of items in the enumeration.\n\n#### Remarks\n\nBecause values must be unique, the number of values is the same as the number of items.\n\n#### Examples\n\nThe following example shows how to retrieve the number of items in an enumeration and use that value in a loop.\n\n    DictEnum de; \n    int      i; \n    de = new DictEnum(enumName2Id(\"ActionType\")); \n    for (i=0; i < de.values(); i++) \n    { \n        print int2str(i) + \", \" + de.index2Name(i); \n    }\n\n### Method queryFilterNames2Values\n\n    public static str queryFilterNames2Values(QueryFilter filter)\n\n#### Parameters\n\nfilter  \n\n#### Return Value\n\n### Method queryFilterValues2Names\n\n    public static str queryFilterValues2Names(QueryFilter filter)\n\n#### Parameters\n\nfilter  \n\n#### Return Value\n\n### Method queryRangeNames2Values\n\n    public static str queryRangeNames2Values(QueryBuildRange range)\n\n#### Parameters\n\nrange  \n\n#### Return Value\n\n### Method queryRangeValues2Names\n\n    public static str queryRangeValues2Names(QueryBuildRange range)\n\n#### Parameters\n\nrange  \n\n#### Return Value\n\n### Method value2id\n\nReturns the enumeration ID of a specified value.\n\n    public static int value2id(AnyType value)\n\n#### Parameters\n\nvalue  \nThe value for which the enumeration ID is being queried. The value parameter can be of any type.\n\n#### Return Value\n\nThe enumeration ID of value if value is an enumeration; otherwise, 0 (zero).\n\n#### Remarks\n\nThe value parameter can be of any type.\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(EnumId typeId)\n\n#### Parameters\n\ntypeId  \nThe ID of the enumeration.\n\n#### Remarks\n\nThe constructor does not fail if an invalid enum ID is supplied. However, when the DictEnum instance is used, a run-time error occurs. Note that EnumID values are unsigned integers and are therefore always in the range 0–65535.\n\n#### Examples\n\nThe following example creates an instance of the DictEnum class.\n\n    DictEnum de; \n    de = new DictEnum(enumName2Id(\"ActionType\"));\n\n## Class DictField\n    class DictField extends Object\n\nThe DictField class provides information about a specified field in a specified table.\n\n### Remarks\n\n### Examples\n\nThe following example shows how to create an instance of the DictField class to determine whether a field is mandatory.\n\n    #macrolib.dictfield \n    DictField df; \n    int       nFlags; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        nFlags = df.flags(); \n        if (bitTest(nFlags,#DBF_MANDATORY)) \n        { \n            print (\"The field is mandatory.\"); \n        } \n        else \n        { \n            print (\"The field is not mandatory.\"); \n        } \n    }\n\n### Methods\n\n| Method                                                                                                                | Description                                                                                                                               |\n|-----------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| public FieldId aliasFor()                                                                                             | Returns the ID of the alias field, if the field is an alias for another field.                                                            |\n| public Alignment alignment()                                                                                          |                                                                                                                                           |\n| public boolean allowEdit()                                                                                            |                                                                                                                                           |\n| public boolean allowEditOnCreate()                                                                                    |                                                                                                                                           |\n| public boolean aosAuthorization()                                                                                     |                                                                                                                                           |\n| public int arrayIndex()                                                                                               |                                                                                                                                           |\n| public int arraySize()                                                                                                | Returns the array size for the field (in other words, the array size of the underlying extended data type).                               |\n| public Types baseType()                                                                                               | Returns the base type of the field, such as string, real, integer, date, time, enum, or container.                                        |\n| public ConfigurationKeyId configurationKeyId()                                                                        | Returns the ID of the configuration key for the field.                                                                                    |\n| public str dateTimeTimeZoneRuleFieldName(\\[int arrayindex\\])                                                          |                                                                                                                                           |\n| public int displayHeight(\\[boolean useDefaults\\])                                                                     |                                                                                                                                           |\n| public int displayLength(\\[boolean useDefaults\\])                                                                     |                                                                                                                                           |\n| public EnumId enumId()                                                                                                | Returns the ID of the enumeration if the field is based on an enumeration.                                                                |\n| public int flags(\\[str ext\\], \\[Common record\\])                                                                      | Returns an integer that defines the properties of the field. The flag values, such as DBF\\_MANDATORY, are defined in the DictField macro. |\n| public container getCountryRegionCodes()                                                                              |                                                                                                                                           |\n| public FieldId getCountryRegionContextField()                                                                         |                                                                                                                                           |\n| public str getPrimaryTableForSurrogateField()                                                                         |                                                                                                                                           |\n| public str groupPrompt()                                                                                              | Returns the groupPrompt value for the field.                                                                                              |\n| public str groupPromptDefined()                                                                                       | Returns the value of the groupPrompt property for the field.                                                                              |\n| public str help(\\[int arrayIndex\\], \\[boolean useInterfaceLanguage\\])                                                 | Returns the Help text that is displayed for the field.                                                                                    |\n| public str helpDefined()                                                                                              | Returns the value of the help property for the field.                                                                                     |\n| public FieldId id()                                                                                                   | Returns the ID of the field.                                                                                                              |\n| public boolean isIgnoreEDTRelation()                                                                                  |                                                                                                                                           |\n| public boolean isMonocased()                                                                                          | Returns a value that indicates whether the database requires that the field be monocase.                                                  |\n| public boolean isSql()                                                                                                | Returns a value that indicates whether the field is in the SQL database.                                                                  |\n| public boolean isSurrogateForeignKey()                                                                                |                                                                                                                                           |\n| public boolean isSystem()                                                                                             | Returns a value that indicates whether the field is a system field.                                                                       |\n| public str label(\\[int arrayIndex\\])                                                                                  | Returns the label for the field.                                                                                                          |\n| public str labelDefined()                                                                                             | Returns the value of the label property for the field.                                                                                    |\n| public boolean mandatory()                                                                                            |                                                                                                                                           |\n| public str name(\\[DbBackend db\\], \\[int arrayindex\\], \\[FieldNameGenerationMode generationMode\\], \\[str tableAlias\\]) | Returns the name of the field.                                                                                                            |\n| public Guid origin()                                                                                                  |                                                                                                                                           |\n| public str qualifiedLabel(\\[int arrayIndex\\])                                                                         |                                                                                                                                           |\n| public str relatedTableName()                                                                                         |                                                                                                                                           |\n| public str relationContext()                                                                                          |                                                                                                                                           |\n| public DictRelation relationObject(\\[int arrayIndex\\])                                                                | Returns a DictRelation object for the field if the field is based on an extended data type that has a relation.                           |\n| public AccessType rights(\\[boolean ignoreContext\\])                                                                   | Returns the access rights for the current user that are specified for the field.                                                          |\n| public int stringLen()                                                                                                | Returns the string size of the field if the base type of the field is a string.                                                           |\n| public TableId tableid()                                                                                              | Returns the ID of the table that contains the field.                                                                                      |\n| public Types type()                                                                                                   | Returns the data type of the field.                                                                                                       |\n| public ExtendedTypeId typeId()                                                                                        | Returns the ID of the extended data type if the field is based on an extended data type.                                                  |\n| public boolean visible()                                                                                              |                                                                                                                                           |\n| public void setLookupMode(boolean lookupMode)                                                                         |                                                                                                                                           |\n| public void setSFKAutoAuthorizationMode(boolean sfkMode)                                                              |                                                                                                                                           |\n| public void new(TableId tableId, FieldId fieldId, \\[int arrayIndex\\])                                                 | Initializes a new instance of the Object class.                                                                                           |\n\n### Method aliasFor\n\nReturns the ID of the alias field, if the field is an alias for another field.\n\n    public FieldId aliasFor()\n\n#### Return Value\n\nThe ID of the alias field for the field; 0 (zero) if the field is not an alias for another field.\n\n#### Remarks\n\nWhen the user enters data in a field, the validateField method of the table is called. If the validateField method cannot perform a lookup on the value, it checks whether an alias exists. If an alias field exists, the validateField method performs a lookup on the alias field.\n\n#### Examples\n\nThe following example shows the retrieval of the alias field for a field.\n\n    DictField df; \n    fieldId   fId; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum));\n    if (df) \n    { \n        fId = df.aliasFor(); \n        if (0 != fId) \n        { \n            print (strfmt(\"Field alias: %1\", fieldid2name(tablenum(CustTable), fId))); \n        } \n    }\n\n### Method alignment\n\n    public Alignment alignment()\n\n#### Return Value\n\n### Method allowEdit\n\n    public boolean allowEdit()\n\n#### Return Value\n\n### Method allowEditOnCreate\n\n    public boolean allowEditOnCreate()\n\n#### Return Value\n\n### Method aosAuthorization\n\n    public boolean aosAuthorization()\n\n#### Return Value\n\n### Method arrayIndex\n\n    public int arrayIndex()\n\n#### Return Value\n\n### Method arraySize\n\nReturns the array size for the field (in other words, the array size of the underlying extended data type).\n\n    public int arraySize()\n\n#### Return Value\n\nThe array size for the field; 1 if the field is not an array.\n\n#### Examples\n\nThe following example shows the retrieval of the array size for a field.\n\n    DictField df; \n    Types     t; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum));  \n    if (df) \n    { \n        print strfmt(\"The arraySize is %1.\", df.arraySize()); \n    }\n\n### Method baseType\n\nReturns the base type of the field, such as string, real, integer, date, time, enum, or container.\n\n    public Types baseType()\n\n#### Return Value\n\nA Types value that specifies the type of the field.\n\n#### Examples\n\nThe following example shows the retrieval of the base type of a field.\n\n    DictField df;\n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df)\n    {\n        print strfmt(\"The field type is %1.\", df.baseType());\n    }\n\n### Method configurationKeyId\n\nReturns the ID of the configuration key for the field.\n\n    public ConfigurationKeyId configurationKeyId()\n\n#### Return Value\n\nThe ID of the configuration key for the field; 0 (zero) if there is no configuration key for the field.\n\n#### Examples\n\nThe following example shows the retrieval of the configuration key ID and the configuration key name for a field.\n\n    DictField df; \n    configurationKeyId cki; \n    DictConfigurationKey dck; \n    df = new DictField(tablenum(BankAccountTable), fieldnum(BankAccountTable, CustPaymFeePost)); \n    if (df) \n    { \n        cki = df.configurationKeyId(); \n        //    print df.helpDefined(); \n        if (0 != cki) \n        { \n            dck = new DictConfigurationKey(cki); \n            if (dck) \n            print strfmt(\"The configuration key is %1.\", dck.name()); \n        } \n        else \n        { \n            print \"No configuration key\"; \n        } \n    }\n\n### Method dateTimeTimeZoneRuleFieldName\n\n    public str dateTimeTimeZoneRuleFieldName([int arrayindex])\n\n#### Parameters\n\narrayindex  \n\n#### Return Value\n\n### Method displayHeight\n\n    public int displayHeight([boolean useDefaults])\n\n#### Parameters\n\nuseDefaults  \n\n#### Return Value\n\n### Method displayLength\n\n    public int displayLength([boolean useDefaults])\n\n#### Parameters\n\nuseDefaults  \n\n#### Return Value\n\n### Method enumId\n\nReturns the ID of the enumeration if the field is based on an enumeration.\n\n    public EnumId enumId()\n\n#### Return Value\n\nThe enumeration ID if the field is based on an enumeration; otherwise, 0 (zero).\n\n#### Examples\n\nThe following example shows the retrieval of the enumeration ID and the enumeration name of a field that is based on an enumeration.\n\n    DictField df; \n    DictEnum  de; \n    enumId    id; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        id = df.enumId(); \n        if (0 != id) \n        { \n            de = new DictEnum(id); \n            if (de) \n            { \n                print de.name(); \n            } \n        } \n    }\n\n### Method flags\n\nReturns an integer that defines the properties of the field. The flag values, such as DBF\\_MANDATORY, are defined in the DictField macro.\n\n    public int flags([str ext], [Common record])\n\n#### Parameters\n\next  \n\n<!-- -->\n\nrecord  \n\n#### Return Value\n\nAn integer value, where each bit corresponds to a field flag.\n\n#### Remarks\n\nUse the Global::bitTest Method method or the & operator to check individual flag values.\n\n#### Examples\n\nThe following example shows the retrieval of the flags of a field to determine whether the field is mandatory.\n\n    #macrolib.dictfield \n    DictField df; \n    int       nFlags; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        nFlags = df.flags(); \n        if (bitTest(nFlags,#DBF_MANDATORY)) \n        { \n            print (\"The field is mandatory.\"); \n        } \n        else \n        { \n            print (\"The field is not mandatory.\"); \n        } \n    }\n\n### Method getCountryRegionCodes\n\n    public container getCountryRegionCodes()\n\n#### Return Value\n\n### Method getCountryRegionContextField\n\n    public FieldId getCountryRegionContextField()\n\n#### Return Value\n\n### Method getPrimaryTableForSurrogateField\n\n    public str getPrimaryTableForSurrogateField()\n\n#### Return Value\n\n### Method groupPrompt\n\nReturns the groupPrompt value for the field.\n\n    public str groupPrompt()\n\n#### Return Value\n\nThe groupPrompt value for the field.\n\n### Method groupPromptDefined\n\nReturns the value of the groupPrompt property for the field.\n\n    public str groupPromptDefined()\n\n#### Return Value\n\nThe value of the groupPrompt property for the table.\n\n### Method help\n\nReturns the Help text that is displayed for the field.\n\n    public str help([int arrayIndex], [boolean useInterfaceLanguage])\n\n#### Parameters\n\narrayIndex  \nA Boolean value that indicates whether to use the user interface language for the Help text; optional.\n\n<!-- -->\n\nuseInterfaceLanguage  \nA Boolean value that indicates whether to use the user interface language for the Help text; optional.\n\n#### Return Value\n\nThe Help text or inherited Help text for the field.\n\n#### Remarks\n\nIf no Help text is defined for the field, this method returns the Help text for the extended data type that is used for the field, if applicable. If an array entry is specified, this method returns the Help text for the array element.\n\n#### Examples\n\nThe following example shows retrieval of the Help text for the field.\n\n    DictField df; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        print df.help(); \n    }\n\n### Method helpDefined\n\nReturns the value of the help property for the field.\n\n    public str helpDefined()\n\n#### Return Value\n\nThe value of the help property for the field.\n\n#### Remarks\n\nUnlike the help method, the helpDefined method does not return the Help text of the extended data type if the field is based on an extended data type and has no Help text defined for it.\n\n#### Examples\n\nThe following example shows retrieval of the defined Help text for the field.\n\n    DictField df; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        print df.helpDefined(); \n    }\n\n### Method id\n\nReturns the ID of the field.\n\n    public FieldId id()\n\n#### Return Value\n\nThe ID of the field.\n\n#### Examples\n\nThe following example retrieves the ID of a field.\n\n    DictField df; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        print df.id(); \n    }\n\n### Method isIgnoreEDTRelation\n\n    public boolean isIgnoreEDTRelation()\n\n#### Return Value\n\n### Method isMonocased\n\nReturns a value that indicates whether the database requires that the field be monocase.\n\n    public boolean isMonocased()\n\n#### Return Value\n\ntrue if the field is monocase; otherwise, false.\n\n### Method isSql\n\nReturns a value that indicates whether the field is in the SQL database.\n\n    public boolean isSql()\n\n#### Return Value\n\ntrue if the field is in the SQL database; otherwise, false.\n\n#### Examples\n\nThe following example determines whether the field is in the SQL database.\n\n        DictField df; \n        df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n        if (df) \n        { \n        if (df.isSql()) \n        { \n            print (\"Field is in SQL database\"); \n        } \n        else \n        { \n            print (\"Field is not in SQL database\"); \n        } \n        }\n\n### Method isSurrogateForeignKey\n\n    public boolean isSurrogateForeignKey()\n\n#### Return Value\n\n### Method isSystem\n\nReturns a value that indicates whether the field is a system field.\n\n    public boolean isSystem()\n\n#### Return Value\n\ntrue if the field is a system field; otherwise, false.\n\n### Method label\n\nReturns the label for the field.\n\n    public str label([int arrayIndex])\n\n#### Parameters\n\narrayIndex  \n\n#### Return Value\n\nThe label or inherited label value for the field.\n\n#### Remarks\n\nIf no label is provided for the field, this method returns the label for the extended data type for the field, if applicable. If an array entry is specified, this method returns the label for the array element.\n\n### Method labelDefined\n\nReturns the value of the label property for the field.\n\n    public str labelDefined()\n\n#### Return Value\n\nThe value of the label property for the table; an empty string if there is no label text for the table.\n\n#### Remarks\n\nUnlike the label method, the labelDefined method does not return the extended data type label if the field is based on an extended data type and has no label defined for it.\n\n#### Examples\n\nThe following example shows the retrieval of the defined label for a field.\n\n    DictField df; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        print df.labelDefined(); \n    }\n\n### Method mandatory\n\n    public boolean mandatory()\n\n#### Return Value\n\n### Method name\n\nReturns the name of the field.\n\n    public str name([DbBackend db], [int arrayindex], [FieldNameGenerationMode generationMode], [str tableAlias])\n\n#### Parameters\n\ndb  \nThe alias for the table; optional.\n\n<!-- -->\n\narrayindex  \nThe alias for the table; optional.\n\n<!-- -->\n\ngenerationMode  \nThe alias for the table; optional.\n\n<!-- -->\n\ntableAlias  \nThe alias for the table; optional.\n\n#### Return Value\n\nThe name of the field.\n\n#### Examples\n\nThe following example shows the retrieval of the name of the field.\n\n    DictField df; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        print df.name(); \n    }\n\n### Method origin\n\n    public Guid origin()\n\n#### Return Value\n\n### Method qualifiedLabel\n\n    public str qualifiedLabel([int arrayIndex])\n\n#### Parameters\n\narrayIndex  \n\n#### Return Value\n\n### Method relatedTableName\n\n    public str relatedTableName()\n\n#### Return Value\n\n### Method relationContext\n\n    public str relationContext()\n\n#### Return Value\n\n### Method relationObject\n\nReturns a DictRelation object for the field if the field is based on an extended data type that has a relation.\n\n    public DictRelation relationObject([int arrayIndex])\n\n#### Parameters\n\narrayIndex  \n\n#### Return Value\n\nA DictRelation object that represents the relations for the field; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if there no relations are defined for the field, or if the field is not based on an extended data type.\n\n### Method rights\n\nReturns the access rights for the current user that are specified for the field.\n\n    public AccessType rights([boolean ignoreContext])\n\n#### Parameters\n\nignoreContext  \n\n#### Return Value\n\nThe access rights for the current user that are specified for the field.\n\n#### Remarks\n\nThis can be one of the values in the AccessType enumeration.\n\n### Method stringLen\n\nReturns the string size of the field if the base type of the field is a string.\n\n    public int stringLen()\n\n#### Return Value\n\nThe string size of the field if the base type of the field is a string; otherwise, 0 (zero).\n\n#### Examples\n\nThe following example shows retrieving the string length of a field.\n\n    DictField df; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        print strfmt(\"The string length is %1.\", df.stringLen()); \n    }\n\n### Method tableid\n\nReturns the ID of the table that contains the field.\n\n    public TableId tableid()\n\n#### Return Value\n\nThe ID of the table that contains the field.\n\n#### Examples\n\nThe following example shows the retrieval of the table ID of a field.\n\n    DictField df; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        print df.tableid(); \n    }\n\n### Method type\n\nReturns the data type of the field.\n\n    public Types type()\n\n#### Return Value\n\nA Types value that specifies the type of the field.\n\n#### Remarks\n\nIf the field is based on an extended data type, Types::UserType is returned as the return value of this method.\n\n#### Examples\n\nThe following example shows the retrieval of the type of a field.\n\n    DictField df; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n        print df.type(); \n    }\n\n### Method typeId\n\nReturns the ID of the extended data type if the field is based on an extended data type.\n\n    public ExtendedTypeId typeId()\n\n#### Return Value\n\nThe ID of the extended data type if the field is based on an extended data type; otherwise, 0 (zero).\n\n#### Examples\n\nThe following example shows the retrieval of the extended data type ID for a field.\n\n    DictField df; \n    extendedTypeId eti; \n    DictType  dt; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    if (df) \n    { \n       eti = df.typeId(); \n       if (0 != eti) \n       { \n            dt = new DictType(eti); \n            if (dt) \n            { \n                print strfmt(\"The field is based on %1.\", dt.name()); \n            } \n       } \n       else \n       { \n            print \"The field is not based on an extended data type.\"; \n       } \n    }\n\n### Method visible\n\n    public boolean visible()\n\n#### Return Value\n\n### Method setLookupMode\n\n    public void setLookupMode(boolean lookupMode)\n\n#### Parameters\n\nlookupMode  \n\n### Method setSFKAutoAuthorizationMode\n\n    public void setSFKAutoAuthorizationMode(boolean sfkMode)\n\n#### Parameters\n\nsfkMode  \n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(TableId tableId, FieldId fieldId, [int arrayIndex])\n\n#### Parameters\n\ntableId  \n\n<!-- -->\n\nfieldId  \n\n<!-- -->\n\narrayIndex  \n\n#### Examples\n\nThe following example shows how to create an instance of the DictField class.\n\n    DictField df; \n    df = new DictField(tablenum(CustTable), fieldnum(CustTable, AccountNum)); \n    // Check df for successful creation before proceeding. \n    if (!df) \n    { \n    // Take error action. \n    }\n\n## Class DictFieldGroup\n    class DictFieldGroup extends Object\n\nThe DictFieldGroup class provides information about a specific field group in a table.\n\n### Remarks\n\nFor a code example that uses this class, see the DictFieldGroup.numberOfFields Method method.\n\n### Examples\n\n### Methods\n\n| Method                                                                             | Description                                                                         |\n|------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------|\n| public FieldId field(int fieldNumber)                                              | Returns the specified field from the field group.                                   |\n| public str label()                                                                 | Returns the label text of the field group.                                          |\n| public str labelId()                                                               | Returns the label ID of the field group.                                            |\n| public str methodName(FieldId fieldId)                                             | Returns the name of the specified method from the field group.                      |\n| public str name()                                                                  | Returns the name of the field group.                                                |\n| public int numberOfFields()                                                        | Returns the number of table fields and edit and display methods in the field group. |\n| public TableId tableid()                                                           | Returns the ID of the table that is associated with the field group.                |\n| public void new(TableId tableId, str FieldGroupName, \\[TableId includeBaseTable\\]) | Initializes a new instance of the Object class.                                     |\n\n### Method field\n\nReturns the specified field from the field group.\n\n    public FieldId field(int fieldNumber)\n\n#### Parameters\n\nfieldNumber  \nThe one-based index to the list of fields in the field group. The index is in the same order as the Microsoft Dynamics AX Application Object Tree (AOT).\n\n#### Return Value\n\nThe field ID of the field. If the item is a display method, the ID is in the form 65280 + 0-based method index.\n\n#### Remarks\n\nFor a code example that uses the Field method, see the DictFieldGroup.numberOfFields Method method.\n\n### Method label\n\nReturns the label text of the field group.\n\n    public str label()\n\n#### Return Value\n\nThe label text of the field group.\n\n### Method labelId\n\nReturns the label ID of the field group.\n\n    public str labelId()\n\n#### Return Value\n\nThe label ID of the field group.\n\n### Method methodName\n\nReturns the name of the specified method from the field group.\n\n    public str methodName(FieldId fieldId)\n\n#### Parameters\n\nfieldId  \nThe field ID that is returned from a call to the field method for the method name to return. It is the responsibility of the developer to make sure that a valid field ID is used.\n\n#### Return Value\n\nThe name of the specified method from the field group; an empty string if the fieldId value is less than 65280.\n\n#### Remarks\n\nMethods are specified by method index + 65280. For a code example that uses this method, see the DictFieldGroup.numberOfFields Method method.\n\n### Method name\n\nReturns the name of the field group.\n\n    public str name()\n\n#### Return Value\n\nThe name of the field group.\n\n### Method numberOfFields\n\nReturns the number of table fields and edit and display methods in the field group.\n\n    public int numberOfFields()\n\n#### Return Value\n\nThe number of table fields and edit and display methods in the field group.\n\n#### Examples\n\nThe following example shows the retrieval of the number of table fields and edit and display methods in a field group.\n\n        DictFieldGroup  fldGrp; \n        DictField       fld; \n        fieldId         fldId; \n        tableId         tblId; \n        int             i; \n        tblId = tablenum(\"CustTable\"); \n        fldGrp = new DictFieldGroup(tblId,\"AutoReport\"); \n        if (fldGrp) \n        {     for (i=1; i <= fldGrp.numberOfFields(); i++) \n             { \n                 fldId = fldGrp.field(i); \n                 fld  = new DictField(tblId, fldId); \n                 if (fld) \n                 { \n                    print 'Field: ' + fld.name() \n           + ' (' + int2str(fldId) + ')'; \n                 } \n                 else \n                 { \n                    print 'MethodName: ' + fldGrp.methodName(fldId)  \n                    + ' (' + int2str(fldId) + ')'; \n                 } \n             } \n        }\n\n### Method tableid\n\nReturns the ID of the table that is associated with the field group.\n\n    public TableId tableid()\n\n#### Return Value\n\nThe ID of the table that is associated with the field group.\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(TableId tableId, str FieldGroupName, [TableId includeBaseTable])\n\n#### Parameters\n\ntableId  \n\n<!-- -->\n\nFieldGroupName  \n\n<!-- -->\n\nincludeBaseTable  \n\n#### Remarks\n\nFor a code example that uses this method, see the DictFieldGroup.numberOfFields Method method.\n\n## Class DictFullTextIndex\n    class DictFullTextIndex extends Object\n\nThe DictFullTextIndex class returns metadata about a full text index.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                  | Description                                            |\n|---------------------------------------------------------|--------------------------------------------------------|\n| public FullTextIndexChangeTracking changeTrackingMode() | Gets the change tracking mode of the full text index.  |\n| public ConfigurationKeyId configurationKeyId()          | Returns the ID of the configuration key for the index. |\n| public IndexId id()                                     | Gets the ID of the full text index.                    |\n| public str name()                                       | Gets the name of the full text index.                  |\n| public TableId tableid()                                | Returns the ID of the table that contains the index.   |\n| public void new(TableId tableId, IndexId indexId)       | Initializes a new instance of the Object class.        |\n\n### Method changeTrackingMode\n\nGets the change tracking mode of the full text index.\n\n    public FullTextIndexChangeTracking changeTrackingMode()\n\n#### Return Value\n\n### Method configurationKeyId\n\nReturns the ID of the configuration key for the index.\n\n    public ConfigurationKeyId configurationKeyId()\n\n#### Return Value\n\nThe ID of the configuration key for the index; 0 (zero) if the index does not have a configuration key.\n\n### Method id\n\nGets the ID of the full text index.\n\n    public IndexId id()\n\n#### Return Value\n\nThe ID of the index.\n\n### Method name\n\nGets the name of the full text index.\n\n    public str name()\n\n#### Return Value\n\nThe name of the index.\n\n### Method tableid\n\nReturns the ID of the table that contains the index.\n\n    public TableId tableid()\n\n#### Return Value\n\nThe ID of the table that contains the index.\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(TableId tableId, IndexId indexId)\n\n#### Parameters\n\ntableId  \n\n<!-- -->\n\nindexId  \n\n## Class DictIndex\n    class DictIndex extends Object\n\nThe DictIndex class returns metadata about a table index.\n\n### Remarks\n\n### Examples\n\nThe following example creates an instance of the DictIndex class.\n\n    Dictionary dict; \n    DictTable  table; \n    DictIndex  idx; \n    dict = new Dictionary(); \n    table = new DictTable(dict.tableName2Id(\"Address\")); \n    idx = new DictIndex(table.id(), table.indexName2Id(\"AddrIdx\"));\n\n### Methods\n\n| Method                                                                                                                          | Description                                                           |\n|---------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------|\n| public boolean allowDuplicates()                                                                                                | Returns the value of the allowDuplicates property for the index.      |\n| public ConfigurationKeyId configurationKeyId()                                                                                  | Returns the ID of the configuration key for the index.                |\n| public boolean enabled()                                                                                                        | Returns a value that indicates whether the index is enabled.          |\n| public FieldId field(int fieldNumber)                                                                                           | Returns the ID of the specified field in the index.                   |\n| public ValidTimeStateMode getValidTimeStateMode()                                                                               |                                                                       |\n| public IndexId id()                                                                                                             | Returns the ID of the index.                                          |\n| public FieldId includedColumn(int fieldNumber)                                                                                  |                                                                       |\n| public boolean isAlternateKey()                                                                                                 |                                                                       |\n| public boolean isSql()                                                                                                          | Gets a value that indicates whether the index is in the SQL database. |\n| public boolean isValidTimeStateKey()                                                                                            |                                                                       |\n| public boolean modify(boolean enabled, boolean allowDuplicates, boolean saveInLoadedLayer)                                      | Modifies the index.                                                   |\n| public str name(\\[DbBackend db\\])                                                                                               | Returns the name of the index.                                        |\n| public int numberOfFields()                                                                                                     | Returns the number of fields in the index definition.                 |\n| public int numberOfIncludedColumns()                                                                                            |                                                                       |\n| public boolean setAlternateKey(boolean alternateKey, boolean saveInLoadedLayer)                                                 |                                                                       |\n| public boolean setValidTimeStateKey(boolean setValidTimeStateKey, ValidTimeStateMode validTimeState, boolean saveInLoadedLayer) |                                                                       |\n| public TableId tableid()                                                                                                        | Returns the ID of the table that contains the index.                  |\n| public void new(TableId tableId, IndexId indexId)                                                                               | Initializes a new instance of the Object class.                       |\n\n### Method allowDuplicates\n\nReturns the value of the allowDuplicates property for the index.\n\n    public boolean allowDuplicates()\n\n#### Return Value\n\ntrue if the index allows duplicates; otherwise, false.\n\n### Method configurationKeyId\n\nReturns the ID of the configuration key for the index.\n\n    public ConfigurationKeyId configurationKeyId()\n\n#### Return Value\n\nThe ID of the configuration key for the index; 0 (zero) if the index does not have a configuration key.\n\n### Method enabled\n\nReturns a value that indicates whether the index is enabled.\n\n    public boolean enabled()\n\n#### Return Value\n\ntrue if the index is enabled; otherwise, false.\n\n### Method field\n\nReturns the ID of the specified field in the index.\n\n    public FieldId field(int fieldNumber)\n\n#### Parameters\n\nfieldNumber  \nThe one-based index of the field in the index.\n\n#### Return Value\n\nThe ID of the field that is specified by fieldNumber; 0 (zero) if fieldNumber does not represent a valid field.\n\n#### Examples\n\nThe following example shows the retrieval of each field in an index. The name of each field is displayed by using a loop.\n\n    Dictionary dict; \n    DictTable  table; \n    DictIndex  idx; \n    DictField  field; \n    int i; \n    dict = new Dictionary(); \n    table = new DictTable(dict.tableName2Id(\"Address\")); \n    idx = new DictIndex(table.id(), table.indexName2Id(\"AddrIdx\")); \n    for (i=1; i <= idx.numberOfFields(); i++) \n    { \n        field = new DictField(table.id(), idx.field(i)); \n        print field.name(); \n    }\n\n### Method getValidTimeStateMode\n\n    public ValidTimeStateMode getValidTimeStateMode()\n\n#### Return Value\n\n### Method id\n\nReturns the ID of the index.\n\n    public IndexId id()\n\n#### Return Value\n\nThe ID of the index.\n\n### Method includedColumn\n\n    public FieldId includedColumn(int fieldNumber)\n\n#### Parameters\n\nfieldNumber  \n\n#### Return Value\n\n### Method isAlternateKey\n\n    public boolean isAlternateKey()\n\n#### Return Value\n\n### Method isSql\n\nGets a value that indicates whether the index is in the SQL database.\n\n    public boolean isSql()\n\n#### Return Value\n\ntrue if the index is in the SQL database; otherwise, false.\n\n### Method isValidTimeStateKey\n\n    public boolean isValidTimeStateKey()\n\n#### Return Value\n\n### Method modify\n\nModifies the index.\n\n    public boolean modify(boolean enabled, boolean allowDuplicates, boolean saveInLoadedLayer)\n\n#### Parameters\n\nenabled  \nA Boolean value that indicates whether the modification is saved in the layer that is loaded.\n\n<!-- -->\n\nallowDuplicates  \nA Boolean value that indicates whether the modification is saved in the layer that is loaded.\n\n<!-- -->\n\nsaveInLoadedLayer  \nA Boolean value that indicates whether the modification is saved in the layer that is loaded.\n\n#### Return Value\n\ntrue if the index was successfully modified; otherwise, false.\n\n#### Remarks\n\nThis method lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n### Method name\n\nReturns the name of the index.\n\n    public str name([DbBackend db])\n\n#### Parameters\n\ndb  \nA DbBackend value that specifies the type of name to return. This can be DbBackend::Native for the native name of the index or DbBackend::Sql for the SQL name of the index. If db is not specified, DbBackend::Native is used.\n\n#### Return Value\n\nThe name of the index in the format that is specified by db.\n\n### Method numberOfFields\n\nReturns the number of fields in the index definition.\n\n    public int numberOfFields()\n\n#### Return Value\n\nThe number of fields in the index.\n\n#### Examples\n\nThe following example shows the retrieval of the number of fields in the index and lists the names of the fields in the index.\n\n    Dictionary dict; \n    DictTable  table; \n    DictIndex  idx; \n    DictField  field; \n    int i; \n    dict = new Dictionary(); \n    table = new DictTable(dict.tableName2Id(\"Address\")); \n    idx = new DictIndex(table.id(), table.indexName2Id(\"AddrIdx\")); \n    for (i=1; i <= idx.numberOfFields(); i++) \n    { \n        field = new DictField(table.id(), idx.field(i)); \n        print field.name(); \n    }\n\n### Method numberOfIncludedColumns\n\n    public int numberOfIncludedColumns()\n\n#### Return Value\n\n### Method setAlternateKey\n\n    public boolean setAlternateKey(boolean alternateKey, boolean saveInLoadedLayer)\n\n#### Parameters\n\nalternateKey  \n\n<!-- -->\n\nsaveInLoadedLayer  \n\n#### Return Value\n\n### Method setValidTimeStateKey\n\n    public boolean setValidTimeStateKey(boolean setValidTimeStateKey, ValidTimeStateMode validTimeState, boolean saveInLoadedLayer)\n\n#### Parameters\n\nsetValidTimeStateKey  \n\n<!-- -->\n\nvalidTimeState  \n\n<!-- -->\n\nsaveInLoadedLayer  \n\n#### Return Value\n\n### Method tableid\n\nReturns the ID of the table that contains the index.\n\n    public TableId tableid()\n\n#### Return Value\n\nThe ID of the table that contains the index.\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(TableId tableId, IndexId indexId)\n\n#### Parameters\n\ntableId  \nThe ID of the index that is used to create this instance of the DictIndex class.\n\n<!-- -->\n\nindexId  \nThe ID of the index that is used to create this instance of the DictIndex class.\n\n## Class Dictionary\n    class Dictionary extends Object\n\nThe Dictionary class provides information about tables, extended data types, classes, and other items in the Microsoft Dynamics AX Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                                                       | Description                                                                                                      |\n|----------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------|\n| public int classCnt()                                                                                                                        | Indicates the number of classes in Microsoft Dynamics AX.                                                        |\n| public ClassId classCnt2Id(int cnt)                                                                                                          | Provides the ID of a specified class.                                                                            |\n| public str className(ClassId classId)                                                                                                        | Provides the name of a specified class.                                                                          |\n| public ClassId className2Id(str name)                                                                                                        | Provides the ID for a specified class, based on the class name.                                                  |\n| public ClassId classNext(ClassId classId)                                                                                                    | Indicates the class that succeeds a specified class, based on the class IDs.                                     |\n| public DictClass classObject(ClassId classId)                                                                                                | Provides information about a specified class by returning a DictClass object.                                    |\n| public int configurationKeyCnt()                                                                                                             | Indicates the number of configuration keys in Microsoft Dynamics AX.                                             |\n| public ConfigurationKeyId configurationKeyCnt2Id(int cnt)                                                                                    | Provides the ID of a specified configuration key.                                                                |\n| public str configurationKeyName(ConfigurationKeyId configurationKey)                                                                         | Provides the name of a specified configuration key.                                                              |\n| public ConfigurationKeyId configurationKeyName2Id(str name)                                                                                  | Provides the ID for a specified configuration key, based on the configuration key name.                          |\n| public ConfigurationKeyId configurationKeyNext(ConfigurationKeyId configurationKey)                                                          | Indicates the configuration key that succeeds a specified configuration key, based on the configuration key IDs. |\n| public DictConfigurationKey configurationKeyObject(ConfigurationKeyId configurationKey)                                                      | Provides information about a specified configuration key by returning a DictConfigurationKey object.             |\n| public SelectableDataArea currentCompany()                                                                                                   | Indicates the current company for which data is available in the database.                                       |\n| public int enumCnt()                                                                                                                         | Indicates the number of enumeration types in Microsoft Dynamics AX.                                              |\n| public EnumId enumCnt2Id(int cnt)                                                                                                            | Provides the ID of a specified enumeration type.                                                                 |\n| public str enumName(EnumId typeId)                                                                                                           | Provides the name for a specified enumeration.                                                                   |\n| public EnumId enumName2Id(str name)                                                                                                          | Provides the ID of a specified enumeration, based on the name.                                                   |\n| public EnumId enumNext(EnumId typeId)                                                                                                        | Indicates the enumeration type that succeeds a specified enumeration type, based on the enumeration type IDs.    |\n| public DictEnum enumObject(EnumId typeId)                                                                                                    | Provides information about a specified enumeration by returning a DictEnum object.                               |\n| public int licenseCodeCnt()                                                                                                                  | Indicates the number of license codes in Microsoft Dynamics AX.                                                  |\n| public LicenseCodeId licenseCodeCnt2Id(int cnt)                                                                                              | Provides the ID of a specified license code.                                                                     |\n| public str licenseCodeName(LicenseCodeId licenseCode)                                                                                        | Provides the name of a specified license code.                                                                   |\n| public LicenseCodeId licenseCodeName2Id(str name)                                                                                            | Provides the ID for a specified license code, based on the license code name.                                    |\n| public LicenseCodeId licenseCodeNext(LicenseCodeId licenseCode)                                                                              | Indicates the license code that succeeds a specified license code, based on the license code IDs.                |\n| public DictLicenseCode licenseCodeObject(LicenseCodeId licenseCode)                                                                          | Provides information about a specified license code by returning a DictLicenseCode object.                       |\n| public int tableCnt()                                                                                                                        | Indicates the number of tables in Microsoft Dynamics AX.                                                         |\n| public TableId tableCnt2Id(int cnt)                                                                                                          | Provides the ID of a specified table.                                                                            |\n| public str tableName(TableId tableId)                                                                                                        | Provides the name of a specified table.                                                                          |\n| public TableId tableName2Id(str name)                                                                                                        | Provides the ID for a specified table, based on the table name.                                                  |\n| public TableId tableNext(TableId tableId)                                                                                                    | Indicates the table that succeeds a specified table, based on the table IDs.                                     |\n| public DictTable tableObject(TableId tableId)                                                                                                | Provides information about a specified table by returning a DictTable object.                                    |\n| public boolean tableSql(TableId tableId)                                                                                                     | Indicates whether a table is a SQL table.                                                                        |\n| public boolean tableSystem(TableId tableId)                                                                                                  | Indicates whether a table is a system table.                                                                     |\n| public int testCode(int id, str value, str name, str serialno, str expiryDate, \\[int userCount\\], \\[boolean verifyCert\\], \\[str timestamp\\]) |                                                                                                                  |\n| public int typeCnt()                                                                                                                         | Indicates the number of extended data types in Microsoft Dynamics AX.                                            |\n| public ExtendedTypeId typeCnt2Id(int cnt)                                                                                                    | Provides the ID of a specified extended data type.                                                               |\n| public str typeName(ExtendedTypeId typeId)                                                                                                   | Provides the name of a specified extended data type.                                                             |\n| public ExtendedTypeId typeName2Id(str name)                                                                                                  | Provides the ID for a specified extended data type, based on the extended data type name.                        |\n| public ExtendedTypeId typeNext(ExtendedTypeId typeId)                                                                                        | Indicates the extended data type that succeeds a specified extended data type, based on the IDs.                 |\n| public DictType typeObject(ExtendedTypeId typeId)                                                                                            | Provides information about a specified extended data type by returning a DictType object.                        |\n| ::public static boolean safeMode()                                                                                                           |                                                                                                                  |\n| ::public static void loginSettingsFlush()                                                                                                    | Refreshes the logon settings for Microsoft Dynamics AX.                                                          |\n| ::public static void dataFlush(\\[TableId tableId\\])                                                                                          | Refreshes the table data in Microsoft Dynamics AX.                                                               |\n| public void tableFlush()                                                                                                                     | Refreshes the tables in Microsoft Dynamics AX.                                                                   |\n| public void enumFlush()                                                                                                                      | Refreshes the enumeration types in Microsoft Dynamics AX.                                                        |\n| public void new()                                                                                                                            | Initializes a new instance of the Dictionary class.                                                              |\n| public void classFlush()                                                                                                                     | Refreshes the classes in Microsoft Dynamics AX.                                                                  |\n| public void reloadSecurity(\\[boolean reloadCodes\\], \\[boolean setSynchronizeRequired\\], \\[boolean flushTable\\])                              | Reloads the feature key system.                                                                                  |\n| public void typeFlush()                                                                                                                      | Refreshes the extended data types in Microsoft Dynamics AX.                                                      |\n| public void configurationKeyFlush()                                                                                                          | Refreshes the configuration keys in Microsoft Dynamics AX.                                                       |\n| public void licenseCodeFlush()                                                                                                               | Refreshes the license codes in Microsoft Dynamics AX.                                                            |\n| ::public static void aodFlush()                                                                                                              | Refreshes the .aod file.                                                                                         |\n\n### Method classCnt\n\nIndicates the number of classes in Microsoft Dynamics AX.\n\n    public int classCnt()\n\n#### Return Value\n\nAn integer value that indicates the number of classes.\n\n### Method classCnt2Id\n\nProvides the ID of a specified class.\n\n    public ClassId classCnt2Id(int cnt)\n\n#### Parameters\n\ncnt  \nAn integer value that specifies a class, based on the order of classes in Microsoft Dynamics AX.\n\n#### Return Value\n\nA classId system data type value that indicates the class ID; 0 (zero) if you pass a cnt value that is larger than the number of classes that is returned by the Dictionary::classCnt method.\n\n### Method className\n\nProvides the name of a specified class.\n\n    public str className(ClassId classId)\n\n#### Parameters\n\nclassId  \nA classId system data type that indicates the class ID.\n\n#### Return Value\n\nA string that indicates the class name.\n\n#### Remarks\n\nClass IDs are unsigned integers.\n\n### Method className2Id\n\nProvides the ID for a specified class, based on the class name.\n\n    public ClassId className2Id(str name)\n\n#### Parameters\n\nname  \nA string that indicates the class name.\n\n#### Return Value\n\nA classId system data type value that indicates the class ID; 0 (zero) if you pass a name value for a nonexistent class.\n\n### Method classNext\n\nIndicates the class that succeeds a specified class, based on the class IDs.\n\n    public ClassId classNext(ClassId classId)\n\n#### Parameters\n\nclassId  \nA classId system data type that indicates a class ID.\n\n#### Return Value\n\nA classId system data type value that indicates the class that succeeds the specified class.\n\n### Method classObject\n\nProvides information about a specified class by returning a DictClass object.\n\n    public DictClass classObject(ClassId classId)\n\n#### Parameters\n\nclassId  \nA classId system data type that indicates a class ID.\n\n#### Return Value\n\nA DictClass object that contains information about the specified class.\n\n### Method configurationKeyCnt\n\nIndicates the number of configuration keys in Microsoft Dynamics AX.\n\n    public int configurationKeyCnt()\n\n#### Return Value\n\nAn integer value that indicates the number of configuration keys.\n\n### Method configurationKeyCnt2Id\n\nProvides the ID of a specified configuration key.\n\n    public ConfigurationKeyId configurationKeyCnt2Id(int cnt)\n\n#### Parameters\n\ncnt  \nAn integer that specifies a configuration key, based on the order of configuration keys in Microsoft Dynamics AX.\n\n#### Return Value\n\nA configurationKeyId system data type value that indicates a configuration key ID; 0 (zero) if you pass a cnt value that is larger than the number of configuration keys that is returned by the Dictionary::configurationKeyCnt method.\n\n### Method configurationKeyName\n\nProvides the name of a specified configuration key.\n\n    public str configurationKeyName(ConfigurationKeyId configurationKey)\n\n#### Parameters\n\nconfigurationKey  \nA configurationKeyId system data type that indicates a configuration key ID.\n\n#### Return Value\n\nA string that indicates the name of the configuration key.\n\n### Method configurationKeyName2Id\n\nProvides the ID for a specified configuration key, based on the configuration key name.\n\n    public ConfigurationKeyId configurationKeyName2Id(str name)\n\n#### Parameters\n\nname  \nA string that indicates a configuration key name.\n\n#### Return Value\n\nA configurationKeyId system data type value that indicates the configuration key ID; 0 (zero) if you pass a name value for a nonexistent configuration key.\n\n### Method configurationKeyNext\n\nIndicates the configuration key that succeeds a specified configuration key, based on the configuration key IDs.\n\n    public ConfigurationKeyId configurationKeyNext(ConfigurationKeyId configurationKey)\n\n#### Parameters\n\nconfigurationKey  \nA configurationKeyId system data type that indicates a configuration key ID.\n\n#### Return Value\n\nA configurationKeyId system data type value for the configuration key that succeeds the specified configuration key.\n\n### Method configurationKeyObject\n\nProvides information about a specified configuration key by returning a DictConfigurationKey object.\n\n    public DictConfigurationKey configurationKeyObject(ConfigurationKeyId configurationKey)\n\n#### Parameters\n\nconfigurationKey  \nA configurationKeyId system data type that indicates a configuration key ID.\n\n#### Return Value\n\nA DictConfigurationKey object that contains information about the specified configuration key.\n\n### Method currentCompany\n\nIndicates the current company for which data is available in the database.\n\n    public SelectableDataArea currentCompany()\n\n#### Return Value\n\nA selectableDataArea system data type value that indicates the current company.\n\n### Method enumCnt\n\nIndicates the number of enumeration types in Microsoft Dynamics AX.\n\n    public int enumCnt()\n\n#### Return Value\n\nAn integer that indicates the number of enumeration types.\n\n### Method enumCnt2Id\n\nProvides the ID of a specified enumeration type.\n\n    public EnumId enumCnt2Id(int cnt)\n\n#### Parameters\n\ncnt  \nAn integer that specifies an enumeration type, based on the order of enumeration types in Microsoft Dynamics AX.\n\n#### Return Value\n\nAn enumId system data type value that indicates the enumeration type ID; 0 (zero) if you pass a cnt value that is larger than the number of classes that is returned by the Dictionary::enumCnt method.\n\n### Method enumName\n\nProvides the name for a specified enumeration.\n\n    public str enumName(EnumId typeId)\n\n#### Parameters\n\ntypeId  \nAn enumId system data type for an enumeration.\n\n#### Return Value\n\nA string that indicates the name of the enumeration.\n\n### Method enumName2Id\n\nProvides the ID of a specified enumeration, based on the name.\n\n    public EnumId enumName2Id(str name)\n\n#### Parameters\n\nname  \nA string that indicates the name of an enumeration.\n\n#### Return Value\n\nAn enumId system data type value that indicates the ID of the enumeration.\n\n### Method enumNext\n\nIndicates the enumeration type that succeeds a specified enumeration type, based on the enumeration type IDs.\n\n    public EnumId enumNext(EnumId typeId)\n\n#### Parameters\n\ntypeId  \nAn enumId system data type that indicates an enumeration ID.\n\n#### Return Value\n\nAn enumId system data type value for the enumeration that succeeds the specified enumeration.\n\n### Method enumObject\n\nProvides information about a specified enumeration by returning a DictEnum object.\n\n    public DictEnum enumObject(EnumId typeId)\n\n#### Parameters\n\ntypeId  \nAn enumId system data type that indicates an enumeration ID.\n\n#### Return Value\n\nA DictEnum object that contains information about the specified enumeration.\n\n### Method licenseCodeCnt\n\nIndicates the number of license codes in Microsoft Dynamics AX.\n\n    public int licenseCodeCnt()\n\n#### Return Value\n\nAn integer that indicates the number of license codes.\n\n### Method licenseCodeCnt2Id\n\nProvides the ID of a specified license code.\n\n    public LicenseCodeId licenseCodeCnt2Id(int cnt)\n\n#### Parameters\n\ncnt  \nAn integer that specifies a license code, based on the order of license codes in Microsoft Dynamics AX.\n\n#### Return Value\n\nA licenseCodeId system data type value that indicates the license code ID; 0 (zero) if you pass a cnt value that is larger than the number of license codes that is returned by the Dictionary::licenseCodeCnt method.\n\n### Method licenseCodeName\n\nProvides the name of a specified license code.\n\n    public str licenseCodeName(LicenseCodeId licenseCode)\n\n#### Parameters\n\nlicenseCode  \nA licenseCodeId system data type that indicates the license code ID.\n\n#### Return Value\n\nA string that indicates the license code name.\n\n### Method licenseCodeName2Id\n\nProvides the ID for a specified license code, based on the license code name.\n\n    public LicenseCodeId licenseCodeName2Id(str name)\n\n#### Parameters\n\nname  \nA string that indicates the license code name.\n\n#### Return Value\n\nA licenseCodeId system data type value that indicates the license code ID; 0 (zero) if you pass a name value for a nonexistent license code.\n\n### Method licenseCodeNext\n\nIndicates the license code that succeeds a specified license code, based on the license code IDs.\n\n    public LicenseCodeId licenseCodeNext(LicenseCodeId licenseCode)\n\n#### Parameters\n\nlicenseCode  \nA licenseCodeId system data type that indicates a license code ID.\n\n#### Return Value\n\nA licenseCodeId system data type value for the license code that succeeds the specified license code.\n\n### Method licenseCodeObject\n\nProvides information about a specified license code by returning a DictLicenseCode object.\n\n    public DictLicenseCode licenseCodeObject(LicenseCodeId licenseCode)\n\n#### Parameters\n\nlicenseCode  \nA licenseCodeId system data that indicates a license code ID.\n\n#### Return Value\n\nA DictLicenseCode object that contains information about the specified license code.\n\n### Method tableCnt\n\nIndicates the number of tables in Microsoft Dynamics AX.\n\n    public int tableCnt()\n\n#### Return Value\n\nAn integer that indicates the number of tables.\n\n### Method tableCnt2Id\n\nProvides the ID of a specified table.\n\n    public TableId tableCnt2Id(int cnt)\n\n#### Parameters\n\ncnt  \nAn integer that specifies a table, based on the order of tables.\n\n#### Return Value\n\nA tableId system data type value that indicates the table ID; 0 (zero) if you pass a cnt value that is larger than the number of tables that is returned by the Dictionary::tableCnt method.\n\n### Method tableName\n\nProvides the name of a specified table.\n\n    public str tableName(TableId tableId)\n\n#### Parameters\n\ntableId  \nA tableId system data type that indicates the table ID.\n\n#### Return Value\n\nA string that indicates the table name; UNKNOWN if you pass a tableId value that does not exist.\n\n#### Remarks\n\nThe method returns UNKNOWN if you pass a tableId value that does not exist.\n\n### Method tableName2Id\n\nProvides the ID for a specified table, based on the table name.\n\n    public TableId tableName2Id(str name)\n\n#### Parameters\n\nname  \nA string that indicates the table name.\n\n#### Return Value\n\nA tableId system data type value that indicates the table ID; 0 (zero) if you pass a name value for a nonexistent table.\n\n### Method tableNext\n\nIndicates the table that succeeds a specified table, based on the table IDs.\n\n    public TableId tableNext(TableId tableId)\n\n#### Parameters\n\ntableId  \nA tableId system data type that indicates a table ID.\n\n#### Return Value\n\nA tableId system data type value for the table that succeeds the specified table.\n\n### Method tableObject\n\nProvides information about a specified table by returning a DictTable object.\n\n    public DictTable tableObject(TableId tableId)\n\n#### Parameters\n\ntableId  \nA tableId system data type that indicates a table ID.\n\n#### Return Value\n\nA DictTable object that contains information about the specified table.\n\n### Method tableSql\n\nIndicates whether a table is a SQL table.\n\n    public boolean tableSql(TableId tableId)\n\n#### Parameters\n\ntableId  \nA tableId system data type that indicates the table ID.\n\n#### Return Value\n\ntrue if the table is a SQL table; otherwise, false.\n\n### Method tableSystem\n\nIndicates whether a table is a system table.\n\n    public boolean tableSystem(TableId tableId)\n\n#### Parameters\n\ntableId  \nA tableId system data type that indicates a table ID.\n\n#### Return Value\n\ntrue if the table is a system table; otherwise, false.\n\n#### Remarks\n\nYou can pass a table name to this method instead of a table ID by using the tableNum intrinsic function. For more information, see Intrinsic Functions.\n\n### Method testCode\n\n    public int testCode(int id, str value, str name, str serialno, str expiryDate, [int userCount], [boolean verifyCert], [str timestamp])\n\n#### Parameters\n\nid  \n\n<!-- -->\n\nvalue  \n\n<!-- -->\n\nname  \n\n<!-- -->\n\nserialno  \n\n<!-- -->\n\nexpiryDate  \n\n<!-- -->\n\nuserCount  \n\n<!-- -->\n\nverifyCert  \n\n<!-- -->\n\ntimestamp  \n\n#### Return Value\n\n### Method typeCnt\n\nIndicates the number of extended data types in Microsoft Dynamics AX.\n\n    public int typeCnt()\n\n#### Return Value\n\nAn integer that indicates the number of extended data types.\n\n### Method typeCnt2Id\n\nProvides the ID of a specified extended data type.\n\n    public ExtendedTypeId typeCnt2Id(int cnt)\n\n#### Parameters\n\ncnt  \nAn integer that specifies an extended data type, based on the order of extended data types in Microsoft Dynamics AX.\n\n#### Return Value\n\nAn extendedTypeId system data type value that indicates the ID of the extended data type; 0 (zero) if you pass a cnt value that is larger than the number of extended data types that is returned by the Dictionary::typeCnt method.\n\n### Method typeName\n\nProvides the name of a specified extended data type.\n\n    public str typeName(ExtendedTypeId typeId)\n\n#### Parameters\n\ntypeId  \nAn extendedTypeId system data type that indicates the ID of an extended data type.\n\n#### Return Value\n\nA string that indicates the name of the extended data type.\n\n### Method typeName2Id\n\nProvides the ID for a specified extended data type, based on the extended data type name.\n\n    public ExtendedTypeId typeName2Id(str name)\n\n#### Parameters\n\nname  \nA string that indicates the name of the extended data type.\n\n#### Return Value\n\nAn extendedTypeId system data type value that indicates the ID of the extended data type; 0 (zero) if you pass a name value for a nonexistent extended data type.\n\n### Method typeNext\n\nIndicates the extended data type that succeeds a specified extended data type, based on the IDs.\n\n    public ExtendedTypeId typeNext(ExtendedTypeId typeId)\n\n#### Parameters\n\ntypeId  \nAn extendedTypeId system data type that indicates the ID for an extended data type.\n\n#### Return Value\n\nAn extendedTypeId system data type value for the extended data type that succeeds the specified extended data type.\n\n### Method typeObject\n\nProvides information about a specified extended data type by returning a DictType object.\n\n    public DictType typeObject(ExtendedTypeId typeId)\n\n#### Parameters\n\ntypeId  \nAn extendedTypeId system data type that indicates the ID for an extended data type.\n\n#### Return Value\n\nA DictType object that contains information about the specified extended data type.\n\n### Method safeMode\n\n    public static boolean safeMode()\n\n#### Return Value\n\n### Method loginSettingsFlush\n\nRefreshes the logon settings for Microsoft Dynamics AX.\n\n    public static void loginSettingsFlush()\n\n### Method dataFlush\n\nRefreshes the table data in Microsoft Dynamics AX.\n\n    public static void dataFlush([TableId tableId])\n\n#### Parameters\n\ntableId  \nA tableId system data type that indicates a single table or all tables. The default value is ALL.\n\n#### Remarks\n\nBy default, this method refreshes data in all tables.\n\n### Method tableFlush\n\nRefreshes the tables in Microsoft Dynamics AX.\n\n    public void tableFlush()\n\n### Method enumFlush\n\nRefreshes the enumeration types in Microsoft Dynamics AX.\n\n    public void enumFlush()\n\n### Method new\n\nInitializes a new instance of the Dictionary class.\n\n    public void new()\n\n### Method classFlush\n\nRefreshes the classes in Microsoft Dynamics AX.\n\n    public void classFlush()\n\n### Method reloadSecurity\n\nReloads the feature key system.\n\n    public void reloadSecurity([boolean reloadCodes], [boolean setSynchronizeRequired], [boolean flushTable])\n\n#### Parameters\n\nreloadCodes  \n\n<!-- -->\n\nsetSynchronizeRequired  \n\n<!-- -->\n\nflushTable  \n\n#### Remarks\n\nThe default value for the \\_reloadCodes parameter is false. The default value for the \\_setSynchronizeRequired parameter is true.\n\n### Method typeFlush\n\nRefreshes the extended data types in Microsoft Dynamics AX.\n\n    public void typeFlush()\n\n### Method configurationKeyFlush\n\nRefreshes the configuration keys in Microsoft Dynamics AX.\n\n    public void configurationKeyFlush()\n\n### Method licenseCodeFlush\n\nRefreshes the license codes in Microsoft Dynamics AX.\n\n    public void licenseCodeFlush()\n\n### Method aodFlush\n\nRefreshes the .aod file.\n\n    public static void aodFlush()\n\n## Class DictLicenseCode\n    class DictLicenseCode extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                       | Description                                     |\n|----------------------------------------------|-------------------------------------------------|\n| public LicenseCodeGroup group()              |                                                 |\n| public LicenseCodeId id()                    |                                                 |\n| public str label()                           |                                                 |\n| public str name()                            |                                                 |\n| public SysLicensePackageType package()       |                                                 |\n| public int publicKey()                       |                                                 |\n| public LicenseCodeType type()                |                                                 |\n| public void new(LicenseCodeId licenseCodeId) | Initializes a new instance of the Object class. |\n\n### Method group\n\n    public LicenseCodeGroup group()\n\n#### Return Value\n\n### Method id\n\n    public LicenseCodeId id()\n\n#### Return Value\n\n### Method label\n\n    public str label()\n\n#### Return Value\n\n### Method name\n\n    public str name()\n\n#### Return Value\n\n### Method package\n\n    public SysLicensePackageType package()\n\n#### Return Value\n\n### Method publicKey\n\n    public int publicKey()\n\n#### Return Value\n\n### Method type\n\n    public LicenseCodeType type()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(LicenseCodeId licenseCodeId)\n\n#### Parameters\n\nlicenseCodeId  \n\n## Class DictMethod\n    class DictMethod extends MethodInfo\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                      | Description                                                                                                                                                  |\n|-------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| public AccessSpecifier accessSpecifier()                    | Specifies whether the method is public, protected, or private.                                                                                               |\n| public str clrParameterType(int variableNumber)             |                                                                                                                                                              |\n| public str clrReturnType()                                  |                                                                                                                                                              |\n| public str clrVarType(int variableNumber)                   |                                                                                                                                                              |\n| public boolean compiledOk()                                 | Indicates whether the method compiled successfully.                                                                                                          |\n| public TableId displayId()                                  |                                                                                                                                                              |\n| public DisplayFunctionType displayType()                    | Indicates the type of display function of a method.                                                                                                          |\n| public boolean hasImplementation()                          | Determines whether the actual method implementation is on the class or derived from the base class.                                                          |\n| public boolean isAbstract()                                 | Indicates whether the method is abstract.                                                                                                                    |\n| public boolean isDelegate()                                 | Indicates whether the method is a delegate.                                                                                                                  |\n| public boolean isStatic()                                   | Indicates whether the method is static.                                                                                                                      |\n| public str name()                                           | Gets the name of the method.                                                                                                                                 |\n| public int parameterCnt()                                   | Gets the number of parameters for the method.                                                                                                                |\n| public int parameterId(int variableNumber)                  | Gets the ID of the specified parameter.                                                                                                                      |\n| public str parameterName(int variableNumber)                | Gets the name of the specified parameter.                                                                                                                    |\n| public boolean parameterOptional(int variableNumber)        | Indicates whether the specified parameter of the method is optional.                                                                                         |\n| public Types parameterType(int variableNumber)              |                                                                                                                                                              |\n| public int parentId()                                       | Gets the ID of the parent that owns the method.                                                                                                              |\n| public str propertyHelp()                                   | Gets the Help string for the property that is associated with the method.                                                                                    |\n| public NoYes propertyMethod()                               | Indicates whether the method is a property method.                                                                                                           |\n| public int returnId()                                       | Specifies the ID for certain return data types, such as extended data types and classes, for a method that returns a value.                                  |\n| public Types returnType()                                   | Specifies a method return type.                                                                                                                              |\n| public ClassRunMode runMode()                               | Specifies where a method is run.                                                                                                                             |\n| public int varCnt()                                         | Gets the number of variables for the method.                                                                                                                 |\n| public str varName(int variableNumber)                      | Gets the name of the specified variable.                                                                                                                     |\n| public void setMethod(MemberFunction method)                | Specifies the application object type of a node in the Microsoft Dynamics AX Application Object Tree (AOT) by using an instance of the MemberFunction class. |\n| public void new(UtilElementType utilType, int id, str name) | Initializes a new instance of the Object class.                                                                                                              |\n\n### Method accessSpecifier\n\nSpecifies whether the method is public, protected, or private.\n\n    public AccessSpecifier accessSpecifier()\n\n#### Return Value\n\nAn AccessSpecifier enumeration value that specifies whether the method is public, protected, or private.\n\n### Method clrParameterType\n\n    public str clrParameterType(int variableNumber)\n\n#### Parameters\n\nvariableNumber  \n\n#### Return Value\n\n### Method clrReturnType\n\n    public str clrReturnType()\n\n#### Return Value\n\n### Method clrVarType\n\n    public str clrVarType(int variableNumber)\n\n#### Parameters\n\nvariableNumber  \n\n#### Return Value\n\n### Method compiledOk\n\nIndicates whether the method compiled successfully.\n\n    public boolean compiledOk()\n\n#### Return Value\n\ntrue if the method compiled successfully; otherwise, false.\n\n### Method displayId\n\n    public TableId displayId()\n\n#### Return Value\n\n### Method displayType\n\nIndicates the type of display function of a method.\n\n    public DisplayFunctionType displayType()\n\n#### Return Value\n\nA DisplayFunctionType enumeration value that indicates the display function type of a method.\n\n#### Remarks\n\nThe following table lists the possible values that are returned by the displayType method.\n\n|           |                                             |\n|-----------|---------------------------------------------|\n| Get       | The method is a display method.             |\n| None      | The method is not a display or edit method. |\n| RecordGet | The method retrieves a record.              |\n| RecordSet | The method sets a record.                   |\n| Set       | The method is an edit method.               |\n\n### Method hasImplementation\n\nDetermines whether the actual method implementation is on the class or derived from the base class.\n\n    public boolean hasImplementation()\n\n#### Return Value\n\ntrue if the method is implemented on the class; otherwise, false.\n\n### Method isAbstract\n\nIndicates whether the method is abstract.\n\n    public boolean isAbstract()\n\n#### Return Value\n\ntrue if the method is abstract; otherwise, false.\n\n### Method isDelegate\n\nIndicates whether the method is a delegate.\n\n    public boolean isDelegate()\n\n#### Return Value\n\ntrue if the method is a delegate; otherwise, false.\n\n### Method isStatic\n\nIndicates whether the method is static.\n\n    public boolean isStatic()\n\n#### Return Value\n\ntrue if the method is a static; otherwise, false.\n\n### Method name\n\nGets the name of the method.\n\n    public str name()\n\n#### Return Value\n\nThe name of the method.\n\n### Method parameterCnt\n\nGets the number of parameters for the method.\n\n    public int parameterCnt()\n\n#### Return Value\n\nThe number of parameters for the method.\n\n### Method parameterId\n\nGets the ID of the specified parameter.\n\n    public int parameterId(int variableNumber)\n\n#### Parameters\n\nvariableNumber  \nThe one-based index to the parameter list for the method.\n\n#### Return Value\n\nThe ID of the specified parameter.\n\n### Method parameterName\n\nGets the name of the specified parameter.\n\n    public str parameterName(int variableNumber)\n\n#### Parameters\n\nvariableNumber  \nThe one-based index to the parameter list for the method.\n\n#### Return Value\n\nThe name of the specified parameter.\n\n### Method parameterOptional\n\nIndicates whether the specified parameter of the method is optional.\n\n    public boolean parameterOptional(int variableNumber)\n\n#### Parameters\n\nvariableNumber  \nThe one-based index to the parameter list for the method.\n\n#### Return Value\n\ntrue if the parameter is optional; otherwise, false.\n\n### Method parameterType\n\n    public Types parameterType(int variableNumber)\n\n#### Parameters\n\nvariableNumber  \n\n#### Return Value\n\n### Method parentId\n\nGets the ID of the parent that owns the method.\n\n    public int parentId()\n\n#### Return Value\n\nThe ID of the parent that owns the method.\n\n### Method propertyHelp\n\nGets the Help string for the property that is associated with the method.\n\n    public str propertyHelp()\n\n#### Return Value\n\nThe Help string for the property that is associated with the method; an empty string if there is no Help string.\n\n#### Remarks\n\nThis method calls the DictMethod::propertyMethod method to determine whether the method is a property method.\n\n### Method propertyMethod\n\nIndicates whether the method is a property method.\n\n    public NoYes propertyMethod()\n\n#### Return Value\n\nA NoYes::No enumeration value if the method is a property method; otherwise, a NoYes::Yes enumeration value.\n\n### Method returnId\n\nSpecifies the ID for certain return data types, such as extended data types and classes, for a method that returns a value.\n\n    public int returnId()\n\n#### Return Value\n\nThe ID for the return data type; 0 (zero) if the data type does not have an ID or a method does not return a value..\n\n### Method returnType\n\nSpecifies a method return type.\n\n    public Types returnType()\n\n#### Return Value\n\nA Types enumeration value that indicates the method return type.\n\n#### Remarks\n\nThe following list shows the possible values:\n\n-   AnyType\n-   BLOB\n-   Class\n-   Container\n-   Date\n-   DateTime\n-   Enum\n-   Grid\n-   Int64\n-   Integer\n-   Real\n-   Record\n-   RString\n-   String\n-   UserType\n-   VarString\n-   void\n\n### Method runMode\n\nSpecifies where a method is run.\n\n    public ClassRunMode runMode()\n\n#### Return Value\n\nA ClassRunMode enumeration value that indicates where a method is run.\n\n#### Remarks\n\nThe following list shows the possible values:\n\n-   Called\n-   Client\n-   ClientorServer\n-   Server\n\n### Method varCnt\n\nGets the number of variables for the method.\n\n    public int varCnt()\n\n#### Return Value\n\nThe number of local and inherited variables for the method.\n\n### Method varName\n\nGets the name of the specified variable.\n\n    public str varName(int variableNumber)\n\n#### Parameters\n\nvariableNumber  \nThe one-based index to the variable list for the method.\n\n#### Return Value\n\nThe name of the specified variable.\n\n### Method setMethod\n\nSpecifies the application object type of a node in the Microsoft Dynamics AX Application Object Tree (AOT) by using an instance of the MemberFunction class.\n\n    public void setMethod(MemberFunction method)\n\n#### Parameters\n\nmethod  \nAn instance of the MemberFunction class that represents a node in the AOT.\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(UtilElementType utilType, int id, str name)\n\n#### Parameters\n\nutilType  \n\n<!-- -->\n\nid  \n\n<!-- -->\n\nname  \n\n## Class DictRelation\n    class DictRelation extends Object\n\nThe DictRelation class can be used to manage dictionary relations for the tables.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                                | Description                                                          |\n|-----------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------|\n| public Cardinality Cardinality()                                                                                      | Retrieves the cardinality value.                                     |\n| public boolean createNavigationPropertyMethods()                                                                      |                                                                      |\n| public boolean EDTRelation()                                                                                          | Retrieves the extended data type (EDT) relation state.               |\n| public str entityRelationshipRole()                                                                                   | Retrieves the name of the entity relationship role.                  |\n| public str entityRelationshipRoleLabelId()                                                                            | Retrieves the label ID for the name of the entity relationship role. |\n| public TableId externTable()                                                                                          | Returns the ID of the external table that is used for the relation.  |\n| public boolean isSelfLink()                                                                                           | Verifies whether the relation is self-linked.                        |\n| public int lineExternTableValue(int lineNumber)                                                                       | Retrieves the external table value for the given line.               |\n| public int lines()                                                                                                    | Retrieves the number of the lines in the relation.                   |\n| public int lineSourceEDT(int lineNumber)                                                                              | Retrieves the source EDT value for the given table line.             |\n| public RelationshipSubType lineSubType(int lineNumber)                                                                | Retrieves the sub-type for the given table line.                     |\n| public int lineTableValue(int lineNumber)                                                                             | Retrieves the value for the given table line.                        |\n| public TableRelation lineType(int lineNumber)                                                                         | Retrieves the relation type for the given table line.                |\n| public TableId loadFieldRelation(FieldId fieldId, \\[TableScope tableScope\\], \\[Common record\\], \\[boolean isLookup\\]) | Loads a relation that is specified by a field ID.                    |\n| public TableId loadNameRelation(str name)                                                                             | Loads the relation for the given name.                               |\n| public TableId loadTableRelation(TableId tableId, \\[TableScope tableScope\\], \\[Common record\\])                       | Loads a table relation.                                              |\n| public str navigationPropertyNameOverride()                                                                           |                                                                      |\n| public RelatedTableCardinality RelatedTableCardinality()                                                              | Retrieves the cardinality for the related table.                     |\n| public str RelatedTableRole()                                                                                         | Retrieves the role name for the related table.                       |\n| public RelationshipType relationshipType()                                                                            | Retrieves the relationship type.                                     |\n| public str Role()                                                                                                     | Retrieves the role name.                                             |\n| public TableId table()                                                                                                | Returns the table ID of the relation.                                |\n| public boolean useDefaultRoleNames()                                                                                  |                                                                      |\n| public boolean validate()                                                                                             | Validates a relation.                                                |\n| ::public static boolean isSurrogateForeignKeyRelation(TableId tableId, str relationName)                              | Verifies whether there is surrogate foreign key relation.            |\n| public void new(int id, \\[UtilElementType Util\\_Element\\_Type\\], \\[int index\\])                                       | Initializes a new instance of the Object class.                      |\n\n### Method Cardinality\n\nRetrieves the cardinality value.\n\n    public Cardinality Cardinality()\n\n#### Return Value\n\nThe cardinality value.\n\n### Method createNavigationPropertyMethods\n\n    public boolean createNavigationPropertyMethods()\n\n#### Return Value\n\n### Method EDTRelation\n\nRetrieves the extended data type (EDT) relation state.\n\n    public boolean EDTRelation()\n\n#### Return Value\n\nA Boolean value that indicates whether the EDT relation is available.\n\n### Method entityRelationshipRole\n\nRetrieves the name of the entity relationship role.\n\n    public str entityRelationshipRole()\n\n#### Return Value\n\nThe name of the entity relationship role.\n\n### Method entityRelationshipRoleLabelId\n\nRetrieves the label ID for the name of the entity relationship role.\n\n    public str entityRelationshipRoleLabelId()\n\n#### Return Value\n\nThe label ID for the entity relationship role.\n\n### Method externTable\n\nReturns the ID of the external table that is used for the relation.\n\n    public TableId externTable()\n\n#### Return Value\n\nThe ID of the external table that is used for the relation; 0 (zero) if the relation has not yet been loaded.\n\n#### Examples\n\nThe following example shows the retrieval of the external table ID.\n\n    Dictionary dict; \n    DictRelation dr; \n    int i;  \n    dict = new Dictionary(); \n    dr = new DictRelation(dict.tableName2Id(\"CustTable\")); \n    // Load a relation by name \n    dr.loadNameRelation(\"CompanyData\");  // Also returns the external table ID. \n    print \"The external table ID is: \" + int2str(dr.externTable());\n\n### Method isSelfLink\n\nVerifies whether the relation is self-linked.\n\n    public boolean isSelfLink()\n\n#### Return Value\n\ntrue if the relation is self-linked; otherwise, false.\n\n### Method lineExternTableValue\n\nRetrieves the external table value for the given line.\n\n    public int lineExternTableValue(int lineNumber)\n\n#### Parameters\n\nlineNumber  \n\n#### Return Value\n\nThe external table value.\n\n### Method lines\n\nRetrieves the number of the lines in the relation.\n\n    public int lines()\n\n#### Return Value\n\nThe number of the lines.\n\n### Method lineSourceEDT\n\nRetrieves the source EDT value for the given table line.\n\n    public int lineSourceEDT(int lineNumber)\n\n#### Parameters\n\nlineNumber  \n\n#### Return Value\n\nThe source EDT value.\n\n### Method lineSubType\n\nRetrieves the sub-type for the given table line.\n\n    public RelationshipSubType lineSubType(int lineNumber)\n\n#### Parameters\n\nlineNumber  \n\n#### Return Value\n\nThe sub-type for the given table line.\n\n### Method lineTableValue\n\nRetrieves the value for the given table line.\n\n    public int lineTableValue(int lineNumber)\n\n#### Parameters\n\nlineNumber  \n\n#### Return Value\n\nThe value for the table line.\n\n### Method lineType\n\nRetrieves the relation type for the given table line.\n\n    public TableRelation lineType(int lineNumber)\n\n#### Parameters\n\nlineNumber  \n\n#### Return Value\n\nThe table relation type for the given line.\n\n### Method loadFieldRelation\n\nLoads a relation that is specified by a field ID.\n\n    public TableId loadFieldRelation(FieldId fieldId, [TableScope tableScope], [Common record], [boolean isLookup])\n\n#### Parameters\n\nfieldId  \n\n<!-- -->\n\ntableScope  \n\n<!-- -->\n\nrecord  \n\n<!-- -->\n\nisLookup  \n\n#### Return Value\n\nThe ID of the table for the relation; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the method failed.\n\n### Method loadNameRelation\n\nLoads the relation for the given name.\n\n    public TableId loadNameRelation(str name)\n\n#### Parameters\n\nname  \n\n#### Return Value\n\nThe table ID for the table relation.\n\n### Method loadTableRelation\n\nLoads a table relation.\n\n    public TableId loadTableRelation(TableId tableId, [TableScope tableScope], [Common record])\n\n#### Parameters\n\ntableId  \n\n<!-- -->\n\ntableScope  \n\n<!-- -->\n\nrecord  \n\n#### Return Value\n\nThe table ID for the table relation.\n\n### Method navigationPropertyNameOverride\n\n    public str navigationPropertyNameOverride()\n\n#### Return Value\n\n### Method RelatedTableCardinality\n\nRetrieves the cardinality for the related table.\n\n    public RelatedTableCardinality RelatedTableCardinality()\n\n#### Return Value\n\nThe cardinality for the related table.\n\n### Method RelatedTableRole\n\nRetrieves the role name for the related table.\n\n    public str RelatedTableRole()\n\n#### Return Value\n\nThe role name for the related table.\n\n### Method relationshipType\n\nRetrieves the relationship type.\n\n    public RelationshipType relationshipType()\n\n#### Return Value\n\nThe relationship type.\n\n### Method Role\n\nRetrieves the role name.\n\n    public str Role()\n\n#### Return Value\n\nThe role name.\n\n### Method table\n\nReturns the table ID of the relation.\n\n    public TableId table()\n\n#### Return Value\n\nThe table ID of the relation.\n\n#### Examples\n\nThe following example shows the retrieval of the table ID for a relation.\n\n    Dictionary dict; \n    DictRelation dr; \n    dict = new Dictionary(); \n    dr = new DictRelation(dict.tableName2Id(\"CustTable\")); \n    print dr.table();\n\n### Method useDefaultRoleNames\n\n    public boolean useDefaultRoleNames()\n\n#### Return Value\n\n### Method validate\n\nValidates a relation.\n\n    public boolean validate()\n\n#### Return Value\n\ntrue if the relation is valid; otherwise, false.\n\n### Method isSurrogateForeignKeyRelation\n\nVerifies whether there is surrogate foreign key relation.\n\n    public static boolean isSurrogateForeignKeyRelation(TableId tableId, str relationName)\n\n#### Parameters\n\ntableId  \n\n<!-- -->\n\nrelationName  \n\n#### Return Value\n\ntrue if there is a surrogate foreign key relation; otherwise, false.\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(int id, [UtilElementType Util_Element_Type], [int index])\n\n#### Parameters\n\nid  \nThe relation index; optional. The default value is 1.\n\n<!-- -->\n\nUtil\\_Element\\_Type  \nThe relation index; optional. The default value is 1.\n\n<!-- -->\n\nindex  \nThe relation index; optional. The default value is 1.\n\n## Class DictTable\n    class DictTable extends Object\n\nThe DictTable class provides information about a table.\n\n### Remarks\n\n### Examples\n\nThe following example shows how to create an instance of the DictTable class to determine whether the data in the table is stored on a per-company basis.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table is saved on a %1 basis.\", dt.dataPrCompany() ? \n                          \"per company\" : \"global\")); \n    }\n\n### Methods\n\n| Method                                                                                                                                      | Description                                                                                                                                                               |\n|---------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| public boolean doesMethodExist(str name)                                                                                                    | Checks whether a given method exists on the table.                                                                                                                        |\n| public AOSAuthorization AOSAuthSetting()                                                                                                    | Retrieves an AOSAuthorization system enumeration value that specifies the type of operation that a user can perform on a table, depending on the permissions of the user. |\n| public RecordCacheLevel cacheLookup()                                                                                                       | Returns the record cache level for the table.                                                                                                                             |\n| public int cacheSize()                                                                                                                      | Returns the cache size for the table, in the number of records.                                                                                                           |\n| public AnyType callObject(str methodName, Common Called, VarArg )                                                                           | Calls the specified object method for a table.                                                                                                                            |\n| public AnyType callStatic(str methodName, VarArg )                                                                                          | Calls the specified static method for a table.                                                                                                                            |\n| public IndexId clusterIndex(\\[boolean asDefinedInAOT\\])                                                                                     | Returns the ID of the clustered index for the table.                                                                                                                      |\n| public ConfigurationKeyId configurationKeyId()                                                                                              | Returns the ID of the configuration key for the table.                                                                                                                    |\n| public boolean dataPerPartition()                                                                                                           | Returns a value that indicates whether the data of the table is saved on a per-partition basis, and corresponds to the SaveDataPerPartition property of the table.        |\n| public boolean dataPrCompany()                                                                                                              | Returns a value that indicates whether the data of the table is saved on a per-company basis, and corresponds to the SaveDataPerCompany property of the table.            |\n| public int deleteActionCnt()                                                                                                                | Retrieves the number of delete actions for the table.                                                                                                                     |\n| public str deleteActionRelation(int cnt)                                                                                                    |                                                                                                                                                                           |\n| public TableId deleteActionTableId(int cnt)                                                                                                 | Returns the table ID of a table's delete action that is specified by an index.                                                                                            |\n| public int deleteActionType(int cnt)                                                                                                        | Retrieves the type of a delete action for a table.                                                                                                                        |\n| public str developerDocumentation()                                                                                                         |                                                                                                                                                                           |\n| public str developerDocumentationLabelId()                                                                                                  |                                                                                                                                                                           |\n| public boolean enabled()                                                                                                                    | Returns a value that indicates whether the table is enabled.                                                                                                              |\n| public boolean enforceRelationRules()                                                                                                       |                                                                                                                                                                           |\n| public EntityRelationshipType entityRelationshipType()                                                                                      |                                                                                                                                                                           |\n| public List extendedBy(\\[boolean allLevels\\])                                                                                               |                                                                                                                                                                           |\n| public TableId extends()                                                                                                                    | Returns the table ID of a base table.                                                                                                                                     |\n| public int fieldCnt(\\[TableScope tableScope\\])                                                                                              | Returns the number of fields for a table.                                                                                                                                 |\n| public FieldId fieldCnt2Id(int cnt, \\[TableScope tableScope\\])                                                                              | Returns the field ID of the field that is specified by an index.                                                                                                          |\n| public str fieldGroup(int FieldGroupNumber, \\[TableScope tableScope\\])                                                                      | Returns the name of a field group that is specified by index.                                                                                                             |\n| public int fieldGroupCnt(\\[TableScope tableScope\\])                                                                                         | Returns the number of field groups for the table.                                                                                                                         |\n| public str fieldName(FieldId fieldId, \\[DbBackend db\\], \\[int arrayindex\\], \\[FieldNameGenerationMode generationMode\\], \\[str tableAlias\\]) | Returns the name of the field that is specified by field ID.                                                                                                              |\n| public FieldId fieldName2Id(str name)                                                                                                       | Returns the field ID of a field that is specified by name.                                                                                                                |\n| public FieldId fieldNext(FieldId fieldId, \\[TableScope tableScope\\])                                                                        | Returns the value of the next field ID during a field iteration of the table.                                                                                             |\n| public DictField fieldObject(FieldId fieldId)                                                                                               | Creates an instance of the DictField class for the field that is specified by field ID.                                                                                   |\n| public IndexId fieldOrigin2Id(Guid fieldOrigin, \\[TableScope tableScope\\])                                                                  |                                                                                                                                                                           |\n| public str fieldSqlDefault(FieldId fieldId)                                                                                                 | Returns the SQL default value for the field that is specified by field ID.                                                                                                |\n| public str formRef(\\[boolean searchBaseTables\\])                                                                                            | Returns the name of the default form for the table.                                                                                                                       |\n| public container getCountryRegionCodes()                                                                                                    |                                                                                                                                                                           |\n| public FieldId getCountryRegionContextField()                                                                                               |                                                                                                                                                                           |\n| public FieldId getValidTimeStateValidFromFieldId()                                                                                          |                                                                                                                                                                           |\n| public FieldId getValidTimeStateValidToFieldId()                                                                                            |                                                                                                                                                                           |\n| public boolean hasRecidIdx()                                                                                                                | Returns a value that indicates whether a record ID index for the table is in effect.                                                                                      |\n| public boolean hasSurrogateKey()                                                                                                            |                                                                                                                                                                           |\n| public TableId id()                                                                                                                         | Returns the ID of the table.                                                                                                                                              |\n| public int indexCnt()                                                                                                                       | Returns the number of indexes for the table.                                                                                                                              |\n| public IndexId indexCnt2Id(int cnt)                                                                                                         |                                                                                                                                                                           |\n| public str indexName(IndexId indexId, \\[DbBackend db\\])                                                                                     | Returns the name of an index that is specified by the indexId parameter.                                                                                                  |\n| public IndexId indexName2Id(str name)                                                                                                       | Returns the ID of an index that is specified by name.                                                                                                                     |\n| public IndexId indexNext(IndexId id)                                                                                                        | Returns the value of the next index ID during an index iteration of the table.                                                                                            |\n| public DictIndex indexObject(IndexId indexId)                                                                                               | Creates an instance of the DictTable class for the index that is specified by ID.                                                                                         |\n| public IndexId indexUnique()                                                                                                                | Returns the ID of the unique index for the table.                                                                                                                         |\n| public FieldId instanceRelationType()                                                                                                       |                                                                                                                                                                           |\n| public boolean isAbstract()                                                                                                                 | Indicates whether this table is abstract.                                                                                                                                 |\n| public boolean isBaseData()                                                                                                                 | Indicates whether the table content is base data.                                                                                                                         |\n| public boolean isDefaultData()                                                                                                              | Indicates whether the table contains default data.                                                                                                                        |\n| public boolean isDerivedFrom(TableName baseTableName)                                                                                       | Indicates whether one table type derives from another.                                                                                                                    |\n| public boolean isMap()                                                                                                                      | Indicates whether the table is a map.                                                                                                                                     |\n| public boolean isSql()                                                                                                                      | Indicates whether the table is an SQL table.                                                                                                                              |\n| public boolean isSystemTable()                                                                                                              | Indicates whether the table is a system table.                                                                                                                            |\n| public boolean isTempDb()                                                                                                                   |                                                                                                                                                                           |\n| public boolean isTmp()                                                                                                                      | Indicates whether the table is a temporary table.                                                                                                                         |\n| public boolean isUnionAllView()                                                                                                             |                                                                                                                                                                           |\n| public boolean isValidTimeStateTable()                                                                                                      |                                                                                                                                                                           |\n| public boolean isView()                                                                                                                     | Indicates whether the table is a view.                                                                                                                                    |\n| public str label()                                                                                                                          | Returns the label text for the table.                                                                                                                                     |\n| public str labelDefined()                                                                                                                   | Returns the value of the label property for the table.                                                                                                                    |\n| public str listPageRef(\\[boolean searchBaseTables\\])                                                                                        |                                                                                                                                                                           |\n| public Common makeRecord()                                                                                                                  | Creates a blank record for the table.                                                                                                                                     |\n| public AccessType maxAccessMode()                                                                                                           | Returns the value of the MaxAccessMode property for a table, as set in the AOT.                                                                                           |\n| public str name(\\[DbBackend db\\], \\[boolean pseudoname\\])                                                                                   | Retrieves the name of the table.                                                                                                                                          |\n| public str objectMethod(int methodNumber, \\[TableScope tableScope\\])                                                                        | Returns the name of an instance method that is specified by index.                                                                                                        |\n| public int objectMethodCnt(\\[TableScope tableScope\\])                                                                                       | Returns the number of instance methods for the table.                                                                                                                     |\n| public DictMethod objectMethodObject(int methodNumber, \\[TableScope tableScope\\])                                                           | Returns an instance of the MethodInfo class for an object method that is specified by index.                                                                              |\n| public DictTableMap mapObject(int methodNumber)                                                                                             | Creates an instance of the \\[T: DictTableMap\\] class for a mapping that is specified by index.                                                                            |\n| public int mapCnt()                                                                                                                         | Returns the count of available table mappings for the map that is specified by this DictTable instance.                                                                   |\n| public boolean occEnabled()                                                                                                                 | Indicates whether the optimistic concurrency mode has been enabled for a table.                                                                                           |\n| public IndexId primaryIndex(\\[boolean asDefinedInAOT\\])                                                                                     | Returns the ID of the primary index for the table.                                                                                                                        |\n| public FieldId primaryKeyField()                                                                                                            | Returns the ID of the field that is used for the primary key of the table.                                                                                                |\n| public str relation(int RelationNumber, \\[TableScope tableScope\\])                                                                          | Returns the name of a relation that is specified by index.                                                                                                                |\n| public int relationCnt(\\[TableScope tableScope\\])                                                                                           | Returns the number of relations for the table.                                                                                                                            |\n| public IndexId replacementKey()                                                                                                             |                                                                                                                                                                           |\n| public str reportRef()                                                                                                                      | Returns the name of the default report for the table.                                                                                                                     |\n| public AccessType rights(\\[boolean ignoreContext\\])                                                                                         | Returns the access rights of the current user that is specified for the table.                                                                                            |\n| public SecurityKeyId securityKeyId()                                                                                                        | Returns the ID of the security key for the table.                                                                                                                         |\n| public str singularLabel(\\[boolean labelTranslation\\])                                                                                      |                                                                                                                                                                           |\n| public str staticMethod(int methodNumber)                                                                                                   | Returns the name of a static method that is specified by index.                                                                                                           |\n| public int staticMethodCnt()                                                                                                                | Returns the number of static methods for the table.                                                                                                                       |\n| public DictMethod staticMethodObject(int methodNumber)                                                                                      | Returns an instance of the MethodInfo class for a static method that is specified by index.                                                                               |\n| public boolean supportInheritance()                                                                                                         |                                                                                                                                                                           |\n| public TableGroup tableGroup()                                                                                                              | Returns the table group for a table.                                                                                                                                      |\n| public TableType tableType()                                                                                                                | Indicates the type of the table.                                                                                                                                          |\n| public FieldId titleField1(\\[boolean includeBaseTables\\], \\[boolean extendedFieldId\\])                                                      | Returns the ID of the field that represents the titleField1 property of the table.                                                                                        |\n| public FieldId titleField2(\\[boolean includeBaseTables\\], \\[boolean extendedFieldId\\])                                                      | Returns the ID of the field that represents the titleField2 property of the table.                                                                                        |\n| public boolean validRelationship()                                                                                                          |                                                                                                                                                                           |\n| public boolean visible()                                                                                                                    | Determines whether the table is visible.                                                                                                                                  |\n| ::public static DictTable construct(str tableName)                                                                                          |                                                                                                                                                                           |\n| ::public static RecId getRelationTypeFromTableName(TableName tableName)                                                                     |                                                                                                                                                                           |\n| ::public static TableName getTableNameFromRelationType(RecId relationType)                                                                  |                                                                                                                                                                           |\n| ::public static Common createRecord(str tableName)                                                                                          |                                                                                                                                                                           |\n| public void reloadSecurity()                                                                                                                | Reloads the feature key system for the table.                                                                                                                             |\n| public void new(TableId tableId)                                                                                                            | Initializes a new instance of the Object class.                                                                                                                           |\n| public void reindex()                                                                                                                       | Performs a reindex of the table.                                                                                                                                          |\n\n### Method doesMethodExist\n\nChecks whether a given method exists on the table.\n\n    public boolean doesMethodExist(str name)\n\n#### Parameters\n\nname  \n\n#### Return Value\n\ntrue if the given method exists on the table; otherwise, false.\n\n#### Remarks\n\nThis API is the preferred way to check whether a method exists on the table without checking whether the method compiled successfully.\n\n### Method AOSAuthSetting\n\nRetrieves an AOSAuthorization system enumeration value that specifies the type of operation that a user can perform on a table, depending on the permissions of the user.\n\n    public AOSAuthorization AOSAuthSetting()\n\n#### Return Value\n\nAn AOSAuthorization system enumeration value.\n\n#### Remarks\n\nThe AOSAuthorization::None value indicates that an authorization check is not performed. Use table properties to set the AOSAuthorization property for a table. In the Microsoft Dynamics AX Application Object Tree (AOT), right-click the table, and then click Properties to access the table properties.\n\n#### Examples\n\nThis following example shows a call to the AOSAuthSetting method.\n\n    static public void Main(Args _args) \n    { \n        DictTable dt; \n        AOSAuthorization a; \n        dt = new DictTable(tablenum(CustTable)); \n        a = dt.AOSAuthSetting(); \n    }\n\n### Method cacheLookup\n\nReturns the record cache level for the table.\n\n    public RecordCacheLevel cacheLookup()\n\n#### Return Value\n\nA RecordCacheLevel value that indicates the record cache level for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the cache level for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print dt.cacheLookup(); \n    }\n\n### Method cacheSize\n\nReturns the cache size for the table, in the number of records.\n\n    public int cacheSize()\n\n#### Return Value\n\nThe cache size for the table.\n\n#### Examples\n\nThe following example retrieves the cache size for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(SysUserInfo)); \n    if (dt) \n    { \n         print strfmt(\"Cache size: %1\", dt.cacheSize()); \n    }\n\n### Method callObject\n\nCalls the specified object method for a table.\n\n    public AnyType callObject(str methodName, Common Called, VarArg )\n\n#### Parameters\n\nmethodName  \n\n<!-- -->\n\nCalled  \n\n<!-- -->\n\n  \n\n#### Return Value\n\nThe results of the call to the methodName parameter.\n\n#### Remarks\n\nIf an attacker can control input to the callObject method, a security risk exists. Therefore, this method runs under Code Access Security. Calls to this method on the server require permission from the ExecutePermission class. Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.\n\n#### Examples\n\nThis example calls the SysUserLog.onlineTime static method in the SysUserLog table and then prints the value that is returned from the call.\n\n    { \n        Dicttable         dictTable; \n        int               onlineTime; \n        Common            common; \n        str               resultOutput; \n        ExecutePermission perm; \n        perm = new ExecutePermission(); \n        dictTable= new DictTable(tablenum(SysUserLog)); \n        if (dictTable != null) \n        { \n            common = dictTable.makeRecord(); \n            // Grants permission to execute the \n            // DictTable.callObject method. DictTable.callObject runs \n            // under code access security. \n            perm.assert(); \n            onlineTime   = dictTable.callObject(\"onlineTime\", common); \n            resultOutput = strfmt(\"User online time is %1\", onlineTime); \n            print resultOutput; \n            pause; \n        } \n        // Close the code access permission scope. \n        CodeAccessPermission::revertAssert(); \n    }\n\n### Method callStatic\n\nCalls the specified static method for a table.\n\n    public AnyType callStatic(str methodName, VarArg )\n\n#### Parameters\n\nmethodName  \n\n<!-- -->\n\n  \n\n#### Return Value\n\nThe results of the call to the methodName parameter.\n\n#### Remarks\n\nIf an attacker can control input to this function, a security risk exists. Therefore, the callStatic method runs under Code Access Security. Calls to this method on the server require permission from the ExecutePermission class. Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.\n\n#### Examples\n\nThis example calls the SysUserInfo:find static method in the SysUserInfo table and then prints the value that is returned from the call to the callStatic method.\n\n     { \n        Dicttable   dictTable; \n        SysUserInfo userInfo; \n        str         resultOutput; \n        ExecutePermission perm; \n        perm = new ExecutePermission(); \n        // Grants permission to execute the DictTable.callStatic method. \n        // DictTable.callStatic runs under code access security. \n        perm.assert(); \n        dictTable= new DictTable(tablenum(SysUserInfo)); \n        if (dictTable != null) \n        { \n            userInfo     = dictTable.callStatic(\"find\"); \n            resultOutput = strfmt(\"Current user ID is %1\", userInfo.Id); \n            print resultOutput; \n            pause; \n        } \n        // Close the code access permission scope. \n        CodeAccessPermission::revertAssert(); \n    }\n\n### Method clusterIndex\n\nReturns the ID of the clustered index for the table.\n\n    public IndexId clusterIndex([boolean asDefinedInAOT])\n\n#### Parameters\n\nasDefinedInAOT  \nA value that indicates whether the clustered index to retrieve is defined in the AOT. A value of true returns the clustered index as defined in the AOT. A value of false returns the clustered index as defined in the SQL table; optional.\n\n#### Return Value\n\nThe ID of the clustered index for the table; 0 (zero) if there is no clustered index for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the clustered index for a table.\n\n    DictTable dt; \n    DictIndex di; \n    int       i; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        i = dt.clusterIndex(); \n        if (0 != i) \n        { \n            di = new DictIndex(tablenum(CustTable), i); \n            print di.name(); \n        } \n    }\n\n### Method configurationKeyId\n\nReturns the ID of the configuration key for the table.\n\n    public ConfigurationKeyId configurationKeyId()\n\n#### Return Value\n\nThe ID of the configuration key for the table; 0 (zero) if there is no configuration key for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the configuration key ID for a table.\n\n    DictTable dt; \n    DictConfigurationKey dck; \n    dt = new DictTable(tablenum(AddressCountryRegionBLWI)); \n    if (dt) \n    { \n        if (0 != dt.configurationKeyId()) \n        dck = new DictConfigurationKey(dt.configurationKeyId()); \n        if (dck) \n        { \n            print (strfmt(\"The table's configuration key is %1.\", dck.name())); \n        } \n    }\n\n### Method dataPerPartition\n\nReturns a value that indicates whether the data of the table is saved on a per-partition basis, and corresponds to the SaveDataPerPartition property of the table.\n\n    public boolean dataPerPartition()\n\n#### Return Value\n\ntrue if the data is saved on a per-partition basis; otherwise, false, and the data is saved globally for all partitions.\n\n### Method dataPrCompany\n\nReturns a value that indicates whether the data of the table is saved on a per-company basis, and corresponds to the SaveDataPerCompany property of the table.\n\n    public boolean dataPrCompany()\n\n#### Return Value\n\ntrue if the data is saved on a per-company basis; otherwise, false, and the data is saved globally for all companies.\n\n#### Examples\n\nThe following example shows the retrieval of the value that indicates whether the data is saved on a per-company basis.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table is saved on a %1 basis.\", dt.dataPrCompany() ? \"per company\" : \"global\")); \n    }\n\n### Method deleteActionCnt\n\nRetrieves the number of delete actions for the table.\n\n    public int deleteActionCnt()\n\n#### Return Value\n\nThe number of delete actions for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the number of delete actions for the table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table has %1 delete actions.\", dt.deleteActionCnt())); \n    }\n\n### Method deleteActionRelation\n\n    public str deleteActionRelation(int cnt)\n\n#### Parameters\n\ncnt  \n\n#### Return Value\n\n### Method deleteActionTableId\n\nReturns the table ID of a table's delete action that is specified by an index.\n\n    public TableId deleteActionTableId(int cnt)\n\n#### Parameters\n\ncnt  \nA one-based index to the list of the delete actions for the table. The list is in AOT order.\n\n#### Return Value\n\nThe table ID of the table's delete action that is specified by cnt; 0 (zero) if the cnt value does not represent a valid delete action index.\n\n#### Examples\n\nThe following example shows the use of the deleteActionTableId method to retrieve the names of tables that have delete actions for the CustTable table.\n\n    DictTable dt, dt2; \n    int       i; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i=1; i <= dt.deleteActionCnt(); i++) \n        { \n            dt2 = new DictTable(dt.deleteActionTableId(i)); \n            if (dt2) \n            { \n                print dt2.name(); \n            } \n        } \n    }\n\n### Method deleteActionType\n\nRetrieves the type of a delete action for a table.\n\n    public int deleteActionType(int cnt)\n\n#### Parameters\n\ncnt  \nThe one-based index to the list of the delete actions for the table. The list is in AOT order.\n\n#### Return Value\n\nAn integer that represents the type of the delete action of the table that is specified by the cnt parameter. It can be one of the values in the following table.\n\n|     |                      |\n|-----|----------------------|\n| 0   | None                 |\n| 1   | Cascade              |\n| 2   | Restricted           |\n| 3   | Cascade + Restricted |\n\n#### Examples\n\nThe following example shows the retrieval of the type of delete actions for a table.\n\n    DictTable dt, dt2; \n    str       strDelActType; \n    int       i, nDelActType; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i=1; i <= dt.deleteActionCnt(); i++) \n        { \n            dt2 = new DictTable(dt.deleteActionTableId(i)); \n            if (dt2) \n            { \n                nDelActType = dt.deleteActionType(i); \n                switch (nDelActType) \n                { \n                   case 0: \n                    strDelActType = \"None\"; \n                    break; \n                   case 1: \n                    strDelActType = \"Cascade\"; \n                    break; \n                   case 2: \n                    strDelActType = \"Restricted\"; \n                    break; \n                   case 3: \n                    strDelActType = \"Cascade + Restricted\"; \n                    break; \n                } \n                print strfmt(\"Delete action table: %1 Type: %2\", \n                             dt2.name(), \n                             strDelActType); \n            } \n        } \n    }\n\n### Method developerDocumentation\n\n    public str developerDocumentation()\n\n#### Return Value\n\n### Method developerDocumentationLabelId\n\n    public str developerDocumentationLabelId()\n\n#### Return Value\n\n### Method enabled\n\nReturns a value that indicates whether the table is enabled.\n\n    public boolean enabled()\n\n#### Return Value\n\ntrue if the table is enabled; otherwise, false.\n\n#### Examples\n\nThe following example shows the retrieval of the value that indicates whether the table is enabled.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table is %1.\", dt.enabled() ? \"enabled\" : \"not enabled\")); \n    }\n\n### Method enforceRelationRules\n\n    public boolean enforceRelationRules()\n\n#### Return Value\n\n### Method entityRelationshipType\n\n    public EntityRelationshipType entityRelationshipType()\n\n#### Return Value\n\n### Method extendedBy\n\n    public List extendedBy([boolean allLevels])\n\n#### Parameters\n\nallLevels  \n\n#### Return Value\n\n### Method extends\n\nReturns the table ID of a base table.\n\n    public TableId extends()\n\n#### Return Value\n\nThe table ID of the base table.\n\n### Method fieldCnt\n\nReturns the number of fields for a table.\n\n    public int fieldCnt([TableScope tableScope])\n\n#### Parameters\n\ntableScope  \n\n#### Return Value\n\nThe number of fields for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the number of fields for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table has %1 fields.\", dt.fieldCnt())); \n    }\n\n### Method fieldCnt2Id\n\nReturns the field ID of the field that is specified by an index.\n\n    public FieldId fieldCnt2Id(int cnt, [TableScope tableScope])\n\n#### Parameters\n\ncnt  \n\n<!-- -->\n\ntableScope  \n\n#### Return Value\n\nThe field ID of the field that is specified by an index.\n\n#### Examples\n\nThe following example shows the retrieval of the fields of a table by index.\n\n    DictTable dt; \n    int       i, fId, tId; \n    DictField df; \n    str       strFieldName; \n    tId = tablenum(CustTable); \n    dt = new DictTable(tId); \n    if (dt) \n    { \n        for (i=1; i <= dt.fieldCnt(); i++) \n        { \n            fId = dt.fieldCnt2Id(i); \n            df = new DictField(tId, fId); \n            strFieldName = (df ? df.name() : \"\"); \n            print(strfmt(\"%1) %2 %3\", i, fId, strFieldName)); \n        } \n    }\n\n### Method fieldGroup\n\nReturns the name of a field group that is specified by index.\n\n    public str fieldGroup(int FieldGroupNumber, [TableScope tableScope])\n\n#### Parameters\n\nFieldGroupNumber  \n\n<!-- -->\n\ntableScope  \n\n#### Return Value\n\nThe name of the field group that is specified by the FieldGroupNumber parameter.\n\n#### Examples\n\nThe following example shows the retrieval of the names of the field groups for a table.\n\n    DictTable dt; \n    int       i; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i =1; i <= dt.fieldGroupCnt(); i++) \n        { \n            print (dt.fieldGroup(i)); \n        } \n    }\n\n### Method fieldGroupCnt\n\nReturns the number of field groups for the table.\n\n    public int fieldGroupCnt([TableScope tableScope])\n\n#### Parameters\n\ntableScope  \n\n#### Return Value\n\nThe number of field groups for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the number of field groups for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table has %1 field groups.\", dt.fieldGroupCnt())); \n    }\n\n### Method fieldName\n\nReturns the name of the field that is specified by field ID.\n\n    public str fieldName(FieldId fieldId, [DbBackend db], [int arrayindex], [FieldNameGenerationMode generationMode], [str tableAlias])\n\n#### Parameters\n\nfieldId  \nThe alias name for the table; optional.\n\n<!-- -->\n\ndb  \nThe alias name for the table; optional.\n\n<!-- -->\n\narrayindex  \nThe alias name for the table; optional.\n\n<!-- -->\n\ngenerationMode  \nThe alias name for the table; optional.\n\n<!-- -->\n\ntableAlias  \nThe alias name for the table; optional.\n\n#### Return Value\n\nThe name of the field that is specified by its field ID.\n\n#### Remarks\n\nIf db is not specified, the DbBackend::Native object is used.\n\n#### Examples\n\nThe following example shows the retrieval of field names of a table as specified by the field IDs.\n\n    DictTable dt; \n    int       i, tId, fId; \n    tId = tablenum(CustTable); \n    dt = new DictTable(tId); \n    if (dt) \n    { \n        for (i=1; i <= dt.fieldCnt(); i++) \n        { \n            fId = dt.fieldCnt2Id(i); \n            print(strfmt(\"%1) %2 %3\", i, fId, dt.fieldName(fId))); \n        } \n    }\n\n### Method fieldName2Id\n\nReturns the field ID of a field that is specified by name.\n\n    public FieldId fieldName2Id(str name)\n\n#### Parameters\n\nname  \nThe name of the field for which the field ID is being retrieved.\n\n#### Return Value\n\nThe field ID of the field that is specified by the name parameter; 0 (zero) if name does not represent a valid field name for the table.\n\n#### Examples\n\nThe following example shows the retrieval of a field ID by its field name.\n\n    DictTable dt; \n    fieldId   fId; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        fId = dt.fieldName2Id(\"Pager\"); \n        // Use the field ID as needed. \n        // This example merely prints out the field ID. \n        print (strfmt(\"fId: %1\", fId)); \n    }\n\n### Method fieldNext\n\nReturns the value of the next field ID during a field iteration of the table.\n\n    public FieldId fieldNext(FieldId fieldId, [TableScope tableScope])\n\n#### Parameters\n\nfieldId  \n\n<!-- -->\n\ntableScope  \n\n#### Return Value\n\nThe ID of the next field in the field iteration for the table; 0 (zero) if there are no more fields to iterate.\n\n#### Remarks\n\nThe value of the fieldId parameter should evaluate to 0 (zero) to start the field iteration, and the return value should be used for subsequent calls to the iteration.\n\n#### Examples\n\nThe following example iterates through the fields of a table.\n\n    DictTable   dt; \n    DictField   df; \n    int         counter; \n    counter = 0; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        counter = dt.fieldNext(counter); \n        while (counter) \n        { \n            df = dt.fieldObject(counter); \n            if (df) \n            { \n                print strfmt(\"ID: %1 Name: %2\", \n                             df.id(), \n                             df.name() ); \n            } \n            counter = dt.fieldNext(counter); \n        } \n    }\n\n### Method fieldObject\n\nCreates an instance of the DictField class for the field that is specified by field ID.\n\n    public DictField fieldObject(FieldId fieldId)\n\n#### Parameters\n\nfieldId  \nThe ID of the field to create.\n\n#### Return Value\n\nA DictField object for the field that is specified by the fieldId parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the object could not be created.\n\n#### Examples\n\nThe following example shows how to create a DictField object for the fields in a table.\n\n    DictTable dt; \n    DictField df; \n    int       i; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i=1; i <= dt.fieldCnt(); i++) \n        { \n          df = dt.fieldObject(dt.fieldCnt2Id(i)); \n          if (df) \n          { \n              print df.name(); \n          } \n        } \n    }\n\n### Method fieldOrigin2Id\n\n    public IndexId fieldOrigin2Id(Guid fieldOrigin, [TableScope tableScope])\n\n#### Parameters\n\nfieldOrigin  \n\n<!-- -->\n\ntableScope  \n\n#### Return Value\n\n### Method fieldSqlDefault\n\nReturns the SQL default value for the field that is specified by field ID.\n\n    public str fieldSqlDefault(FieldId fieldId)\n\n#### Parameters\n\nfieldId  \nThe ID of the field for which the SQL default data is being retrieved.\n\n#### Return Value\n\nA string that represents the SQL default value for the field that is specified by the fieldId parameter; an empty string if the field has no SQL default value or the table is not an SQL table.\n\n### Method formRef\n\nReturns the name of the default form for the table.\n\n    public str formRef([boolean searchBaseTables])\n\n#### Parameters\n\nsearchBaseTables  \n\n#### Return Value\n\nThe name of the default form for the table.\n\n#### Remarks\n\nIf the AOT shows no value for the FormRef property of a table, the name of the default form for the table is considered to be the same as the name of the table. In this case, this method does not return an empty string.\n\n#### Examples\n\nThe following example shows the retrieval of the default form for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print strfmt(\"Default form: %1\", dt.formRef()); \n    }\n\n### Method getCountryRegionCodes\n\n    public container getCountryRegionCodes()\n\n#### Return Value\n\n### Method getCountryRegionContextField\n\n    public FieldId getCountryRegionContextField()\n\n#### Return Value\n\n### Method getValidTimeStateValidFromFieldId\n\n    public FieldId getValidTimeStateValidFromFieldId()\n\n#### Return Value\n\n### Method getValidTimeStateValidToFieldId\n\n    public FieldId getValidTimeStateValidToFieldId()\n\n#### Return Value\n\n### Method hasRecidIdx\n\nReturns a value that indicates whether a record ID index for the table is in effect.\n\n    public boolean hasRecidIdx()\n\n#### Return Value\n\ntrue if a record ID index is in effect for the table; otherwise, false.\n\n#### Remarks\n\nThe return value corresponds to whether the CreateRecIdIndex property of the table is set to Yes.\n\n#### Examples\n\nThe following example shows the retrieval of a value that indicates whether the record ID index of the table is in effect.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"A record ID index for the table %1 in effect.\", \n               dt.hasRecidIdx() ? \"is\" : \"is not\") ); \n    }\n\n### Method hasSurrogateKey\n\n    public boolean hasSurrogateKey()\n\n#### Return Value\n\n### Method id\n\nReturns the ID of the table.\n\n    public TableId id()\n\n#### Return Value\n\nThe ID of the table.\n\n#### Examples\n\nThe following example shows the retrieval of the ID of a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table ID is: %1\", dt.id())); \n    }\n\n### Method indexCnt\n\nReturns the number of indexes for the table.\n\n    public int indexCnt()\n\n#### Return Value\n\nThe number of indexes for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the number of indexes for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table has %1 indexes.\", dt.indexCnt())); \n    }\n\n### Method indexCnt2Id\n\n    public IndexId indexCnt2Id(int cnt)\n\n#### Parameters\n\ncnt  \n\n#### Return Value\n\n### Method indexName\n\nReturns the name of an index that is specified by the indexId parameter.\n\n    public str indexName(IndexId indexId, [DbBackend db])\n\n#### Parameters\n\nindexId  \nA DbBackend value that specifies the type of database back end; optional.\n\n<!-- -->\n\ndb  \nA DbBackend value that specifies the type of database back end; optional.\n\n#### Return Value\n\nThe name of the index that is specified by the indexId parameter.\n\n#### Examples\n\nThe following example shows the retrieval of the names of the indexes for a table.\n\n    DictTable dt; \n    int       i; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i=1; i <= dt.indexCnt(); i++) \n        { \n            print (dt.indexName(i)); \n        } \n    }\n\n### Method indexName2Id\n\nReturns the ID of an index that is specified by name.\n\n    public IndexId indexName2Id(str name)\n\n#### Parameters\n\nname  \nThe name of the index.\n\n#### Return Value\n\nThe ID of the index that is specified by the name parameter; 0 (zero) if there is no index that has a name that equals the name value.\n\n#### Examples\n\nThe following example shows the retrieval of the ID of an index that is specified by name.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print(strfmt(\"Index ID: %1\", dt.indexName2Id(\"TypeIdx\"))); \n    }\n\n### Method indexNext\n\nReturns the value of the next index ID during an index iteration of the table.\n\n    public IndexId indexNext(IndexId id)\n\n#### Parameters\n\nid  \nThe ID of the index for which the next index ID is being queried.\n\n#### Return Value\n\nThe ID of the next index in the index iteration for the table; 0 (zero) if there are no more indexes to iterate.\n\n#### Remarks\n\nThe value of the id parameter should evaluate to 0 (zero) to start the index iteration, and the return value should be used for subsequent calls to the iteration.\n\n#### Examples\n\nThe following example iterates through the indexes of a table.\n\n    DictTable   dt; \n    DictIndex   di; \n    int         counter; \n    counter = 0; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        counter = dt.indexNext(counter); \n        while (counter) \n        { \n            di = dt.indexObject(counter); \n            if (di) \n            { \n                print strfmt(\"ID: %1 Name: %2\", \n                             di.id(), \n                             di.name() ); \n            } \n            counter = dt.indexNext(counter); \n        } \n    }\n\n### Method indexObject\n\nCreates an instance of the DictTable class for the index that is specified by ID.\n\n    public DictIndex indexObject(IndexId indexId)\n\n#### Parameters\n\nindexId  \nThe ID of the index to create.\n\n#### Return Value\n\nA DictIndex object for the index that is specified by the indexId parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the object could not be created.\n\n#### Examples\n\nThe following example shows how to create a DictIndex object for the unique index of a table.\n\n    DictTable dt; \n    DictIndex di; \n    dt = new DictTable(tablenum(SysUserInfo)); \n    if (dt) \n    { \n         di = dt.indexObject(dt.indexUnique()); \n         if (di) \n         { \n            print di.name(); \n         } \n    }\n\n### Method indexUnique\n\nReturns the ID of the unique index for the table.\n\n    public IndexId indexUnique()\n\n#### Return Value\n\nThe ID of the unique index for the table.\n\n#### Remarks\n\nWhen there is more than one unique index on the table, the return value is one of the following:\n\n-   The index that has the RecID column.\n-   If no index has a record ID, the index that has the shortest size, based on the total size of columns.\n-   If multiple indexes match with regard to the shortest size, the index that was added first.\n\n#### Examples\n\nThe following example shows the retrieval of the unique index for a table.\n\n    DictTable dt; \n    DictIndex di; \n    dt = new DictTable(tablenum(SysUserInfo)); \n    if (dt) \n    { \n         di = dt.indexObject(dt.indexUnique()); \n         if (di) \n         { \n            print di.name(); \n         } \n    }\n\n### Method instanceRelationType\n\n    public FieldId instanceRelationType()\n\n#### Return Value\n\n### Method isAbstract\n\nIndicates whether this table is abstract.\n\n    public boolean isAbstract()\n\n#### Return Value\n\ntrue if this table is abstract; otherwise, false.\n\n### Method isBaseData\n\nIndicates whether the table content is base data.\n\n    public boolean isBaseData()\n\n#### Return Value\n\ntrue if the TableContents property in the AOT indicates that the table content is base data; otherwise, false.\n\n#### Examples\n\nThe following example shows the retrieval of a value that indicates whether the table content is base data.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print strfmt(\"isBaseData: %1\", dt.isBaseData()); \n        print strfmt(\"isDefaultData: %1\", dt.isDefaultData()); \n    }\n\n### Method isDefaultData\n\nIndicates whether the table contains default data.\n\n    public boolean isDefaultData()\n\n#### Return Value\n\ntrue if the table contains default data; otherwise, false.\n\n#### Examples\n\nThe following example shows the retrieval of a value that indicates whether the table contains default data.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print strfmt(\"isDefaultData: %1\", dt.isDefaultData()); \n    }\n\n### Method isDerivedFrom\n\nIndicates whether one table type derives from another.\n\n    public boolean isDerivedFrom(TableName baseTableName)\n\n#### Parameters\n\nbaseTableName  \n\n#### Return Value\n\ntrue if this table is derived from the table that is specified by the baseTableName parameter.\n\n### Method isMap\n\nIndicates whether the table is a map.\n\n    public boolean isMap()\n\n#### Return Value\n\ntrue if the table is a map; otherwise, false.\n\n#### Examples\n\nThe following example shows the retrieval of a value that indicates whether the table is a map.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(AddressMap)); \n    if (dt) \n    { \n        print(strfmt(\"Map: %1\", dt.isMap())); \n    }\n\n### Method isSql\n\nIndicates whether the table is an SQL table.\n\n    public boolean isSql()\n\n#### Return Value\n\ntrue if the table is an SQL table; otherwise, false.\n\n#### Examples\n\nThe following example shows the retrieval of a value that indicates whether the table is an SQL table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print(strfmt(\"SQL table: %1\", dt.isSql())); \n    }\n\n### Method isSystemTable\n\nIndicates whether the table is a system table.\n\n    public boolean isSystemTable()\n\n#### Return Value\n\ntrue if the table is a system table; otherwise, false.\n\n#### Examples\n\nThe following example shows the retrieval of a value that indicates whether the table is a system table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print(strfmt(\"System table: %1\", dt.isSystemTable())); \n    }\n\n### Method isTempDb\n\n    public boolean isTempDb()\n\n#### Return Value\n\n### Method isTmp\n\nIndicates whether the table is a temporary table.\n\n    public boolean isTmp()\n\n#### Return Value\n\ntrue if the table is a temporary table; otherwise, false.\n\n#### Examples\n\nThe following example shows the retrieval of a value that indicates whether the table is a temporary table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(TmpWMSOrder)); \n    if (dt) \n    { \n        print(strfmt(\"Temporary table: %1\", dt.isTmp())); \n    }\n\n### Method isUnionAllView\n\n    public boolean isUnionAllView()\n\n#### Return Value\n\n### Method isValidTimeStateTable\n\n    public boolean isValidTimeStateTable()\n\n#### Return Value\n\n### Method isView\n\nIndicates whether the table is a view.\n\n    public boolean isView()\n\n#### Return Value\n\ntrue if the table is a view; otherwise, false.\n\n#### Examples\n\nThe following example shows the retrieval of a value that indicates whether the table is a view.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print(strfmt(\"View: %1\", dt.isView())); \n    }\n\n### Method label\n\nReturns the label text for the table.\n\n    public str label()\n\n#### Return Value\n\nThe label text for the table; an empty string if there is no label text for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the label text for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n         print(strfmt(\"Label: %1\", dt.label())); \n    }\n\n### Method labelDefined\n\nReturns the value of the label property for the table.\n\n    public str labelDefined()\n\n#### Return Value\n\nThe value of the label property for the table; an empty string if there is no label text for the table.\n\n### Method listPageRef\n\n    public str listPageRef([boolean searchBaseTables])\n\n#### Parameters\n\nsearchBaseTables  \n\n#### Return Value\n\n### Method makeRecord\n\nCreates a blank record for the table.\n\n    public Common makeRecord()\n\n#### Return Value\n\nA Common value if the record was successfully created; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the record could not be created.\n\n#### Remarks\n\nThe Common value that is returned can be used in a call to the DictTable.callObject Method method.\n\n### Method maxAccessMode\n\nReturns the value of the MaxAccessMode property for a table, as set in the AOT.\n\n    public AccessType maxAccessMode()\n\n#### Return Value\n\nA AccessType value that represents the maximum access mode for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the maximum access mode for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print strfmt(\"Maximum Access Mode: %1\",dt.maxAccessMode()); \n    }\n\n### Method name\n\nRetrieves the name of the table.\n\n    public str name([DbBackend db], [boolean pseudoname])\n\n#### Parameters\n\ndb  \nA Boolean value that indicates whether a pseudo name is returned; optional.\n\n<!-- -->\n\npseudoname  \nA Boolean value that indicates whether a pseudo name is returned; optional.\n\n#### Return Value\n\nThe name of the table.\n\n#### Remarks\n\nIf the table name is longer than 30 characters, the native name and SQL name of the table do not match.\n\n#### Examples\n\nThe following example shows the retrieval of the name of a table.\n\n    DictTable dt; \n    dt = new DictTable(1);  // 1 == tablenum(CustTable) \n    if (dt) \n    { \n        print(strfmt(\"The table name is %1.\", dt.name())); \n    }\n\n### Method objectMethod\n\nReturns the name of an instance method that is specified by index.\n\n    public str objectMethod(int methodNumber, [TableScope tableScope])\n\n#### Parameters\n\nmethodNumber  \n\n<!-- -->\n\ntableScope  \n\n#### Return Value\n\nThe name of the instance method that is specified by the methodNumber parameter; an empty string if the methodNumber value is not a valid instance method index.\n\n#### Examples\n\nThe following example shows the retrieval of the name of each instance method in a table.\n\n    DictTable dt; \n    int       i; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i=1; i <= dt.objectMethodCnt() ; i++) \n        { \n            print dt.objectMethod(i); \n        } \n    }\n\n### Method objectMethodCnt\n\nReturns the number of instance methods for the table.\n\n    public int objectMethodCnt([TableScope tableScope])\n\n#### Parameters\n\ntableScope  \n\n#### Return Value\n\nThe number of instance methods for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the number of instance methods for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table has %1 instance methods.\", dt.objectMethodCnt())); \n    }\n\n### Method objectMethodObject\n\nReturns an instance of the MethodInfo class for an object method that is specified by index.\n\n    public DictMethod objectMethodObject(int methodNumber, [TableScope tableScope])\n\n#### Parameters\n\nmethodNumber  \n\n<!-- -->\n\ntableScope  \n\n#### Return Value\n\nAn instance of the MethodInfo class for the object method that is specified by the methodNumber parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the instance could not be created.\n\n#### Examples\n\nThe following example shows the retrieval of the object methods for a table.\n\n    DictTable dt; \n    int       i; \n    MethodInfo mi; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i=1; i <= dt.objectMethodCnt(); i++) \n        { \n            mi = dt.objectMethodObject(i); \n            if (mi) \n            { \n                print mi.name(); \n            } \n        } \n    }\n\n### Method mapObject\n\nCreates an instance of the \\[T: DictTableMap\\] class for a mapping that is specified by index.\n\n    public DictTableMap mapObject(int methodNumber)\n\n#### Parameters\n\nmethodNumber  \n\n#### Return Value\n\nA DictTableMap object for the field that is specified by the \\_cnt parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the object could not be created.\n\n### Method mapCnt\n\nReturns the count of available table mappings for the map that is specified by this DictTable instance.\n\n    public int mapCnt()\n\n#### Return Value\n\nThe count.\n\n### Method occEnabled\n\nIndicates whether the optimistic concurrency mode has been enabled for a table.\n\n    public boolean occEnabled()\n\n#### Return Value\n\ntrue if the optimistic concurrency mode is enabled; otherwise, false.\n\n#### Remarks\n\nWhen this mode is enabled, data is not locked from future modification when it is fetched from the database. Data is locked only when the actual update is performed.\n\n#### Examples\n\nThe following example shows a call to the occEnabled method.\n\n    static public void Main(Args _args) \n    { \n        DictTable dt; \n        boolean enabled; \n        dt = new DictTable(tablenum(CustTable)); \n        enabled = dt.occEnabled(); \n    }\n\n### Method primaryIndex\n\nReturns the ID of the primary index for the table.\n\n    public IndexId primaryIndex([boolean asDefinedInAOT])\n\n#### Parameters\n\nasDefinedInAOT  \nA Boolean value that indicates whether the primary index to retrieve is defined in the AOT. A value of true returns the primary index as defined in the AOT. A value of false returns the primary index as defined in the SQL table; optional.\n\n#### Return Value\n\nThe ID of the primary index for the table; 0 (zero) if there is no primary index for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the primary index for a table.\n\n    DictTable dt; \n    DictIndex di; \n    int       i; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        i = dt.primaryIndex(); \n        if (0 != i) \n        { \n            di = new DictIndex(tablenum(CustTable), i); \n            print di.name(); \n        } \n    }\n\n### Method primaryKeyField\n\nReturns the ID of the field that is used for the primary key of the table.\n\n    public FieldId primaryKeyField()\n\n#### Return Value\n\nThe ID of the field that is used for the primary key of the table; 0 (zero) if no single field serves as the primary key of the table.\n\n#### Examples\n\nThe following example shows the retrieval of the field ID of the primary key for the table.\n\n    DictTable dt; \n    DictField df; \n    tableId   tID; \n    fieldId   fID; \n    tID = tablenum(CustTable); \n    dt = new DictTable(tID); \n    if (dt) \n    { \n       fID = dt.primaryKeyField(); \n       if (0 != fID) \n       { \n           df = new DictField(tID, fID); \n           if (df) \n           { \n                print strfmt(\"Primary key field name: %1\", df.name()); \n           } \n       } \n    }\n\n### Method relation\n\nReturns the name of a relation that is specified by index.\n\n    public str relation(int RelationNumber, [TableScope tableScope])\n\n#### Parameters\n\nRelationNumber  \n\n<!-- -->\n\ntableScope  \n\n#### Return Value\n\nThe name of the relation that is specified by the RelationNumber parameter; an empty string if the RelationNumber value is not a valid relation index.\n\n#### Examples\n\nThe following example shows the retrieval of the name for each relation in a table.\n\n    DictTable dt; \n    int       i; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i=1; i <= dt.relationCnt() ; i++) \n        { \n            print dt.relation(i); \n        } \n    }\n\n### Method relationCnt\n\nReturns the number of relations for the table.\n\n    public int relationCnt([TableScope tableScope])\n\n#### Parameters\n\ntableScope  \n\n#### Return Value\n\nThe number of relations for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the number of relations for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table has %1 relations.\", dt.relationCnt())); \n    }\n\n### Method replacementKey\n\n    public IndexId replacementKey()\n\n#### Return Value\n\n### Method reportRef\n\nReturns the name of the default report for the table.\n\n    public str reportRef()\n\n#### Return Value\n\nThe name of the default report for the table; an empty string if there is no default report for the table.\n\n#### Examples\n\nThe following shows the retrieval of the name of the default report for a table.\n\n    DictTable dt; \n    str       strReport; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        strReport = dt.reportRef(); \n        print strfmt(\"Default report: %1\", strReport != \"\" ? strReport : \"None specified\"); \n    }\n\n### Method rights\n\nReturns the access rights of the current user that is specified for the table.\n\n    public AccessType rights([boolean ignoreContext])\n\n#### Parameters\n\nignoreContext  \n\n#### Return Value\n\nThe access rights of the current user that is specified for the table. The return value can be one of the values in the AccessType system enumeration.\n\n### Method securityKeyId\n\nReturns the ID of the security key for the table.\n\n    public SecurityKeyId securityKeyId()\n\n#### Return Value\n\nThe ID of the security key for the table; 0 (zero) if there is no security key for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the security key ID for a table.\n\n    DictTable dt; \n    DictSecurityKey dsk; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        if (0 != dt.securityKeyId()) \n        dsk = new DictSecurityKey(dt.securityKeyId()); \n        if (dsk) \n        { \n            print (strfmt(\"The table's security key is %1.\", dsk.name())); \n        } \n    }\n\n### Method singularLabel\n\n    public str singularLabel([boolean labelTranslation])\n\n#### Parameters\n\nlabelTranslation  \n\n#### Return Value\n\n### Method staticMethod\n\nReturns the name of a static method that is specified by index.\n\n    public str staticMethod(int methodNumber)\n\n#### Parameters\n\nmethodNumber  \nThe one-based index to the list of static methods for the table, in AOT order.\n\n#### Return Value\n\nThe name of the static method that is specified by the methodNumber parameter; an empty string if the methodNumber value is not a valid static method index.\n\n#### Examples\n\nThe following example shows the retrieval of the name of each static method in a table.\n\n    DictTable dt; \n    int       i; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i=1; i <= dt.staticMethodCnt() ; i++) \n        { \n            print dt.staticMethod(i); \n        } \n    }\n\n### Method staticMethodCnt\n\nReturns the number of static methods for the table.\n\n    public int staticMethodCnt()\n\n#### Return Value\n\nThe number of static methods for the table.\n\n#### Examples\n\nThe following example shows the retrieval of the number of static methods for a table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        print (strfmt(\"The table has %1 static methods.\", dt. staticMethodCnt())); \n    }\n\n### Method staticMethodObject\n\nReturns an instance of the MethodInfo class for a static method that is specified by index.\n\n    public DictMethod staticMethodObject(int methodNumber)\n\n#### Parameters\n\nmethodNumber  \nThe one-based index to the static methods for the table, in AOT order.\n\n#### Return Value\n\nAn instance of the MethodInfo class for the static method that is specified by the methodNumber parameter; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the instance could not be created.\n\n#### Examples\n\nThe following example shows the retrieval of the static methods for a table.\n\n    DictTable dt; \n    int       i; \n    MethodInfo mi; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        for (i=1; i <= dt.staticMethodCnt(); i++) \n        { \n            mi = dt.staticMethodObject(i); \n            if (mi) \n            { \n                print mi.name(); \n            } \n        } \n    }\n\n### Method supportInheritance\n\n    public boolean supportInheritance()\n\n#### Return Value\n\n### Method tableGroup\n\nReturns the table group for a table.\n\n    public TableGroup tableGroup()\n\n#### Return Value\n\nA TableGroup value that represents the table group of the table.\n\n#### Remarks\n\nThe return value corresponds to the TableGroup property of the table in the AOT.\n\n#### Examples\n\nThe following example shows the retrieval of the table group of the table.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n       print strfmt(\"Table Group: %1\", dt.tableGroup()); \n    }\n\n### Method tableType\n\nIndicates the type of the table.\n\n    public TableType tableType()\n\n#### Return Value\n\nThe error state, if there is any error state.\n\n### Method titleField1\n\nReturns the ID of the field that represents the titleField1 property of the table.\n\n    public FieldId titleField1([boolean includeBaseTables], [boolean extendedFieldId])\n\n#### Parameters\n\nincludeBaseTables  \n\n<!-- -->\n\nextendedFieldId  \n\n#### Return Value\n\nThe ID of the field that represents the titleField1 property of the table.\n\n#### Remarks\n\nAccording to best practice guidelines, the titleField1 property represents the key field for the records in the table.\n\n#### Examples\n\nThe following example shows the retrieval of the ID of the field that is used for the titleField1 property of the table.\n\n    DictTable dt; \n    DictField df; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        df = new DictField(tablenum(CustTable),dt.titleField1()); \n        if (df) \n        { \n            print df.name(); \n        } \n    } \n    pause;\n\n### Method titleField2\n\nReturns the ID of the field that represents the titleField2 property of the table.\n\n    public FieldId titleField2([boolean includeBaseTables], [boolean extendedFieldId])\n\n#### Parameters\n\nincludeBaseTables  \n\n<!-- -->\n\nextendedFieldId  \n\n#### Return Value\n\nThe ID of the field that represents the titleField2 property of the table.\n\n#### Remarks\n\nAccording to best practice guidelines, the titleField2 property represents the description of the records of the table.\n\n#### Examples\n\nThe following example shows the retrieval of the ID of the field that is used for the titleField2 property of the table.\n\n    DictTable dt; \n    DictField df; \n    dt = new DictTable(tablenum(CustTable)); \n    if (dt) \n    { \n        df = new DictField(tablenum(CustTable),dt.titleField2()); \n        if (df) \n        { \n            print df.name(); \n        } \n    }\n\n### Method validRelationship\n\n    public boolean validRelationship()\n\n#### Return Value\n\n### Method visible\n\nDetermines whether the table is visible.\n\n    public boolean visible()\n\n#### Return Value\n\ntrue if the table is is visible; otherwise, false.\n\n### Method construct\n\n    public static DictTable construct(str tableName)\n\n#### Parameters\n\ntableName  \n\n#### Return Value\n\n### Method getRelationTypeFromTableName\n\n    public static RecId getRelationTypeFromTableName(TableName tableName)\n\n#### Parameters\n\ntableName  \n\n#### Return Value\n\n### Method getTableNameFromRelationType\n\n    public static TableName getTableNameFromRelationType(RecId relationType)\n\n#### Parameters\n\nrelationType  \n\n#### Return Value\n\n### Method createRecord\n\n    public static Common createRecord(str tableName)\n\n#### Parameters\n\ntableName  \n\n#### Return Value\n\n### Method reloadSecurity\n\nReloads the feature key system for the table.\n\n    public void reloadSecurity()\n\n#### Examples\n\nThe following example reloads the feature key system for a table.\n\n    dt.reloadSecurity()\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(TableId tableId)\n\n#### Parameters\n\ntableId  \nThe ID of the table that is used to create the instance of the DictTable class.\n\n#### Examples\n\nThe following example shows how to create an instance of the DictTable class.\n\n    DictTable dt; \n    dt = new DictTable(tablenum(CustTable)); \n    if (!dt) \n    { \n        // Take error action. \n    }\n\n### Method reindex\n\nPerforms a reindex of the table.\n\n    public void reindex()\n\n#### Remarks\n\nDo not use this method to reindex SQL tables; instead, use the SqlDataDictionary::tableReindex method. Additionally, the DictTable::reindex method is not supported when it is run on the client.\n\n## Class DictTableMap\n    class DictTableMap extends Object\n\nThe DictTableMap class provides information about a table mapping.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                 | Description                                                    |\n|----------------------------------------|----------------------------------------------------------------|\n| public int table()                     | Retrieves the table that the mapping references.               |\n| public int fieldCnt()                  | Retrieves the count of fields in the table mapping.            |\n| public int fieldCnt2FieldTo(int cnt)   | Retrieves the table field that is referenced by the map field. |\n| public int fieldCnt2FieldFrom(int cnt) | Retrieves the map field that is referencing a table field.     |\n\n### Method table\n\nRetrieves the table that the mapping references.\n\n    public int table()\n\n#### Return Value\n\nThe table ID.\n\n#### Remarks\n\nUse this method to get to the table mappings, instead of traversing to the tree node.\n\n### Method fieldCnt\n\nRetrieves the count of fields in the table mapping.\n\n    public int fieldCnt()\n\n#### Return Value\n\nThe count.\n\n#### Remarks\n\nUse this method to get to the table mappings, instead of traversing to the tree node.\n\n### Method fieldCnt2FieldTo\n\nRetrieves the table field that is referenced by the map field.\n\n    public int fieldCnt2FieldTo(int cnt)\n\n#### Parameters\n\ncnt  \n\n#### Return Value\n\nThe table field ID.\n\n#### Remarks\n\nUse this method to get to the table mappings, instead of traversing to the tree node.\n\n### Method fieldCnt2FieldFrom\n\nRetrieves the map field that is referencing a table field.\n\n    public int fieldCnt2FieldFrom(int cnt)\n\n#### Parameters\n\ncnt  \n\n#### Return Value\n\nThe map field ID.\n\n#### Remarks\n\nUse this method to get to the table mappings, instead of traversing to the tree node.\n\n## Class DictType\n    class DictType extends Object\n\nThe DictType class manages extended data types.\n\n### Remarks\n\nThe SysDictType class extends DictType.\n\n### Examples\n\n### Methods\n\n| Method                                                                | Description                                                                                                                                                              |\n|-----------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| public Alignment alignment()                                          | Retrieves the alignment for the extended data type.                                                                                                                      |\n| public int arraySize()                                                | Provides the array size for an extended data type.                                                                                                                       |\n| public Types baseType()                                               | Provides the data type on which an extended data type is based, by using the Types enumeration.                                                                          |\n| public ConfigurationKeyId configurationKeyId()                        | Returns the ID of the configuration key for the extended data type.                                                                                                      |\n| public int displayHeight(\\[boolean useDefaults\\])                     | Retrieves the display height for the type.                                                                                                                               |\n| public int displayLength(\\[boolean useDefaults\\])                     |                                                                                                                                                                          |\n| public EnumId enumId()                                                | Provides the ID for the enumeration type on which an extended data type is based.                                                                                        |\n| public ExtendedTypeId extend()                                        | Provides the ID for the extended data type that an extended data type extends.                                                                                           |\n| public List extendedBy(\\[boolean allLevels\\])                         | Retrieves a list of type IDs for extended data types (EDTs) that are extended by the current EDT.                                                                        |\n| public str formHelp()                                                 |                                                                                                                                                                          |\n| public str getControlClass()                                          |                                                                                                                                                                          |\n| public container getCountryRegionCodes()                              | Retrieves a container that holds the country/region codes that are defined.                                                                                              |\n| public DictRelation getLookupRelation(\\[int arrayIndex\\])             |                                                                                                                                                                          |\n| public AnyType getValue(\\[int arrayIndex\\])                           |                                                                                                                                                                          |\n| public str help(\\[int arrayIndex\\], \\[boolean useInterfaceLanguage\\]) | Provides the Help text that is displayed for an extended data type or a specified array element, or for the extended data type that an extended data type extends.       |\n| public str helpDefined(\\[int arrayIndex\\])                            | Returns the value of the help property for the extended data type.                                                                                                       |\n| public ExtendedTypeId id()                                            | Provides the ID for an extended data type.                                                                                                                               |\n| public boolean isExtendedFrom(str baseEDTName)                        | Determines whether the extended data type extends from the base extended data type that is provided.                                                                     |\n| public int isRadioStyle()                                             | Indicates whether the style of an extended data type that is based on an Enum data type is a radio button or a combo box.                                                |\n| public str label(\\[int arrayIndex\\])                                  | Provides the label that is displayed for an extended data type or a specified array element, or the label for the extended data type that an extended data type extends. |\n| public str labelDefined(\\[int arrayIndex\\])                           | Returns the value of the label property for the extended data type.                                                                                                      |\n| public str lookupTable(\\[boolean useInheritedMetaData\\])              |                                                                                                                                                                          |\n| public str name()                                                     | Provides the name of an extended data type.                                                                                                                              |\n| public DictRelation relationObject(\\[int arrayIndex\\])                | Provides information about relations that are defined for an extended data type or a specified array element by returning a DictRelation object.                         |\n| public int stringLen()                                                | Provides the string length for an extended data type that is based on the string data type.                                                                              |\n| public boolean stringRight()                                          | Indicates whether the string is right-justified for an extended data type that is based on the string data type.                                                         |\n| ::public static Alignment getTypeAlignment(Types type)                |                                                                                                                                                                          |\n| ::public static int getTypeDisplayHeight(Types type)                  |                                                                                                                                                                          |\n| ::public static int getTypeDisplayLength(Types type)                  | Retrieves the display length for built-in types.                                                                                                                         |\n| public void setValue(AnyType Value, \\[int arrayEntry\\])               |                                                                                                                                                                          |\n| public void new(ExtendedTypeId typeId)                                | Initializes a new instance of the Object class.                                                                                                                          |\n| public void setStringLen(int stringLen)                               | Sets the string length for an extended data type that is based on the string data type.                                                                                  |\n| public void setStringRight(boolean right)                             | Indicates the string justification for an extended data type that is based on a String data type.                                                                        |\n\n### Method alignment\n\nRetrieves the alignment for the extended data type.\n\n    public Alignment alignment()\n\n#### Return Value\n\nThe alignment for the extended data type.\n\n### Method arraySize\n\nProvides the array size for an extended data type.\n\n    public int arraySize()\n\n#### Return Value\n\nAn integer value for the array size; 1 if an extended data type does not have array elements.\n\n#### Examples\n\nIn the following example, the arraySize method returns the array size for the XMLMapDimension extended data type.\n\n        DictType dicttype; \n        int i; \n        dicttype = new DictType(extendedTypeNum(XMLMapDimension)); \n        for (i = 1;  i < dicttype.arraySize(); i++) \n        { \n            print dicttype.label(i); \n            pause; \n        }\n\n### Method baseType\n\nProvides the data type on which an extended data type is based, by using the Types enumeration.\n\n    public Types baseType()\n\n#### Return Value\n\nA Types enumeration value that indicates the data type.\n\n#### Remarks\n\nYou can convert the return value to a string by using the Global::Enum2Value method.\n\n### Method configurationKeyId\n\nReturns the ID of the configuration key for the extended data type.\n\n    public ConfigurationKeyId configurationKeyId()\n\n#### Return Value\n\nThe ID of the configuration key for the extended data type.\n\n### Method displayHeight\n\nRetrieves the display height for the type.\n\n    public int displayHeight([boolean useDefaults])\n\n#### Parameters\n\nuseDefaults  \nA Boolean value that indicates whether to use the default values if the type does not have a length.\n\n#### Return Value\n\nThe display height for the type.\n\n### Method displayLength\n\n    public int displayLength([boolean useDefaults])\n\n#### Parameters\n\nuseDefaults  \n\n#### Return Value\n\n### Method enumId\n\nProvides the ID for the enumeration type on which an extended data type is based.\n\n    public EnumId enumId()\n\n#### Return Value\n\nThe ID of the enumeration type on which the extended data type is based; 0 (zero) if the extended data type is not based on an enumeration.\n\n#### Remarks\n\nYou can use the baseType method to determine what the data type of an extended data type is.\n\n### Method extend\n\nProvides the ID for the extended data type that an extended data type extends.\n\n    public ExtendedTypeId extend()\n\n#### Return Value\n\nThe ID for the extended data type than an extended data type extends; 0 (zero) if the extended data type does not extend an extended data type.\n\n#### Examples\n\nIn the following example, the extend method returns the ID for the extended data type that the ABCPercentA extended data type extends.\n\n        DictType dicttype; \n        dicttype = new DictType(extendedTypeNum(ABCPercentA)); \n        print dicttype.name() + \" extends: \" + extendedTypeId2Name(dicttype.extend());\n\n### Method extendedBy\n\nRetrieves a list of type IDs for extended data types (EDTs) that are extended by the current EDT.\n\n    public List extendedBy([boolean allLevels])\n\n#### Parameters\n\nallLevels  \n\n#### Return Value\n\nA list of type IDs for EDTs that are extended by the current EDT.\n\n### Method formHelp\n\n    public str formHelp()\n\n#### Return Value\n\n### Method getControlClass\n\n    public str getControlClass()\n\n#### Return Value\n\n### Method getCountryRegionCodes\n\nRetrieves a container that holds the country/region codes that are defined.\n\n    public container getCountryRegionCodes()\n\n#### Return Value\n\nA container that holds country/region codes.\n\n### Method getLookupRelation\n\n    public DictRelation getLookupRelation([int arrayIndex])\n\n#### Parameters\n\narrayIndex  \n\n#### Return Value\n\n### Method getValue\n\n    public AnyType getValue([int arrayIndex])\n\n#### Parameters\n\narrayIndex  \n\n#### Return Value\n\n### Method help\n\nProvides the Help text that is displayed for an extended data type or a specified array element, or for the extended data type that an extended data type extends.\n\n    public str help([int arrayIndex], [boolean useInterfaceLanguage])\n\n#### Parameters\n\narrayIndex  \nA Boolean value that indicates whether the user interface language is used for the Help text; optional.\n\n<!-- -->\n\nuseInterfaceLanguage  \nA Boolean value that indicates whether the user interface language is used for the Help text; optional.\n\n#### Return Value\n\nA string value for the Help text that is displayed for the extended data type, or for an array element if the arrayEntry value is provided. The Help text corresponds to the Help Text property for an extended data type or array element in the Microsoft Dynamics AX Application Object Tree (AOT). When an extended data type does not have Help text, the method returns the Help text that is defined for the extended data type that the extended data type extends.\n\n### Method helpDefined\n\nReturns the value of the help property for the extended data type.\n\n    public str helpDefined([int arrayIndex])\n\n#### Parameters\n\narrayIndex  \n\n#### Return Value\n\nThe value of the help property for the extended data type, or for an array element if the arrayEntry value is provided. The Help text corresponds to the Help Text property for an extended data type or array element in the AOT.\n\n### Method id\n\nProvides the ID for an extended data type.\n\n    public ExtendedTypeId id()\n\n#### Return Value\n\nA data type value that indicates the ID for an extended data type.\n\n### Method isExtendedFrom\n\nDetermines whether the extended data type extends from the base extended data type that is provided.\n\n    public boolean isExtendedFrom(str baseEDTName)\n\n#### Parameters\n\nbaseEDTName  \nThe name of the extended data type.\n\n#### Return Value\n\ntrue if the extended data type extends from the base extended data type that is provided; otherwise, false.\n\n### Method isRadioStyle\n\nIndicates whether the style of an extended data type that is based on an Enum data type is a radio button or a combo box.\n\n    public int isRadioStyle()\n\n#### Return Value\n\n1 if the style is a radio button; otherwise, 0 (zero).\n\n### Method label\n\nProvides the label that is displayed for an extended data type or a specified array element, or the label for the extended data type that an extended data type extends.\n\n    public str label([int arrayIndex])\n\n#### Parameters\n\narrayIndex  \n\n#### Return Value\n\nThe label that is displayed for an extended data type, or the label for an array element if the arrayEntry value is provided. When an extended data type does not have a label, this method returns the label defined for the extended data type that an extended data type extends.\n\n#### Remarks\n\nThe label that is returned corresponds to the Label property for an extended data type or array element in the AOT.\n\n### Method labelDefined\n\nReturns the value of the label property for the extended data type.\n\n    public str labelDefined([int arrayIndex])\n\n#### Parameters\n\narrayIndex  \n\n#### Return Value\n\nThe value of the label property for the extended data type, or for an array element if the arrayEntry value is provided.\n\n#### Remarks\n\nThe return value corresponds to the Label property for an extended data type or array element in the AOT.\n\n### Method lookupTable\n\n    public str lookupTable([boolean useInheritedMetaData])\n\n#### Parameters\n\nuseInheritedMetaData  \n\n#### Return Value\n\n### Method name\n\nProvides the name of an extended data type.\n\n    public str name()\n\n#### Return Value\n\nA string value for the name. The name corresponds to the Name property for an extended data type in the AOT.\n\n### Method relationObject\n\nProvides information about relations that are defined for an extended data type or a specified array element by returning a DictRelation object.\n\n    public DictRelation relationObject([int arrayIndex])\n\n#### Parameters\n\narrayIndex  \n\n#### Return Value\n\nA DictRelation object that provides information about relations.\n\n#### Remarks\n\nIf no relations are defined for the extended data type and array elements, subsequent use of the DictRelation instance will cause a run-time error.\n\n#### Examples\n\nIn the following example, the relationObject method returns the DictRelation object for the XMLMapDimension extended data type.\n\n        DictType dicttype; \n        DictRelation dictrelation; \n        dicttype = new DictType(extendedTypeNum(XMLMapDimension)); \n        dictrelation = dicttype.relationObject(); \n        if(dictrelation) \n        { \n            print \"Relation lines: \" + int2str(dictrelation.lines()); \n        } \n        else \n        { \n            print \"No relations defined.\"; \n         }\n\n### Method stringLen\n\nProvides the string length for an extended data type that is based on the string data type.\n\n    public int stringLen()\n\n#### Return Value\n\nAn integer that indicates the string length; 0 (zero) if an extended data type is not based on the string data type.\n\n### Method stringRight\n\nIndicates whether the string is right-justified for an extended data type that is based on the string data type.\n\n    public boolean stringRight()\n\n#### Return Value\n\ntrue if the string is right-justified; otherwise, false.\n\n#### Remarks\n\nThe return value corresponds to the Adjustment property for the extended data type in the AOT.\n\n### Method getTypeAlignment\n\n    public static Alignment getTypeAlignment(Types type)\n\n#### Parameters\n\ntype  \n\n#### Return Value\n\n### Method getTypeDisplayHeight\n\n    public static int getTypeDisplayHeight(Types type)\n\n#### Parameters\n\ntype  \n\n#### Return Value\n\n### Method getTypeDisplayLength\n\nRetrieves the display length for built-in types.\n\n    public static int getTypeDisplayLength(Types type)\n\n#### Parameters\n\ntype  \nThe type.\n\n#### Return Value\n\nThe display length for the built-in type.\n\n### Method setValue\n\n    public void setValue(AnyType Value, [int arrayEntry])\n\n#### Parameters\n\nValue  \n\n<!-- -->\n\narrayEntry  \n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(ExtendedTypeId typeId)\n\n#### Parameters\n\ntypeId  \nA data type that indicates the ID for an extended data type.\n\n#### Remarks\n\nThis constructor does not fail if the typeId value is an invalid extended data type ID; however, when the DictType instance is used, a run-time error occurs. You can pass the name of the extended data type instead of an ID by using the extendedTypeNum function.\n\n#### Examples\n\nThe following example shows how to create an instance of the DictType class.\n\n        DictType dicttype; \n        dicttype = new DictType(extendedTypeNum(ABCModelType));\n\n### Method setStringLen\n\nSets the string length for an extended data type that is based on the string data type.\n\n    public void setStringLen(int stringLen)\n\n#### Parameters\n\nstringLen  \nAn integer that indicates the string length.\n\n#### Remarks\n\nThis method lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called. The string length corresponds to the StringSize property for the extended data type in the AOT.\n\n#### Examples\n\nThe following example sets the StringSize property to 10 for the AccountName extended data type.\n\n    server static public void Main(Args _args) \n    { \n        DictType  dt; \n        dt = new DictType(ExtendedTypeNum(AccountName)); \n        if (dt) \n        { \n            dt.setStringLen(10); \n        } \n    }\n\n### Method setStringRight\n\nIndicates the string justification for an extended data type that is based on a String data type.\n\n    public void setStringRight(boolean right)\n\n#### Parameters\n\nright  \nA Boolean value: true for a right-justified string and false for a left-justified string.\n\n#### Remarks\n\nThis method lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n#### Examples\n\nThe following example sets the justification of the AccountName extended data type.\n\n    server static public void Main(Args _args) \n    { \n        DictType dt; \n        dt = new DictType(ExtendedTypeNum(AccountName)); \n        if (dt) \n        { \n            dt.setStringRight(true); \n        } \n    }\n\n## Class DictView\n    class DictView extends DictTable\n\nThe DictView class provides access to information about a particular view.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                                               | Description                                                                                                 |\n|--------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------|\n| public str computedColumnString(str dataSourceName, str fieldName, \\[FieldNameGenerationMode generationMode\\], \\[boolean needTrim\\]) | Retrieves the table alias.                                                                                  |\n| public int datasourceCnt()                                                                                                           | Counts data sources in the view.                                                                            |\n| public str datasourceDataareaIdName(int cnt)                                                                                         | Retrieves the SQL name that is used in the view definition to identify the legal entity of the data source. |\n| public TableId datasourceID2TableId(TableId dataSourceId)                                                                            | Gets the table ID of the given data source.                                                                 |\n| public TableId datasourceTableId(int cnt)                                                                                            | Retrieves the table ID of the indexed data source.                                                          |\n| public SelectionField fieldAggregation(FieldId fieldId)                                                                              | Retrieves the type of aggregation that a given field performs.                                              |\n| public int fieldDatasource(FieldId fieldId)                                                                                          | Retrieves the ID of the data source that the given field originates from.                                   |\n| public TableId fieldDatasourceID(FieldId fieldId)                                                                                    | Retrieves the ID of the data source in the view that the given field maps to.                               |\n| public FieldId fieldId(FieldId fieldId)                                                                                              | Retrieves the field ID from the underlying table.                                                           |\n| public boolean isAggregatedView()                                                                                                    | Checks whether the view is aggregated.                                                                      |\n| public Query query()                                                                                                                 |                                                                                                             |\n| public boolean isDataEntity()                                                                                                        |                                                                                                             |\n| public boolean isUpdatable()                                                                                                         |                                                                                                             |\n| public boolean isPublic()                                                                                                            |                                                                                                             |\n| public str collectionName()                                                                                                          |                                                                                                             |\n| public boolean isVirtualField(str fieldName)                                                                                         |                                                                                                             |\n| public FieldAccessModifier getFieldAccessModifier(str fieldName)                                                                     |                                                                                                             |\n| public boolean isStaged()                                                                                                            |                                                                                                             |\n| public str version()                                                                                                                 |                                                                                                             |\n| public MessagingRole messagingRole()                                                                                                 |                                                                                                             |\n| public void new(TableId tableId)                                                                                                     | Initializes a new instance of the Object class.                                                             |\n\n### Method computedColumnString\n\nRetrieves the table alias.\n\n    public str computedColumnString(str dataSourceName, str fieldName, [FieldNameGenerationMode generationMode], [boolean needTrim])\n\n#### Parameters\n\ndataSourceName  \n\n<!-- -->\n\nfieldName  \n\n<!-- -->\n\ngenerationMode  \n\n<!-- -->\n\nneedTrim  \n\n#### Return Value\n\nThe formatted field name string.\n\n#### Remarks\n\nThe table alias is an SQL field name in a database-style format that can be used together with a computed column definition.\n\n### Method datasourceCnt\n\nCounts data sources in the view.\n\n    public int datasourceCnt()\n\n#### Return Value\n\nThe number of data sources in the view.\n\n### Method datasourceDataareaIdName\n\nRetrieves the SQL name that is used in the view definition to identify the legal entity of the data source.\n\n    public str datasourceDataareaIdName(int cnt)\n\n#### Parameters\n\ncnt  \n\n#### Return Value\n\nThe SQL name that is used in the view definition to identify the legal entity of the data source; a empty string if an error occurs.\n\n### Method datasourceID2TableId\n\nGets the table ID of the given data source.\n\n    public TableId datasourceID2TableId(TableId dataSourceId)\n\n#### Parameters\n\ndataSourceId  \n\n#### Return Value\n\nThe table ID of the given data source.\n\n### Method datasourceTableId\n\nRetrieves the table ID of the indexed data source.\n\n    public TableId datasourceTableId(int cnt)\n\n#### Parameters\n\ncnt  \n\n#### Return Value\n\nThe table ID of the given data source; 0 (zero) if an error occurs.\n\n### Method fieldAggregation\n\nRetrieves the type of aggregation that a given field performs.\n\n    public SelectionField fieldAggregation(FieldId fieldId)\n\n#### Parameters\n\nfieldId  \n\n#### Return Value\n\nThe type of aggregation.\n\n### Method fieldDatasource\n\nRetrieves the ID of the data source that the given field originates from.\n\n    public int fieldDatasource(FieldId fieldId)\n\n#### Parameters\n\nfieldId  \n\n#### Return Value\n\nThe data source ID.\n\n### Method fieldDatasourceID\n\nRetrieves the ID of the data source in the view that the given field maps to.\n\n    public TableId fieldDatasourceID(FieldId fieldId)\n\n#### Parameters\n\nfieldId  \n\n#### Return Value\n\nThe data source ID.\n\n### Method fieldId\n\nRetrieves the field ID from the underlying table.\n\n    public FieldId fieldId(FieldId fieldId)\n\n#### Parameters\n\nfieldId  \n\n#### Return Value\n\nThe field ID from the underlying table.\n\n### Method isAggregatedView\n\nChecks whether the view is aggregated.\n\n    public boolean isAggregatedView()\n\n#### Return Value\n\ntrue if the view is aggregated; otherwise, false.\n\n### Method query\n\n    public Query query()\n\n#### Return Value\n\n### Method isDataEntity\n\n    public boolean isDataEntity()\n\n#### Return Value\n\n### Method isUpdatable\n\n    public boolean isUpdatable()\n\n#### Return Value\n\n### Method isPublic\n\n    public boolean isPublic()\n\n#### Return Value\n\n### Method collectionName\n\n    public str collectionName()\n\n#### Return Value\n\n### Method isVirtualField\n\n    public boolean isVirtualField(str fieldName)\n\n#### Parameters\n\nfieldName  \n\n#### Return Value\n\n### Method getFieldAccessModifier\n\n    public FieldAccessModifier getFieldAccessModifier(str fieldName)\n\n#### Parameters\n\nfieldName  \n\n#### Return Value\n\n### Method isStaged\n\n    public boolean isStaged()\n\n#### Return Value\n\n### Method version\n\n    public str version()\n\n#### Return Value\n\n### Method messagingRole\n\n    public MessagingRole messagingRole()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(TableId tableId)\n\n#### Parameters\n\ntableId  \nThe table ID to use to create the class instance.\n\n## Class DLL\n    class DLL extends Object\n\nThe DLL class enables communication with a MicrosoftWindows dynamic-link library (DLL).\n\n### Remarks\n\nIf you are using a Unicode DLL, do the following:\n\n-   Use ExtTypes::WString instead of ExtTypes::String to specify a string type.\n-   Use Binary::WString instead of Binary::String if you have character data embedded in a binary structure.\n-   Use the Binary.wstring method instead of the Binary.string method if you have to read a string from a binary object.\n\n### Examples\n\nThe following example uses the DLL and DLLFunction classes to interoperate with the GetVersion API in Kernel32.dll. This example asserts the use of the InteropPermission class, which is required only if the code is running on the server. It loads the DLL and, if it is successful, sets the return type from the call to the DLLFunction class.\n\n    void DLLExample() \n    { \n        Dll               dll; \n        DllFunction       dllFunc; \n        anytype           retVal; \n        InteropPermission perm; \n        perm = new InteropPermission(InteropKind::DllInterop); \n        // Grants permission to execute the DLL.new method.  \n        // DLL.new runs under code access security. \n        perm.assert(); \n        dll = new Dll(\"Kernel32.dll\"); \n        // Closes the code access permission scope. \n           CodeAccessPermission::revertAssert(); \n        if (dll != null) \n        { \n            perm = new InteropPermission(InteropKind::DllInterop); \n        // Grants permission to execute the DLLFunction.new method.  \n        // DLLFunction.new runs under code access security. \n            perm.assert(); \n            dllFunc = new DllFunction(dll, \"GetVersion\"); \n            if (dllFunc != null) \n            { \n                 dllFunc.returns(ExtTypes::DWord); \n                retVal = dllFunc.call(); \n            } \n            // Closes the code access permission scope. \n           CodeAccessPermission::revertAssert(); \n        } \n    }\n\n### Methods\n\n| Method                             | Description                                                                               |\n|------------------------------------|-------------------------------------------------------------------------------------------|\n| ::public static int lastDLLError() | Sets or retrieves the last error that was reported by the DLL.                            |\n| public void new(str filename)      | Creates an instance of the DLL class.                                                     |\n| public void finalize()             | Releases resources and performs clean-up before an instance of the DLL class is released. |\n\n### Method lastDLLError\n\nSets or retrieves the last error that was reported by the DLL.\n\n    public static int lastDLLError()\n\n#### Return Value\n\nThe last error that was reported by the DLL.\n\n### Method new\n\nCreates an instance of the DLL class.\n\n    public void new(str filename)\n\n#### Parameters\n\nfilename  \nThe file name of the DLL to use to create the instance of the DLL class.\n\n#### Remarks\n\nTo access a DLL function, use a created instance of the DLL class in a call to the DLLFunction::new method. If an attacker can control input to the new method, a security risk exists. Therefore, this method runs under Code Access Security. Calls to this method on the server require permission from the InteropPermission class. Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.\n\n#### Examples\n\nThe following example uses the DLL and DLLFunction classes to interoperate with the GetVersion API in Kernel32.dll. This example asserts the use of the InteropPermission class. It loads the DLL and, if it is successful, sets the return type from the call in the DLLFunction class.\n\n    void DLLExample() \n    { \n        Dll               dll; \n        DllFunction       dllFunc; \n        anytype           retVal; \n        InteropPermission perm; \n        perm = new InteropPermission(InteropKind::DllInterop); \n        // Grants permission to execute the DLL.new method. \n        // DLL.new runs under code access security. \n        perm.assert(); \n        dll = new Dll(\"Kernel32.dll\"); \n        // Closes the code access permission scope. \n           CodeAccessPermission::revertAssert(); \n        if (dll != null) \n        { \n            perm = new InteropPermission(InteropKind::DllInterop); \n           // Grants permission to execute the DLLFunction.new method. \n           // DLLFunction.new runs under code access security. \n            perm.assert(); \n            dllFunc = new DllFunction(dll, \"GetVersion\"); \n            if (dllFunc != null) \n            { \n                 dllFunc.returns(ExtTypes::DWord); \n                retVal = dllFunc.call(); \n            } \n            // Close the code access permission scope. \n           CodeAccessPermission::revertAssert(); \n        } \n    }\n\n### Method finalize\n\nReleases resources and performs clean-up before an instance of the DLL class is released.\n\n    public void finalize()\n\n## Class DLLFunction\n    class DLLFunction extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                           | Description                                     |\n|--------------------------------------------------|-------------------------------------------------|\n| public AnyType call(VarArg )                     |                                                 |\n| public ExtTypes returns(\\[ExtTypes returnType\\]) |                                                 |\n| public void new(DLL dll, str functionname)       | Initializes a new instance of the Object class. |\n| public void finalize()                           |                                                 |\n| public void arg(VarArg )                         |                                                 |\n\n### Method call\n\n    public AnyType call(VarArg )\n\n#### Parameters\n\n  \n\n#### Return Value\n\n#### Remarks\n\nIf an attacker can control input to the call method, a security risk exists. Therefore, this method runs under Code Access Security. Calls to this method on the server require permission. Make sure that the user has development privileges by setting the security key to SysDevelopment on the control that calls this method.\n\n#### Examples\n\nThe following example uses the DLL and DLLFunction classes to interoperate with the GetVersion API in Kernel32.dll. It asserts the use of the InteropPermission class to provide code access protection, and then it loads the DLL. If this is successful, the return type is set from the call to the DLLFunction class.\n\n    { \n        Dll               dll; \n        DllFunction       dllFunc; \n        anytype           retVal; \n        InteropPermission perm; \n        perm = new InteropPermission(InteropKind::DllInterop); \n        // Grants permission to execute the DLL.new method. \n        // DLL.new is protected by code access security. \n        perm.assert(); \n        dll = new Dll(\"Kernel32.dll\"); \n        // Closes the code access permission scope. \n        CodeAccessPermission::revertAssert(); \n        if (dll != null) \n        { \n            // Grants permission to execute the DLLFunction.new method. \n            // DLLFunction.new is protected by code access security. \n            perm = new InteropPermission(InteropKind::DllInterop); \n            perm.assert(); \n            dllFunc = new DllFunction(dll, \"GetVersion\"); \n            if (dllFunc != null) \n             { \n                dllFunc.returns(ExtTypes::DWord); \n                 retVal = dllFunc.call(); \n             } \n           // Closes the code access permission scope. \n           CodeAccessPermission::revertAssert(); \n        } \n    }\n\n### Method returns\n\n    public ExtTypes returns([ExtTypes returnType])\n\n#### Parameters\n\nreturnType  \n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(DLL dll, str functionname)\n\n#### Parameters\n\ndll  \n\n<!-- -->\n\nfunctionname  \n\n### Method finalize\n\n    public void finalize()\n\n### Method arg\n\n    public void arg(VarArg )\n\n#### Parameters\n\n  \n\n## Class DocNode\n    class DocNode extends TreeNode\n\nThe DocNode class provides the information and functions for a documentation node.\n\n### Remarks\n\nThis class lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n### Examples\n\n### Methods\n\n| Method                                                                                                                                                                                            | Description                                                                                                                             |\n|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------|\n| public str AOTgetSource()                                                                                                                                                                         | Returns the source code for the node.                                                                                                   |\n| public str changedBy(\\[str value\\])                                                                                                                                                               | Gets or sets the name of the user who last changed the application object.                                                              |\n| public Date changedDate(\\[Date value\\])                                                                                                                                                           | Gets or sets the date that an application object was last changed.                                                                      |\n| public str changedTime(\\[str value\\])                                                                                                                                                             | Gets or sets the time that an application object was last changed.                                                                      |\n| public ConfigurationKeyId configurationKey(\\[ConfigurationKeyId value\\])                                                                                                                          | Gets or sets the configuration key that is assigned to the control.                                                                     |\n| public str createdBy(\\[str value\\])                                                                                                                                                               | Gets or sets the name of the user who created the application object.                                                                   |\n| public Date creationDate(\\[Date value\\])                                                                                                                                                          | Gets or sets the date that an application object was created.                                                                           |\n| public str creationTime(\\[str value\\])                                                                                                                                                            |                                                                                                                                         |\n| public str description(\\[str value\\])                                                                                                                                                             | Sets or returns the description of the documentation node.                                                                              |\n| public str name(\\[str value\\])                                                                                                                                                                    | Gets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics AX application object. |\n| public int neededAccessLevel(\\[int value\\])                                                                                                                                                       | Gets or sets the neededAccessLevel property for the MenuFunction class.                                                                 |\n| public SecurityKeyId securityKey(\\[SecurityKeyId value\\])                                                                                                                                         | Sets or returns the security key for the documentation node.                                                                            |\n| public str title(\\[str value\\])                                                                                                                                                                   | Sets or returns the title of the documentation node.                                                                                    |\n| ::public static DocNode findAOTElementDocNode(ApplCodeDocType HelpType, str Name, \\[str ParentName\\], \\[int Mode\\])                                                                               | Performs a search for an element documentation node in the Microsoft Dynamics AX Application Object Tree (AOT).                         |\n| ::public static DocNode findApplicationDocNode(ApplHelpType HelpType, str Name, \\[str ParentName\\], \\[int Mode\\])                                                                                 | Performs a search for an application element documentation node.                                                                        |\n| ::public static DocNode findKernelDocNode(KernelHelpType HelpType, str Name, \\[str ParentName\\], \\[int Mode\\])                                                                                    | Performs a search for a kernel element documentation node.                                                                              |\n| ::public static DocNode getNodeDetached(UtilFileType helpType, int UtilType, str Name, \\[int ParentId\\], \\[int Type\\], \\[UtilEntryLevel Utillevel\\], \\[boolean Forcelevel\\], \\[boolean OldUtil\\]) | Returns the specified documentation node.                                                                                               |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])                                                                                                                                        | Sets the source code for the node.                                                                                                      |\n| public void AOTedit(\\[int Line\\], \\[int Column\\])                                                                                                                                                 | Opens the appropriate editor for this node.                                                                                             |\n\n### Method AOTgetSource\n\nReturns the source code for the node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe source code for the node as a string; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if there is no source code for the node.\n\n### Method changedBy\n\nGets or sets the name of the user who last changed the application object.\n\n    public str changedBy([str value])\n\n#### Parameters\n\nvalue  \nThe value that is being assigned as the user who changed the documentation node.\n\n#### Return Value\n\nThe name of the user.\n\n### Method changedDate\n\nGets or sets the date that an application object was last changed.\n\n    public Date changedDate([Date value])\n\n#### Parameters\n\nvalue  \nThe value that is being assigned as the change date for the documentation node.\n\n#### Return Value\n\nThe date that an application object was last changed.\n\n### Method changedTime\n\nGets or sets the time that an application object was last changed.\n\n    public str changedTime([str value])\n\n#### Parameters\n\nvalue  \nThe value that is being assigned as the change time for the documentation node.\n\n#### Return Value\n\nThe time that an application object was last changed.\n\n### Method configurationKey\n\nGets or sets the configuration key that is assigned to the control.\n\n    public ConfigurationKeyId configurationKey([ConfigurationKeyId value])\n\n#### Parameters\n\nvalue  \nThe value that is being assigned for the configuration key ID.\n\n#### Return Value\n\nThe identifier of the configuration key that is assigned to the control.\n\n#### Remarks\n\nThe configuration key is used to determine whether this control can be displayed. If the configuration key is disabled in the system, the control is not displayed in the form.\n\n### Method createdBy\n\nGets or sets the name of the user who created the application object.\n\n    public str createdBy([str value])\n\n#### Parameters\n\nvalue  \nThe value that is being assigned as the user who created the documentation node.\n\n#### Return Value\n\nThe name of the user.\n\n### Method creationDate\n\nGets or sets the date that an application object was created.\n\n    public Date creationDate([Date value])\n\n#### Parameters\n\nvalue  \nThe value that is being assigned as the creation date for the documentation node.\n\n#### Return Value\n\nThe date that an application object was created.\n\n### Method creationTime\n\n    public str creationTime([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method description\n\nSets or returns the description of the documentation node.\n\n    public str description([str value])\n\n#### Parameters\n\nvalue  \nThe value that is being assigned as the description of the documentation node.\n\n#### Return Value\n\nThe description of the documentation node.\n\n### Method name\n\nGets or sets the name that is used in code to identify a form, report, table, query, or other Microsoft Dynamics AX application object.\n\n    public str name([str value])\n\n#### Parameters\n\nvalue  \nThe name that is being assigned to the documentation node.\n\n#### Return Value\n\nThe name that is used in code to identify an application object.\n\n#### Remarks\n\nThe name property value of an object must meet the following criteria to avoid code conflicts:\n\n-   It must begin with a letter.\n-   It cannot exceed 250 characters.\n-   It can include numbers and underscore (\\_) characters.\n-   It cannot include punctuation or spaces.\n-   Tables cannot have the same name as other public objects, such as extended data types, base enums, and classes.\n\n### Method neededAccessLevel\n\nGets or sets the neededAccessLevel property for the MenuFunction class.\n\n    public int neededAccessLevel([int value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\nThe current value of the neededAccessLevel property.\n\n#### Remarks\n\nThe possible values for the AccessType system enumuration value are as follows:\n\n-   AccessType::NoAccess.\n-   AccessType::View.\n-   AccessType::Edit.\n-   AccessType::Add.\n-   AccessType::Delete.\n\n### Method securityKey\n\nSets or returns the security key for the documentation node.\n\n    public SecurityKeyId securityKey([SecurityKeyId value])\n\n#### Parameters\n\nvalue  \nThe value that is being assigned for the security key ID.\n\n#### Return Value\n\nThe security key ID for the documentation node; 0 (zero) if no security key is associated with the documentation node.\n\n### Method title\n\nSets or returns the title of the documentation node.\n\n    public str title([str value])\n\n#### Parameters\n\nvalue  \nThe title that is being assigned to the documentation node.\n\n#### Return Value\n\nThe title of the documentation node.\n\n### Method findAOTElementDocNode\n\nPerforms a search for an element documentation node in the Microsoft Dynamics AX Application Object Tree (AOT).\n\n    public static DocNode findAOTElementDocNode(ApplCodeDocType HelpType, str Name, [str ParentName], [int Mode])\n\n#### Parameters\n\nHelpType  \nThe mode to use for the search; optional.\n\n<!-- -->\n\nName  \nThe mode to use for the search; optional.\n\n<!-- -->\n\nParentName  \nThe mode to use for the search; optional.\n\n<!-- -->\n\nMode  \nThe mode to use for the search; optional.\n\n#### Return Value\n\nThe node that is found; otherwise, null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic).\n\n### Method findApplicationDocNode\n\nPerforms a search for an application element documentation node.\n\n    public static DocNode findApplicationDocNode(ApplHelpType HelpType, str Name, [str ParentName], [int Mode])\n\n#### Parameters\n\nHelpType  \nThe mode to use for the search; optional.\n\n<!-- -->\n\nName  \nThe mode to use for the search; optional.\n\n<!-- -->\n\nParentName  \nThe mode to use for the search; optional.\n\n<!-- -->\n\nMode  \nThe mode to use for the search; optional.\n\n#### Return Value\n\nThe node that is found; null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic) if the node was not found.\n\n### Method findKernelDocNode\n\nPerforms a search for a kernel element documentation node.\n\n    public static DocNode findKernelDocNode(KernelHelpType HelpType, str Name, [str ParentName], [int Mode])\n\n#### Parameters\n\nHelpType  \nThe mode to use for the search; optional.\n\n<!-- -->\n\nName  \nThe mode to use for the search; optional.\n\n<!-- -->\n\nParentName  \nThe mode to use for the search; optional.\n\n<!-- -->\n\nMode  \nThe mode to use for the search; optional.\n\n#### Return Value\n\nThe node that is found; otherwise, null, Nothing, nullptr, unit, a null reference (Nothing in Visual Basic).\n\n### Method getNodeDetached\n\nReturns the specified documentation node.\n\n    public static DocNode getNodeDetached(UtilFileType helpType, int UtilType, str Name, [int ParentId], [int Type], [UtilEntryLevel Utillevel], [boolean Forcelevel], [boolean OldUtil])\n\n#### Parameters\n\nhelpType  \nReserved; optional.\n\n<!-- -->\n\nUtilType  \nReserved; optional.\n\n<!-- -->\n\nName  \nReserved; optional.\n\n<!-- -->\n\nParentId  \nReserved; optional.\n\n<!-- -->\n\nType  \nReserved; optional.\n\n<!-- -->\n\nUtillevel  \nReserved; optional.\n\n<!-- -->\n\nForcelevel  \nReserved; optional.\n\n<!-- -->\n\nOldUtil  \nReserved; optional.\n\n#### Return Value\n\nThe specified documentation node.\n\n### Method AOTsetSource\n\nSets the source code for the node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nA Boolean value that indicates whether the method is static.\n\n<!-- -->\n\nisStatic  \nA Boolean value that indicates whether the method is static.\n\n### Method AOTedit\n\nOpens the appropriate editor for this node.\n\n    public void AOTedit([int Line], [int Column])\n\n#### Parameters\n\nLine  \nThe column of the cursor position; optional.\n\n<!-- -->\n\nColumn  \nThe column of the cursor position; optional.\n\n#### Remarks\n\nIf the node is a method, the code editor opens. If the node is a documentation object, the Help editor opens.\n\n## Class DynamicPropertyCallback\n    class DynamicPropertyCallback\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                              | Description |\n|---------------------------------------------------------------------|-------------|\n| public boolean propChanged(str propertyName, AnyType propertyValue) |             |\n\n### Method propChanged\n\n    public boolean propChanged(str propertyName, AnyType propertyValue)\n\n#### Parameters\n\npropertyName  \n\n<!-- -->\n\npropertyValue  \n\n#### Return Value\n\n## Class DynamicPropertyManager\n    class DynamicPropertyManager extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                                                                                                      | Description                                                     |\n|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------|\n| public DynamicPropertyCallback callbackObject()                                                                                                                                             |                                                                 |\n| public str getConfigString()                                                                                                                                                                | Microsoft internal use only.                                    |\n| public int hasSheetChanged()                                                                                                                                                                | Microsoft internal use only.                                    |\n| public Struct propertyValues()                                                                                                                                                              |                                                                 |\n| public void allowEdit(str name, boolean allow)                                                                                                                                              |                                                                 |\n| public void updateValue(str propertyname, str value)                                                                                                                                        |                                                                 |\n| public void new()                                                                                                                                                                           | Initializes a new instance of the DynamicPropertyManager class. |\n| public void getPropertySheet(str configString, boolean canWebletTypeChange)                                                                                                                 | Microsoft internal use only.                                    |\n| public void noProperties()                                                                                                                                                                  |                                                                 |\n| public void allowDisplay(str name, boolean allow)                                                                                                                                           |                                                                 |\n| public void refresh()                                                                                                                                                                       |                                                                 |\n| public void setProperties(int propertySetId, str caption, Struct values, \\[Struct defaultValues\\], \\[Struct categories\\], \\[DynamicPropertyCallback callbackObject\\], \\[boolean setFocus\\]) |                                                                 |\n\n### Method callbackObject\n\n    public DynamicPropertyCallback callbackObject()\n\n#### Return Value\n\n### Method getConfigString\n\nMicrosoft internal use only.\n\n    public str getConfigString()\n\n#### Return Value\n\nA configuration string.\n\n### Method hasSheetChanged\n\nMicrosoft internal use only.\n\n    public int hasSheetChanged()\n\n#### Return Value\n\nA value that indicates whether the sheet has changed.\n\n### Method propertyValues\n\n    public Struct propertyValues()\n\n#### Return Value\n\n### Method allowEdit\n\n    public void allowEdit(str name, boolean allow)\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nallow  \n\n### Method updateValue\n\n    public void updateValue(str propertyname, str value)\n\n#### Parameters\n\npropertyname  \n\n<!-- -->\n\nvalue  \n\n### Method new\n\nInitializes a new instance of the DynamicPropertyManager class.\n\n    public void new()\n\n### Method getPropertySheet\n\nMicrosoft internal use only.\n\n    public void getPropertySheet(str configString, boolean canWebletTypeChange)\n\n#### Parameters\n\nconfigString  \nA value that indicates whether the weblet type can change.\n\n<!-- -->\n\ncanWebletTypeChange  \nA value that indicates whether the weblet type can change.\n\n### Method noProperties\n\n    public void noProperties()\n\n### Method allowDisplay\n\n    public void allowDisplay(str name, boolean allow)\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nallow  \n\n### Method refresh\n\n    public void refresh()\n\n### Method setProperties\n\n    public void setProperties(int propertySetId, str caption, Struct values, [Struct defaultValues], [Struct categories], [DynamicPropertyCallback callbackObject], [boolean setFocus])\n\n#### Parameters\n\npropertySetId  \n\n<!-- -->\n\ncaption  \n\n<!-- -->\n\nvalues  \n\n<!-- -->\n\ndefaultValues  \n\n<!-- -->\n\ncategories  \n\n<!-- -->\n\ncallbackObject  \n\n<!-- -->\n\nsetFocus  \n\n\n\n"}