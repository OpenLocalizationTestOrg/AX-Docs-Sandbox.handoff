{"nodes":[{"pos":[32,58],"content":"X++ compile-time functions","needQuote":true,"needEscape":true,"nodes":[{"content":"X++ compile-time functions","pos":[0,26]}]},{"pos":[72,174],"content":"This topic lists the compile-time functions and describes their syntax, parameters, and return values.","needQuote":true,"needEscape":true,"nodes":[{"content":"This topic lists the compile-time functions and describes their syntax, parameters, and return values.","pos":[0,102]}]},{"pos":[672,698],"content":"X++ compile-time functions","linkify":"X++ compile-time functions","nodes":[{"content":"X++ compile-time functions","pos":[0,26]}]},{"content":"This topic lists the compile-time functions and describes their syntax, parameters, and return values.","pos":[700,802]},{"pos":[804,812],"content":"Overview","linkify":"Overview","nodes":[{"content":"Overview","pos":[0,8]}]},{"content":"Compile-time functions are executed early during compilation of X++ code.","pos":[823,896]},{"content":"They should be used wherever possible in X++ code to make the code resilient to changes to the metadata stored in the Application Explorer.","pos":[897,1036]},{"content":"Compile-time functions have their input value verified by the compiler.","pos":[1037,1108]},{"content":"If the input value is not found to match any existing object in the Application Explorer, the compiler issues an error.","pos":[1109,1228]},{"content":"The inputs to these functions must be literals, because the compiler cannot determine the value that a variable contains at run time.","pos":[1229,1362]},{"content":"A compile-time function is a metadata assertion function.","pos":[1363,1420]},{"content":"It takes arguments that represents an entity in the Application Explorer and validates the arguments at compile time.","pos":[1421,1538]},{"content":"It has no effect at run time.","pos":[1539,1568]},{"content":"Attributes are classes that inherit from the <bpt id=\"p1\">**</bpt>SysAttribute<ept id=\"p1\">**</ept> class.","pos":[1569,1637],"source":" Attributes are classes that inherit from the **SysAttribute** class."},{"content":"To support the validation of form, report, query, and menu metadata, use the <bpt id=\"p1\">**</bpt>AutoDeclaration<ept id=\"p1\">**</ept> property on controls.","pos":[1638,1756],"source":" To support the validation of form, report, query, and menu metadata, use the **AutoDeclaration** property on controls."},{"content":"Most of these functions retrieve metadata about items that are in the Application Explorer.","pos":[1757,1848]},{"content":"Some common compile time functions are as follows:","pos":[1849,1899]},{"pos":[1905,1946],"content":"<ph id=\"ph1\">`classNum`</ph> – Retrieves the ID of a class.","source":"`classNum` – Retrieves the ID of a class."},{"content":"<ph id=\"ph1\">`classStr`</ph> – During compile time, verifies that a class of that name exists.","pos":[1951,2027],"source":"`classStr` – During compile time, verifies that a class of that name exists."},{"content":"This approach is better than discovering the error later during run time.","pos":[2028,2101]},{"pos":[2106,2198],"content":"<ph id=\"ph1\">`evalBuf`</ph>– Evaluates the input string of X++ code, and then returns the results as a string.","source":"`evalBuf`– Evaluates the input string of X++ code, and then returns the results as a string."},{"content":"<ph id=\"ph1\">`literalStr`</ph> – retrieves a label ID when given the string representation of a label, such as the string <ph id=\"ph2\">`\"@SYS12345\"`</ph>.","pos":[2203,2321],"source":"`literalStr` – retrieves a label ID when given the string representation of a label, such as the string `\"@SYS12345\"`."},{"content":"For example, <ph id=\"ph1\">`myLabel.exists(literalStr(\"@SYS12345\"));`</ph>.","pos":[2322,2378],"source":" For example, `myLabel.exists(literalStr(\"@SYS12345\"));`."},{"pos":[2382,2390],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>","source":"**Note**"},{"content":"X++ compile time functions cannot be called from a .NET program.","pos":[2520,2584]},{"pos":[2592,2601],"content":"Functions","linkify":"Functions","nodes":[{"content":"Functions","pos":[0,9]}]},{"pos":[2606,2618],"content":"attributeStr","linkify":"attributeStr","nodes":[{"content":"attributeStr","pos":[0,12]}]},{"content":"Validates that the specified attribute class exists in the Application Explorer; if not, a compiler error occurs.","pos":[2619,2732]},{"pos":[2738,2744],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2781,2791],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2795,2804]},{"content":"Description","pos":[2807,2818]},{"content":"class","pos":[2905,2910]},{"content":"The name of the attribute to validate.","pos":[2917,2955]},{"pos":[2963,2975],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the attribute.","pos":[2977,3003]},{"pos":[3009,3016],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[3018,3050]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[3051,3099],"source":" For more information, see [Overview](#overview)."},{"pos":[3105,3112],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3292,3300],"content":"classNum","linkify":"classNum","nodes":[{"content":"classNum","pos":[0,8]}]},{"content":"Retrieves the ID of the specified class.","pos":[3301,3341]},{"pos":[3347,3353],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3390,3400],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3404,3413]},{"content":"Description","pos":[3416,3427]},{"content":"class","pos":[3516,3521]},{"content":"The class for which to retrieve the ID.","pos":[3528,3567]},{"pos":[3575,3587],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the specified class.","pos":[3589,3619]},{"pos":[3625,3632],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[3634,3666]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[3667,3715],"source":" For more information, see [Overview](#overview)."},{"pos":[3721,3728],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3877,3885],"content":"classStr","linkify":"classStr","nodes":[{"content":"classStr","pos":[0,8]}]},{"content":"Retrieves the name of a class as a string.","pos":[3886,3928]},{"pos":[3934,3940],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3977,3987],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3991,4000]},{"content":"Description","pos":[4003,4014]},{"content":"class","pos":[4089,4094]},{"content":"The name of the class to return.","pos":[4101,4133]},{"pos":[4141,4153],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the class.","pos":[4155,4177]},{"pos":[4183,4190],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function instead of literal text to retrieve a string that contains the class name.","pos":[4192,4284]},{"content":"If the class does not exist, the function generates a syntax error at compile time.","pos":[4285,4368]},{"content":"This is a compile-time function.","pos":[4369,4401]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[4402,4450],"source":" For more information, see [Overview](#overview)."},{"pos":[4456,4463],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4609,4628],"content":"configurationKeyNum","linkify":"configurationKeyNum","nodes":[{"content":"configurationKeyNum","pos":[0,19]}]},{"content":"Retrieves the ID of the specified configuration key.","pos":[4629,4681]},{"pos":[4687,4693],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4741,4751],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4755,4764]},{"content":"Description","pos":[4767,4778]},{"content":"keyname","pos":[4887,4894]},{"content":"The configuration key for which to return the ID.","pos":[4899,4948]},{"pos":[4956,4968],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the specified configuration key.","pos":[4970,5012]},{"pos":[5018,5025],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[5027,5059]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[5060,5108],"source":" For more information, see [Overview](#overview)."},{"pos":[5114,5121],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5282,5301],"content":"configurationKeyStr","linkify":"configurationKeyStr","nodes":[{"content":"configurationKeyStr","pos":[0,19]}]},{"content":"Retrieves the name of a configuration key as a string.","pos":[5302,5356]},{"pos":[5362,5368],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5416,5426],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5430,5439]},{"content":"Description","pos":[5442,5453]},{"content":"keyname","pos":[5532,5539]},{"content":"The name of the configuration key.","pos":[5544,5578]},{"pos":[5586,5598],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the configuration key.","pos":[5600,5634]},{"pos":[5640,5647],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function instead of literal text to retrieve a string that contains the configuration key name.","pos":[5649,5753]},{"content":"If the key does not exist, the function generates a syntax error at compile time.","pos":[5754,5835]},{"content":"This is a compile-time function.","pos":[5836,5868]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[5869,5917],"source":" For more information, see [Overview](#overview)."},{"pos":[5923,5930],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6098,6121],"content":"dataEntityDataSourceStr","linkify":"dataEntityDataSourceStr","nodes":[{"content":"dataEntityDataSourceStr","pos":[0,23]}]},{"content":"Retrieves the name of a data source of a data entity.","pos":[6122,6175]},{"pos":[6181,6187],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[6258,6268],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6272,6281]},{"content":"Description","pos":[6285,6296]},{"content":"dataEntity","pos":[6364,6374]},{"content":"The name of the data entity.","pos":[6377,6405]},{"content":"dataSource","pos":[6410,6420]},{"content":"The name of the data source.","pos":[6423,6451]},{"pos":[6459,6471],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the data source.","pos":[6473,6501]},{"pos":[6507,6514],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[6516,6548]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[6549,6597],"source":" For more information, see [Overview](#overview)."},{"pos":[6603,6610],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6632,6643],"content":"delegateStr","linkify":"delegateStr","nodes":[{"content":"delegateStr","pos":[0,11]}]},{"content":"Returns the name of the delegate.","pos":[6644,6677]},{"pos":[6683,6689],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[6749,6759],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6763,6772]},{"content":"Description","pos":[6782,6793]},{"content":"class","pos":[6887,6892]},{"content":"The name of the class, table, or form.","pos":[6906,6944]},{"content":"instanceDelegate","pos":[6949,6965]},{"content":"The name of the instance delegate.","pos":[6968,7002]},{"pos":[7014,7026],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the delegate.","pos":[7028,7053]},{"pos":[7059,7066],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[7068,7100]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[7101,7149],"source":" For more information, see [Overview](#overview)."},{"pos":[7155,7162],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7184,7210],"content":"dimensionHierarchyLevelStr","linkify":"dimensionHierarchyLevelStr","nodes":[{"content":"dimensionHierarchyLevelStr","pos":[0,26]}]},{"content":"Returns the name of the dimension hierarchy level.","pos":[7211,7261]},{"pos":[7267,7273],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[7344,7354],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7358,7367]},{"content":"Description","pos":[7384,7395]},{"content":"dimensionHierarchyLevel","pos":[7504,7527]},{"content":"The name of the dimension hierarchy level.","pos":[7530,7572]},{"pos":[7580,7592],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the dimension hierarchy level.","pos":[7594,7636]},{"pos":[7642,7649],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[7651,7683]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[7684,7732],"source":" For more information, see [Overview](#overview)."},{"pos":[7738,7745],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7767,7788],"content":"dimensionHierarchyStr","linkify":"dimensionHierarchyStr","nodes":[{"content":"dimensionHierarchyStr","pos":[0,21]}]},{"content":"Returns the name of the dimension hierarchy.","pos":[7789,7833]},{"pos":[7839,7845],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[7906,7916],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7920,7929]},{"content":"Description","pos":[7941,7952]},{"content":"dimensionHierarchy","pos":[8044,8062]},{"content":"The name of the dimension hierarchy.","pos":[8065,8101]},{"pos":[8109,8121],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the dimension hierarchy.","pos":[8123,8159]},{"pos":[8165,8172],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[8174,8206]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[8207,8255],"source":" For more information, see [Overview](#overview)."},{"pos":[8261,8268],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8290,8311],"content":"dimensionReferenceStr","linkify":"dimensionReferenceStr","nodes":[{"content":"dimensionReferenceStr","pos":[0,21]}]},{"content":"Returns the name of the dimension reference.","pos":[8312,8356]},{"pos":[8362,8368],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8429,8439],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8443,8452]},{"content":"Description","pos":[8464,8475]},{"content":"dimensionReference","pos":[8567,8585]},{"content":"The name of the dimension reference.","pos":[8588,8624]},{"pos":[8632,8644],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the dimension reference.","pos":[8646,8682]},{"pos":[8688,8695],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[8697,8729]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[8730,8778],"source":" For more information, see [Overview](#overview)."},{"pos":[8784,8791],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8813,8820],"content":"dutyStr","linkify":"dutyStr","nodes":[{"content":"dutyStr","pos":[0,7]}]},{"content":"Retrieves a string that represents the name of the specified security duty.","pos":[8821,8896]},{"pos":[8902,8908],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8949,8959],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8963,8972]},{"content":"Description","pos":[8978,8989]},{"content":"securityDuty","pos":[9063,9075]},{"content":"The name of the security duty.","pos":[9078,9108]},{"pos":[9116,9128],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the security duty in a string.","pos":[9130,9172]},{"pos":[9178,9185],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[9187,9219]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[9220,9268],"source":" For more information, see [Overview](#overview)."},{"pos":[9274,9281],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9303,9310],"content":"enumCnt","linkify":"enumCnt","nodes":[{"content":"enumCnt","pos":[0,7]}]},{"content":"Retrieves the number of elements in the specified enumeration type.","pos":[9311,9378]},{"pos":[9384,9390],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[9428,9438],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9442,9451]},{"content":"Description","pos":[9454,9465]},{"content":"enumtype","pos":[9518,9526]},{"content":"The enumeration type.","pos":[9530,9551]},{"pos":[9559,9571],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of elements in the specified enumeration type.","pos":[9573,9630]},{"pos":[9636,9643],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[9645,9677]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[9678,9726],"source":" For more information, see [Overview](#overview)."},{"pos":[9732,9739],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9814,9828],"content":"enumLiteralStr","linkify":"enumLiteralStr","nodes":[{"content":"enumLiteralStr","pos":[0,14]}]},{"content":"Indicates whether the specified string is an element of the specified enumeration type.","pos":[9829,9916]},{"pos":[9922,9928],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[9977,9987],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9991,10000]},{"content":"Description","pos":[10003,10014]},{"content":"enum","pos":[10153,10157]},{"content":"The enumeration type from which to retrieve the specified value.","pos":[10165,10229]},{"pos":[10237,10249],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10251,10350],"content":"The value of the <bpt id=\"p1\">*</bpt>str<ept id=\"p1\">*</ept> parameter if the specified string was found; otherwise, a compilation error.","source":"The value of the *str* parameter if the specified string was found; otherwise, a compilation error."},{"pos":[10356,10363],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[10365,10397]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[10398,10446],"source":" For more information, see [Overview](#overview)."},{"pos":[10452,10459],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10618,10625],"content":"enumNum","linkify":"enumNum","nodes":[{"content":"enumNum","pos":[0,7]}]},{"content":"Retrieves the ID of the specified enumeration type.","pos":[10626,10677]},{"pos":[10683,10689],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[10723,10733],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10737,10746]},{"content":"Description","pos":[10749,10760]},{"content":"enum","pos":[10857,10861]},{"content":"The enumeration for which to return the ID.","pos":[10869,10912]},{"pos":[10920,10932],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the specified enumeration type.","pos":[10934,10975]},{"pos":[10981,10988],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[10990,11022]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[11023,11071],"source":" For more information, see [Overview](#overview)."},{"pos":[11077,11084],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11221,11228],"content":"enumStr","linkify":"enumStr","nodes":[{"content":"enumStr","pos":[0,7]}]},{"content":"Retrieves the name of an enumeration as a string.","pos":[11229,11278]},{"pos":[11284,11290],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11324,11334],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11338,11347]},{"content":"Description","pos":[11350,11361]},{"content":"enum","pos":[11428,11432]},{"content":"The name of the enumeration.","pos":[11440,11468]},{"pos":[11476,11488],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the enumeration.","pos":[11490,11518]},{"pos":[11524,11531],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[11533,11565]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[11566,11614],"source":" For more information, see [Overview](#overview)."},{"pos":[11620,11627],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11771,11786],"content":"extendedTypeNum","linkify":"extendedTypeNum","nodes":[{"content":"extendedTypeNum","pos":[0,15]}]},{"content":"Retrieves the ID of the specified extended data type.","pos":[11787,11840]},{"pos":[11846,11852],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11892,11902],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11906,11915]},{"content":"Description","pos":[11918,11929]},{"content":"str","pos":[12040,12043]},{"content":"The extended data type for which to return the ID.","pos":[12052,12102]},{"pos":[12110,12122],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the specified extended data type.","pos":[12124,12167]},{"pos":[12173,12180],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[12182,12214]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[12215,12263],"source":" For more information, see [Overview](#overview)."},{"pos":[12269,12276],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[12519,12534],"content":"extendedTypeStr","linkify":"extendedTypeStr","nodes":[{"content":"extendedTypeStr","pos":[0,15]}]},{"content":"Retrieves the name of an extended data type as a string.","pos":[12535,12591]},{"pos":[12597,12603],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[12643,12653],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[12657,12666]},{"content":"Description","pos":[12669,12680]},{"content":"str","pos":[12761,12764]},{"content":"The name of the extended data type.","pos":[12773,12808]},{"pos":[12816,12828],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the extended data type.","pos":[12830,12865]},{"pos":[12871,12878],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function instead of literal text to return a string that contains the extended data type name.","pos":[12880,12983]},{"content":"If the data type does not exist, the <bpt id=\"p1\">**</bpt>extendedTypeStr<ept id=\"p1\">**</ept> function generates a syntax error at compile time.","pos":[12984,13091],"source":" If the data type does not exist, the **extendedTypeStr** function generates a syntax error at compile time."},{"content":"This is a compile-time function.","pos":[13092,13124]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[13125,13173],"source":" For more information, see [Overview](#overview)."},{"pos":[13179,13186],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13429,13437],"content":"fieldNum","linkify":"fieldNum","nodes":[{"content":"fieldNum","pos":[0,8]}]},{"content":"Returns the ID number of the specified field.","pos":[13438,13483]},{"pos":[13489,13495],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[13549,13559],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13563,13572]},{"content":"Description","pos":[13575,13586]},{"content":"tableName","pos":[13641,13650]},{"content":"The name of the table.","pos":[13653,13675]},{"content":"fieldName","pos":[13680,13689]},{"content":"The name of the field.","pos":[13692,13714]},{"pos":[13722,13734],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the specified field.","pos":[13736,13766]},{"pos":[13772,13779],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[13781,13813]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[13814,13862],"source":" For more information, see [Overview](#overview)."},{"pos":[13868,13875],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13877,13970],"content":"The following example prints the number of the <bpt id=\"p1\">**</bpt>CashDisc<ept id=\"p1\">**</ept> field in the <bpt id=\"p2\">**</bpt>CustTable<ept id=\"p2\">**</ept> table.","source":"The following example prints the number of the **CashDisc** field in the **CustTable** table."},{"pos":[14322,14332],"content":"fieldPName","linkify":"fieldPName","nodes":[{"content":"fieldPName","pos":[0,10]}]},{"content":"Retrieves the label of the specified field.","pos":[14333,14376]},{"pos":[14382,14388],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[14440,14450],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[14454,14463]},{"content":"Description","pos":[14466,14477]},{"content":"tableid","pos":[14576,14583]},{"content":"The table that contains the specified field.","pos":[14588,14632]},{"content":"fieldid","pos":[14637,14644]},{"content":"The field to convert.","pos":[14649,14670]},{"pos":[14701,14713],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The label of the field.","pos":[14715,14738]},{"pos":[14744,14751],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[14753,14785]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[14786,14834],"source":" For more information, see [Overview](#overview)."},{"pos":[14840,14847],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14849,14914],"content":"The following example prints the label of the <bpt id=\"p1\">**</bpt>CashDisc<ept id=\"p1\">**</ept> field.","source":"The following example prints the label of the **CashDisc** field."},{"pos":[15253,15261],"content":"fieldStr","linkify":"fieldStr","nodes":[{"content":"fieldStr","pos":[0,8]}]},{"content":"Retrieves the field name of the specified field.","pos":[15262,15310]},{"pos":[15316,15322],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[15372,15382],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15386,15395]},{"content":"Description","pos":[15398,15409]},{"content":"tableid","pos":[15488,15495]},{"content":"The table that contains the field.","pos":[15500,15534]},{"content":"fieldid","pos":[15539,15546]},{"content":"The field to convert.","pos":[15551,15572]},{"pos":[15593,15605],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The field name of the specified field.","pos":[15607,15645]},{"pos":[15651,15658],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[15660,15692]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[15693,15741],"source":" For more information, see [Overview](#overview)."},{"pos":[15747,15754],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15756,15846],"content":"The following example assigns the name of the <bpt id=\"p1\">**</bpt>CashDisc<ept id=\"p1\">**</ept> field to the <bpt id=\"p2\">*</bpt>myText<ept id=\"p2\">*</ept> variable.","source":"The following example assigns the name of the **CashDisc** field to the *myText* variable."},{"pos":[16152,16166],"content":"formControlStr","linkify":"formControlStr","nodes":[{"content":"formControlStr","pos":[0,14]}]},{"content":"Causes the X++ compiler to check whether the control exists on the form, and to replace the function call with a string of the valid control name.","pos":[16167,16313]},{"pos":[16319,16325],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[16378,16388],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[16392,16401]},{"content":"Description","pos":[16406,16417]},{"content":"formName","pos":[16566,16574]},{"content":"The name of the form, not in quotation marks.","pos":[16580,16625]},{"content":"controlName","pos":[16653,16664]},{"content":"The name of the control that is on the form, not in quotation marks.","pos":[16667,16735]},{"pos":[16743,16755],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains the name of the control as it appears in the Application Explorer.","pos":[16757,16846]},{"pos":[16852,16859],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A compile error is issued if the compiler determines that the control does not exist on the form.","pos":[16861,16958]},{"content":"If your X++ code uses a string that contains quotation marks to supply the control name, the error cannot be discovered until run time.","pos":[16959,17094]},{"content":"Use of this function enables the compiler to discover the error earlier at compile time.","pos":[17095,17183]},{"content":"X++ functions such as <bpt id=\"p1\">**</bpt>formControlStr<ept id=\"p1\">**</ept> that are executed by the compiler are called compile-time functions or compile-time functions.","pos":[17184,17319],"source":" X++ functions such as **formControlStr** that are executed by the compiler are called compile-time functions or compile-time functions."},{"content":"That is why the input parameters are not standard strings in quotation marks.","pos":[17320,17397]},{"content":"Compile-time functions are not represented in the p-code or other executable that is output by the compiler.","pos":[17398,17506]},{"content":"This is a compile-time function.","pos":[17507,17539]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[17540,17588],"source":" For more information, see [Overview](#overview)."},{"pos":[17594,17601],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[17623,17639],"content":"formDataFieldStr","linkify":"formDataFieldStr","nodes":[{"content":"formDataFieldStr","pos":[0,16]}]},{"content":"Returns the name of a data field in a form.","pos":[17640,17683]},{"pos":[17689,17695],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[17772,17782],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[17786,17795]},{"content":"Description","pos":[17799,17810]},{"content":"formName","pos":[17890,17898]},{"content":"The name of the form.","pos":[17903,17924]},{"content":"dataSource","pos":[17942,17952]},{"content":"The data source of the form.","pos":[17955,17983]},{"content":"dataField","pos":[17994,18003]},{"content":"The data field of the data source.","pos":[18007,18041]},{"pos":[18049,18061],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of a data field in a form.","pos":[18063,18098]},{"pos":[18104,18111],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[18113,18145]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[18146,18194],"source":" For more information, see [Overview](#overview)."},{"pos":[18200,18207],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[18279,18296],"content":"formDataSourceStr","linkify":"formDataSourceStr","nodes":[{"content":"formDataSourceStr","pos":[0,17]}]},{"content":"Returns the name of a data source in a form.","pos":[18297,18341]},{"pos":[18347,18353],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[18416,18426],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[18430,18439]},{"content":"Description","pos":[18443,18454]},{"content":"formName","pos":[18522,18530]},{"content":"The name of the form.","pos":[18535,18556]},{"content":"dataSource","pos":[18568,18578]},{"content":"The data source of the form.","pos":[18581,18609]},{"pos":[18617,18629],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of a data source in a form.","pos":[18631,18667]},{"pos":[18673,18680],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[18682,18714]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[18715,18763],"source":" For more information, see [Overview](#overview)."},{"pos":[18769,18776],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[18837,18850],"content":"formMethodStr","linkify":"formMethodStr","nodes":[{"content":"formMethodStr","pos":[0,13]}]},{"content":"Returns the name of a method of a form.","pos":[18851,18890]},{"pos":[18896,18902],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[18961,18971],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[18975,18984]},{"content":"Description","pos":[18988,18999]},{"content":"formName","pos":[19057,19065]},{"content":"The name of the form.","pos":[19070,19091]},{"content":"methodName","pos":[19098,19108]},{"content":"The method of the form.","pos":[19111,19134]},{"pos":[19142,19154],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of a method in a form.","pos":[19156,19187]},{"pos":[19193,19200],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[19202,19234]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[19235,19283],"source":" For more information, see [Overview](#overview)."},{"pos":[19289,19296],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[19298,19365],"content":"The following example prints the name of the <bpt id=\"p1\">**</bpt>showDialog<ept id=\"p1\">**</ept> method.","source":"The following example prints the name of the **showDialog** method."},{"pos":[19416,19423],"content":"formStr","linkify":"formStr","nodes":[{"content":"formStr","pos":[0,7]}]},{"content":"Retrieves the name of a form.","pos":[19424,19453]},{"pos":[19459,19465],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[19498,19508],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[19512,19521]},{"content":"Description","pos":[19524,19535]},{"content":"form","pos":[19584,19588]},{"content":"The name of a form.","pos":[19596,19615]},{"pos":[19623,19635],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the name of the form.","pos":[19637,19683]},{"pos":[19689,19696],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[19698,19730]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[19731,19779],"source":" For more information, see [Overview](#overview)."},{"pos":[19785,19792],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example prints the name of the InventDim form.","pos":[19794,19854]},{"pos":[20042,20055],"content":"identifierStr","linkify":"identifierStr","nodes":[{"content":"identifierStr","pos":[0,13]}]},{"content":"Converts the specified identifier to a string.","pos":[20056,20102]},{"pos":[20108,20114],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[20154,20164],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[20168,20177]},{"content":"Description","pos":[20180,20191]},{"content":"ident","pos":[20254,20259]},{"content":"The identifier to convert.","pos":[20266,20292]},{"pos":[20300,20312],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the specified identifier.","pos":[20314,20364]},{"pos":[20370,20377],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You will receive a best practice warning if you use the <bpt id=\"p1\">**</bpt>identifierStr<ept id=\"p1\">**</ept> function.","pos":[20379,20462],"source":"You will receive a best practice warning if you use the **identifierStr** function."},{"content":"This occurs because existence checking is performed for <bpt id=\"p1\">**</bpt>identifierStr<ept id=\"p1\">**</ept>.","pos":[20463,20537],"source":" This occurs because existence checking is performed for **identifierStr**."},{"content":"Try to use a more specific compile-time function if one is available.","pos":[20538,20607]},{"content":"This is a compile-time function.","pos":[20608,20640]},{"content":"For more information, <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[20641,20685],"source":" For more information, [Overview](#overview)."},{"pos":[20691,20698],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[20700,20786],"content":"The following code example assigns the <bpt id=\"p1\">*</bpt>myvar<ept id=\"p1\">*</ept> variable name to the <bpt id=\"p2\">*</bpt>thevar<ept id=\"p2\">*</ept> variable.","source":"The following code example assigns the *myvar* variable name to the *thevar* variable."},{"pos":[21073,21081],"content":"indexNum","linkify":"indexNum","nodes":[{"content":"indexNum","pos":[0,8]}]},{"content":"Converts the specified index to a number.","pos":[21082,21123]},{"pos":[21129,21135],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[21185,21195],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[21199,21208]},{"content":"Description","pos":[21211,21222]},{"content":"tableid","pos":[21301,21308]},{"content":"The table that contains the index.","pos":[21313,21347]},{"content":"indexid","pos":[21352,21359]},{"content":"The index to convert.","pos":[21364,21385]},{"pos":[21406,21418],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The index number that represents the specified index.","pos":[21420,21473]},{"pos":[21479,21486],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[21488,21520]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[21521,21569],"source":" For more information, see [Overview](#overview)."},{"pos":[21575,21582],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example returns the index value of the Party index.","pos":[21584,21649]},{"pos":[21920,21928],"content":"indexStr","linkify":"indexStr","nodes":[{"content":"indexStr","pos":[0,8]}]},{"content":"Converts the specified index to a string.","pos":[21929,21970]},{"pos":[21976,21982],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[22032,22042],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[22046,22055]},{"content":"Description","pos":[22058,22069]},{"content":"tableid","pos":[22148,22155]},{"content":"The table that contains the index.","pos":[22160,22194]},{"content":"indexid","pos":[22199,22206]},{"content":"The index to convert.","pos":[22211,22232]},{"pos":[22253,22265],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the specified index.","pos":[22267,22312]},{"pos":[22318,22325],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[22327,22359]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[22360,22408],"source":" For more information, see [Overview](#overview)."},{"pos":[22414,22421],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[22423,22507],"content":"The following example assigns the <bpt id=\"p1\">**</bpt>CashDisc<ept id=\"p1\">**</ept> index value to the <bpt id=\"p2\">*</bpt>myText<ept id=\"p2\">*</ept> variable.","source":"The following example assigns the **CashDisc** index value to the *myText* variable."},{"pos":[22813,22827],"content":"licenseCodeNum","linkify":"licenseCodeNum","nodes":[{"content":"licenseCodeNum","pos":[0,14]}]},{"content":"Validates that the specified license code exists in the Application Explorer; if not, a compiler error occurs.","pos":[22828,22938]},{"pos":[22944,22950],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[22994,23004],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[23008,23017]},{"content":"Description","pos":[23020,23031]},{"content":"codename","pos":[23124,23132]},{"content":"The name of the license code to validate.","pos":[23136,23177]},{"pos":[23185,23197],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of the specified license code.","pos":[23199,23240]},{"pos":[23246,23253],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[23255,23287]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[23288,23336],"source":" For more information, see [Overview](#overview)."},{"pos":[23342,23349],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[23672,23686],"content":"licenseCodeStr","linkify":"licenseCodeStr","nodes":[{"content":"licenseCodeStr","pos":[0,14]}]},{"content":"Validates that the specified license code exists in the Application Explorer; if not, a compiler error occurs.","pos":[23687,23797]},{"pos":[23803,23809],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[23853,23863],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[23867,23876]},{"content":"Description","pos":[23879,23890]},{"content":"codename","pos":[23983,23991]},{"content":"The name of the license code to validate.","pos":[23995,24036]},{"pos":[24044,24056],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified license code.","pos":[24058,24097]},{"pos":[24103,24110],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[24112,24144]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[24145,24193],"source":" For more information, see [Overview](#overview)."},{"pos":[24199,24206],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[24536,24546],"content":"literalStr","linkify":"literalStr","nodes":[{"content":"literalStr","pos":[0,10]}]},{"content":"Validates that the specified string can be a literal string; if not, a compiler error occurs.","pos":[24547,24640]},{"pos":[24646,24652],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[24687,24697],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[24701,24710]},{"content":"Description","pos":[24713,24724]},{"content":"codename","pos":[24781,24789]},{"content":"The string to validate.","pos":[24793,24816]},{"pos":[24824,24836],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The literal string if valid.","pos":[24838,24866]},{"pos":[24872,24879],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[24881,24913]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[24914,24962],"source":" For more information, see [Overview](#overview)."},{"pos":[24968,24975],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[25105,25112],"content":"maxDate","linkify":"maxDate","nodes":[{"content":"maxDate","pos":[0,7]}]},{"content":"Retrieves the maximum value allowed for a variable of type date.","pos":[25113,25177]},{"pos":[25183,25189],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[25215,25227],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25229,25312],"content":"The maximum value allowed for a variable of type <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept>, which is <bpt id=\"p2\">**</bpt>2154-12-31<ept id=\"p2\">**</ept>.","source":"The maximum value allowed for a variable of type **date**, which is **2154-12-31**."},{"pos":[25318,25325],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[25327,25359]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[25360,25408],"source":" For more information, see [Overview](#overview)."},{"pos":[25414,25421],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[25592,25598],"content":"maxInt","linkify":"maxInt","nodes":[{"content":"maxInt","pos":[0,6]}]},{"pos":[25599,25672],"content":"Retrieves the maximum signed value that can be stored in an <bpt id=\"p1\">**</bpt>int<ept id=\"p1\">**</ept> type.","source":"Retrieves the maximum signed value that can be stored in an **int** type."},{"pos":[25678,25684],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[25708,25720],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The maximum value allowed value of an integer.","pos":[25722,25768]},{"pos":[25774,25781],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Any other integer will be less than or equal to the returned value.","pos":[25783,25850]},{"content":"This is a compile-time function.","pos":[25851,25883]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[25884,25932],"source":" For more information, see [Overview](#overview)."},{"pos":[25938,25945],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[26116,26130],"content":"measurementStr","linkify":"measurementStr","nodes":[{"content":"measurementStr","pos":[0,14]}]},{"content":"Returns the name of a measurement.","pos":[26131,26165]},{"pos":[26171,26177],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[26224,26234],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[26238,26247]},{"content":"Description","pos":[26252,26263]},{"content":"measurement","pos":[26332,26343]},{"content":"The name of the measurement.","pos":[26346,26374]},{"pos":[26382,26394],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the measurement.","pos":[26396,26424]},{"pos":[26430,26437],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[26439,26471]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[26472,26520],"source":" For more information, see [Overview](#overview)."},{"pos":[26526,26533],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[26555,26565],"content":"measureStr","linkify":"measureStr","nodes":[{"content":"measureStr","pos":[0,10]}]},{"content":"Returns the name of a measure.","pos":[26566,26596]},{"pos":[26602,26608],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[26647,26657],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[26661,26670]},{"content":"Description","pos":[26673,26684]},{"content":"measure","pos":[26743,26750]},{"content":"The name of the measure.","pos":[26755,26779]},{"pos":[26787,26799],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the measure.","pos":[26801,26825]},{"pos":[26831,26838],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[26840,26872]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[26873,26921],"source":" For more information, see [Overview](#overview)."},{"pos":[26927,26934],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[26956,26973],"content":"menuItemActionStr","linkify":"menuItemActionStr","nodes":[{"content":"menuItemActionStr","pos":[0,17]}]},{"content":"Validates that the specified menu item action exists in the Application Object Tree (Application Explorer); if it does not, a compiler error occurs.","pos":[26974,27122]},{"pos":[27128,27134],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[27183,27193],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[27197,27206]},{"content":"Description","pos":[27209,27220]},{"content":"codename","pos":[27321,27329]},{"content":"The name of the menu item action to validate.","pos":[27333,27378]},{"pos":[27386,27398],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the menu item action, if it is valid.","pos":[27400,27449]},{"pos":[27455,27462],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[27464,27496]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[27497,27545],"source":" For more information, see [Overview](#overview)."},{"pos":[27551,27558],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[28045,28063],"content":"menuItemDisplayStr","linkify":"menuItemDisplayStr","nodes":[{"content":"menuItemDisplayStr","pos":[0,18]}]},{"content":"Validates that the specified menu item display exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[28064,28187]},{"pos":[28193,28199],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[28249,28259],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[28263,28272]},{"content":"Description","pos":[28275,28286]},{"content":"codename","pos":[28389,28397]},{"content":"The name of the menu item display to validate.","pos":[28401,28447]},{"pos":[28455,28467],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified menu item display, if it is valid.","pos":[28469,28529]},{"pos":[28535,28542],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[28544,28576]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[28577,28625],"source":" For more information, see [Overview](#overview)."},{"pos":[28631,28638],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[29125,29142],"content":"menuItemOutputStr","linkify":"menuItemOutputStr","nodes":[{"content":"menuItemOutputStr","pos":[0,17]}]},{"content":"Validates that the specified menu item output exists in the Application Explorer; if not, a compiler error occurs.","pos":[29143,29257]},{"pos":[29263,29269],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[29318,29328],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[29332,29341]},{"content":"Description","pos":[29344,29355]},{"content":"codename","pos":[29456,29464]},{"content":"The name of the menu item output to validate.","pos":[29468,29513]},{"pos":[29521,29533],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The specified menu item output if valid.","pos":[29535,29575]},{"pos":[29581,29588],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[29590,29622]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[29623,29671],"source":" For more information, see [Overview](#overview)."},{"pos":[29677,29684],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[30171,30178],"content":"menuStr","linkify":"menuStr","nodes":[{"content":"menuStr","pos":[0,7]}]},{"content":"Validates that the specified menu exists in the Application Explorer; if not, a compiler error occurs.","pos":[30179,30281]},{"pos":[30287,30293],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[30328,30338],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[30342,30351]},{"content":"Description","pos":[30354,30365]},{"content":"menu","pos":[30442,30446]},{"content":"The name of the menu to validate.","pos":[30454,30487]},{"pos":[30495,30507],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified menu item if valid.","pos":[30509,30554]},{"pos":[30560,30567],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[30569,30601]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[30602,30650],"source":" For more information, see [Overview](#overview)."},{"pos":[30656,30663],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[31150,31159],"content":"methodStr","linkify":"methodStr","nodes":[{"content":"methodStr","pos":[0,9]}]},{"content":"Validates that the specified method exists in the specified class; if it does not, a compiler error occurs.","pos":[31160,31267]},{"pos":[31273,31279],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[31329,31339],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[31343,31352]},{"content":"Description","pos":[31355,31366]},{"content":"class","pos":[31447,31452]},{"content":"The name of the class.","pos":[31459,31481]},{"content":"method","pos":[31499,31505]},{"content":"The name of the method to validate.","pos":[31511,31546]},{"pos":[31554,31566],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified method, if it is valid.","pos":[31568,31617]},{"pos":[31623,31630],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[31632,31664]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[31665,31713],"source":" For more information, see [Overview](#overview)."},{"pos":[31719,31726],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[31934,31940],"content":"minInt","linkify":"minInt","nodes":[{"content":"minInt","pos":[0,6]}]},{"pos":[31941,32014],"content":"Retrieves the minimum signed value that can be stored in an <bpt id=\"p1\">**</bpt>int<ept id=\"p1\">**</ept> type.","source":"Retrieves the minimum signed value that can be stored in an **int** type."},{"pos":[32020,32026],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[32050,32062],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32064,32101],"content":"The minimum value of an <bpt id=\"p1\">**</bpt>int<ept id=\"p1\">**</ept> type.","source":"The minimum value of an **int** type."},{"pos":[32107,32114],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Any other integer value will be greater than or equal to the returned value.","pos":[32116,32192]},{"content":"This is a compile-time function.","pos":[32193,32225]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[32226,32274],"source":" For more information, see [Overview](#overview)."},{"pos":[32280,32287],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[32455,32467],"content":"privilegeStr","linkify":"privilegeStr","nodes":[{"content":"privilegeStr","pos":[0,12]}]},{"content":"Returns the name of the privilege.","pos":[32468,32502]},{"pos":[32508,32514],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[32557,32567],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[32571,32580]},{"content":"Description","pos":[32583,32594]},{"content":"privilege","pos":[32691,32700]},{"content":"The privilege for which to return the name.","pos":[32703,32746]},{"pos":[32754,32766],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the privilege.","pos":[32768,32794]},{"pos":[32800,32807],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[32809,32841]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[32842,32890],"source":" For more information, see [Overview](#overview)."},{"pos":[32896,32903],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[32925,32943],"content":"queryDatasourceStr","linkify":"queryDatasourceStr","nodes":[{"content":"queryDatasourceStr","pos":[0,18]}]},{"content":"Causes the X++ compiler to check whether the data source exists on the query, and to replace the function call with a string of the valid data source name.","pos":[32944,33099]},{"pos":[33105,33111],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[33172,33182],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[33186,33195]},{"content":"Description","pos":[33203,33214]},{"content":"queryName","pos":[33376,33385]},{"content":"The name of the query, not in quotation marks.","pos":[33393,33439]},{"content":"dataSourceName","pos":[33471,33485]},{"content":"The name of the data source that is on the query, not in quotation marks.","pos":[33488,33561]},{"pos":[33569,33581],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains the name of the data source as it appears in the Application Explorer.","pos":[33583,33676]},{"pos":[33682,33689],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A compile error is issued if the compiler determines that the data source does not exist on the query.","pos":[33691,33793]},{"content":"If your X++ code uses a string that contains quotation marks to supply the data source name, the error cannot be discovered until run time.","pos":[33794,33933]},{"content":"Use of this function enables the compiler to discover the error earlier at compile time.","pos":[33934,34022]},{"content":"X++ functions such as <bpt id=\"p1\">**</bpt>queryDataSourceStr<ept id=\"p1\">**</ept> that are executed by the compiler are referred to as compile-time functions or compile-time functions.","pos":[34023,34170],"source":" X++ functions such as **queryDataSourceStr** that are executed by the compiler are referred to as compile-time functions or compile-time functions."},{"content":"That is why the input parameters are not standard strings in quotation marks.","pos":[34171,34248]},{"content":"Compile-time functions are not represented in the p-code or other executable that is output by the compiler.","pos":[34249,34357]},{"content":"This is a compile-time function.","pos":[34358,34390]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[34391,34439],"source":" For more information, see [Overview](#overview)."},{"pos":[34445,34452],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[34474,34488],"content":"queryMethodStr","linkify":"queryMethodStr","nodes":[{"content":"queryMethodStr","pos":[0,14]}]},{"content":"Returns the name of a method of a query.","pos":[34489,34529]},{"pos":[34535,34541],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[34602,34612],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[34616,34625]},{"content":"Description","pos":[34629,34640]},{"content":"queryName","pos":[34698,34707]},{"content":"The name of the query.","pos":[34711,34733]},{"content":"methodName","pos":[34739,34749]},{"content":"The method of the form.","pos":[34752,34775]},{"pos":[34783,34795],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of a method in a query.","pos":[34797,34829]},{"pos":[34835,34842],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[34844,34876]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[34877,34925],"source":" For more information, see [Overview](#overview)."},{"pos":[34931,34938],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[34960,34968],"content":"queryStr","linkify":"queryStr","nodes":[{"content":"queryStr","pos":[0,8]}]},{"content":"Retrieves a string that represents an existing query.","pos":[34969,35022]},{"pos":[35028,35034],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[35069,35079],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[35083,35092]},{"content":"Description","pos":[35095,35106]},{"content":"query","pos":[35161,35166]},{"content":"The query to retrieve.","pos":[35173,35195]},{"pos":[35203,35215],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the query.","pos":[35217,35239]},{"pos":[35245,35252],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[35254,35286]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[35287,35335],"source":" For more information, see [Overview](#overview)."},{"pos":[35341,35348],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[35658,35667],"content":"reportStr","linkify":"reportStr","nodes":[{"content":"reportStr","pos":[0,9]}]},{"content":"Retrieves a string that represents the name of the specified report.","pos":[35668,35736]},{"pos":[35742,35748],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[35785,35795],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[35799,35808]},{"content":"Description","pos":[35811,35822]},{"content":"report","pos":[35913,35919]},{"content":"The report for which to return the name.","pos":[35925,35965]},{"pos":[35973,35985],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the report.","pos":[35987,36010]},{"pos":[36016,36023],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[36025,36057]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[36058,36106],"source":" For more information, see [Overview](#overview)."},{"pos":[36112,36119],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[36121,36216],"content":"The following example assigns the name of the <bpt id=\"p1\">**</bpt>AssetAddition<ept id=\"p1\">**</ept> report to the <bpt id=\"p2\">*</bpt>MyTxt<ept id=\"p2\">*</ept> variable.","source":"The following example assigns the name of the **AssetAddition** report to the *MyTxt* variable."},{"pos":[36528,36539],"content":"resourceStr","linkify":"resourceStr","nodes":[{"content":"resourceStr","pos":[0,11]}]},{"content":"Validates that the specified resource exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[36540,36654]},{"pos":[36660,36666],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[36711,36721],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[36725,36734]},{"content":"Description","pos":[36740,36751]},{"content":"resourcename","pos":[36839,36851]},{"content":"The name of the resource to validate.","pos":[36854,36891]},{"pos":[36899,36911],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified resource, if it is valid.","pos":[36913,36964]},{"pos":[36970,36977],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[36979,37011]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[37012,37060],"source":" For more information, see [Overview](#overview)."},{"pos":[37066,37073],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[37218,37225],"content":"roleStr","linkify":"roleStr","nodes":[{"content":"roleStr","pos":[0,7]}]},{"content":"Retrieves a string that represents the name of the specified security role.","pos":[37226,37301]},{"pos":[37307,37313],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[37354,37364],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[37368,37377]},{"content":"Description","pos":[37383,37394]},{"content":"securityRole","pos":[37468,37480]},{"content":"The name of the security role.","pos":[37483,37513]},{"pos":[37521,37533],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the security role in a string.","pos":[37535,37577]},{"pos":[37583,37590],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[37592,37624]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[37625,37673],"source":" For more information, see [Overview](#overview)."},{"pos":[37679,37686],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[37708,37721],"content":"ssrsReportStr","linkify":"ssrsReportStr","nodes":[{"content":"ssrsReportStr","pos":[0,13]}]},{"content":"Retrieves a string that represents the name of the specified report.","pos":[37722,37790]},{"content":"Use this function when you want to specify the report that should be run by a report controller class.","pos":[37791,37893]},{"pos":[37899,37905],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[37958,37968],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[37972,37981]},{"content":"Description","pos":[37984,37995]},{"content":"report","pos":[38122,38128]},{"content":"The report to return the name for.","pos":[38134,38168]},{"content":"design","pos":[38197,38203]},{"content":"The name of the design that is associated with the report.","pos":[38209,38267]},{"pos":[38275,38287],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the report.","pos":[38289,38312]},{"pos":[38318,38325],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <bpt id=\"p1\">**</bpt>ssrsReportStr<ept id=\"p1\">**</ept> function parses the two values that are passed to it, to validate whether they belong to a valid report.","pos":[38327,38453],"source":"The **ssrsReportStr** function parses the two values that are passed to it, to validate whether they belong to a valid report."},{"content":"The report name must be set when a menu item points to a controller(), so that the controller can determine which report-design combination must be invoked.","pos":[38454,38610]},{"content":"Use of the <bpt id=\"p1\">**</bpt>ssrsReportStr<ept id=\"p1\">**</ept> function provides the benefit of compile-time validation for the report and design name.","pos":[38611,38728],"source":" Use of the **ssrsReportStr** function provides the benefit of compile-time validation for the report and design name."},{"content":"This is a compile-time function.","pos":[38729,38761]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[38762,38810],"source":" For more information, see [Overview](#overview)."},{"pos":[38816,38823],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[39404,39421],"content":"staticDelegateStr","linkify":"staticDelegateStr","nodes":[{"content":"staticDelegateStr","pos":[0,17]}]},{"content":"Returns the name of a static delegate.","pos":[39422,39460]},{"pos":[39466,39472],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[39530,39540],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[39544,39553]},{"content":"Description","pos":[39556,39567]},{"content":"class","pos":[39650,39655]},{"content":"The name of a class, table, or form.","pos":[39662,39698]},{"content":"delegate","pos":[39703,39711]},{"content":"The name of the delegate.","pos":[39715,39740]},{"pos":[39759,39771],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the delegate.","pos":[39773,39798]},{"pos":[39804,39811],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[39813,39845]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[39846,39894],"source":" For more information, see [Overview](#overview)."},{"pos":[39900,39907],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[39929,39944],"content":"staticMethodStr","linkify":"staticMethodStr","nodes":[{"content":"staticMethodStr","pos":[0,15]}]},{"content":"Validates that the specified static method exists in the specified class; if it does not, a compiler error occurs.","pos":[39945,40059]},{"pos":[40065,40071],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[40127,40137],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[40141,40150]},{"content":"Description","pos":[40153,40164]},{"content":"class","pos":[40259,40264]},{"content":"The name of the class.","pos":[40271,40293]},{"content":"method","pos":[40318,40324]},{"content":"The name of the static method to validate.","pos":[40330,40372]},{"pos":[40380,40392],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the static method, if it is valid.","pos":[40394,40440]},{"pos":[40446,40453],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[40455,40487]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[40488,40536],"source":" For more information, see [Overview](#overview)."},{"pos":[40542,40549],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[40571,40589],"content":"tableCollectionStr","linkify":"tableCollectionStr","nodes":[{"content":"tableCollectionStr","pos":[0,18]}]},{"content":"Validates that the specified table collection exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[40590,40712]},{"pos":[40718,40724],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[40781,40791],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[40795,40804]},{"content":"Description","pos":[40813,40824]},{"content":"tablecollection","pos":[40931,40946]},{"content":"The name of the table collection to validate.","pos":[40949,40994]},{"pos":[41002,41014],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified table collection, if it is valid.","pos":[41016,41075]},{"pos":[41081,41088],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[41090,41122]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[41123,41171],"source":" For more information, see [Overview](#overview)."},{"pos":[41177,41184],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[41206,41224],"content":"tableFieldGroupStr","linkify":"tableFieldGroupStr","nodes":[{"content":"tableFieldGroupStr","pos":[0,18]}]},{"content":"Retrieves the name of a field group as a string.","pos":[41225,41273]},{"pos":[41279,41285],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[41354,41364],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[41368,41377]},{"content":"Description","pos":[41385,41396]},{"content":"tableName","pos":[41492,41501]},{"content":"The table that contains the field group.","pos":[41509,41549]},{"content":"fieldGroupName","pos":[41554,41568]},{"content":"The field group in the table.","pos":[41571,41600]},{"pos":[41619,41631],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the field group as a string.","pos":[41633,41673]},{"pos":[41679,41686],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[41688,41720]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[41721,41769],"source":" For more information, see [Overview](#overview)."},{"pos":[41775,41782],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[41784,41868],"content":"The following example retrieves the name of the <bpt id=\"p1\">**</bpt>Editing<ept id=\"p1\">**</ept> field group as a string.","source":"The following example retrieves the name of the **Editing** field group as a string."},{"pos":[42098,42112],"content":"tableMethodStr","linkify":"tableMethodStr","nodes":[{"content":"tableMethodStr","pos":[0,14]}]},{"content":"Validates that the specified method exists in the specified table; if it does not, a compiler error occurs.","pos":[42113,42220]},{"pos":[42226,42232],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[42285,42295],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[42299,42308]},{"content":"Description","pos":[42311,42322]},{"content":"table","pos":[42403,42408]},{"content":"The name of the table.","pos":[42415,42437]},{"content":"method","pos":[42455,42461]},{"content":"The name of the method to validate.","pos":[42467,42502]},{"pos":[42510,42522],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the method, if it is valid.","pos":[42524,42563]},{"pos":[42569,42576],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[42578,42610]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[42611,42659],"source":" For more information, see [Overview](#overview)."},{"pos":[42665,42672],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[42694,42702],"content":"tableNum","linkify":"tableNum","nodes":[{"content":"tableNum","pos":[0,8]}]},{"content":"Retrieves the table ID of the specified table.","pos":[42703,42749]},{"pos":[42755,42761],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[42796,42806],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[42810,42819]},{"content":"Description","pos":[42822,42833]},{"content":"table","pos":[42922,42927]},{"content":"The table to retrieve the table ID for.","pos":[42934,42973]},{"pos":[42981,42993],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The table ID of the specified table.","pos":[42995,43031]},{"pos":[43037,43044],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[43046,43078]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[43079,43127],"source":" For more information, see [Overview](#overview)."},{"pos":[43133,43140],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[43142,43248],"content":"The following example sets the <bpt id=\"p1\">**</bpt>tableID<ept id=\"p1\">**</ept> variable to 77, which is the <bpt id=\"p2\">**</bpt>ID<ept id=\"p2\">**</ept> of the <bpt id=\"p3\">**</bpt>CustTable<ept id=\"p3\">**</ept> table.","source":"The following example sets the **tableID** variable to 77, which is the **ID** of the **CustTable** table."},{"pos":[43585,43595],"content":"tablePName","linkify":"tablePName","nodes":[{"content":"tablePName","pos":[0,10]}]},{"content":"Retrieves a string that contains the printable name of the specified table.","pos":[43596,43671]},{"pos":[43677,43683],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[43720,43730],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[43734,43743]},{"content":"Description","pos":[43746,43757]},{"content":"table","pos":[43858,43863]},{"content":"The table to retrieve the printable name for.","pos":[43870,43915]},{"pos":[43923,43935],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified table.","pos":[43937,43969]},{"pos":[43975,43982],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[43984,44016]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[44017,44065],"source":" For more information, see [Overview](#overview)."},{"pos":[44071,44078],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[44080,44172],"content":"The following example assigns the label of the <bpt id=\"p1\">**</bpt>CustTable<ept id=\"p1\">**</ept> table to the <bpt id=\"p2\">*</bpt>MyText<ept id=\"p2\">*</ept> variable.","source":"The following example assigns the label of the **CustTable** table to the *MyText* variable."},{"pos":[44502,44522],"content":"tableStaticMethodStr","linkify":"tableStaticMethodStr","nodes":[{"content":"tableStaticMethodStr","pos":[0,20]}]},{"content":"Validates that the specified static method exists in the specified table; if it does not, a compiler error occurs.","pos":[44523,44637]},{"pos":[44643,44649],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[44708,44718],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[44722,44731]},{"content":"Description","pos":[44734,44745]},{"content":"table","pos":[44840,44845]},{"content":"The name of the table.","pos":[44852,44874]},{"content":"method","pos":[44899,44905]},{"content":"The name of the static method to validate.","pos":[44911,44953]},{"pos":[44961,44973],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified static method.","pos":[44975,45015]},{"pos":[45021,45028],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[45030,45062]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[45063,45111],"source":" For more information, see [Overview](#overview)."},{"pos":[45117,45124],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[45146,45154],"content":"tableStr","linkify":"tableStr","nodes":[{"content":"tableStr","pos":[0,8]}]},{"content":"Retrieves a string that contains the name the specified table.","pos":[45155,45217]},{"pos":[45223,45229],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[45264,45274],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[45278,45287]},{"content":"Description","pos":[45290,45301]},{"content":"table","pos":[45382,45387]},{"content":"The table to retrieve a string for.","pos":[45394,45429]},{"pos":[45437,45449],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string value that contains the name of the specified table.","pos":[45451,45512]},{"pos":[45518,45525],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[45527,45559]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[45560,45608],"source":" For more information, see [Overview](#overview)."},{"pos":[45614,45621],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[45623,45713],"content":"The following example assigns the name of the <bpt id=\"p1\">**</bpt>CustTable<ept id=\"p1\">**</ept> table to the <bpt id=\"p2\">*</bpt>MyTxt<ept id=\"p2\">*</ept> variable.","source":"The following example assigns the name of the **CustTable** table to the *MyTxt* variable."},{"pos":[46061,46068],"content":"tileStr","linkify":"tileStr","nodes":[{"content":"tileStr","pos":[0,7]}]},{"content":"Retrieves a string that represents the name of the specified tile.","pos":[46069,46135]},{"pos":[46141,46147],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[46180,46190],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[46194,46203]},{"content":"Description","pos":[46206,46217]},{"content":"tile","pos":[46270,46274]},{"content":"The name of the tile.","pos":[46282,46303]},{"pos":[46311,46323],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the tile in a string.","pos":[46325,46358]},{"pos":[46364,46371],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[46373,46405]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[46406,46454],"source":" For more information, see [Overview](#overview)."},{"pos":[46460,46467],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[46489,46495],"content":"varStr","linkify":"varStr","nodes":[{"content":"varStr","pos":[0,6]}]},{"content":"Retrieves a string that contains the name of the specified variable.","pos":[46496,46564]},{"pos":[46570,46576],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[46607,46617],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[46621,46630]},{"content":"Description","pos":[46633,46644]},{"content":"var","pos":[46705,46708]},{"content":"The name of the variable.","pos":[46717,46742]},{"pos":[46750,46762],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that contains the name of the specified variable.","pos":[46764,46822]},{"pos":[46828,46835],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[46837,46869]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[46870,46918],"source":" For more information, see [Overview](#overview)."},{"pos":[46924,46931],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[47265,47281],"content":"webActionItemStr","linkify":"webActionItemStr","nodes":[{"content":"webActionItemStr","pos":[0,16]}]},{"content":"Validates that the specified web action item exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[47282,47403]},{"pos":[47409,47415],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[47468,47478],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[47482,47491]},{"content":"Description","pos":[47498,47509]},{"content":"webactionitem","pos":[47612,47625]},{"content":"The name of the web action item to validate.","pos":[47628,47672]},{"pos":[47680,47692],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web action item, if it is valid.","pos":[47694,47752]},{"pos":[47758,47765],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[47767,47799]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[47800,47848],"source":" For more information, see [Overview](#overview)."},{"pos":[47854,47861],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[48005,48029],"content":"webDisplayContentItemStr","linkify":"webDisplayContentItemStr","nodes":[{"content":"webDisplayContentItemStr","pos":[0,24]}]},{"content":"Validates that the specified web display content item exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[48030,48160]},{"pos":[48166,48172],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[48241,48251],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[48255,48264]},{"content":"Description","pos":[48279,48290]},{"content":"webdisplaycontentitem","pos":[48419,48440]},{"content":"The name of the web display content item to validate.","pos":[48443,48496]},{"pos":[48504,48516],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web display content item, if it is valid.","pos":[48518,48585]},{"pos":[48591,48598],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[48600,48632]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[48633,48681],"source":" For more information, see [Overview](#overview)."},{"pos":[48687,48694],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[48868,48878],"content":"webFormStr","linkify":"webFormStr","nodes":[{"content":"webFormStr","pos":[0,10]}]},{"content":"Validates that the specified web form exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[48879,48993]},{"pos":[48999,49005],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[49041,49051],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[49055,49064]},{"content":"Description","pos":[49067,49078]},{"content":"name","pos":[49163,49167]},{"content":"The name of the web form to validate.","pos":[49175,49212]},{"pos":[49220,49232],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web form, if it is valid.","pos":[49234,49285]},{"pos":[49291,49298],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[49300,49332]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[49333,49381],"source":" For more information, see [Overview](#overview)."},{"pos":[49387,49394],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[49538,49551],"content":"webletItemStr","linkify":"webletItemStr","nodes":[{"content":"webletItemStr","pos":[0,13]}]},{"content":"Validates that the specified weblet item exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[49552,49669]},{"pos":[49675,49681],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[49728,49738],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[49742,49751]},{"content":"Description","pos":[49755,49766]},{"content":"webletitem","pos":[49858,49868]},{"content":"The name of the weblet item to validate.","pos":[49871,49911]},{"pos":[49919,49931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified weblet item, if it is valid.","pos":[49933,49987]},{"pos":[49993,50000],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[50002,50034]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[50035,50083],"source":" For more information, see [Overview](#overview)."},{"pos":[50089,50096],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[50246,50256],"content":"webMenuStr","linkify":"webMenuStr","nodes":[{"content":"webMenuStr","pos":[0,10]}]},{"content":"Validates that the specified web menu exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[50257,50371]},{"pos":[50377,50383],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[50419,50429],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[50433,50442]},{"content":"Description","pos":[50445,50456]},{"content":"name","pos":[50541,50545]},{"content":"The name of the web menu to validate.","pos":[50553,50590]},{"pos":[50598,50610],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web menu, if it is valid.","pos":[50612,50663]},{"pos":[50669,50676],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[50678,50710]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[50711,50759],"source":" For more information, see [Overview](#overview)."},{"pos":[50765,50772],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[50918,50941],"content":"webOutputContentItemStr","linkify":"webOutputContentItemStr","nodes":[{"content":"webOutputContentItemStr","pos":[0,23]}]},{"content":"Validates that the specified web output content item exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[50942,51071]},{"pos":[51077,51083],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[51150,51160],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[51164,51173]},{"content":"Description","pos":[51187,51198]},{"content":"weboutputcontentitem","pos":[51324,51344]},{"content":"The name of the web output content item to validate.","pos":[51347,51399]},{"pos":[51407,51419],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web output content item, if it is valid.","pos":[51421,51487]},{"pos":[51493,51500],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[51502,51534]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[51535,51583],"source":" For more information, see [Overview](#overview)."},{"pos":[51589,51596],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[51775,51788],"content":"webpageDefStr","linkify":"webpageDefStr","nodes":[{"content":"webpageDefStr","pos":[0,13]}]},{"content":"Validates that the specified Web page defintion exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[51789,51913]},{"pos":[51919,51925],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[51968,51978],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[51982,51991]},{"content":"Description","pos":[51994,52005]},{"content":"pagename","pos":[52112,52120]},{"content":"The name of the Web page definition to validate.","pos":[52124,52172]},{"pos":[52180,52192],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web-page definition, if it is valid.","pos":[52194,52256]},{"pos":[52262,52269],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[52271,52303]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[52304,52352],"source":" For more information, see [Overview](#overview)."},{"pos":[52358,52365],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[52387,52399],"content":"webReportStr","linkify":"webReportStr","nodes":[{"content":"webReportStr","pos":[0,12]}]},{"content":"Validates that the specified web report exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[52400,52516]},{"pos":[52522,52528],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[52566,52576],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[52580,52589]},{"content":"Description","pos":[52592,52603]},{"content":"name","pos":[52692,52696]},{"content":"The name of the web report to validate.","pos":[52704,52743]},{"pos":[52751,52763],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web report, if it is valid.","pos":[52765,52818]},{"pos":[52824,52831],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[52833,52865]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[52866,52914],"source":" For more information, see [Overview](#overview)."},{"pos":[52920,52927],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[53094,53107],"content":"websiteDefStr","linkify":"websiteDefStr","nodes":[{"content":"websiteDefStr","pos":[0,13]}]},{"content":"Validates that the specified web-site definition exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[53108,53233]},{"pos":[53239,53245],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[53292,53302],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[53306,53315]},{"content":"Description","pos":[53321,53332]},{"content":"resourcename","pos":[53442,53454]},{"content":"The name of the Web site definition to validate.","pos":[53457,53505]},{"pos":[53513,53525],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web-site definition, if it is valid.","pos":[53527,53589]},{"pos":[53595,53602],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[53604,53636]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[53637,53685],"source":" For more information, see [Overview](#overview)."},{"pos":[53691,53698],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[53884,53898],"content":"webSiteTempStr","linkify":"webSiteTempStr","nodes":[{"content":"webSiteTempStr","pos":[0,14]}]},{"content":"Validates that the specified web-site template exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[53899,54022]},{"pos":[54028,54034],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[54082,54092],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[54096,54105]},{"content":"Description","pos":[54111,54122]},{"content":"resourcename","pos":[54228,54240]},{"content":"The name of the Web site template to validate.","pos":[54243,54289]},{"pos":[54297,54309],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web-site template, if it is valid.","pos":[54311,54371]},{"pos":[54377,54384],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[54386,54418]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[54419,54467],"source":" For more information, see [Overview](#overview)."},{"pos":[54473,54480],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[54502,54518],"content":"webStaticFileStr","linkify":"webStaticFileStr","nodes":[{"content":"webStaticFileStr","pos":[0,16]}]},{"content":"Validates that the specified web static file exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[54519,54640]},{"pos":[54646,54652],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[54698,54708],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[54712,54721]},{"content":"Description","pos":[54724,54735]},{"content":"pagename","pos":[54834,54842]},{"content":"The name of the web static file to validate.","pos":[54846,54890]},{"pos":[54898,54910],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web static file, if it is valid.","pos":[54912,54970]},{"pos":[54976,54983],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[54985,55017]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[55018,55066],"source":" For more information, see [Overview](#overview)."},{"pos":[55072,55079],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[55236,55249],"content":"webUrlItemStr","linkify":"webUrlItemStr","nodes":[{"content":"webUrlItemStr","pos":[0,13]}]},{"content":"Validates that the specified web URL item exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[55250,55368]},{"pos":[55374,55380],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[55427,55437],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[55441,55450]},{"content":"Description","pos":[55454,55465]},{"content":"weburlitem","pos":[55559,55569]},{"content":"The name of the web URL item to validate.","pos":[55572,55613]},{"pos":[55621,55633],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web URL item, if it is valid.","pos":[55635,55690]},{"pos":[55696,55703],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[55705,55737]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[55738,55786],"source":" For more information, see [Overview](#overview)."},{"pos":[55792,55799],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[55956,55969],"content":"webWebPartStr","linkify":"webWebPartStr","nodes":[{"content":"webWebPartStr","pos":[0,13]}]},{"content":"Validates that the specified web part exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[55970,56084]},{"pos":[56090,56096],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[56143,56153],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[56157,56166]},{"content":"Description","pos":[56172,56183]},{"content":"resourcename","pos":[56271,56283]},{"content":"The name of the web part to validate.","pos":[56286,56323]},{"pos":[56331,56343],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the specified web part, if it is valid.","pos":[56345,56396]},{"pos":[56402,56409],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[56411,56443]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[56444,56492],"source":" For more information, see [Overview](#overview)."},{"pos":[56498,56505],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[56672,56691],"content":"workflowApprovalStr","linkify":"workflowApprovalStr","nodes":[{"content":"workflowApprovalStr","pos":[0,19]}]},{"content":"Retrieves the name of a workflow approval in the Application Object Tree (Application Explorer) as a string.","pos":[56692,56800]},{"pos":[56806,56812],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[56866,56876],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[56880,56889]},{"content":"Description","pos":[56892,56903]},{"content":"approval","pos":[57024,57032]},{"content":"The Application Explorer name of the workflow approval.","pos":[57036,57091]},{"pos":[57099,57111],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the Application Explorer name of the workflow approval.","pos":[57113,57193]},{"pos":[57199,57206],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function instead of literal text to retrieve a string that contains the workflow approval name.","pos":[57208,57312]},{"content":"If the workflow approval does not exist, the function generates a syntax error at compile time.","pos":[57313,57408]},{"content":"This is a compile-time function.","pos":[57409,57441]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[57442,57490],"source":" For more information, see [Overview](#overview)."},{"pos":[57496,57503],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[57505,57655],"content":"The following code example sets the variable <bpt id=\"p1\">*</bpt>str s<ept id=\"p1\">*</ept> to <bpt id=\"p2\">**</bpt>MyWorkflowApproval<ept id=\"p2\">**</ept> which is the name of the workflow approval in the Application Explorer.","source":"The following code example sets the variable *str s* to **MyWorkflowApproval** which is the name of the workflow approval in the Application Explorer."},{"pos":[57840,57859],"content":"workflowCategoryStr","linkify":"workflowCategoryStr","nodes":[{"content":"workflowCategoryStr","pos":[0,19]}]},{"content":"Retrieves the name of a workflow category in the Application Object Tree (Application Explorer) as a string.","pos":[57860,57968]},{"pos":[57974,57980],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[58034,58044],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[58048,58057]},{"content":"Description","pos":[58060,58071]},{"content":"category","pos":[58192,58200]},{"content":"The Application Explorer name of the workflow category.","pos":[58204,58259]},{"pos":[58267,58279],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the Application Explorer name of the workflow category.","pos":[58281,58361]},{"pos":[58367,58374],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function instead of literal text to retrieve a string that contains the workflow category name.","pos":[58376,58480]},{"content":"If the workflow category does not exist, the function generates a syntax error at compile time.","pos":[58481,58576]},{"content":"This is a compile-time function.","pos":[58577,58609]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[58610,58658],"source":" For more information, see [Overview](#overview)."},{"pos":[58664,58671],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[58673,58823],"content":"The following code example sets the variable <bpt id=\"p1\">*</bpt>str s<ept id=\"p1\">*</ept> to <bpt id=\"p2\">**</bpt>MyWorkflowCategory<ept id=\"p2\">**</ept> which is the name of the workflow category in the Application Explorer.","source":"The following code example sets the variable *str s* to **MyWorkflowCategory** which is the name of the workflow category in the Application Explorer."},{"pos":[59008,59023],"content":"workflowTaskStr","linkify":"workflowTaskStr","nodes":[{"content":"workflowTaskStr","pos":[0,15]}]},{"content":"Retrieves the name of a workflow task in the Application Object Tree (Application Explorer) as a string.","pos":[59024,59128]},{"pos":[59134,59140],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[59182,59192],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[59196,59205]},{"content":"Description","pos":[59208,59219]},{"content":"task","pos":[59332,59336]},{"content":"The Application Explorer name of the workflow task.","pos":[59344,59395]},{"pos":[59403,59415],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A string that represents the Application Explorer name of the workflow task.","pos":[59417,59493]},{"pos":[59499,59506],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function instead of literal text to retrieve a string that contains the workflow task name.","pos":[59508,59608]},{"content":"If the workflow task does not exist, the function generates a syntax error at compile time.","pos":[59609,59700]},{"content":"This is a compile-time function.","pos":[59701,59733]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[59734,59782],"source":" For more information, see [Overview](#overview)."},{"pos":[59788,59795],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[59797,59939],"content":"The following code example sets the variable <bpt id=\"p1\">*</bpt>str s<ept id=\"p1\">*</ept> to <bpt id=\"p2\">**</bpt>MyWorkflowTask<ept id=\"p2\">**</ept> which is the name of the workflow task in the Application Explorer.","source":"The following code example sets the variable *str s* to **MyWorkflowTask** which is the name of the workflow task in the Application Explorer."},{"pos":[60112,60127],"content":"workflowTypeStr","linkify":"workflowTypeStr","nodes":[{"content":"workflowTypeStr","pos":[0,15]}]},{"content":"Validates that the specified workflow type exists in the Application Explorer; if it does not, a compiler error occurs.","pos":[60128,60247]},{"pos":[60253,60259],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[60304,60314],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[60318,60327]},{"content":"Description","pos":[60330,60341]},{"content":"workflow","pos":[60436,60444]},{"content":"The name of the workflow type to validate.","pos":[60448,60490]},{"pos":[60498,60510],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the workflow type.","pos":[60512,60542]},{"pos":[60548,60555],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a compile-time function.","pos":[60557,60589]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview<ept id=\"p1\">](#overview)</ept>.","pos":[60590,60638],"source":" For more information, see [Overview](#overview)."},{"pos":[60644,60651],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]}],"content":"---\n# required metadata\n\ntitle: X++ compile-time functions\ndescription: This topic lists the compile-time functions and describes their syntax, parameters, and return values.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 04/04/2017\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \n# ms.reviewer: 2051\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 29581\nms.assetid: fa6613a4-7d0b-40d3-be29-9d14c22c7d5b\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# X++ compile-time functions\n\nThis topic lists the compile-time functions and describes their syntax, parameters, and return values.\n\nOverview\n--------\n\nCompile-time functions are executed early during compilation of X++ code. They should be used wherever possible in X++ code to make the code resilient to changes to the metadata stored in the Application Explorer. Compile-time functions have their input value verified by the compiler. If the input value is not found to match any existing object in the Application Explorer, the compiler issues an error. The inputs to these functions must be literals, because the compiler cannot determine the value that a variable contains at run time. A compile-time function is a metadata assertion function. It takes arguments that represents an entity in the Application Explorer and validates the arguments at compile time. It has no effect at run time. Attributes are classes that inherit from the **SysAttribute** class. To support the validation of form, report, query, and menu metadata, use the **AutoDeclaration** property on controls. Most of these functions retrieve metadata about items that are in the Application Explorer. Some common compile time functions are as follows:\n\n-   `classNum` – Retrieves the ID of a class.\n-   `classStr` – During compile time, verifies that a class of that name exists. This approach is better than discovering the error later during run time.\n-   `evalBuf`– Evaluates the input string of X++ code, and then returns the results as a string.\n-   `literalStr` – retrieves a label ID when given the string representation of a label, such as the string `\"@SYS12345\"`. For example, `myLabel.exists(literalStr(\"@SYS12345\"));`.\n\n| **Note**                                                         |\n|------------------------------------------------------------------|\n| X++ compile time functions cannot be called from a .NET program. |\n\n### Functions\n\n## attributeStr\nValidates that the specified attribute class exists in the Application Explorer; if not, a compiler error occurs.\n\n### Syntax\n\n    str classStr(class class)\n\n### Parameters\n\n| Parameter | Description                            |\n|-----------|----------------------------------------|\n| class     | The name of the attribute to validate. |\n\n### Return Value\n\nThe name of the attribute.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void attributeStrExample(Args _args)\n    {\n        str s;\n        ;\n        s = attributeStr(AifDocumentOperationAttribute);\n        print s;\n        pause;\n    }\n\n## classNum\nRetrieves the ID of the specified class.\n\n### Syntax\n\n    int classNum(class class)\n\n### Parameters\n\n| Parameter | Description                             |\n|-----------|-----------------------------------------|\n| class     | The class for which to retrieve the ID. |\n\n### Return Value\n\nThe ID of the specified class.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void classNumExample(Args _args)\n    {\n        int i;\n        ;\n        i = classNum(Global);\n        print i;\n        pause;\n    }\n\n## classStr\nRetrieves the name of a class as a string.\n\n### Syntax\n\n    str classStr(class class)\n\n### Parameters\n\n| Parameter | Description                      |\n|-----------|----------------------------------|\n| class     | The name of the class to return. |\n\n### Return Value\n\nThe name of the class.\n\n### Remarks\n\nUse this function instead of literal text to retrieve a string that contains the class name. If the class does not exist, the function generates a syntax error at compile time. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void clStrExample(Args _args)\n    {\n        str s;\n        ;\n        s = classStr(Global);\n        print s;\n        pause;\n    }\n\n## configurationKeyNum\nRetrieves the ID of the specified configuration key.\n\n### Syntax\n\n    int configurationKeyNum(str keyname)\n\n### Parameters\n\n| Parameter | Description                                       |\n|-----------|---------------------------------------------------|\n| keyname   | The configuration key for which to return the ID. |\n\n### Return Value\n\nThe ID of the specified configuration key.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void configurationKeyNum(Args _args)\n    {\n        int i;\n        ;\n        i = configurationKeyNum(AIF);\n        print i;\n        pause;\n    }\n\n## configurationKeyStr\nRetrieves the name of a configuration key as a string.\n\n### Syntax\n\n    str configurationKeyStr(str keyname)\n\n### Parameters\n\n| Parameter | Description                        |\n|-----------|------------------------------------|\n| keyname   | The name of the configuration key. |\n\n### Return Value\n\nThe name of the configuration key.\n\n### Remarks\n\nUse this function instead of literal text to retrieve a string that contains the configuration key name. If the key does not exist, the function generates a syntax error at compile time. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void configurationKeyStrExample(Args _args)\n    {\n        str s;\n        ;\n        s = configurationKeyStr(AIF);\n        print s;\n        pause;\n    }\n\n## dataEntityDataSourceStr\nRetrieves the name of a data source of a data entity.\n\n### Syntax\n\n    str dataEntityDataSourceStr(str dataEntity, str dataSource)\n\n### Parameters\n\n| Parameter  | Description                  |\n|------------|------------------------------|\n| dataEntity | The name of the data entity. |\n| dataSource | The name of the data source. |\n\n### Return Value\n\nThe name of the data source.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## delegateStr\nReturns the name of the delegate.\n\n### Syntax\n\n    str delegateStr(str class, str instanceDelegate)\n\n### Parameters\n\n| Parameter        | Description                            |\n|------------------|----------------------------------------|\n| class            | The name of the class, table, or form. |\n| instanceDelegate | The name of the instance delegate.     |\n\n### Return Value\n\nThe name of the delegate.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## dimensionHierarchyLevelStr\nReturns the name of the dimension hierarchy level.\n\n### Syntax\n\n    str dimensionHierarchyLevelStr(str dimensionHierarchyLevel)\n\n### Parameters\n\n| Parameter               | Description                                |\n|-------------------------|--------------------------------------------|\n| dimensionHierarchyLevel | The name of the dimension hierarchy level. |\n\n### Return Value\n\nThe name of the dimension hierarchy level.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## dimensionHierarchyStr\nReturns the name of the dimension hierarchy.\n\n### Syntax\n\n    str dimensionHierarchyStr(str dimensionHierarchy)\n\n### Parameters\n\n| Parameter          | Description                          |\n|--------------------|--------------------------------------|\n| dimensionHierarchy | The name of the dimension hierarchy. |\n\n### Return Value\n\nThe name of the dimension hierarchy.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## dimensionReferenceStr\nReturns the name of the dimension reference.\n\n### Syntax\n\n    str dimensionReferenceStr(str dimensionReference)\n\n### Parameters\n\n| Parameter          | Description                          |\n|--------------------|--------------------------------------|\n| dimensionReference | The name of the dimension reference. |\n\n### Return Value\n\nThe name of the dimension reference.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## dutyStr\nRetrieves a string that represents the name of the specified security duty.\n\n### Syntax\n\n    str dutyStr(str securityDuty)\n\n### Parameters\n\n| Parameter    | Description                    |\n|--------------|--------------------------------|\n| securityDuty | The name of the security duty. |\n\n### Return Value\n\nThe name of the security duty in a string.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## enumCnt\nRetrieves the number of elements in the specified enumeration type.\n\n### Syntax\n\n    int enumCnt(enum enumtype)\n\n### Parameters\n\n| Parameter | Description           |\n|-----------|-----------------------|\n| enumtype  | The enumeration type. |\n\n### Return Value\n\nThe number of elements in the specified enumeration type.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    enumCnt(NoYes); //Returns 2, as the two elements are Yes and No.\n\n## enumLiteralStr\nIndicates whether the specified string is an element of the specified enumeration type.\n\n### Syntax\n\n    enumLiteralStr(enum enum, string str)\n\n### Parameters\n\n| Parameter | Description                                                      |\n|-----------|------------------------------------------------------------------|\n| enum      | The enumeration type from which to retrieve the specified value. |\n\n### Return Value\n\nThe value of the *str* parameter if the specified string was found; otherwise, a compilation error.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void getEnumValueAsString()\n    {\n        str i;\n        i = enumLiteralStr(ABCEnum, \"valueInABCEnum\");\n        print i;\n        pause;\n    }\n\n## enumNum\nRetrieves the ID of the specified enumeration type.\n\n### Syntax\n\n    int enumNum(enum enum)\n\n### Parameters\n\n| Parameter | Description                                 |\n|-----------|---------------------------------------------|\n| enum      | The enumeration for which to return the ID. |\n\n### Return Value\n\nThe ID of the specified enumeration type.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void enumNum(Args _args)\n    {\n        int i;\n        ;\n        i = enumNum(ABC);\n        print i;\n        pause;\n    }\n\n## enumStr\nRetrieves the name of an enumeration as a string.\n\n### Syntax\n\n    str enumStr(enum enum)\n\n### Parameters\n\n| Parameter | Description                  |\n|-----------|------------------------------|\n| enum      | The name of the enumeration. |\n\n### Return Value\n\nThe name of the enumeration.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void enumStrExample(Args _args)\n    {\n        str s;\n        ;\n        s = enumStr(ABC);\n        print s;\n        pause;\n    }\n\n## extendedTypeNum\nRetrieves the ID of the specified extended data type.\n\n### Syntax\n\n    int extendedTypeNum(int str)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| str       | The extended data type for which to return the ID. |\n\n### Return Value\n\nThe ID of the specified extended data type.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void EDTNum(Args _args)\n    {\n        int i;\n        str s;\n        ;\n     \n        i = extendedTypeNum(AccountName);\n        s = extendedTypeStr(AccountName);\n        print  int2Str(i);\n        print  s;\n        pause;\n    }\n\n## extendedTypeStr\nRetrieves the name of an extended data type as a string.\n\n### Syntax\n\n    str extendedTypeStr(int str)\n\n### Parameters\n\n| Parameter | Description                         |\n|-----------|-------------------------------------|\n| str       | The name of the extended data type. |\n\n### Return Value\n\nThe name of the extended data type.\n\n### Remarks\n\nUse this function instead of literal text to return a string that contains the extended data type name. If the data type does not exist, the **extendedTypeStr** function generates a syntax error at compile time. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void EDTStr(Args _args)\n    {\n        int i;\n        str s;\n        ;\n     \n        i = extendedTypeNum(AccountName);\n        s = extendedTypeStr(AccountName);\n        print  int2Str(i);\n        print  s;\n        pause;\n    }\n\n## fieldNum\nReturns the ID number of the specified field.\n\n### Syntax\n\n    int fieldNum(str tableName, str fieldName)\n\n### Parameters\n\n| Parameter | Description            |\n|-----------|------------------------|\n| tableName | The name of the table. |\n| fieldName | The name of the field. |\n\n### Return Value\n\nThe ID of the specified field.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example prints the number of the **CashDisc** field in the **CustTable** table.\n\n    static void fieldNumExample(Args _args)\n    {\n        int myInt;\n        ;\n\n        myInt = fieldNum(CustTable, CashDisc);\n        Global::info(strfmt(\"CashDisc has a field ID of %1 in the CustTable table.\", myInt));\n    }\n    /****Infolog Display\n    Message (10:40:00 am)\n    CashDisc has a field ID of 10 in the CustTable table.\n    ****/\n\n## fieldPName\nRetrieves the label of the specified field.\n\n### Syntax\n\n    str fieldPName(str tableid, str fieldid)\n\n### Parameters\n\n| Parameter | Description                                  |\n|-----------|----------------------------------------------|\n| tableid   | The table that contains the specified field. |\n| fieldid   | The field to convert.                        |\n\n### Return Value\n\nThe label of the field.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example prints the label of the **CashDisc** field.\n\n    static void fieldPNameExample(Args _arg)\n    {\n        str myText;\n        ;\n\n        myText = fieldPName(CustTable, CashDisc);\n        Global::info(strfmt(\"%1 is the label of the CashDisc field.\", myText));\n    }\n    /****Infolog Display\n    Message (02:00:57 pm)\n    Cash discount is the label of the CashDisc field.\n    ****/\n\n## fieldStr\nRetrieves the field name of the specified field.\n\n### Syntax\n\n    str fieldStr(str tableid, str fieldid)\n\n### Parameters\n\n| Parameter | Description                        |\n|-----------|------------------------------------|\n| tableid   | The table that contains the field. |\n| fieldid   | The field to convert.              |\n\n### Return Value\n\nThe field name of the specified field.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example assigns the name of the **CashDisc** field to the *myText* variable.\n\n    static void fieldStrExample(Args _arg)\n    {\n        str myText;\n        ;\n\n        myText = fieldStr(CustTable, CashDisc);\n        Global::info(strfmt(\"%1 is the specified field.\", myText));\n    }\n    /****Infolog Display\n    Message (09:11:52 am)\n    CashDisc is the specified field.\n    ****/\n\n## formControlStr\nCauses the X++ compiler to check whether the control exists on the form, and to replace the function call with a string of the valid control name.\n\n### Syntax\n\n    str formControlStr(formName, controlName)\n\n### Parameters\n\n| Parameter   | Description                                                          |\n|-------------|----------------------------------------------------------------------|\n| formName    | The name of the form, not in quotation marks.                        |\n| controlName | The name of the control that is on the form, not in quotation marks. |\n\n### Return Value\n\nA string that contains the name of the control as it appears in the Application Explorer.\n\n### Remarks\n\nA compile error is issued if the compiler determines that the control does not exist on the form. If your X++ code uses a string that contains quotation marks to supply the control name, the error cannot be discovered until run time. Use of this function enables the compiler to discover the error earlier at compile time. X++ functions such as **formControlStr** that are executed by the compiler are called compile-time functions or compile-time functions. That is why the input parameters are not standard strings in quotation marks. Compile-time functions are not represented in the p-code or other executable that is output by the compiler. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## formDataFieldStr\nReturns the name of a data field in a form.\n\n### Syntax\n\n    str formDataFieldStr(str formName, str dataSource, str dataField)\n\n### Parameters\n\n| Parameter  | Description                        |\n|------------|------------------------------------|\n| formName   | The name of the form.              |\n| dataSource | The data source of the form.       |\n| dataField  | The data field of the data source. |\n\n### Return Value\n\nThe name of a data field in a form.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    str a = formDataFieldStr(FMVehicle, FMModelRate, RatePerDay);\n\n## formDataSourceStr\nReturns the name of a data source in a form.\n\n### Syntax\n\n    str formDataSourceStr(str formName, str dataSource)\n\n### Parameters\n\n| Parameter  | Description                  |\n|------------|------------------------------|\n| formName   | The name of the form.        |\n| dataSource | The data source of the form. |\n\n### Return Value\n\nThe name of a data source in a form.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    str b = formDataSourceStr(FMVehicle, FMModelRate);\n\n## formMethodStr\nReturns the name of a method of a form.\n\n### Syntax\n\n    str formMethodStr(str formName, str methodName)\n\n### Parameters\n\n| Parameter  | Description             |\n|------------|-------------------------|\n| formName   | The name of the form.   |\n| methodName | The method of the form. |\n\n### Return Value\n\nThe name of a method in a form.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example prints the name of the **showDialog** method.\n\n    str c = formMethodStr(Batch,showDialog);\n\n## formStr\nRetrieves the name of a form.\n\n### Syntax\n\n    str formStr(str form)\n\n### Parameters\n\n| Parameter | Description         |\n|-----------|---------------------|\n| form      | The name of a form. |\n\n### Return Value\n\nA string that represents the name of the form.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example prints the name of the InventDim form.\n\n    static void formStrExample(Args _arg)\n    {\n        ;\n\n        Global::info(formStr(InventDim));\n    }\n    /****Infolog Display\n    Message (11:04:39 am)\n    InventDim\n    ****/\n\n## identifierStr\nConverts the specified identifier to a string.\n\n### Syntax\n\n    str identifierStr(str ident)\n\n### Parameters\n\n| Parameter | Description                |\n|-----------|----------------------------|\n| ident     | The identifier to convert. |\n\n### Return Value\n\nA string that represents the specified identifier.\n\n### Remarks\n\nYou will receive a best practice warning if you use the **identifierStr** function. This occurs because existence checking is performed for **identifierStr**. Try to use a more specific compile-time function if one is available. This is a compile-time function. For more information, [Overview](#overview).\n\n### Example\n\nThe following code example assigns the *myvar* variable name to the *thevar* variable.\n\n    static void indentifierStrExample(Args _args)\n    {\n        str myvar;\n        str thevar\n        ;\n        \n        thevar = \"[\" + identifierStr(myvar) + \"]\";\n        Global::info(strfmt(thevar));\n    }\n    /****Infolog Display\n    Message (09:19:49 am)\n    [myvar]\n    ****/\n\n## indexNum\nConverts the specified index to a number.\n\n### Syntax\n\n    int indexNum(str tableid, str indexid)\n\n### Parameters\n\n| Parameter | Description                        |\n|-----------|------------------------------------|\n| tableid   | The table that contains the index. |\n| indexid   | The index to convert.              |\n\n### Return Value\n\nThe index number that represents the specified index.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example returns the index value of the Party index.\n\n    static void indexNumExample(Args _arg)\n    {\n        ;\n        \n        Global::info(strfmt(\"%1 is the index number of Party.\", indexNum(CustTable, Party)));\n    }\n    /****Infolog Display\n    Message (11:28:03 am)\n    3 is the index number of Party.\n    ****/\n\n## indexStr\nConverts the specified index to a string.\n\n### Syntax\n\n    str indexStr(str tableid, str indexid)\n\n### Parameters\n\n| Parameter | Description                        |\n|-----------|------------------------------------|\n| tableid   | The table that contains the index. |\n| indexid   | The index to convert.              |\n\n### Return Value\n\nA string that represents the specified index.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example assigns the **CashDisc** index value to the *myText* variable.\n\n    static void fieldStrExample(Args _arg)\n    {\n        str myText;\n        ;\n\n        myText = fieldStr(CustTable, CashDisc);\n        Global::info(strfmt(\"%1 is the specified index.\", myText));\n    }\n    /****Infolog Display\n    Message (09:11:52 am)\n    CashDisc is the specified index.\n    ****/\n\n## licenseCodeNum\nValidates that the specified license code exists in the Application Explorer; if not, a compiler error occurs.\n\n### Syntax\n\n    int licenseCodeNum(str codename)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| codename  | The name of the license code to validate. |\n\n### Return Value\n\nThe number of the specified license code.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void licenseCodeNumExample(Args args)\n    {\n        int i;\n        ;\n\n        i = licenseCodeNum(SysMorphX);\n        Global::info(strfmt(\"%1 is the license code number for SysMorphX.\", i));\n    }\n    /****Infolog Display\n    Message (01:52:35 pm)\n    24 is the license code number for SysMorphX.\n    ****/\n\n## licenseCodeStr\nValidates that the specified license code exists in the Application Explorer; if not, a compiler error occurs.\n\n### Syntax\n\n    str licenseCodeStr(str codename)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| codename  | The name of the license code to validate. |\n\n### Return Value\n\nThe name of the specified license code.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void licenseCodeStrExample(Args _arg)\n    {\n        str s;\n        ;\n\n        s = licenseCodeStr(SysMorphX);\n        Global::info(strfmt(\"%1 is the license code string for SysMorphX.\", s));\n    }\n    /****Infolog Display\n    Message (02:33:56 pm)\n    SysMorphX is the license code string for SysMorphX.\n    ****/\n\n## literalStr\nValidates that the specified string can be a literal string; if not, a compiler error occurs.\n\n### Syntax\n\n    str literalStr(int str)\n\n### Parameters\n\n| Parameter | Description             |\n|-----------|-------------------------|\n| codename  | The string to validate. |\n\n### Return Value\n\nThe literal string if valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n     \n        s = literalStr(\"This is a literal str\");\n        print s;\n        pause;\n    }\n\n## maxDate\nRetrieves the maximum value allowed for a variable of type date.\n\n### Syntax\n\n    date maxDate()\n\n### Return Value\n\nThe maximum value allowed for a variable of type **date**, which is **2154-12-31**.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void maxDateExample(Args _arg)\n    {\n        date maximumDate;\n        ;\n        maximumDate = maxDate();\n        print maximumDate;\n        pause;\n    }\n\n## maxInt\nRetrieves the maximum signed value that can be stored in an **int** type.\n\n### Syntax\n\n    int maxInt()\n\n### Return Value\n\nThe maximum value allowed value of an integer.\n\n### Remarks\n\nAny other integer will be less than or equal to the returned value. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void maxIntExample(Args _arg)\n    {\n        int i;\n        ;\n        print \"The maximum value for type int is \" + int2Str(maxInt());\n        pause;\n    }\n\n## measurementStr\nReturns the name of a measurement.\n\n### Syntax\n\n    str measurementStr(str measurement)\n\n### Parameters\n\n| Parameter   | Description                  |\n|-------------|------------------------------|\n| measurement | The name of the measurement. |\n\n### Return Value\n\nThe name of the measurement.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## measureStr\nReturns the name of a measure.\n\n### Syntax\n\n    str measureStr(str measure)\n\n### Parameters\n\n| Parameter | Description              |\n|-----------|--------------------------|\n| measure   | The name of the measure. |\n\n### Return Value\n\nThe name of the measure.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## menuItemActionStr\nValidates that the specified menu item action exists in the Application Object Tree (Application Explorer); if it does not, a compiler error occurs.\n\n### Syntax\n\n    str menuItemActionStr(class menuitem)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| codename  | The name of the menu item action to validate. |\n\n### Return Value\n\nThe name of the menu item action, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s1, s2, s3, s4;\n        ;\n     \n        s1 = menuItemActionStr(AssetCopy);\n        s2 = menuItemDisplayStr(Address);\n        s3 = menuItemOutputStr(AssetBarcode);\n        s4 = menuStr(Administration);\n     \n        print \"menuItemActionStr for AssetCopy is \" + s1;\n        print \"menuItemDisplayStr for Address is \" + s2;\n        print \"menuItemOutputStr for AssetBarcode is \" + s3;\n        print \"menuStr for Administration is \" + s4;\n     \n        pause;\n    }\n\n## menuItemDisplayStr\nValidates that the specified menu item display exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str menuitemdisplaystr(class menuItem)\n\n### Parameters\n\n| Parameter | Description                                    |\n|-----------|------------------------------------------------|\n| codename  | The name of the menu item display to validate. |\n\n### Return Value\n\nThe name of the specified menu item display, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s1, s2, s3, s4;\n        ;\n     \n        s1 = menuItemActionStr(AssetCopy);\n        s2 = menuItemDisplayStr(Address);\n        s3 = menuItemOutputStr(AssetBarcode);\n        s4 = menuStr(Administration);\n     \n        print \"menuItemActionStr for AssetCopy is \" + s1;\n        print \"menuItemDisplayStr for Address is \" + s2;\n        print \"menuItemOutputStr for AssetBarcode is \" + s3;\n        print \"menuStr for Administration is \" + s4;\n     \n        pause;\n    }\n\n## menuItemOutputStr\nValidates that the specified menu item output exists in the Application Explorer; if not, a compiler error occurs.\n\n### Syntax\n\n    str menuItemOutputStr(class menuitem)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| codename  | The name of the menu item output to validate. |\n\n### Return Value\n\nThe specified menu item output if valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s1, s2, s3, s4;\n        ;\n     \n        s1 = menuItemActionStr(AssetCopy);\n        s2 = menuItemDisplayStr(Address);\n        s3 = menuItemOutputStr(AssetBarcode);\n        s4 = menuStr(Administration);\n     \n        print \"menuItemActionStr for AssetCopy is \" + s1;\n        print \"menuItemDisplayStr for Address is \" + s2;\n        print \"menuItemOutputStr for AssetBarcode is \" + s3;\n        print \"menuStr for Administration is \" + s4;\n     \n        pause;\n    }\n\n## menuStr\nValidates that the specified menu exists in the Application Explorer; if not, a compiler error occurs.\n\n### Syntax\n\n    str menuStr(class menu)\n\n### Parameters\n\n| Parameter | Description                       |\n|-----------|-----------------------------------|\n| menu      | The name of the menu to validate. |\n\n### Return Value\n\nThe name of the specified menu item if valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s1, s2, s3, s4;\n        ;\n     \n        s1 = menuItemActionStr(AssetCopy);\n        s2 = menuItemDisplayStr(Address);\n        s3 = menuItemOutputStr(AssetBarcode);\n        s4 = menuStr(Administration);\n     \n        print \"menuItemActionStr for AssetCopy is \" + s1;\n        print \"menuItemDisplayStr for Address is \" + s2;\n        print \"menuItemOutputStr for AssetBarcode is \" + s3;\n        print \"menuStr for Administration is \" + s4;\n     \n        pause;\n    }\n\n## methodStr\nValidates that the specified method exists in the specified class; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str methodStr(class class, int method)\n\n### Parameters\n\n| Parameter | Description                         |\n|-----------|-------------------------------------|\n| class     | The name of the class.              |\n| method    | The name of the method to validate. |\n\n### Return Value\n\nThe name of the specified method, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        #define.timeout(50)\n        str s;\n        SysHelpInitTimeOut SysHelpInitTimeOut;\n        ;\n     \n        s = methodStr(SysHelpInitTimeOut, timeout);\n        print s;\n        pause;\n    }\n\n## minInt\nRetrieves the minimum signed value that can be stored in an **int** type.\n\n### Syntax\n\n    int minInt()\n\n### Return Value\n\nThe minimum value of an **int** type.\n\n### Remarks\n\nAny other integer value will be greater than or equal to the returned value. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void minIntExample(Args _arg)\n    {\n        int i;\n        ;\n        i = minInt();\n        print \"minInt() is \" + int2Str(i);    \n        pause;\n    }\n\n## privilegeStr\nReturns the name of the privilege.\n\n### Syntax\n\n    str privilegeStr(str privilege)\n\n### Parameters\n\n| Parameter | Description                                 |\n|-----------|---------------------------------------------|\n| privilege | The privilege for which to return the name. |\n\n### Return Value\n\nThe name of the privilege.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## queryDatasourceStr\nCauses the X++ compiler to check whether the data source exists on the query, and to replace the function call with a string of the valid data source name.\n\n### Syntax\n\n    str queryDataSourceStr(queryName, dataSourceName)\n\n### Parameters\n\n| Parameter      | Description                                                               |\n|----------------|---------------------------------------------------------------------------|\n| queryName      | The name of the query, not in quotation marks.                            |\n| dataSourceName | The name of the data source that is on the query, not in quotation marks. |\n\n### Return Value\n\nA string that contains the name of the data source as it appears in the Application Explorer.\n\n### Remarks\n\nA compile error is issued if the compiler determines that the data source does not exist on the query. If your X++ code uses a string that contains quotation marks to supply the data source name, the error cannot be discovered until run time. Use of this function enables the compiler to discover the error earlier at compile time. X++ functions such as **queryDataSourceStr** that are executed by the compiler are referred to as compile-time functions or compile-time functions. That is why the input parameters are not standard strings in quotation marks. Compile-time functions are not represented in the p-code or other executable that is output by the compiler. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## queryMethodStr\nReturns the name of a method of a query.\n\n### Syntax\n\n    str queryMethodStr(str queryName, str methodName)\n\n### Parameters\n\n| Parameter  | Description             |\n|------------|-------------------------|\n| queryName  | The name of the query.  |\n| methodName | The method of the form. |\n\n### Return Value\n\nThe name of a method in a query.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## queryStr\nRetrieves a string that represents an existing query.\n\n### Syntax\n\n    str queryStr(str query)\n\n### Parameters\n\n| Parameter | Description            |\n|-----------|------------------------|\n| query     | The query to retrieve. |\n\n### Return Value\n\nThe name of the query.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void queryStrExample(Args _arg)\n    {\n        str myText;\n        ;\n        \n        myText = queryStr(AssetTable);\n        Global::info(strfmt(\"%1 is the name of the query.\",myText));\n    }\n    /****Infolog Display\n    Message (09:45:16 am)\n    AssetTable is the name of the query.\n    ****/\n\n## reportStr\nRetrieves a string that represents the name of the specified report.\n\n### Syntax\n\n    str reportStr(str report)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| report    | The report for which to return the name. |\n\n### Return Value\n\nThe name of the report.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example assigns the name of the **AssetAddition** report to the *MyTxt* variable.\n\n    static void reportStrExample(Args _args)\n    {\n        str MyTxt;\n        ;\n\n        MyTxt = reportStr(AssetAddition);\n        Global::info(strfmt(\"%1 is the name of the report.\", MyTxt));\n    }\n    /****Infolog Display.\n    Message (10:46:36 am)\n    AssetAddition is the name of the report.\n    ****/\n\n## resourceStr\nValidates that the specified resource exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str resourceStr(str resourcename)\n\n### Parameters\n\n| Parameter    | Description                           |\n|--------------|---------------------------------------|\n| resourcename | The name of the resource to validate. |\n\n### Return Value\n\nThe name of the specified resource, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        print \"Str for resource StyleSheet_Help_Axapta is \" \n            + resourceStr(StyleSheet_Help_Axapta);\n        pause;\n    }\n\n## roleStr\nRetrieves a string that represents the name of the specified security role.\n\n### Syntax\n\n    str roleStr(str securityRole)\n\n### Parameters\n\n| Parameter    | Description                    |\n|--------------|--------------------------------|\n| securityRole | The name of the security role. |\n\n### Return Value\n\nThe name of the security role in a string.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## ssrsReportStr\nRetrieves a string that represents the name of the specified report. Use this function when you want to specify the report that should be run by a report controller class.\n\n### Syntax\n\n    str ssrsReportStr(str report, str design)\n\n### Parameters\n\n| Parameter | Description                                                |\n|-----------|------------------------------------------------------------|\n| report    | The report to return the name for.                         |\n| design    | The name of the design that is associated with the report. |\n\n### Return Value\n\nThe name of the report.\n\n### Remarks\n\nThe **ssrsReportStr** function parses the two values that are passed to it, to validate whether they belong to a valid report. The report name must be set when a menu item points to a controller(), so that the controller can determine which report-design combination must be invoked. Use of the **ssrsReportStr** function provides the benefit of compile-time validation for the report and design name. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    public static void main(Args _args)\n    {\n        // Initializing the object for a controller class, in this case, the class named AssetListingController.\n        SrsReportRunController controller = new AssetListingController();\n\n        // Getting the properties of the called object (in this case AssetListing MenuItem)\n        controller.parmArgs(_args);\n        // Setting the Report name for the controller.\n        controller.parmReportName(ssrsReportStr(AssetListing, Report));\n\n        // Initiate the report execution.\n        controller.startOperation();\n    }\n\n## staticDelegateStr\nReturns the name of a static delegate.\n\n### Syntax\n\n    str staticDelegateStr(str class, str delegate)\n\n### Parameters\n\n| Parameter | Description                          |\n|-----------|--------------------------------------|\n| class     | The name of a class, table, or form. |\n| delegate  | The name of the delegate.            |\n\n### Return Value\n\nThe name of the delegate.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## staticMethodStr\nValidates that the specified static method exists in the specified class; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str staticMethodStr(class class, int method)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| class     | The name of the class.                     |\n| method    | The name of the static method to validate. |\n\n### Return Value\n\nThe name of the static method, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## tableCollectionStr\nValidates that the specified table collection exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str tableCollectionStr(class tablecollection)\n\n### Parameters\n\n| Parameter       | Description                                   |\n|-----------------|-----------------------------------------------|\n| tablecollection | The name of the table collection to validate. |\n\n### Return Value\n\nThe name of the specified table collection, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## tableFieldGroupStr\nRetrieves the name of a field group as a string.\n\n### Syntax\n\n    str tableFieldGroupStr(str tableName, str fieldGroupName)\n\n### Parameters\n\n| Parameter      | Description                              |\n|----------------|------------------------------------------|\n| tableName      | The table that contains the field group. |\n| fieldGroupName | The field group in the table.            |\n\n### Return Value\n\nThe name of the field group as a string.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example retrieves the name of the **Editing** field group as a string.\n\n    static void tableFieldGroupStrExample(Args _arg)\n    {\n        ;\n\n        Global::info(tableFieldGroupStr(AccountingDistribution, Editing));\n    }\n    /****Infolog Display\n    Message (03:14:54 pm)\n    Editing\n    ****/\n\n## tableMethodStr\nValidates that the specified method exists in the specified table; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str tableMethodStr(int table, int method)\n\n### Parameters\n\n| Parameter | Description                         |\n|-----------|-------------------------------------|\n| table     | The name of the table.              |\n| method    | The name of the method to validate. |\n\n### Return Value\n\nThe name of the method, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## tableNum\nRetrieves the table ID of the specified table.\n\n### Syntax\n\n    int tableNum(str table)\n\n### Parameters\n\n| Parameter | Description                             |\n|-----------|-----------------------------------------|\n| table     | The table to retrieve the table ID for. |\n\n### Return Value\n\nThe table ID of the specified table.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example sets the **tableID** variable to 77, which is the **ID** of the **CustTable** table.\n\n    static void tableNumExample(Args _args)\n    {\n        int tableID;\n        ;\n        \n        tableID = tableNum(CustTable);\n        Global::info(strfmt(\"%1 is the table ID for the CustTable table.\", tableID));\n\n    }\n    /****Infolog Display\n    Message (11:15:54 am)\n    77 is the table ID for the CustTable table.\n    ****/\n\n## tablePName\nRetrieves a string that contains the printable name of the specified table.\n\n### Syntax\n\n    str tablePName(str table)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| table     | The table to retrieve the printable name for. |\n\n### Return Value\n\nThe name of the specified table.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example assigns the label of the **CustTable** table to the *MyText* variable.\n\n    static void tablePNameExample(Args _args)\n    {\n        str MyText;\n        ;\n\n        MyText = tablePname(CustTable);\n        Global::info(strfmt(\"%1 is the label of the CustTable table.\", MyText));\n    }\n    /**** Infolog Display.\n    Message (12:13:53 pm)\n    Customers is the label of the CustTable table.\n    ****/\n\n## tableStaticMethodStr\nValidates that the specified static method exists in the specified table; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str tableStaticMethodStr(int table, int method)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| table     | The name of the table.                     |\n| method    | The name of the static method to validate. |\n\n### Return Value\n\nThe name of the specified static method.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## tableStr\nRetrieves a string that contains the name the specified table.\n\n### Syntax\n\n    str tableStr(str table)\n\n### Parameters\n\n| Parameter | Description                         |\n|-----------|-------------------------------------|\n| table     | The table to retrieve a string for. |\n\n### Return Value\n\nA string value that contains the name of the specified table.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following example assigns the name of the **CustTable** table to the *MyTxt* variable.\n\n    static void tableStrExample(Args _args)\n    {\n        str MyTxt;\n        ;\n        \n        MyTxt = tableStr(CustTable);\n        Global::info(strfmt(\"%1 is the str output of the input of CustTable.\", MyTxt));\n    }\n    /**** Infolog Display. \n    Message (01:21:49 pm)\n    CustTable is the str output of the input of CustTable.\n    ****/\n\n## tileStr\nRetrieves a string that represents the name of the specified tile.\n\n### Syntax\n\n    str tileStr(str tile)\n\n### Parameters\n\n| Parameter | Description           |\n|-----------|-----------------------|\n| tile      | The name of the tile. |\n\n### Return Value\n\nThe name of the tile in a string.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## varStr\nRetrieves a string that contains the name of the specified variable.\n\n### Syntax\n\n    str varStr(str var)\n\n### Parameters\n\n| Parameter | Description               |\n|-----------|---------------------------|\n| var       | The name of the variable. |\n\n### Return Value\n\nA string that contains the name of the specified variable.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void varStrExample(Args _arg)\n    {\n        str myString;\n        anytype myVariable;\n        ;\n        \n        myString = varStr(myVariable);\n        Global::info(strfmt(\"%1 is the variable name.\", myString));\n    }\n    /****Infolog Display.\n    Message (02:26:56 pm)\n    myVariable is the variable name.\n    ****/\n\n## webActionItemStr\nValidates that the specified web action item exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webActionItemStr(class webactionitem)\n\n### Parameters\n\n| Parameter     | Description                                  |\n|---------------|----------------------------------------------|\n| webactionitem | The name of the web action item to validate. |\n\n### Return Value\n\nThe name of the specified web action item, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n        s = webActionItemStr(EPFlushData);\n        print \"webactionitem str is \" + s;\n        pause;\n    }\n\n## webDisplayContentItemStr\nValidates that the specified web display content item exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webDisplayContentItemStr(class webdisplaycontentitem)\n\n### Parameters\n\n| Parameter             | Description                                           |\n|-----------------------|-------------------------------------------------------|\n| webdisplaycontentitem | The name of the web display content item to validate. |\n\n### Return Value\n\nThe name of the specified web display content item, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n\n        s = webDisplayContentItemStr(EPAdmin);\n        print \"string for webcontent display item EPAdmin is \" + s;\n        pause;\n    }\n\n## webFormStr\nValidates that the specified web form exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webFormStr(str name)\n\n### Parameters\n\n| Parameter | Description                           |\n|-----------|---------------------------------------|\n| name      | The name of the web form to validate. |\n\n### Return Value\n\nThe name of the specified web form, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n        s = webFormStr(EPAdmin);\n        print \"String for web form EPAdmin is \" + s;\n        pause;\n    }\n\n## webletItemStr\nValidates that the specified weblet item exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webletItemStr(class webletitem)\n\n### Parameters\n\n| Parameter  | Description                              |\n|------------|------------------------------------------|\n| webletitem | The name of the weblet item to validate. |\n\n### Return Value\n\nThe name of the specified weblet item, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n        s = webletItemStr(WebFormWeblet);\n        print \"String for WebFormWeblet is \" + s;\n        pause;\n    }\n\n## webMenuStr\nValidates that the specified web menu exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webMenuStr(str name)\n\n### Parameters\n\n| Parameter | Description                           |\n|-----------|---------------------------------------|\n| name      | The name of the web menu to validate. |\n\n### Return Value\n\nThe name of the specified web menu, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n        s = webMenuStr(ECPAdmin);\n        print \"String for web menu ECPAdmin is \" + s;\n        pause;\n    }\n\n## webOutputContentItemStr\nValidates that the specified web output content item exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webOutputContentItemStr(class weboutputcontentitem)\n\n### Parameters\n\n| Parameter            | Description                                          |\n|----------------------|------------------------------------------------------|\n| weboutputcontentitem | The name of the web output content item to validate. |\n\n### Return Value\n\nThe name of the specified web output content item, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n        s = webOutputContentItemStr(EPPriceList);\n        print \"string for weboutput content item EPPriceList is \" + s;\n        pause;\n    }\n\n## webpageDefStr\nValidates that the specified Web page defintion exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webpageDefStr(str pagename)\n\n### Parameters\n\n| Parameter | Description                                      |\n|-----------|--------------------------------------------------|\n| pagename  | The name of the Web page definition to validate. |\n\n### Return Value\n\nThe name of the specified web-page definition, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## webReportStr\nValidates that the specified web report exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webReportStr(str name)\n\n### Parameters\n\n| Parameter | Description                             |\n|-----------|-----------------------------------------|\n| name      | The name of the web report to validate. |\n\n### Return Value\n\nThe name of the specified web report, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n        s = webReportStr(EPCSSSalesConfirm);\n        print \"String for web report EPCSSalesConfirm is \" + s;\n        pause;\n    }\n\n## websiteDefStr\nValidates that the specified web-site definition exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str websiteDefStr(str resourcename)\n\n### Parameters\n\n| Parameter    | Description                                      |\n|--------------|--------------------------------------------------|\n| resourcename | The name of the Web site definition to validate. |\n\n### Return Value\n\nThe name of the specified web-site definition, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n     \n        s = websiteDefStr(AxSiteDef_1033_xip);\n        print \"string for web site definition AxSiteDef_1033_xip is \" + s;\n        pause;\n    }\n\n## webSiteTempStr\nValidates that the specified web-site template exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str websiteTempStr(str resourcename)\n\n### Parameters\n\n| Parameter    | Description                                    |\n|--------------|------------------------------------------------|\n| resourcename | The name of the Web site template to validate. |\n\n### Return Value\n\nThe name of the specified web-site template, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    No example.\n\n## webStaticFileStr\nValidates that the specified web static file exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webStaticFileStr(str pagename)\n\n### Parameters\n\n| Parameter | Description                                  |\n|-----------|----------------------------------------------|\n| pagename  | The name of the web static file to validate. |\n\n### Return Value\n\nThe name of the specified web static file, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n     \n        s = webStaticFileStr(AXEP);\n        print \"string for web static file AXEP is \" + s;\n        pause;\n    }\n\n## webUrlItemStr\nValidates that the specified web URL item exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webUrlItemStr(class weburlitem)\n\n### Parameters\n\n| Parameter  | Description                               |\n|------------|-------------------------------------------|\n| weburlitem | The name of the web URL item to validate. |\n\n### Return Value\n\nThe name of the specified web URL item, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n     \n        s = webUrlItemStr(EPAdmin);\n        print \"string for web url item EPAdmin is \" + s;\n        pause;\n    }\n\n## webWebPartStr\nValidates that the specified web part exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str webWebpartStr(str resourcename)\n\n### Parameters\n\n| Parameter    | Description                           |\n|--------------|---------------------------------------|\n| resourcename | The name of the web part to validate. |\n\n### Return Value\n\nThe name of the specified web part, if it is valid.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    {\n        str s;\n        ;\n     \n        s = webWebpartStr(AxWebParts_cab);\n        print \"string for web part AxWebParts_cab is \" + s;\n        pause;\n    }\n\n## workflowApprovalStr\nRetrieves the name of a workflow approval in the Application Object Tree (Application Explorer) as a string.\n\n### Syntax\n\n    str workflowapprovalstr(approval approval)\n\n### Parameters\n\n| Parameter | Description                                             |\n|-----------|---------------------------------------------------------|\n| approval  | The Application Explorer name of the workflow approval. |\n\n### Return Value\n\nA string that represents the Application Explorer name of the workflow approval.\n\n### Remarks\n\nUse this function instead of literal text to retrieve a string that contains the workflow approval name. If the workflow approval does not exist, the function generates a syntax error at compile time. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following code example sets the variable *str s* to **MyWorkflowApproval** which is the name of the workflow approval in the Application Explorer.\n\n    static void MyWorkflowApprovalStrExample(Args _args)\n    {\n        str s;\n        ;\n        s = workflowapprovalstr(MyWorkflowApproval);\n        print s;\n        pause;\n    }\n\n## workflowCategoryStr\nRetrieves the name of a workflow category in the Application Object Tree (Application Explorer) as a string.\n\n### Syntax\n\n    str workflowcategorystr(category category)\n\n### Parameters\n\n| Parameter | Description                                             |\n|-----------|---------------------------------------------------------|\n| category  | The Application Explorer name of the workflow category. |\n\n### Return Value\n\nA string that represents the Application Explorer name of the workflow category.\n\n### Remarks\n\nUse this function instead of literal text to retrieve a string that contains the workflow category name. If the workflow category does not exist, the function generates a syntax error at compile time. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following code example sets the variable *str s* to **MyWorkflowCategory** which is the name of the workflow category in the Application Explorer.\n\n    static void MyWorkflowCategoryStrExample(Args _args)\n    {\n        str s;\n        ;\n        s = workflowcategorystr(MyWorkflowCategory);\n        print s;\n        pause;\n    }\n\n## workflowTaskStr\nRetrieves the name of a workflow task in the Application Object Tree (Application Explorer) as a string.\n\n### Syntax\n\n    str workflowtaskstr(task task)\n\n### Parameters\n\n| Parameter | Description                                         |\n|-----------|-----------------------------------------------------|\n| task      | The Application Explorer name of the workflow task. |\n\n### Return Value\n\nA string that represents the Application Explorer name of the workflow task.\n\n### Remarks\n\nUse this function instead of literal text to retrieve a string that contains the workflow task name. If the workflow task does not exist, the function generates a syntax error at compile time. This is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\nThe following code example sets the variable *str s* to **MyWorkflowTask** which is the name of the workflow task in the Application Explorer.\n\n    static void MyWorkflowTaskStrExample(Args _args)\n    {\n        str s;\n        ;\n        s = workflowtaskstr(MyWorkflowTask);\n        print s;\n        pause;\n    }\n\n## workflowTypeStr\nValidates that the specified workflow type exists in the Application Explorer; if it does not, a compiler error occurs.\n\n### Syntax\n\n    str workflowTypeStr(str workflow)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| workflow  | The name of the workflow type to validate. |\n\n### Return Value\n\nThe name of the workflow type.\n\n### Remarks\n\nThis is a compile-time function. For more information, see [Overview](#overview).\n\n### Example\n\n    static void workFlowTypeStrExample(Args _args)\n    {\n        str s;\n        ;\n        s = workFlowTypeStr(BudgetAccountEntryType);\n        print s;\n        pause;\n    }\n\n"}