{"nodes":[{"pos":[32,59],"content":"X++ math run-time functions","needQuote":true,"needEscape":true,"nodes":[{"content":"X++ math run-time functions","pos":[0,27]}]},{"pos":[73,121],"content":"This wiki describes the math run-time functions.","needQuote":true,"needEscape":true,"nodes":[{"content":"This wiki describes the math run-time functions.","pos":[0,48]}]},{"pos":[634,661],"content":"X++ math run-time functions","linkify":"X++ math run-time functions","nodes":[{"content":"X++ math run-time functions","pos":[0,27]}]},{"content":"This wiki describes the math run-time functions.","pos":[663,711]},{"content":"These functions perform mathematical calculations.","pos":[713,763]},{"pos":[765,768],"content":"abs","linkify":"abs","nodes":[{"content":"abs","pos":[0,3]}]},{"content":"Retrieves the absolute value of a real number.","pos":[774,820]},{"content":"Examples:","pos":[821,830]},{"pos":[836,880],"content":"<bpt id=\"p1\">**</bpt>abs(-100.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>100.0<ept id=\"p2\">**</ept>.","source":"**abs(-100.0)** returns the value **100.0**."},{"pos":[885,928],"content":"<bpt id=\"p1\">**</bpt>abs(30.56)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>30.56<ept id=\"p2\">**</ept>.","source":"**abs(30.56)** returns the value **30.56**."},{"pos":[934,940],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[970,980],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[984,993]},{"content":"Description","pos":[996,1007]},{"content":"arg","pos":[1098,1101]},{"content":"The number to get the absolute value of.","pos":[1110,1150]},{"pos":[1158,1170],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1172,1200],"content":"The absolute value of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The absolute value of *arg*."},{"pos":[1206,1213],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1472,1476],"content":"acos","linkify":"acos","nodes":[{"content":"acos","pos":[0,4]}]},{"content":"Retrieves the arc cosine of a real number.","pos":[1477,1519]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[1520,1668],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[1674,1680],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1711,1721],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1725,1734]},{"content":"Description","pos":[1737,1748]},{"content":"arg","pos":[1841,1844]},{"content":"The number to retrieve the arc cosine of.","pos":[1853,1894]},{"pos":[1902,1914],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1916,1940],"content":"The arc cosine of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The arc cosine of *arg*."},{"pos":[1946,1953],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2163,2167],"content":"asin","linkify":"asin","nodes":[{"content":"asin","pos":[0,4]}]},{"content":"Retrieves the arc sine of a real number.","pos":[2168,2208]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[2209,2357],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[2363,2369],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2400,2410],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2414,2423]},{"content":"Description","pos":[2426,2437]},{"content":"arg","pos":[2530,2533]},{"content":"The number to calculate the arc sine for.","pos":[2542,2583]},{"pos":[2591,2603],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc sine of the specified number.","pos":[2605,2642]},{"pos":[2648,2655],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2657,2689],"content":"<bpt id=\"p1\">**</bpt>aSin(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.37<ept id=\"p2\">**</ept>.","source":"**aSin(0.36)** returns **0.37**."},{"pos":[2694,2698],"content":"atan","linkify":"atan","nodes":[{"content":"atan","pos":[0,4]}]},{"content":"Retrieves the arc tangent of a real number.","pos":[2699,2742]},{"pos":[2748,2754],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2785,2795],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2799,2808]},{"content":"Description","pos":[2811,2822]},{"content":"arg","pos":[2921,2924]},{"content":"The number to calculate the arc tangent for.","pos":[2933,2977]},{"pos":[2985,2997],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc tangent of the specified number.","pos":[2999,3039]},{"pos":[3045,3052],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3054,3086],"content":"<bpt id=\"p1\">**</bpt>aTan(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.35<ept id=\"p2\">**</ept>.","source":"**aTan(0.36)** returns **0.35**."},{"pos":[3092,3099],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3278,3289],"content":"corrFlagGet","linkify":"corrFlagGet","nodes":[{"content":"corrFlagGet","pos":[0,11]}]},{"content":"Retrieves the state of the correction flag for a real number.","pos":[3290,3351]},{"pos":[3357,3363],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3400,3410],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3414,3423]},{"content":"Description","pos":[3426,3437]},{"content":"arg","pos":[3518,3521]},{"content":"The flag to retrieve the state for.","pos":[3530,3565]},{"pos":[3573,3585],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[3587,3660],"content":"A non-zero value if the flag is set; <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero) if the flag is cleared.","source":"A non-zero value if the flag is set; **0** (zero) if the flag is cleared."},{"pos":[3666,3673],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3675,3712],"content":"The following example displays <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>.","source":"The following example displays **1**."},{"pos":[3860,3871],"content":"corrFlagSet","linkify":"corrFlagSet","nodes":[{"content":"corrFlagSet","pos":[0,11]}]},{"content":"Controls the correction flag for a real number.","pos":[3872,3919]},{"pos":[3925,3931],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3979,3989],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3993,4002]},{"content":"Description","pos":[4005,4016]},{"content":"real","pos":[4157,4161]},{"content":"The number in which to turn the correction flag on or off.","pos":[4169,4227]},{"content":"arg","pos":[4239,4242]},{"pos":[4251,4316],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> to turn the flag off; a non-zero value to turn the flag on.","source":"**0** to turn the flag off; a non-zero value to turn the flag on."},{"pos":[4324,4336],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[4338,4407],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> if the flag is now off; a non-zero value if the flag is now on.","source":"**0** if the flag is now off; a non-zero value if the flag is now on."},{"pos":[4409,4412],"content":"cos","linkify":"cos","nodes":[{"content":"cos","pos":[0,3]}]},{"content":"Retrieves the cosine of a real number.","pos":[4418,4456]},{"pos":[4462,4468],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4498,4508],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4512,4521]},{"content":"Description","pos":[4524,4535]},{"content":"arg","pos":[4614,4617]},{"content":"The number to find the cosine for.","pos":[4626,4660]},{"pos":[4668,4680],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The cosine of the specified number.","pos":[4682,4717]},{"pos":[4723,4730],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4732,4784],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[4790,4797],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4799,4844],"content":"The following code example displays <bpt id=\"p1\">**</bpt>0.76<ept id=\"p1\">**</ept>.","source":"The following code example displays **0.76**."},{"pos":[5006,5010],"content":"cosh","linkify":"cosh","nodes":[{"content":"cosh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic cosine of a real number.","pos":[5011,5060]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[5061,5213],"source":"**Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[5219,5225],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5256,5266],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5270,5279]},{"content":"Description","pos":[5282,5293]},{"content":"arg","pos":[5404,5407]},{"content":"The hyperbolic number to calculate the cosine for.","pos":[5416,5466]},{"pos":[5474,5486],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic cosine of the specified number.","pos":[5488,5534]},{"pos":[5540,5547],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5549,5601],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[5607,5614],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5810,5818],"content":"decRound","linkify":"decRound","nodes":[{"content":"decRound","pos":[0,8]}]},{"content":"Rounds a number to the specified number of decimal places.","pos":[5819,5877]},{"pos":[5883,5889],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5941,5951],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5955,5964]},{"content":"Description","pos":[5967,5978]},{"content":"figure","pos":[6071,6077]},{"content":"The number to round.","pos":[6083,6103]},{"content":"decimals","pos":[6129,6137]},{"content":"The number of decimal places to round to.","pos":[6141,6182]},{"pos":[6190,6202],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The value of the specified number, rounded to the specified number of decimal places.","pos":[6204,6289]},{"pos":[6295,6302],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6304,6381],"content":"The value of the <bpt id=\"p1\">*</bpt>decimals<ept id=\"p1\">*</ept> parameter can be positive, 0 (zero), or negative.","source":"The value of the *decimals* parameter can be positive, 0 (zero), or negative."},{"pos":[6387,6443],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1234.66<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,2)** returns the value **1234.66**."},{"pos":[6448,6501],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1235<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,0)** returns the value **1235**."},{"pos":[6506,6560],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,-2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1200<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,-2)** returns the value **1200**."},{"pos":[6565,6623],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12345.70<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,1)** returns the value **12345.70**."},{"pos":[6628,6687],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,-1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12350.00<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,-1)** returns the value **12350.00**."},{"pos":[6689,6692],"content":"exp","linkify":"exp","nodes":[{"content":"exp","pos":[0,3]}]},{"content":"Retrieves the natural antilogarithm of the specified real number.","pos":[6698,6763]},{"pos":[6769,6775],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[6805,6815],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6819,6828]},{"content":"Description","pos":[6831,6842]},{"content":"arg","pos":[6971,6974]},{"content":"The real number to calculate the natural antilogarithm for.","pos":[6983,7042]},{"pos":[7050,7062],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural antilogarithm of the specified real number.","pos":[7064,7119]},{"pos":[7125,7132],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7134,7259],"content":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter.","source":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter."},{"pos":[7265,7272],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7556,7561],"content":"exp10","linkify":"exp10","nodes":[{"content":"exp10","pos":[0,5]}]},{"content":"Retrieves the base-10 antilogarithm of the specified real number.","pos":[7562,7627]},{"pos":[7633,7639],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[7675,7685],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7689,7698]},{"content":"Description","pos":[7701,7712]},{"content":"decimal","pos":[7841,7848]},{"content":"The real number to calculate the base-10 antilogarithm for.","pos":[7853,7912]},{"pos":[7920,7932],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[7934,8001],"content":"The 10-based antilogarithm of the value of the <bpt id=\"p1\">*</bpt>decimal<ept id=\"p1\">*</ept> parameter.","source":"The 10-based antilogarithm of the value of the *decimal* parameter."},{"pos":[8007,8014],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8300,8304],"content":"frac","linkify":"frac","nodes":[{"content":"frac","pos":[0,4]}]},{"content":"Retrieves the decimal part of a real number.","pos":[8305,8349]},{"pos":[8355,8361],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8396,8406],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8410,8419]},{"content":"Description","pos":[8422,8433]},{"content":"decimal","pos":[8542,8549]},{"content":"The real number to retrieve the decimal part for.","pos":[8554,8603]},{"pos":[8611,8623],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The decimal part of the specified number.","pos":[8625,8666]},{"pos":[8672,8679],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8681,8726],"content":"<bpt id=\"p1\">**</bpt>frac(12.345)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>0.345<ept id=\"p2\">**</ept>.","source":"**frac(12.345)** returns the value **0.345**."},{"pos":[8731,8736],"content":"log10","linkify":"log10","nodes":[{"content":"log10","pos":[0,5]}]},{"content":"Retrieves the 10-digit logarithm of a real number.","pos":[8737,8787]},{"pos":[8793,8799],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8831,8841],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8845,8854]},{"content":"Description","pos":[8857,8868]},{"content":"arg","pos":[8963,8966]},{"content":"The number to calculate the logarithm for.","pos":[8975,9017]},{"pos":[9025,9037],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The base-10 logarithm of the specified number.","pos":[9039,9085]},{"pos":[9091,9098],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9100,9142],"content":"<bpt id=\"p1\">**</bpt>log10(200)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.30<ept id=\"p2\">**</ept>.","source":"**log10(200)** returns the value **2.30**."},{"pos":[9147,9151],"content":"logN","linkify":"logN","nodes":[{"content":"logN","pos":[0,4]}]},{"content":"Retrieves the natural logarithm of the specified real number.","pos":[9152,9213]},{"pos":[9219,9225],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[9256,9266],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9270,9279]},{"content":"Description","pos":[9282,9293]},{"content":"arg","pos":[9404,9407]},{"content":"The number to calculate the natural logarithm for.","pos":[9416,9466]},{"pos":[9474,9486],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural logarithm of the specified number.","pos":[9488,9534]},{"pos":[9540,9547],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9549,9589],"content":"<bpt id=\"p1\">**</bpt>logN(45)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>3.81<ept id=\"p2\">**</ept>.","source":"**logN(45)** returns the value **3.81**."},{"pos":[9591,9594],"content":"max","linkify":"max","nodes":[{"content":"max","pos":[0,3]}]},{"content":"Retrieves the larger of two specified values.","pos":[9600,9645]},{"pos":[9702,9712],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9716,9725]},{"content":"Description","pos":[9728,9739]},{"content":"object1","pos":[9784,9791]},{"content":"The first value.","pos":[9796,9812]},{"content":"object2","pos":[9818,9825]},{"content":"The second value.","pos":[9830,9847]},{"pos":[9855,9867],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[9869,9959],"content":"The larger of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The larger of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[9965,9972],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9978,10024],"content":"<bpt id=\"p1\">**</bpt>max(12.0,12.1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12.1<ept id=\"p2\">**</ept>.","source":"**max(12.0,12.1)** returns the value **12.1**."},{"pos":[10029,10068],"content":"<bpt id=\"p1\">**</bpt>max(2,33)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>33<ept id=\"p2\">**</ept>.","source":"**max(2,33)** returns the value **33**."},{"pos":[10070,10073],"content":"min","linkify":"min","nodes":[{"content":"min","pos":[0,3]}]},{"content":"Retrieves the smaller of two specified values.","pos":[10079,10125]},{"pos":[10182,10192],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10196,10205]},{"content":"Description","pos":[10208,10219]},{"content":"object1","pos":[10264,10271]},{"content":"The first value.","pos":[10276,10292]},{"content":"object2","pos":[10298,10305]},{"content":"The second value.","pos":[10310,10327]},{"pos":[10335,10347],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[10349,10440],"content":"The smaller of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The smaller of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[10446,10453],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10455,10493],"content":"<bpt id=\"p1\">**</bpt>min(2,33<ept id=\"p1\">**</ept>) returns the value <bpt id=\"p2\">**</bpt>2<ept id=\"p2\">**</ept>.","source":"**min(2,33**) returns the value **2**."},{"pos":[10499,10506],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10743,10748],"content":"power","linkify":"power","nodes":[{"content":"power","pos":[0,5]}]},{"content":"Raises a real number to the power of another real number.","pos":[10749,10806]},{"pos":[10812,10818],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[10865,10875],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10879,10888]},{"content":"Description","pos":[10891,10902]},{"content":"arg","pos":[11063,11066]},{"content":"The number to calculate the power of.","pos":[11075,11112]},{"content":"exponent","pos":[11155,11163]},{"pos":[11167,11242],"content":"The number to raise the number that is specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to.","source":"The number to raise the number that is specified by the *arg* parameter to."},{"pos":[11250,11262],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[11264,11397],"content":"The real number that is the number specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to the power of the number specified by the <bpt id=\"p2\">*</bpt>exponent<ept id=\"p2\">*</ept> parameter.","source":"The real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter."},{"pos":[11403,11410],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11416,11462],"content":"<bpt id=\"p1\">**</bpt>power(5.0,2.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.0<ept id=\"p2\">**</ept>.","source":"**power(5.0,2.0)** returns the value **25.0**."},{"pos":[11467,11512],"content":"<bpt id=\"p1\">**</bpt>power(4.0,0.5)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.0<ept id=\"p2\">**</ept>.","source":"**power(4.0,0.5)** returns the value **2.0**."},{"pos":[11517,11522],"content":"round","linkify":"round","nodes":[{"content":"round","pos":[0,5]}]},{"content":"Rounds a real number to the nearest multiple of another real number.","pos":[11523,11591]},{"pos":[11597,11603],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11652,11662],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11666,11675]},{"content":"Description","pos":[11679,11690]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[11870,11875],"source":"\\_arg"},{"content":"The original number.","pos":[11883,11903]},{"content":"<ph id=\"ph1\">\\_</ph>decimals","pos":[11972,11982],"source":"\\_decimals"},{"pos":[11985,12069],"content":"The number that the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be rounded to a multiple of.","source":"The number that the value of the *\\_arg* parameter must be rounded to a multiple of."},{"pos":[12077,12089],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[12091,12237],"content":"The number that is a multiple of the value specified by the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimals<ept id=\"p1\">*</ept> parameter and is closest to the value specified by the <bpt id=\"p2\">*</bpt><ph id=\"ph2\">\\_</ph>arg<ept id=\"p2\">*</ept> parameter.","source":"The number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter."},{"pos":[12243,12250],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12252,12428],"content":"To round a real number to a specified number of decimal places, use the <bpt id=\"p1\">[</bpt>decround function<ept id=\"p1\">](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)</ept>.","source":"To round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)."},{"pos":[12434,12441],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12447,12499],"content":"<bpt id=\"p1\">**</bpt>round(123.45,5.00)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>125.00<ept id=\"p2\">**</ept>.","source":"**round(123.45,5.00)** returns the value **125.00**."},{"pos":[12504,12552],"content":"<bpt id=\"p1\">**</bpt>round(7.45,1.05)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>7.35<ept id=\"p2\">**</ept>.","source":"**round(7.45,1.05)** returns the value **7.35**."},{"pos":[12557,12605],"content":"<bpt id=\"p1\">**</bpt>round(23.9,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(23.9,5.0)** returns the value **25.00**."},{"pos":[12610,12658],"content":"<bpt id=\"p1\">**</bpt>round(26.1,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(26.1,5.0)** returns the value **25.00**."},{"pos":[12660,12663],"content":"sin","linkify":"sin","nodes":[{"content":"sin","pos":[0,3]}]},{"content":"Retrieves the sine of a real number.","pos":[12669,12705]},{"pos":[12711,12717],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[12748,12758],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[12762,12771]},{"content":"Description","pos":[12774,12785]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[12870,12875],"source":"\\_arg"},{"content":"The number to calculate the sine for.","pos":[12882,12919]},{"pos":[12927,12939],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The sine of the specified real number.","pos":[12941,12979]},{"pos":[12985,12992],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12994,13048],"content":"The value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *\\_arg* parameter must be in radians."},{"pos":[13054,13061],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13469,13473],"content":"sinh","linkify":"sinh","nodes":[{"content":"sinh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic sine of a real number.","pos":[13474,13521]},{"pos":[13527,13533],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[13565,13575],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13579,13588]},{"content":"Description","pos":[13591,13602]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[13709,13714],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic sine for.","pos":[13721,13769]},{"pos":[13777,13789],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic sine of the specified real number.","pos":[13791,13840]},{"pos":[13846,13853],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13855,14014],"content":"Values for the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[14020,14027],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14029,14085],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>sinh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **sinh** function."},{"pos":[14481,14484],"content":"tan","linkify":"tan","nodes":[{"content":"tan","pos":[0,3]}]},{"content":"Retrieves the tangent of a real number.","pos":[14490,14529]},{"pos":[14535,14541],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[14571,14581],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[14585,14594]},{"content":"Description","pos":[14597,14608]},{"content":"arg","pos":[14709,14712]},{"content":"The real number to calculate the tangent for.","pos":[14721,14766]},{"pos":[14774,14786],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The tangent of the specified real number.","pos":[14788,14829]},{"pos":[14835,14842],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14844,15001],"content":"Values for the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[15007,15014],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15016,15071],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tan<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tan** function."},{"pos":[15235,15239],"content":"tanh","linkify":"tanh","nodes":[{"content":"tanh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic tangent of a real number.","pos":[15240,15290]},{"pos":[15296,15302],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[15334,15344],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15348,15357]},{"content":"Description","pos":[15360,15371]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[15484,15489],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic tangent for.","pos":[15496,15547]},{"pos":[15555,15567],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic tangent of the specified real number.","pos":[15569,15621]},{"pos":[15627,15634],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15636,15692],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tanh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tanh** function."},{"pos":[15904,15909],"content":"trunc","linkify":"trunc","nodes":[{"content":"trunc","pos":[0,5]}]},{"content":"Truncates a real number by removing any decimal places.","pos":[15910,15965]},{"pos":[15971,15977],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[16014,16024],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[16028,16037]},{"content":"Description","pos":[16040,16051]},{"content":"<ph id=\"ph1\">\\_</ph>decimal","pos":[16108,16117],"source":"\\_decimal"},{"content":"The number to truncate.","pos":[16120,16143]},{"pos":[16151,16163],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[16165,16278],"content":"A number that is equivalent to the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimal<ept id=\"p1\">*</ept> parameter after the decimal places have been removed.","source":"A number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed."},{"pos":[16284,16291],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function always rounds numbers down to a complete integer.","pos":[16293,16356]},{"pos":[16362,16369],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example truncates 2.7147 to 2.00.","pos":[16371,16418]}],"content":"---\n# required metadata\n\ntitle: X++ math run-time functions\ndescription: This wiki describes the math run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 2016-02-04 22 - 13 - 25\nms.topic: article\nms.prod: \nms.service: Dynamics365Operations\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: RobinARH\nms.search.scope: AX 7.0.0, Operations\n# ms.tgt_pltfrm: \nms.custom: 31361\nms.assetid: 8982f158-f638-46d7-b3f7-ba8cfd356d57\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.dyn365.ops.intro: 01-02-2016\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# X++ math run-time functions\n\nThis wiki describes the math run-time functions.\n\nThese functions perform mathematical calculations.\n\nabs\n---\n\nRetrieves the absolute value of a real number. Examples:\n\n-   **abs(-100.0)** returns the value **100.0**.\n-   **abs(30.56)** returns the value **30.56**.\n\n### Syntax\n\n    real abs(real arg)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| arg       | The number to get the absolute value of. |\n\n### Return value\n\nThe absolute value of *arg*.\n\n### Example\n\n    static void absExample(Args _args)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = abs(-3.14);\n        r2 = abs(3.14);\n        if (r1 == r2)\n        {\n            print \"abs of values are the same\";\n            pause;\n        }\n    }\n\n## acos\nRetrieves the arc cosine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real acos(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to retrieve the arc cosine of. |\n\n### Return value\n\nThe arc cosine of *arg*.\n\n### Example\n\n    static void acosExample(Args _args)\n    {\n        real r;\n        str  s;\n        ;\n        r = acos(0.0);\n        s = strFmt(\"The arc cosine of 0.0 is %1 \", r);\n        print s;\n        pause;\n    }\n\n## asin\nRetrieves the arc sine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real asin(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to calculate the arc sine for. |\n\n### Return value\n\nThe arc sine of the specified number.\n\n### Remarks\n\n**aSin(0.36)** returns **0.37**.\n\n## atan\nRetrieves the arc tangent of a real number.\n\n### Syntax\n\n    real atan(real arg)\n\n### Parameters\n\n| Parameter | Description                                  |\n|-----------|----------------------------------------------|\n| arg       | The number to calculate the arc tangent for. |\n\n### Return value\n\nThe arc tangent of the specified number.\n\n### Remarks\n\n**aTan(0.36)** returns **0.35**.\n\n### Example\n\n    static void atanExample(Args _args)\n    {\n        real r;\n        ;\n        r = atan(1.0);\n        print strFmt(\"The Arc Tangent of 1.0 is %1\", r);\n        pause;\n    }\n\n## corrFlagGet\nRetrieves the state of the correction flag for a real number.\n\n### Syntax\n\n    int corrFlagGet(real arg)\n\n### Parameters\n\n| Parameter | Description                         |\n|-----------|-------------------------------------|\n| arg       | The flag to retrieve the state for. |\n\n### Return value\n\nA non-zero value if the flag is set; **0** (zero) if the flag is cleared.\n\n### Example\n\nThe following example displays **1**.\n\n    static void corrFlagGetExample(Args _args)\n    {\n        real rr;\n        rr = corrFlagSet(0.36,2);\n        print(corrFlagGet(rr));\n    }\n\n## corrFlagSet\nControls the correction flag for a real number.\n\n### Syntax\n\n    real corrFlagSet(real real, int arg)\n\n### Parameters\n\n| Parameter | Description                                                       |\n|-----------|-------------------------------------------------------------------|\n| real      | The number in which to turn the correction flag on or off.        |\n| arg       | **0** to turn the flag off; a non-zero value to turn the flag on. |\n\n### Return value\n\n**0** if the flag is now off; a non-zero value if the flag is now on.\n\ncos\n---\n\nRetrieves the cosine of a real number.\n\n### Syntax\n\n    real cos(real arg)\n\n### Parameters\n\n| Parameter | Description                        |\n|-----------|------------------------------------|\n| arg       | The number to find the cosine for. |\n\n### Return value\n\nThe cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\nThe following code example displays **0.76**.\n\n    static void cosExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cos(15);\n        print strFmt(\"Cos of 15 is %1\", r);\n        pause;\n    }\n\n## cosh\nRetrieves the hyperbolic cosine of a real number. **Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real cosh(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The hyperbolic number to calculate the cosine for. |\n\n### Return value\n\nThe hyperbolic cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\n    static void coshExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cosh(0.1);\n        print \"The hyperbolic cosine of 0.1 is \" + num2Str(r, 2, 2, 1, 1);\n        pause;\n    }\n\n## decRound\nRounds a number to the specified number of decimal places.\n\n### Syntax\n\n    real decRound(real figure, int decimals)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| figure    | The number to round.                      |\n| decimals  | The number of decimal places to round to. |\n\n### Return value\n\nThe value of the specified number, rounded to the specified number of decimal places.\n\n### Remarks\n\nThe value of the *decimals* parameter can be positive, 0 (zero), or negative.\n\n-   **decRound(1234.6574,2)** returns the value **1234.66**.\n-   **decRound(1234.6574,0)** returns the value **1235**.\n-   **decRound(1234.6574,-2)** returns the value **1200**.\n-   **decRound(12345.6789,1)** returns the value **12345.70**.\n-   **decRound(12345.6789,-1)** returns the value **12350.00**.\n\nexp\n---\n\nRetrieves the natural antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp(real arg)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| arg       | The real number to calculate the natural antilogarithm for. |\n\n### Return value\n\nThe natural antilogarithm of the specified real number.\n\n### Remarks\n\nThe calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter.\n\n### Example\n\n    static void expExample(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## exp10\nRetrieves the base-10 antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp10(real decimal)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| decimal   | The real number to calculate the base-10 antilogarithm for. |\n\n### Return value\n\nThe 10-based antilogarithm of the value of the *decimal* parameter.\n\n### Example\n\n    static void exp10Example(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## frac\nRetrieves the decimal part of a real number.\n\n### Syntax\n\n    real frac(real decimal)\n\n### Parameters\n\n| Parameter | Description                                       |\n|-----------|---------------------------------------------------|\n| decimal   | The real number to retrieve the decimal part for. |\n\n### Return value\n\nThe decimal part of the specified number.\n\n### Remarks\n\n**frac(12.345)** returns the value **0.345**.\n\n## log10\nRetrieves the 10-digit logarithm of a real number.\n\n### Syntax\n\n    real log10(real arg)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| arg       | The number to calculate the logarithm for. |\n\n### Return value\n\nThe base-10 logarithm of the specified number.\n\n### Remarks\n\n**log10(200)** returns the value **2.30**.\n\n## logN\nRetrieves the natural logarithm of the specified real number.\n\n### Syntax\n\n    real logN(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The number to calculate the natural logarithm for. |\n\n### Return value\n\nThe natural logarithm of the specified number.\n\n### Remarks\n\n**logN(45)** returns the value **3.81**.\n\nmax\n---\n\nRetrieves the larger of two specified values.\n\n    anytype max(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe larger of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n-   **max(12.0,12.1)** returns the value **12.1**.\n-   **max(2,33)** returns the value **33**.\n\nmin\n---\n\nRetrieves the smaller of two specified values.\n\n    anytype min(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe smaller of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n**min(2,33**) returns the value **2**.\n\n### Example\n\n    static void minExample(Args _arg)\n    {\n            anytype a;\n            real r = 3.0;\n            real s = 2.0;\n\n            a = min(r, s);\n            print num2Str(a, 1, 2, 1, 1) + \" is less than the other number.\";\n    }\n\n## power\nRaises a real number to the power of another real number.\n\n### Syntax\n\n    real power(real arg, real exponent)\n\n### Parameters\n\n| Parameter | Description                                                                 |\n|-----------|-----------------------------------------------------------------------------|\n| arg       | The number to calculate the power of.                                       |\n| exponent  | The number to raise the number that is specified by the *arg* parameter to. |\n\n### Return value\n\nThe real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter.\n\n### Remarks\n\n-   **power(5.0,2.0)** returns the value **25.0**.\n-   **power(4.0,0.5)** returns the value **2.0**.\n\n## round\nRounds a real number to the nearest multiple of another real number.\n\n### Syntax\n\n    real round(real _arg, real _decimals)\n\n### Parameters\n\n| Parameter  | Description                                                                          |\n|------------|--------------------------------------------------------------------------------------|\n| \\_arg      | The original number.                                                                 |\n| \\_decimals | The number that the value of the *\\_arg* parameter must be rounded to a multiple of. |\n\n### Return value\n\nThe number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter.\n\n### Remarks\n\nTo round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx).\n\n### Remarks\n\n-   **round(123.45,5.00)** returns the value **125.00**.\n-   **round(7.45,1.05)** returns the value **7.35**.\n-   **round(23.9,5.0)** returns the value **25.00**.\n-   **round(26.1,5.0)** returns the value **25.00**.\n\nsin\n---\n\nRetrieves the sine of a real number.\n\n### Syntax\n\n    real sin(real _arg)\n\n### Parameters\n\n| Parameter | Description                           |\n|-----------|---------------------------------------|\n| \\_arg     | The number to calculate the sine for. |\n\n### Return value\n\nThe sine of the specified real number.\n\n### Remarks\n\nThe value of the *\\_arg* parameter must be in radians.\n\n### Example\n\n    static void sinExample(Args _arg)\n    {\n        real angleDegrees = 15.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sin(angleRadians);\n        print \"sin of a \"\n            + num2Str(angleDegrees, 2, 2, 1, 1)\n            + \" degree angle is \"\n            + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## sinh\nRetrieves the hyperbolic sine of a real number.\n\n### Syntax\n\n    real sinh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                      |\n|-----------|--------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic sine for. |\n\n### Return value\n\nThe hyperbolic sine of the specified real number.\n\n### Remarks\n\nValues for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **sinh** function.\n\n    static void sinhExample(Args _arg)\n    {\n        real angleDegrees = 45.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sinh(angleRadians);\n        print \"sinh of a \"\n        + num2Str(angleDegrees, 2, 2, 1, 1)\n        + \" degree angle is \"\n        + num2Str(r, 2, 15, 1, 1);\n        pause;\n    }\n\ntan\n---\n\nRetrieves the tangent of a real number.\n\n### Syntax\n\n    real tan(real arg)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| arg       | The real number to calculate the tangent for. |\n\n### Return value\n\nThe tangent of the specified real number.\n\n### Remarks\n\nValues for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **tan** function.\n\n    static void tanExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tan(250);\n        print strFmt(\"Tan of 250 is %1\", r);\n        pause;\n    }\n\n## tanh\nRetrieves the hyperbolic tangent of a real number.\n\n### Syntax\n\n    real tanh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                         |\n|-----------|-----------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic tangent for. |\n\n### Return value\n\nThe hyperbolic tangent of the specified real number.\n\n### Example\n\nThe following example illustrates the **tanh** function.\n\n    static void tanhExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tanh(0.1);\n        print \"The hyperbolic tangent of angle 0.1 is \"\n        + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## trunc\nTruncates a real number by removing any decimal places.\n\n### Syntax\n\n    real trunc(real _decimal)\n\n### Parameters\n\n| Parameter | Description             |\n|-----------|-------------------------|\n| \\_decimal | The number to truncate. |\n\n### Return value\n\nA number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed.\n\n### Remarks\n\nThis function always rounds numbers down to a complete integer.\n\n### Example\n\nThe following example truncates 2.7147 to 2.00.\n\n    static void truncExample(Args _arg)\n    {\n        real r;\n        ;\n        r = trunc(2.7147);\n        print strFmt(\"r = %1\",  r);\n        pause;\n    }\n\n"}